[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":" * Deadlines tasks that need to be done before a specific date/time","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":" * e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    public Deadlines(String description, String deadline) {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        super(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"AdrianOngJJ":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":" * Project Duke is a educational software project designed to take you","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":" * through the steps of building a small software incrementally,","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":" * while applying as many Java and SE techniques as possible along the way.","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":" *","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":" * @author AdrianOngJJ","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" * @version 0.1","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":" * @since 22/1/2022","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final String LINE_BREAK \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final ArrayList\u003cTask\u003e masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"     * Prints line break.","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return void","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final void printLineBreak() {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"     * Prints Master List","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param bw BufferedWriter from main to print out the Master List.","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws java.io.IOException If an I/O error occurs. Only takes in string.","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final void printList(BufferedWriter bw) throws Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"        for(int i \u003d 0; i \u003c masterList.size(); i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"            Task curr \u003d masterList.get(i);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"            bw.write((i + 1) + \".\" + curr.toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"            bw.newLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"        bw.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final String getDateTime(String[] inputArr) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"        return inputArr[1].split(\"/\")[1].split(\" \", 2)[1]; // split input from slash","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final String getDescription(String[] inputArr) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"        return inputArr[1].split(\"/\")[0]; // split input from slash","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new OutputStreamWriter(System.out));","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"        printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"        String input; // to store raw input command","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] inputArr; // to store split input command","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"        boolean ifBye \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"        do {","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"            printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"            System.out.println();","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"            input \u003d br.readLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"            inputArr \u003d input.split(\" \", 2); // split first word from body","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"            printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"            switch (inputArr[0]) {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"                ifBye \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"list\":","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"AdrianOngJJ"},"content":"                printList(bw);","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"                int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"                Task curr \u003d masterList.get(index); // task to be marked","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"                masterList.set(index, curr.markAsDone());","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(masterList.get(index).toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"                int indexUnmark \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"                Task currUnmark \u003d masterList.get(indexUnmark); // task to be unmarked","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"                masterList.set(indexUnmark, currUnmark.unmarkItem());","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(masterList.get(indexUnmark).toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"AdrianOngJJ"},"content":"                masterList.add(new Deadlines(getDescription(inputArr), getDateTime(inputArr)));","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\\t \"","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"AdrianOngJJ"},"content":"                        + (masterList.get(masterList.size() - 1)).toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"AdrianOngJJ"},"content":"                        + \"\\nNow you have \" + masterList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"AdrianOngJJ"},"content":"                masterList.add(new ToDos(getDescription(inputArr)));","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\\t \"","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"AdrianOngJJ"},"content":"                        + (masterList.get(masterList.size() - 1)).toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"AdrianOngJJ"},"content":"                        + \"\\nNow you have \" + masterList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"event\":","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"AdrianOngJJ"},"content":"                masterList.add(new Events(getDescription(inputArr), getDateTime(inputArr)));","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\\t \"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"AdrianOngJJ"},"content":"                        + (masterList.get(masterList.size() - 1)).toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"AdrianOngJJ"},"content":"                        + \"\\nNow you have \" + masterList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"AdrianOngJJ"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(\"Noted. I\u0027ve removed this task:\\n\\t\");","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"AdrianOngJJ"},"content":"                int indexDel \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(masterList.remove(indexDel).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.write(\"\\nNow you have \" + masterList.size() + \" tasks in list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"AdrianOngJJ"},"content":"                bw.flush();","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"AdrianOngJJ"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"AdrianOngJJ"},"content":"            default:","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(\"Invalid input: \" + input);","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"AdrianOngJJ"},"content":"        } while (!ifBye);","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"AdrianOngJJ"},"content":"        printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"AdrianOngJJ":126}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":" * Exception class for Duke to handle Exceptions","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"AdrianOngJJ":11}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":" * Events are tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":" * e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"public class Events extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String duration;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    public Events(String description, String duration) {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        super(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.duration + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"AdrianOngJJ":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":" * Task class contains the task\u0027s name and whether it is completed","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"public class Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"    protected String description;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"     * Check if task is done","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String \"X\" to indicate if a task is done","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"        return (isDone ? \"X\" : \" \"); // mark done with X","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark item as done","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Item that is done","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task markAsDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"        return this;","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark item as undone","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Item that is undone","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task unmarkItem() {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"        return this;","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"AdrianOngJJ":43}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":" * To Dos are tasks without any date/time attached to it","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"        super(description);","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"AdrianOngJJ":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"todo read book","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"todo join sports club","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"mark 4","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"todo borrow book","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"AdrianOngJJ":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"javac  -cp C:\\Users\\adria\\Desktop\\iP\\src\\main\\java -Xlint:none -d ..\\bin C:\\Users\\adria\\Desktop\\iP\\src\\main\\java*.java","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"java -classpath ../bin C:\\Users\\adria\\Desktop\\iP\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"AdrianOngJJ":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"if ! javac -cp C:\\Users\\adria\\Desktop\\iP\\src\\main\\java -Xlint:none -d ../bin C:\\Users\\adria\\Desktop\\iP\\src\\main\\java*.java","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"AdrianOngJJ":1}}]
