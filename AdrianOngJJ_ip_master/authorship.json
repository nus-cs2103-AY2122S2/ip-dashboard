[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":" * Project Duke is a educational software project designed to take you","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":" * through the steps of building a small software incrementally,","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":" * while applying as many Java and SE techniques as possible along the way.","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":" *","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":" * @author AdrianOngJJ","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" * @version 0.1","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":" * @since 22/1/2022","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final String LINE_BREAK \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final ArrayList\u003cTask\u003e masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"     * Prints line break.","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return void","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final void printLineBreak() {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"     * Prints Master List","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param bw BufferedWriter from main to print out the Master List.","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws java.io.IOException If an I/O error occurs. Only takes in string.","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final void printList(BufferedWriter bw) throws Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"        for(int i \u003d 0; i \u003c masterList.size(); i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"            Task curr \u003d masterList.get(i);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"            bw.write((i + 1) + \".\" + curr.toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"            bw.newLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"        bw.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new OutputStreamWriter(System.out));","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"        printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"        String inputCommand \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] inputCommandArr \u003d new String[100];","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"        boolean ifBye \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"        do {","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"            printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"            System.out.println();","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"            inputCommand \u003d br.readLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"            inputCommandArr \u003d inputCommand.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"            printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"            switch (inputCommandArr[0]) {","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"                    ifBye \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"                case \"list\":","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.write(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"                    printList(bw);","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"AdrianOngJJ"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.write(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"                    int index \u003d Integer.parseInt(inputCommandArr[1]) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"                    Task curr \u003d masterList.get(index); // task to be marked","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"AdrianOngJJ"},"content":"                    masterList.set(index, curr.markAsDone());","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.write(masterList.get(index).toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.write(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"                    int indexUnmark \u003d Integer.parseInt(inputCommandArr[1]) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"                    Task currUnmark \u003d masterList.get(indexUnmark); // task to be unmarked","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"                    masterList.set(indexUnmark, currUnmark.unmarkItem());","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.write(masterList.get(indexUnmark).toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"                    bw.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"                default:","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"                    masterList.add(new Task(inputCommand));","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"                    System.out.println(\"added: \" + inputCommand);","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"        } while (!ifBye);","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"AdrianOngJJ"},"content":"        printLineBreak();","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"AdrianOngJJ":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":" * Task class contains the task\u0027s name and whether it is completed","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"public class Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"    protected String description;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"     * Check if task is done","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String \"X\" to indicate if a task is done","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"        return (isDone ? \"X\" : \" \"); // mark done with X","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark item as done","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Item that is done","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task markAsDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"        return this;","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark item as undone","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Item that is undone","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task unmarkItem() {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"        return this;","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"AdrianOngJJ":43}}]
