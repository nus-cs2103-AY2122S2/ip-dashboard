[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"dependencies {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":18,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"ret\u003d0","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    fi","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"done","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"exit $ret","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"yl-ang":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"awk \u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"    BEGIN {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"        ret \u003d 1","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    END {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"        exit ret","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"\u0027","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"yl-ang":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"awk \u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"    BEGIN {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"    {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"            ret \u003d 1","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    END {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"        exit ret","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"\u0027","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"yl-ang":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"    fi","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"done","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"exit $ret","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"yl-ang":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * Duke is a personal assistant chatbot that helps a person to keep track of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * @param filePath FilePath of the location of duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"            ui.loadingErrorResponse();","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"        String response;","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"            response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"            response \u003d ui.errorResponse(e.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yl-ang":51,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"public class Launcher {","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            stage.show();","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":34}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" * AddCommand is a command that handles add instructions.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    private Task task;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * Constructs AddCommand object with the supplied user input and taskCommand.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * @param data Full user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     * @param taskCommand Task command specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException If no task description or no date and time is supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"    public AddCommand(String data, String taskCommand) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"        Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"        String[] temp \u003d data.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"        if (taskCommand.equals(\"todo\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"            if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_TODO_DESC.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            String desc \u003d extractDesc(data, \"todo \", null);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"            task \u003d new ToDo(desc);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"        } else if (taskCommand.equals(\"deadline\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"            if ((temp.length \u003d\u003d 1) || (temp[1].equals(\"/by\"))) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_DEADLINE_DESC.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"            if (!data.contains(\"/by\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_DEADLINE_DATE.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"            String desc \u003d extractDesc(data, \"deadline \", \"/by\");","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"            String date \u003d extractTime(data, \"/by \");","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"            task \u003d new DeadLine(desc, date);","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"            // Event handling","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"            if ((temp.length \u003d\u003d 1) || (temp[1].equals(\"/at\"))) {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_EVENT_DESC.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"            if (!data.contains(\"/at\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_EVENT_DATE.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"            String desc \u003d extractDesc(data, \"event \", \"/at\");","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"            String date \u003d extractTime(data, \"/at \");","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"            task \u003d new Event(desc, date);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"     * Extracts the task description from the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"     * @param data Data the full user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"     * @param start Starting string to extract from.","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"     * @param timeCommand Stopping string to extract to.","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"     * @return Extracted task description from user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"    public String extractDesc(String data, String start, String timeCommand) {","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"        int startIndex \u003d data.indexOf(start) + start.length();","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"        if (timeCommand \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"            return data.substring(startIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"        int endIndex \u003d data.indexOf(timeCommand);","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"        return data.substring(startIndex, endIndex - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"     * Extracts the task date and time from the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"     * @param data Full user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"     * @param timeCommand Starting time and date to extract from.","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"     * @return Extracted date dnd time from user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"    public String extractTime(String data, String timeCommand) {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"        int startIndex \u003d data.indexOf(timeCommand) + timeCommand.length();","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"        return data.substring(startIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"yl-ang"},"content":"     * Executes AddCommand with the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"yl-ang"},"content":"        taskLst.addToList(this.task);","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"yl-ang"},"content":"        storage.save(taskLst.getTaskLst());","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.addedTasksResponse(this.task, taskLst.getTaskLst());","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"Add response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if the command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"yl-ang"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":134}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":" * Command class am abstract class with common command methods.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"     * Executes based on the command type and the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    public abstract String execute(TaskList taskLst, Ui ui, Storage storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns if the command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if the command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" * DeleteCommand is a command that handles delete instructions.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    private int taskNum;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * Constructs DeleteCommand object with the specified index.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     * @param index The specified index of the task to be deleted.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"        this.taskNum \u003d index;","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    };","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     * Executes DeleteCommand with the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        Task task \u003d taskLst.deleteTask(this.taskNum);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        storage.save(taskLst.getTaskLst());","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.deletedTasksResponse(task, taskLst.getTaskLst());","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"Delete response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if the command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        return isExit;","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":" * ExitCommand is a command that handles the exit command.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"     * Executes ExitCommand with the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.exitResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"Exit response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if the command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        return isExit;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":" * FindCommand is a command that handles the find command.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    private String keyword;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     * Constructs FindCommand object with the supplied user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     * @param data Full user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    public FindCommand(String data) {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            String[] temp \u003d data.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            this.keyword \u003d temp[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"            throw new DukeException(ErrorString.ERROR_EMPTY_FIND_KEYWORD.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"     * Executes FindCommand with the objects supplied.","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskLst.findTask(keyword);","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.findResponse(tasks);","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"Find response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if command is exit.","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"        return isExit;","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"yl-ang":62}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":" * ListCommand is a command that handles list command.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"     * Executes ListCommand with the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.listResponse(taskLst.getTaskLst());","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"List response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":40}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" * MarkCommand is a command that handles mark commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    private int taskNum;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * Constructs a MarkCommand object with the specified task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     * @param taskNum Task number specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     * Executes MarkCommand with the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        Task selectedTask \u003d taskLst.markOrUnmarked(\"mark\", this.taskNum);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        storage.save(taskLst.getTaskLst());","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.markResponse(selectedTask);","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"Mark response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":54}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" * UnmarkCommand is a command that handles unmark commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    private int taskNum;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * Constructs UnmarkCommand object with the specified task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     * @param taskNum Task number specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     * Executes UnmarkCommand with the objects supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst TaskLst object containing the current tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"     * @param ui Ui object containing the user interface messages and scanner object.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * @param storage Storage object containing the methods to load and save.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted response from executing command.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    public String execute(TaskList taskLst, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        Task selectedTask \u003d taskLst.markOrUnmarked(\"unmark\", this.taskNum);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        storage.save(taskLst.getTaskLst());","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        String response \u003d ui.unmarkResponse(selectedTask);","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        assert response !\u003d null : \"Unmarked response should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"     * Checks and returns the boolean whether if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     * @return Boolean if command is exit.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":53}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.exception;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":" * DukeException represents exceptions specific to Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"     * Constructs a DukeException object with the specified errorMessage.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"     * @param errorMessage Error message supplied.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"yl-ang":19}},{"path":"src/main/java/duke/exception/ErrorString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.exception;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":" * ErrorString is an enum that contains error strings for Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"public enum ErrorString {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    ERROR_INDEX_OUT_OF_BOUND_TASK(\"OOPS!!! The duke.task number you specify is invalid.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_TODO_DESC(\"OOPS!!! The description of a todo cannot be empty.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_DEADLINE_DESC(\"OOPS!!! The description of a deadline cannot be empty.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_DEADLINE_DATE(\"OOPS!!! The date of a deadline cannot be empty.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_EVENT_DESC(\"OOPS!!! The description of an event cannot be empty.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_EVENT_DATE(\"OOPS!!! The date of an event cannot be empty.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    ERROR_INVALID_COMMAND(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_MARK_INT(\"OOPS!!! Please specify a duke.task number for me to mark.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_UNMARKED_INT(\"OOPS!!! Please specify a duke.task number for me to unmark.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    ERROR_NOT_INT_MARK(\"OOPS!!! The duke.task number you specify for me to mark\\n     is invalid.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    ERROR_NOT_INT_UNMARKED(\"OOPS!!! The duke.task number you specify for me to unmark\\n     is invalid.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_DELETE(\"OOPS!!! Please specify a duke.task number for me to delete.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    ERROR_TASK_MARKED_ALREADY(\"OOPS!!! Task is already marked.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    ERROR_TASK_UNMARKED_ALREADY(\"OOPS!!! Task is already unmarked.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    ERROR_FILE_IO_ERROR(\"OOPS!!! FILE IO EXCEPTIONS\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    ERROR_INVALID_DEADLINE_DATE_FORMAT(\"OOPS!!! The date format provided is not in yyyy-mm-dd.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    ERROR_LOADING_ERROR(\"OOPS!!! There is error in loading the tasks from duke.txt\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    ERROR_NOT_NUMBER_STRING(\"OOPS!!! Please provide number and not letters.\\n\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    ERROR_EMPTY_FIND_KEYWORD(\"OOPS!!! Please provide a search term for find.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"    private String errorString;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    ErrorString(String errorString) {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"        this.errorString \u003d errorString;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        return errorString;","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yl-ang":40}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.gui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        db.flip();","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"        return db;","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":61}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.gui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * Initializes Duke java Fx and send hello message.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I\u0027m Ganyu!\\n\", dukeImage));","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        );","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"        if (input.startsWith(\"bye\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"            Platform.exit();","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":61}},{"path":"src/main/java/duke/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.gui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" * Ui deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"public class Ui {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    private Scanner sc;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * Constructs an Ui object.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * Returns the specified error message.","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     * @param errorMessage ErrorMessage specified error message.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"     * @return errorMessage ErrorMessage specified error message.","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    public String errorResponse(String errorMessage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"        return errorMessage;","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"     * Returns the error loading message.","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"     * @return Error loading message.","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    public String loadingErrorResponse() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        return ErrorString.ERROR_LOADING_ERROR.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"     * Returns the specified deleted task formatted string and number of tasks remaining.","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     * @param deletedTask DeletedTask the specified deleted task.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"     * @param tasks Tasks the remaining tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted deletedTask string.","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    public String deletedTasksResponse(Task deletedTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        String output \u003d String.format(\"Noted. I\u0027ve removed this task:\\n       %s\\n     \"","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"                + \"Now you have %s tasks in the list.\\n\", deletedTask.toString(), tasks.size());","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        return output;","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"     * Returns the specified added task formatted string and number of tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"     * @param addedTask The newly added task.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"     * @param tasks The list of all the tasks after adding.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted addedTask string.","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"    public String addedTasksResponse(Task addedTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"        assert addedTask !\u003d null : \"addedTask should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"        String output \u003d String.format(\"Got it. I\u0027ve added this task:\\n       %s\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"                + \"Now you have %s tasks in the list.\\n\", addedTask.toString(), tasks.size());","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"        return output;","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"     * Returns the formatted string of the tasks the user have currently.","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"     * @param tasks The list containing the current tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted task list string.","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"    public String listResponse(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"        assert tasks !\u003d null : \"tasks should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"        int numItems \u003d tasks.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"            output +\u003d (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"        return output;","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"     * Returns the formatted string of the marked task.","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"     * @param selectedTask SelectedTask task marked by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted marked task string.","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"    public String markResponse(Task selectedTask) {","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"        assert selectedTask !\u003d null : \"selectedTask to be marked should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"        output +\u003d selectedTask.toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"        return output;","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"     * Returns the formatted string of the unmarked task.","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"     * @param selectedTask SelectedTask task unmarked by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted unmarked task string.","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"yl-ang"},"content":"    public String unmarkResponse(Task selectedTask) {","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"yl-ang"},"content":"        assert selectedTask !\u003d null : \"selectedTask to be unmarked should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"yl-ang"},"content":"        String output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"yl-ang"},"content":"        output +\u003d selectedTask.toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"yl-ang"},"content":"        return output;","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"yl-ang"},"content":"     * Returns the formatted string of the tasks that contains the search keyword.","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst The current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted list of tasks string that contains the search keyword.","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"yl-ang"},"content":"    public String findResponse(ArrayList\u003cTask\u003e taskLst) {","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"yl-ang"},"content":"        assert taskLst !\u003d null : \"taskLst should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"yl-ang"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"yl-ang"},"content":"        int numItems \u003d taskLst.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"yl-ang"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"yl-ang"},"content":"            output +\u003d (i + 1) + \".\" + taskLst.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"yl-ang"},"content":"        return output;","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"yl-ang"},"content":"     * Returns the bye string.","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"yl-ang"},"content":"     * @return Bye string.","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"yl-ang"},"content":"    public String exitResponse() {","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"yl-ang"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":137}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" * Parser parses and handles user command.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * Parses user input and return the command object based on user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * @param fullCommand FullCommand specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     * @return Command object based on the user specified command.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException if command supplied is not a valid index.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        Command currCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"        if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new ListCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"            int i;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"                i \u003d Integer.parseInt(fullCommand.substring(\"mark\".length() + 1));","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_MARK_INT.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_NOT_INT_MARK.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new MarkCommand(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"            int i;","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"                i \u003d Integer.parseInt(fullCommand.substring(\"unmark\".length() + 1));","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_UNMARKED_INT.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_NOT_INT_UNMARKED.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new UnmarkCommand(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"            int i;","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"                i \u003d Integer.parseInt(fullCommand.substring(\"delete\".length() + 1));","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_EMPTY_DELETE.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"                throw new DukeException(ErrorString.ERROR_NOT_NUMBER_STRING.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new DeleteCommand(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new AddCommand(fullCommand, \"todo\");","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new AddCommand(fullCommand, \"deadline\");","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new AddCommand(fullCommand, \"event\");","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new FindCommand(fullCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"        } else if (fullCommand.startsWith(\"bye\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"            currCommand \u003d new ExitCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"            throw new DukeException(ErrorString.ERROR_INVALID_COMMAND.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"        return currCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":89}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":" * Storage handles the updating and loading of tasks with the specified file path.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    private String filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * Constructs a Storage object with the specified filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     * @param filePath FilePath the path to the file containing the tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     * Stores the updated tasks into the file at filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"     * @param taskLst The current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException if IOException from accessing the file at filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    public void save(ArrayList\u003cTask\u003e taskLst) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        File dir \u003d new File(\"data\");","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"            dir.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        for (Task task : taskLst) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"            output +\u003d task.toStringForStorage() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"        FileWriter myWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"            myWriter \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"            myWriter.write(output);","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            throw new DukeException(ErrorString.ERROR_FILE_IO_ERROR.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"     * Loads the tasks from filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"     * @return List of tasks loaded from filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"        File file \u003d new File (this.filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"        ArrayList\u003cTask\u003e taskLst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        FileReader myReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"            return taskLst;","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"            myReader \u003d new FileReader(this.filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"            BufferedReader inStream \u003d new BufferedReader(myReader);","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"            String inString;","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"            while ((inString \u003d inStream.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"                String[] taskString \u003d inString.split(\" \\\\| \");","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"                Task currTask;","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"                switch(taskString[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"                case \"T\":","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"                    currTask \u003d new ToDo(taskString[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"                case \"D\":","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"                    currTask \u003d new DeadLine(taskString[2], taskString[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"                default:","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"                    currTask \u003d new Event(taskString[2], taskString[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"                if (taskString[1].equals(\"1\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"                    currTask.markAsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"                taskLst.add(currTask);","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"            throw new DukeException(ErrorString.ERROR_FILE_IO_ERROR.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"yl-ang"},"content":"        return taskLst;","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":109}},{"path":"src/main/java/duke/task/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" * DeadLine is a task that need to be done before a specific date/time.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     * Constructs a DeadLine object containing the user specified description and date.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     * @param description Description specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * @param date Date specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException If date specified is not of the format yyyy-mm-dd.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    public DeadLine(String description, String date) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            this.by \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"            throw new DukeException(ErrorString.ERROR_INVALID_DEADLINE_DATE_FORMAT.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"     * Converts deadline object into string format for display.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the deadline description and date.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     * Converts deadline object into string format for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the deadline description and date for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    public String toStringForStorage() {","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        int isDone \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"        return \"D | \" + isDone + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yl-ang":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":" * Event is a task that start at a specific time and ends at a specific time.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    protected String at;","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"     * Constructs an Event object containing the user specified description and date.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"     * @param description Description specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"     * @param at At date specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * Converts event object into string format for display.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the event description and date.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     * Converts event object into string format for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the event description and date for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    public String toStringForStorage() {","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        int isDone \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        return \"E | \" + isDone + \" | \" + this.description + \" | \" + this.at;","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yl-ang":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":" * Task contains details of what the user aims to do.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    protected String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"     * Constructs a Task object with specified description.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"     * @param data Data the specified description.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    public Task(String data) {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"        this.description \u003d data;","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     * Changes the status of the task from unmarked to marked.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException if the task is already marked as done.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    public void markAsDone() throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"            return;","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"        throw new DukeException(ErrorString.ERROR_TASK_MARKED_ALREADY.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"     * Changes the status of the task from marked to unmarked.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException if the task is already marked as undone.","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    public void undoDone() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            return;","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        throw new DukeException(ErrorString.ERROR_TASK_UNMARKED_ALREADY.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"     * Converts task object into string format for display.","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the task description.","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"     * Converts task object into string format for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the task description for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"    public String toStringForStorage() {","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"        return \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yl-ang":79}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import duke.exception.ErrorString;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" * TaskList contains the task list and handles operations on the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    private ArrayList\u003cTask\u003e taskLst;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"     * Constructs TaskList object with the list of tasks specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     * @param tasks The list containing the user tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"        this.taskLst \u003d tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     * Constructs TaskList object.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        this.taskLst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     * @return List of tasks of the TaskList object.","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    public ArrayList\u003cTask\u003e getTaskLst() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        return taskLst;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"     * Retrieves task based on the specified index i.","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"     * @param i I index of the task to be retrieved from the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"     * @return Retrieved task based on index i.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"     * @throws DukeException if i \u003c\u003d 0 or i \u003e\u003d size of taskLst.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    public Task retrieveTask(int i) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"        Task selectedTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"            selectedTask \u003d this.taskLst.get(i - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"            throw new DukeException(ErrorString.ERROR_INDEX_OUT_OF_BOUND_TASK.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"        return selectedTask;","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"     * Retrieves tasks based on the supplied keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"     * @param keyword Keyword the search key.","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"     * @return Retrieved list of tasks based on the search keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"        ArrayList\u003cTask\u003e foundTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"        for (Task currTemp : this.taskLst) {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"            if (currTemp.toString().contains(keyword)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"                foundTask.add(currTemp);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"        return foundTask;","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"     * Adds task into the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"     * @param task Task to be added into the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"        this.taskLst.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"     * Deletes task based on the specified task index.","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"     * @param index Index of the task to be deleted from the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"     * @return Deleted task based on index i.","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"        Task toDel \u003d retrieveTask(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"        this.taskLst.remove(index - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"        return toDel;","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"     * Marks or unmarks task based on specified action and task index.","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"     * @param action Action to distinguish between mark and unmark.","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"     * @param taskNum TaskNum the index of the task to be mark or unmark.","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"     * @return Marked or unmarked task.","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"    public Task markOrUnmarked(String action, int taskNum) {","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"        Task selectedTask \u003d retrieveTask(taskNum);","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"yl-ang"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"yl-ang"},"content":"            selectedTask.markAsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"yl-ang"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"yl-ang"},"content":"            selectedTask.undoDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"yl-ang"},"content":"        return selectedTask;","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"yl-ang":115}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":" * ToDo is a task without any date/time attached to it.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":" * @author yl-ang","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"     * Constructs a ToDo object containing the user specified description.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"     * @param description Description specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"     * Converts event object into string format for display.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the todo description.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"     * Converts event object into string format for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * @return Formatted string of the event description for storage in duke.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    public String toStringForStorage() {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        int isDone \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        return \"T | \" + isDone + \" | \" + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yl-ang":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"398.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"        \u003cHBox maxHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"                \u003cLabel fx:id\u003d\"dialog\" cache\u003d\"true\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #008080; -fx-background-radius: 15px;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"                        \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"        \u003cHBox maxHeight\u003d\"100.0\" maxWidth\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"                \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"                \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"                    \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":41}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #BBDEF0;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\" \u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"        \u003cImageView fitHeight\u003d\"600.0\" fitWidth\u003d\"400.0\" pickOnBounds\u003d\"true\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"                \u003cImage url\u003d\"@../images/background.jpg\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"        \u003cHBox layoutY\u003d\"558.4000244140625\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"                \u003cTextField fx:id\u003d\"userInput\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type a message here...\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"        \u003cHBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" AnchorPane.bottomAnchor\u003d\"42.39999999999998\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"                \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"                            maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" vvalue\u003d\"1.0\" HBox.hgrow\u003d\"ALWAYS\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" \u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"                    \u003ccontent\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"                        \u003cVBox fx:id\u003d\"dialogContainer\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"556.0\" prefWidth\u003d\"398.0\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"                    \u003c/content\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"yl-ang":36}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    public void loadTest() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"        assertEquals(\"[T][ ] sleep\", new Storage(\"data/tasks.txt\").load().get(0).toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"yl-ang":14}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"        assertEquals(\"[T][ ] coding\", new ToDo(\"coding\").toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    public void testToStringForStorage() {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"        assertEquals(\"T | 0 | coding\", new ToDo(\"coding\").toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"yl-ang":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"deadline CS2201 Team Meeting /by 2021-01-23","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"event project meeting","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"mark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"mark 1","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"unmark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"unmark 1","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"unmark 0","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"mark 0","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"delete 1","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"delete 0","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"delete 10","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"yl-ang":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"# compile the code into the bin folder, terminates if duke.error occurred","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yl-ang":1,"-":37}}]
