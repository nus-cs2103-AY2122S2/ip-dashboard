[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HanJiyao":1,"-":45}},{"path":"duke/data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"D | 0 | return book | 2022-12-20","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"E | 0 | project meeting | 2022-12-21","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"E | 1 | project meeting | 2022-12-20","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"E | 1 | group meeting | 2022-12-21","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"HanJiyao":7}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"HanJiyao"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"HanJiyao"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HanJiyao":4,"-":85}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.data.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    public void run() {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"            try {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"            } finally {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                ui.showLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"HanJiyao"},"content":"        new Duke(\"duke/data/TaskList.txt\").run();","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HanJiyao":44,"-":2}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * Represents add new deadline command","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    private final duke.task.Deadline newDeadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     * Returns a deadline command with new deadline.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     * @param newDeadline new Deadline.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"    public AddDeadlineCommand(Deadline newDeadline) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"        this.newDeadline \u003d newDeadline;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     * Returns a deadline command with new deadline.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        tasks.add(new Deadline(newDeadline.getTask(), newDeadline.getDate()));","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this duke.task: \\n        \"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"                + tasks.getByIndex(tasks.getSize() - 1) + \"\\n    Now you have \"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":41}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * Represents add new event command.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command.","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    private final Event newEvent;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     * Returns an event command with new event.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     * @param newEvent new event.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"    public AddEventCommand(Event newEvent) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"        this.newEvent \u003d newEvent;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     * Returns a deadline command with new deadline.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        tasks.add(new Event(newEvent.getTask(), newEvent.getDate()));","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this duke.task: \\n        \"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"                + tasks.getByIndex(tasks.getSize() - 1) + \"\\n    Now you have \"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":41}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * Represents add new to do command.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command.","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    private final ToDo newTodo;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"     * Returns a to do command with new to do.","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * @param newTodo new to do.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public AddTodoCommand(ToDo newTodo) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        this.newTodo \u003d newTodo;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"     * Returns a deadline command with new deadline.","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"        tasks \u003d tasks.add(newTodo);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this duke.task: \\n        \"","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"                + tasks.getByIndex(tasks.getSize() - 1) + \"\\n    Now you have \"","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"                + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":" * Represents an abstract class of command.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"     * Returns a various command.","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"     * check and make sure the command exit is false.","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * Represents delete command.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command.","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    private final int deleteIndex;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     * Returns a delete command with index.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     * @param deleteIndex index to be delete.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"    public DeleteCommand(int deleteIndex) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     * Change tasks after delete.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     * Update the storage.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        Task delete \u003d tasks.getByIndex(deleteIndex);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        tasks \u003d tasks.remove(deleteIndex);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this duke.task: \\n        \"","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"                + delete + \"\\n    Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":41}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":" * Represents error command.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    private final String err;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"     * Returns an error command with error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * @param err index to be mark.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public ErrorCommand(String err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        this.err \u003d err;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"     * return error Message.","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(err);","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":35}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":" * Represents exit command.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * change state of isExit().","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * Returns a exit command.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    @Override public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * check and change the command exit to true.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"    @Override public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"        return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    private final String keyword;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"        StringBuilder searchText \u003d new StringBuilder();","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"        searchText.append(\"Here are matching tasks \\n\");","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"            if (tasks.getByIndex(i).getTask().contains(keyword.trim())) {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"                isFound \u003d true;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"                searchText.append(\"    \").append(i + 1).append(\". \")","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"                        .append(tasks.getByIndex(i)).append(\"\\n\");","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        if (isFound) {","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"            searchText.delete(searchText.length() - 1, searchText.length());","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"            ui.showMessage(searchText.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"            ui.showMessage(\"Sorry no result found\");","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"HanJiyao":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":" * Represents a List command to display all the list","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"     * call and format the string out put of list.","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"        text.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"            text.append(\"    \").append(i + 1).append(\". \")","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"                    .append(tasks.getByIndex(i))","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"        text.delete(text.length() - 1, text.length());","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(text.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":" * Represents mark command.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    private final int markIndex;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"     * Returns a mark command with index.","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * @param markIndex index to be mark.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public MarkCommand(int markIndex) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"     * Change one task of tasks after mark.","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     * Update the storage.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"            tasks \u003d tasks.set(markIndex, tasks.getByIndex(markIndex).mark());","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"            ui.showMessage(\"Nice! I\u0027ve marked this duke.task as done:\\n        \"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                    + tasks.getByIndex(markIndex));","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"            ui.showInvalidIndex();","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":43}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":" * Represents a search command to display all the matches","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * Returns a search command with match date.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"     * @param date date of search.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"    public SearchCommand(LocalDate date) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     * filter and format the string out put of list by the date.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        StringBuilder searchText \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        searchText.append(\"Here are the tasks on \")","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"                .append(date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))).append(\" \\n\");","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"            if (tasks.getByIndex(i).getDate() !\u003d null \u0026\u0026 tasks.getByIndex(i).getDate().equals(date)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"                searchText.append(\"    \").append(i + 1).append(\". \")","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"                        .append(tasks.getByIndex(i))","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"HanJiyao"},"content":"        searchText.delete(searchText.length() - 1, searchText.length());","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"HanJiyao"},"content":"        ui.showMessage(searchText.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":48}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":" * Represents unmark command.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":" * inherit from Command.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    private final int unmarkIndex;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"     * Returns an unmark command with index.","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"     * @param unmarkIndex index to be mark.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public UnmarkCommand(int unmarkIndex) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        super();","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        this.unmarkIndex \u003d unmarkIndex;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"     * Change one task of tasks after unmark.","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"     * Update the storage.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"     * @param tasks the entire TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"     * @param ui the ui interface and messages.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"     * @param storage the storage operations.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"            tasks \u003d tasks.set(unmarkIndex, tasks.getByIndex(unmarkIndex).unmark());","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"            ui.showMessage(\"Nice! I\u0027ve marked this duke.task as not done yet:\\n        \"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                    + tasks.getByIndex(unmarkIndex));","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"            ui.showInvalidIndex();","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":43}},{"path":"src/main/java/duke/data/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.data;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"        super(errMsg);","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"        return super.getMessage();","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"HanJiyao":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"import java.util.List;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"import duke.command.SearchCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"import duke.data.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"public class Parser {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    public static Command parse(String text) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"        List\u003cString\u003e input \u003d Arrays.asList(text.split(\" \"));","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        switch (input.get(0)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"        case \"list\":","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"                int markIndex \u003d Integer.parseInt(input.get(1)) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                return new MarkCommand(markIndex);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(\"Missing Index\");","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"HanJiyao"},"content":"                int unmarkIndex \u003d Integer.parseInt(input.get(1)) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"HanJiyao"},"content":"                return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"HanJiyao"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(\"Missing Index\");","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"HanJiyao"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"HanJiyao"},"content":"            StringBuilder todo \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"HanJiyao"},"content":"            if (input.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"HanJiyao"},"content":"                DukeException exception \u003d new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(exception.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"HanJiyao"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"HanJiyao"},"content":"                for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"HanJiyao"},"content":"                    todo.append(input.get(i)).append(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"HanJiyao"},"content":"                return new AddTodoCommand(new ToDo(todo.toString()));","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"HanJiyao"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"HanJiyao"},"content":"            StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"HanJiyao"},"content":"            StringBuilder deadlineBy \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"HanJiyao"},"content":"            int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"HanJiyao"},"content":"            if (input.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"HanJiyao"},"content":"                DukeException exception \u003d new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(exception.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"HanJiyao"},"content":"            } else if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"HanJiyao"},"content":"                DukeException exception \u003d new DukeException(\"OOPS!!! The datetime of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(exception.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"HanJiyao"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"HanJiyao"},"content":"                for (int i \u003d 1; i \u003c byIndex; i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"HanJiyao"},"content":"                    deadline.append(input.get(i)).append(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"HanJiyao"},"content":"                for (int i \u003d byIndex + 1; i \u003c input.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"HanJiyao"},"content":"                    deadlineBy.append(input.get(i)).append(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"HanJiyao"},"content":"                LocalDate date \u003d convertDate(deadlineBy.toString().trim());","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"HanJiyao"},"content":"                if (date !\u003d null) {","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"HanJiyao"},"content":"                    return new AddDeadlineCommand(new Deadline(deadline.toString(), date));","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(\"Add deadline error\");","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"HanJiyao"},"content":"        case \"event\":","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"HanJiyao"},"content":"            int atIndex \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"HanJiyao"},"content":"            if (input.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"HanJiyao"},"content":"                DukeException exception \u003d new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(exception.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"HanJiyao"},"content":"            } else if (atIndex \u003d\u003d -1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"HanJiyao"},"content":"                DukeException exception \u003d new DukeException(\"OOPS!!! The datetime of a event cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(exception.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"HanJiyao"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"HanJiyao"},"content":"                StringBuilder event \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"HanJiyao"},"content":"                for (int i \u003d 1; i \u003c atIndex; i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"HanJiyao"},"content":"                    event.append(input.get(i)).append(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"HanJiyao"},"content":"                StringBuilder eventAt \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"HanJiyao"},"content":"                for (int i \u003d atIndex + 1; i \u003c input.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"HanJiyao"},"content":"                    eventAt.append(input.get(i)).append(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"HanJiyao"},"content":"                LocalDate date \u003d convertDate(eventAt.toString().trim());","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"HanJiyao"},"content":"                if (date !\u003d null) {","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"HanJiyao"},"content":"                    return new AddEventCommand(new Event(event.toString(), date));","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(\"Add event error\");","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"HanJiyao"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"HanJiyao"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"HanJiyao"},"content":"                int deleteIndex \u003d Integer.parseInt(input.get(1)) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"HanJiyao"},"content":"                return new DeleteCommand(deleteIndex);","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"HanJiyao"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"HanJiyao"},"content":"                DukeException exception \u003d new DukeException(\"OOPS!!! invalid index.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(exception.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"HanJiyao"},"content":"        case \"search\":","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"HanJiyao"},"content":"            LocalDate date \u003d convertDate(input.get(1));","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"HanJiyao"},"content":"            if (date !\u003d null) {","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"HanJiyao"},"content":"                return new SearchCommand(date);","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"HanJiyao"},"content":"            return new ErrorCommand(\"Search error\");","lastModifiedDate":"2022-02-05"},{"lineNumber":120,"author":{"gitId":"HanJiyao"},"content":"        case \"find\":","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"HanJiyao"},"content":"            try {","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"HanJiyao"},"content":"                String keyword \u003d input.get(1);","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"HanJiyao"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":124,"author":{"gitId":"HanJiyao"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":125,"author":{"gitId":"HanJiyao"},"content":"                return new ErrorCommand(\"Please put in keyword\");","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"HanJiyao"},"content":"        default:","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"HanJiyao"},"content":"            return new ErrorCommand(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":132,"author":{"gitId":"HanJiyao"},"content":"    public static LocalDate convertDate (String dateText) {","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"HanJiyao"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":134,"author":{"gitId":"HanJiyao"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"HanJiyao"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"HanJiyao"},"content":"            return LocalDate.parse(dateText, formatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":137,"author":{"gitId":"HanJiyao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":138,"author":{"gitId":"HanJiyao"},"content":"            ui.showDateTimeParseException();","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"HanJiyao"},"content":"            return null;","lastModifiedDate":"2022-02-04"},{"lineNumber":140,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":141,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":142,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":142}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.io.File;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"import java.util.List;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"import duke.data.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"public class Storage {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    protected String filePath;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"                List\u003cString\u003e input \u003d Arrays.asList(sc.nextLine().split(\" \\\\| \"));","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"                switch (input.get(0)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"                case \"T\":","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"                    ToDo newTodo \u003d new ToDo(input.get(2).trim());","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"                    list.add(newTodo);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"                    if (input.get(1).equals(\"1\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"                        list.set(list.indexOf(newTodo), newTodo.mark());","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"                    }","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"                    break;","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"HanJiyao"},"content":"                case \"D\":","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"HanJiyao"},"content":"                    Deadline newDeadline \u003d new Deadline(input.get(2).trim(),","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"HanJiyao"},"content":"                            LocalDate.parse(input.get(3).trim(), formatter));","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"HanJiyao"},"content":"                    list.add(newDeadline);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"HanJiyao"},"content":"                    if (input.get(1).equals(\"1\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"HanJiyao"},"content":"                        list.set(list.indexOf(newDeadline), newDeadline.mark());","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"HanJiyao"},"content":"                    }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"HanJiyao"},"content":"                    break;","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"HanJiyao"},"content":"                case \"E\":","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"HanJiyao"},"content":"                    Event newEvent \u003d new Event(input.get(2).trim(), LocalDate.parse(input.get(3).trim(), formatter));","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"HanJiyao"},"content":"                    list.add(newEvent);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"HanJiyao"},"content":"                    if (input.get(1).equals(\"1\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"HanJiyao"},"content":"                        list.set(list.indexOf(newEvent), newEvent.mark());","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"HanJiyao"},"content":"                    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"HanJiyao"},"content":"                    break;","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"HanJiyao"},"content":"                default:","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"HanJiyao"},"content":"                    throw new DukeException(\"Unknown type\");","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"HanJiyao"},"content":"            sc.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"HanJiyao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"HanJiyao"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"HanJiyao"},"content":"            if (file.getParentFile().mkdirs()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"HanJiyao"},"content":"                try {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"HanJiyao"},"content":"                    if (file.createNewFile()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"HanJiyao"},"content":"                        ui.showFileCreated();","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"HanJiyao"},"content":"                    }","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"HanJiyao"},"content":"                } catch (IOException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"HanJiyao"},"content":"                    ui.showIoException();","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"HanJiyao"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"HanJiyao"},"content":"        return list;","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"HanJiyao"},"content":"    public void saveTaskList(TaskList taskList) {","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"HanJiyao"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"HanJiyao"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"HanJiyao"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"HanJiyao"},"content":"                writer.write(task.saveData());","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"HanJiyao"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"HanJiyao"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"HanJiyao"},"content":"            writer.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"HanJiyao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"HanJiyao"},"content":"            System.out.println(\"Error happened cannot save to file\");","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":91}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    public Deadline (String task, LocalDate by) {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"        super(task.trim());","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    public Deadline(String task, LocalDate by, boolean done) {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"        super(task, done);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public Deadline mark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        return new Deadline(task, by, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    public Deadline unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        return new Deadline(task, by, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"    public String saveData() {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        int done \u003d super.done ? 1 : 0;","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"        return Type.D + \" | \" + done + \" | \" + task + \" | \" + by;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        return by;","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"        return \"[\" + Type.D + \"]\" + super.toString()","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"HanJiyao":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    public Event(String task, LocalDate at) {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"        super(task.trim());","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    public Event(String task, LocalDate at, boolean done) {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"        super(task, done);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public Event mark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        return new Event(task, at, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    public Event unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        return new Event(task, at, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"    public String saveData() {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        int done \u003d super.done ? 1 : 0;","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"        return Type.E + \" | \" + done + \" | \" + task + \" | \" + at;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        return at;","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"        return \"[\" + Type.E + \"]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"HanJiyao":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"    protected String task;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"    public Task(String task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    public Task(String task, boolean done) {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        return new Task(task, true);","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"        return new Task(task, false);","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"    public String saveData() {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"        return task;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"        return null;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"    public String getTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        return task;","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"        return done ? \"[✓] \" + task : \"[ ] \" + task;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"HanJiyao":43}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"public class TaskList {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"    public Task getByIndex(int index) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        return tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    public TaskList set(int index, Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"        tasks.set(index, task);","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"    public TaskList remove(int index) {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":42}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"    public ToDo(String task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"        super(task.trim());","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    public ToDo(String task, boolean done) {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"        super(task, done);","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    public ToDo mark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"        return new ToDo(task, true);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"    public ToDo unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"        return new ToDo(task, false);","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"    public String saveData() {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"        int done \u003d super.done ? 1 : 0;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        return Type.T + \" | \" + done + \" | \" + task;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"        return \"[\" + Type.T + \"]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"HanJiyao":32}},{"path":"src/main/java/duke/task/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"public enum Type {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"    T, D, E","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"HanJiyao":5}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"import duke.data.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"public class Ui {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"    private static final String DIVIDER \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    private final Scanner in;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    public Ui() {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"        this(System.in, System.out);","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    public void showLine() {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"HanJiyao"},"content":"    public static String output(String text) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"HanJiyao"},"content":"        return DIVIDER + \"\\n    \" + text;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"HanJiyao"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"HanJiyao"},"content":"        String logo \u003d \"    (/ /^ / - / ^/ /)\";","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"HanJiyao"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"HanJiyao"},"content":"        System.out.println(output(\"Hello! I\u0027m duke.Duke by A0221330A.\\n    What can I do for you?\\n\" + DIVIDER));","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"HanJiyao"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"HanJiyao"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"HanJiyao"},"content":"     * Input should be ignored if it is only whitespace, or is empty.","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"HanJiyao"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"HanJiyao"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"HanJiyao"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"HanJiyao"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"HanJiyao"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"HanJiyao"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"HanJiyao"},"content":"    public String readCommand() {","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"HanJiyao"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"HanJiyao"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"HanJiyao"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"HanJiyao"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"HanJiyao"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"HanJiyao"},"content":"        return fullInputLine;","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"HanJiyao"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(\"Sorry initialized failed\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"HanJiyao"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"HanJiyao"},"content":"    public void showFileCreated() {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(\"New file has been created for first time\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"HanJiyao"},"content":"    public void showIoException() {","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(\"I/O error happened\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"HanJiyao"},"content":"    public void showInvalidIndex() {","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"HanJiyao"},"content":"        DukeException exception \u003d new DukeException(\"OOPS!!! invalid index.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(exception.toString()));","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"HanJiyao"},"content":"    public void showDateTimeParseException() {","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(\"Sorry, date time format wrong, please use yyyy-MM-dd\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"HanJiyao"},"content":"    public void showMessage(String s) {","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"HanJiyao"},"content":"        out.println(output(s));","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":87}},{"path":"src/test/java/duke/task/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import duke.data.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"    @Test","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"    public void Parser_Command_success() throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"        assertTrue(Parser.parse(\"mark 1\") instanceof MarkCommand);","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"HanJiyao":18}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"public class TaskListTest {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"    @Test","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"    public void addTodoTask_validTask_success() {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"        taskList.add(new ToDo(\"test\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"HanJiyao"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"HanJiyao"},"content":"        assertEquals(\"test\", taskList.getByIndex(0).getTask());","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"HanJiyao"},"content":"    @Test","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"    public void removeTodoTask_validTask_success() {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"HanJiyao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"HanJiyao"},"content":"        tasks.add(new ToDo(\"todo\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"HanJiyao"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"HanJiyao"},"content":"        taskList.remove(0);","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"HanJiyao"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"HanJiyao":25}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"public class TodoTest {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"    @Test","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"    public void ToDo_saveData_success() {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"        ToDo todo \u003d new ToDo(\"ABC\");","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"        assertEquals(\"T | 0 | ABC\", todo.saveData());","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"HanJiyao"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"HanJiyao"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"HanJiyao":12}},{"path":"text-ui-test/duke/data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"D | 0 | return book | 2022-12-20","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"E | 1 | project meeting | 2022-12-20","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"E | 1 | group meeting | 1234-12-21","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"HanJiyao":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HanJiyao"},"content":"todo read book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"HanJiyao"},"content":"deadline return book /by 2022-12-20","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"HanJiyao"},"content":"event project meeting /at 2022-12-21","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"HanJiyao"},"content":"todo join sports club","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"HanJiyao"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"HanJiyao"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"HanJiyao"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"HanJiyao"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"HanJiyao"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"HanJiyao":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"HanJiyao"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"HanJiyao"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HanJiyao":2,"-":19}}]
