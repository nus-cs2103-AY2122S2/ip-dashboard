[{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":" * Commands encapsulates the operations that will be performed based on the user\u0027s response","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"public class Commands {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"    private String command;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"     /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"     * Constructor for Command Objects","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"     * @param command - The command entered by the user","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"    public Commands(String command) {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"    //Default case when user enters wrong command","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"    public void invalidCommand() {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"\\n\" + this.command + \"?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"What are you on about?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"Type list if you want to know the commands, kid!\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"    //Contains the list of commands when user enters help","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"    public void listOfCommand() {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"\\nCommands: \");","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    List                                    -list out all your current tasks\");","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    todo \u003ctask name\u003e                        -Add a todo task without any deadline specified\");","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    deadline \u003ctask name\u003e /by \u003cdeadline\u003e     -Adds a task that has to be done before the specified deadline\");","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    event \u003ctask name\u003e /at \u003cdeadline\u003e        -Adds a task that occurs at the specified deadline\");","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    mark \u003ctask number\u003e                      -marks task as completed\");","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    unmark \u003ctask number\u003e                    -marks a completed task as uncompleted\");","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"    bye                                     -exits the program :\u0027( \");","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"     * Function that works as a switch for user\u0027s input","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"blaketingyu"},"content":"     * @param tasklist - Tasklist that is created by collating all the tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"blaketingyu"},"content":"    public void performCommand(TaskList tasklist) {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"blaketingyu"},"content":"        ","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"blaketingyu"},"content":"        //Splits up the string to identify the main command","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"blaketingyu"},"content":"        String splitString[] \u003d this.command.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"blaketingyu"},"content":"        String firstWord \u003d splitString[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"blaketingyu"},"content":"        ","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"blaketingyu"},"content":"        //Case \"List\"","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"blaketingyu"},"content":"         if (firstWord.equals(\"list\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"blaketingyu"},"content":"                tasklist.list();","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"blaketingyu"},"content":"         } ","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"blaketingyu"},"content":"         ","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"blaketingyu"},"content":"        //Case \"mark\" \u0026 Case(\"unmark\") \u0026 Case\"delete\"","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"blaketingyu"},"content":"        //Collated together because it works similarly","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"blaketingyu"},"content":"        else if (firstWord.equals(\"mark\") || firstWord.equals(\"unmark\") || firstWord.equals(\"delete\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"blaketingyu"},"content":"            try {","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"blaketingyu"},"content":"                //String to contain successful deleted message if its a delete command","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"blaketingyu"},"content":"                String deleted \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"blaketingyu"},"content":"                //Handle the case of having no second input","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"blaketingyu"},"content":"                if (splitString.length \u003d\u003d 1 ) ","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"What?! You are to enter only 2 inputs. Eg mark 1, unmark 2, delete 3\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"blaketingyu"},"content":"                //Handle the case of having more than 2 inputs","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"blaketingyu"},"content":"                if (splitString.length \u003e 2)","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"What?! You are to enter only 2 inputs. Eg mark 1, unmark 2, delete 3\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"blaketingyu"},"content":"            ","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"blaketingyu"},"content":"                //Handle error if the second input is not an integer","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"blaketingyu"},"content":"                //Gets the index of the task in the task list","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"blaketingyu"},"content":"                int index \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"blaketingyu"},"content":"                //If index is out of range, throw illegal argument exception","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"blaketingyu"},"content":"                if (index \u003c\u003d 0 || index \u003e tasklist.currentSize) {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"blaketingyu"},"content":"                         throw new DukeExceptions(\"BRAT ! Your index is out of range! Number has to in the range of the list\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"blaketingyu"},"content":"                //If no errors, continue","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"blaketingyu"},"content":"                //Task that we are going to mark/unmark/delete","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"blaketingyu"},"content":"                Task thatTask \u003d tasklist.get(index - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"blaketingyu"},"content":"                String displayMessage \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"blaketingyu"},"content":"                if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"blaketingyu"},"content":"                    displayMessage \u003d \"Aye! I\u0027ve marked this task as completed:\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"blaketingyu"},"content":"                    tasklist.mark(index - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"blaketingyu"},"content":"                } else if (firstWord.equals(\"unmark\")){","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"blaketingyu"},"content":"                    displayMessage \u003d \"Aye kid! I\u0027ve marked this task as uncompleted:\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"blaketingyu"},"content":"                    tasklist.unmark(index - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"blaketingyu"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"blaketingyu"},"content":"                    tasklist.delete(index - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"blaketingyu"},"content":"                    displayMessage \u003d \"YES! I\u0027ve removed this task and soon I\u0027ll remove you as well!:\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"blaketingyu"},"content":"                    deleted \u003d \"Now you have \" + tasklist.currentSize + \" tasks in the list\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"blaketingyu"},"content":"                    ","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(displayMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"    \" + thatTask.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(deleted);","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"blaketingyu"},"content":"                    ","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"blaketingyu"},"content":"                //NumberFormatException is thrown if the second input is not an integer","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"blaketingyu"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"blaketingyu"},"content":"                    System.out.println(\"What? Second input has to be an integer! Eg mark 1, unmark 2\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"blaketingyu"},"content":"                    //Out of task range is thrown if the second input is out of range","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"blaketingyu"},"content":"                } catch (DukeExceptions e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"blaketingyu"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"blaketingyu"},"content":"             }","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"blaketingyu"},"content":"         ","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"blaketingyu"},"content":"          ","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"blaketingyu"},"content":"            ","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"blaketingyu"},"content":"            else if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"blaketingyu"},"content":"                //Pass to check whether task is to be created","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"blaketingyu"},"content":"                boolean created \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"blaketingyu"},"content":"                try {","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"blaketingyu"},"content":"                //Handle the case of having no second input","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"blaketingyu"},"content":"                if (splitString.length \u003d\u003d 1 ) ","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"What?! Task description cannot be empty. Eg todo eat, deadline eat food /by 12pm, event concert /at 8pm\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"blaketingyu"},"content":"                ","lastModifiedDate":"2022-01-22"},{"lineNumber":126,"author":{"gitId":"blaketingyu"},"content":"                String taskName \u003d command.substring(command.indexOf(\" \"));","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"blaketingyu"},"content":"                String msg \u003d \"Quit fooling around kid!\";","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"blaketingyu"},"content":"                Task newTask \u003d new Task(\"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"blaketingyu"},"content":"                if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"blaketingyu"},"content":"                    newTask \u003d new TodoTask(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"blaketingyu"},"content":"                    created \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"blaketingyu"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"blaketingyu"},"content":"                    //Handle the case of having no \"/\" to specify deadline or time of occurrences for deadline and event tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"blaketingyu"},"content":"                    if (!taskName.contains(\"/\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"blaketingyu"},"content":"                        msg.concat(\"Deadline and event tasks require /by and /at to specify the deadline or time of occurrence.\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"blaketingyu"},"content":"                        msg.concat(\"Eg Deadline eat food /by 12pm, event concert /at 8pm\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":137,"author":{"gitId":"blaketingyu"},"content":"                        throw new DukeExceptions(msg);","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"blaketingyu"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"blaketingyu"},"content":"                   ","lastModifiedDate":"2022-01-22"},{"lineNumber":140,"author":{"gitId":"blaketingyu"},"content":"                    String temp \u003d taskName.substring(taskName.indexOf(\"/\"));","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"blaketingyu"},"content":"                    String taskNameWithoutBack \u003d taskName.substring(0, taskName.indexOf(\"/\"));","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"blaketingyu"},"content":"                    String oldDateTime \u003d temp.substring(temp.indexOf(\" \") + 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":143,"author":{"gitId":"blaketingyu"},"content":"                    ","lastModifiedDate":"2022-01-22"},{"lineNumber":144,"author":{"gitId":"blaketingyu"},"content":"                    DateTimeFormatter oldFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"blaketingyu"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(oldDateTime, oldFormat);","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":148,"author":{"gitId":"blaketingyu"},"content":"                    //String that states by ... or at....","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"blaketingyu"},"content":"                    if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"blaketingyu"},"content":"                        //Handle the case of deadline task having no /by","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"blaketingyu"},"content":"                        if (!temp.contains(\"by\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"blaketingyu"},"content":"                                msg.concat(\"Deadline tasks require /by specify the deadline.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":153,"author":{"gitId":"blaketingyu"},"content":"                                msg.concat(\"Eg deadline eat food /by 12pm\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":154,"author":{"gitId":"blaketingyu"},"content":"                                throw new DukeExceptions(msg);","lastModifiedDate":"2022-01-22"},{"lineNumber":155,"author":{"gitId":"blaketingyu"},"content":"                        } ","lastModifiedDate":"2022-01-18"},{"lineNumber":156,"author":{"gitId":"blaketingyu"},"content":"                        ","lastModifiedDate":"2022-01-22"},{"lineNumber":157,"author":{"gitId":"blaketingyu"},"content":"                        newTask \u003d new DeadlineTask(taskNameWithoutBack, dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":158,"author":{"gitId":"blaketingyu"},"content":"                        created \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":159,"author":{"gitId":"blaketingyu"},"content":"                        ","lastModifiedDate":"2022-01-22"},{"lineNumber":160,"author":{"gitId":"blaketingyu"},"content":"                    } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"blaketingyu"},"content":"                        //Handle the case of event task having no /at","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"blaketingyu"},"content":"                        if (!temp.contains(\"at\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"blaketingyu"},"content":"                            msg.concat(\"Event tasks require /at specify the time of occurrence.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":164,"author":{"gitId":"blaketingyu"},"content":"                            msg.concat(\"music concert /at 8pm\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":165,"author":{"gitId":"blaketingyu"},"content":"                            throw new DukeExceptions(msg);","lastModifiedDate":"2022-01-22"},{"lineNumber":166,"author":{"gitId":"blaketingyu"},"content":"                        } ","lastModifiedDate":"2022-01-18"},{"lineNumber":167,"author":{"gitId":"blaketingyu"},"content":"                        ","lastModifiedDate":"2022-01-22"},{"lineNumber":168,"author":{"gitId":"blaketingyu"},"content":"                        newTask \u003d new EventTask(taskNameWithoutBack, dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":169,"author":{"gitId":"blaketingyu"},"content":"                        created \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":170,"author":{"gitId":"blaketingyu"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":171,"author":{"gitId":"blaketingyu"},"content":"                        ","lastModifiedDate":"2022-01-22"},{"lineNumber":172,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":173,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":174,"author":{"gitId":"blaketingyu"},"content":"                //Only tasks that pass the check can be created","lastModifiedDate":"2022-01-18"},{"lineNumber":175,"author":{"gitId":"blaketingyu"},"content":"                if (created) {","lastModifiedDate":"2022-01-18"},{"lineNumber":176,"author":{"gitId":"blaketingyu"},"content":"                    tasklist.add(newTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"blaketingyu"},"content":"                    System.out.println(\"Quit ordering me around!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"blaketingyu"},"content":"                    System.out.println(\"I\u0027ve added this task to our list:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"blaketingyu"},"content":"                    System.out.println(\"    \" + newTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"blaketingyu"},"content":"                    System.out.println(\"Now you have \" + tasklist.currentSize + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"blaketingyu"},"content":"                    ","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"blaketingyu"},"content":"            ","lastModifiedDate":"2022-01-22"},{"lineNumber":184,"author":{"gitId":"blaketingyu"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":186,"author":{"gitId":"blaketingyu"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":187,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"ERROR! Expected Numbers for date and time!\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":188,"author":{"gitId":"blaketingyu"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"ERROR! Time or Date is in wrong format! 2/12/2019 1800\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":191,"author":{"gitId":"blaketingyu"},"content":"        } ","lastModifiedDate":"2022-01-18"},{"lineNumber":192,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":193,"author":{"gitId":"blaketingyu"},"content":"        //Case \"Find\"","lastModifiedDate":"2022-01-22"},{"lineNumber":194,"author":{"gitId":"blaketingyu"},"content":"        else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":195,"author":{"gitId":"blaketingyu"},"content":"            try {","lastModifiedDate":"2022-01-22"},{"lineNumber":196,"author":{"gitId":"blaketingyu"},"content":"                if (splitString.length \u003d\u003d 1)","lastModifiedDate":"2022-01-22"},{"lineNumber":197,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"ERROR: find command requires a parameter to specify what keyword to find\");","lastModifiedDate":"2022-01-22"},{"lineNumber":198,"author":{"gitId":"blaketingyu"},"content":"                ","lastModifiedDate":"2022-01-22"},{"lineNumber":199,"author":{"gitId":"blaketingyu"},"content":"                String toFind \u003d this.command.substring(this.command.indexOf(\" \") + 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":200,"author":{"gitId":"blaketingyu"},"content":"                ","lastModifiedDate":"2022-01-22"},{"lineNumber":201,"author":{"gitId":"blaketingyu"},"content":"                tasklist.find(toFind);","lastModifiedDate":"2022-01-22"},{"lineNumber":202,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":203,"author":{"gitId":"blaketingyu"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":204,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":205,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":206,"author":{"gitId":"blaketingyu"},"content":"                ","lastModifiedDate":"2022-01-22"},{"lineNumber":207,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":208,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":209,"author":{"gitId":"blaketingyu"},"content":"        //Case \"help\"\"","lastModifiedDate":"2022-01-18"},{"lineNumber":210,"author":{"gitId":"blaketingyu"},"content":"        //List out all commands ","lastModifiedDate":"2022-01-18"},{"lineNumber":211,"author":{"gitId":"blaketingyu"},"content":"        else if (firstWord.equals(\"help\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":212,"author":{"gitId":"blaketingyu"},"content":"          listOfCommand();","lastModifiedDate":"2022-01-18"},{"lineNumber":213,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":214,"author":{"gitId":"blaketingyu"},"content":"        //Invalid command case","lastModifiedDate":"2022-01-18"},{"lineNumber":215,"author":{"gitId":"blaketingyu"},"content":"        else {","lastModifiedDate":"2022-01-18"},{"lineNumber":216,"author":{"gitId":"blaketingyu"},"content":"           invalidCommand();","lastModifiedDate":"2022-01-18"},{"lineNumber":217,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":218,"author":{"gitId":"blaketingyu"},"content":"           ","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":220,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"blaketingyu":220}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":" * Task encapsulates the information necessary for a DeadlineTask","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"public class DeadlineTask extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"    LocalDateTime deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"     *  Constructor for a DeadlineTask","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"     * @param taskname - Name/Description of a DeadlineTask Object","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"    public DeadlineTask(String taskname, LocalDateTime deadline) {","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"        super(taskname);","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"     *  Format the string representation of DeadlineTask objects","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"     * @return String representation of DeadlineTask objects","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"        DateTimeFormatter newFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, K:mma\");","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(newFormat) + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"    public String saveToFileFormat() {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"        String result \u003d \"D\";","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"        String mark \u003d this.completed? \"1\":\"0\";","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"        DateTimeFormatter oldFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"        return result + \" | \" + mark + \" | \" + taskName + \" | \" + deadline.format(oldFormat);","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"  ","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"blaketingyu":50}},{"path":"src/main/java/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":" * DukeExceptions encapsulates exceptions in the Duke Program","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"     *  Constructor for a DukeExceptions exception object","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"     * @param e - Error Message","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"    public DukeExceptions(String e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"        super(e);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"blaketingyu":18}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":" * Task encapsulates the information necessary for a user task","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"public class EventTask extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"    LocalDateTime eventDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"     *  Constructor for a EventTask","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"     * @param taskname - Name/Description of a EventTask Object","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"    public EventTask(String taskname, LocalDateTime eventDate) {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"        super(taskname);","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"     *  Format the string representation of EventTask objects","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"     * @return String representation of EventTask objects","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"        DateTimeFormatter newFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, K:mma\");","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventDate.format(newFormat) + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"    public String saveToFileFormat() {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"        String result \u003d \"E\";","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"        String mark \u003d this.completed? \"1\":\"0\";","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"        DateTimeFormatter oldFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"        return result + \" | \" + mark + \" | \" + taskName + \" | \" + eventDate.format(oldFormat);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"blaketingyu":50}},{"path":"src/main/java/ParseFiles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"public class ParseFiles {","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"    private String[] splitStringIntoParts(String s) {","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"        String[] splitBasedOnDelimiter \u003d s.split(\"\\\\|\");","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"        for (int i \u003d 0; i \u003c splitBasedOnDelimiter.length; i++)","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"            splitBasedOnDelimiter[i] \u003d splitBasedOnDelimiter[i].trim();","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"        ","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"        return splitBasedOnDelimiter;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"    private Task handlesEventTasks(int isMark, String description, LocalDateTime eventAt) {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"        EventTask eventTask \u003d new EventTask(description, eventAt);","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"        if (isMark \u003d\u003d 1)","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"            eventTask.markTask();","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"        return eventTask;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"     }","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"    private Task handlesDeadlineTasks(int isMark, String description, LocalDateTime deadlineBy) {","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(description, deadlineBy);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"        if (isMark \u003d\u003d 1)    ","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"            deadlineTask.markTask();","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"        return deadlineTask;","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"    private Task handlesTodoTasks(int isMark, String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"        TodoTask todoTask \u003d new TodoTask(description);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"        if (isMark \u003d\u003d 1)","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"            todoTask.markTask();","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"        return todoTask;","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"     *  ParseTask parses each line from the file to be read ","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"     *  and determines which task the task is, before it allows","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"     *  the program to add it into ","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"     * @param str Line from the file that is to be read","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"     * @return","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"blaketingyu"},"content":"    public Task parseTask(String str) {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"blaketingyu"},"content":"        //Container file for returning Task","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"blaketingyu"},"content":"        Task taskToBeReturned \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"blaketingyu"},"content":"        char taskType \u003d str.charAt(0);","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"blaketingyu"},"content":"        String[] stringIntoParts \u003d splitStringIntoParts(str);","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"blaketingyu"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"blaketingyu"},"content":"            if (taskType \u003d\u003d \u0027T\u0027 || taskType \u003d\u003d \u0027D\u0027 || taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"blaketingyu"},"content":"                //Handle Wrong Inputs","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"blaketingyu"},"content":"                //Case 1: user only specified Task type","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"blaketingyu"},"content":"                if (stringIntoParts.length \u003d\u003d 1) ","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"ERROR! You\u0027ve only specified the task type, you need to specify whether task is completed or not and the description of the task \\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"blaketingyu"},"content":"                //Case 2: If second input(completed/uncompleted) is not an integer, throw exception","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"blaketingyu"},"content":"                int index \u003d Integer.parseInt(stringIntoParts[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"blaketingyu"},"content":"                //Case 3: There is only 2 inputs","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"blaketingyu"},"content":"                if (stringIntoParts.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"ERROR! You\u0027ve only specified the task type and whether it is incomplete or complete \\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"blaketingyu"},"content":"                } ","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"blaketingyu"},"content":"                //Case 4: Second input is not 0 or 1","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"blaketingyu"},"content":"                if (index !\u003d 0 \u0026\u0026 index !\u003d 1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"blaketingyu"},"content":"                    throw new DukeExceptions(\"ERROR! Second input has to be 0 or 1!\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"blaketingyu"},"content":"                //If code reaches here, it is confirmed to have 3 or more parameters","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"blaketingyu"},"content":"                // Deadline Task or Event Task Handling","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"blaketingyu"},"content":"                if (taskType \u003d\u003d \u0027D\u0027 || taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"blaketingyu"},"content":"                    //Case 4: Assume that the 3rd input is the description of the task and the user is missing the deadline by/time of event","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"blaketingyu"},"content":"                    if (stringIntoParts.length !\u003d 4) {","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"blaketingyu"},"content":"                        throw new DukeExceptions(\"ERROR! Deadline and Event tasks is missing the date which the event occur on/deadline\");","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"blaketingyu"},"content":"                    } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"blaketingyu"},"content":"                            String timeAndDate \u003d stringIntoParts[3];","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"blaketingyu"},"content":"                            DateTimeFormatter oldFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"blaketingyu"},"content":"                            LocalDateTime dateTime \u003d LocalDateTime.parse(timeAndDate, oldFormat);","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"blaketingyu"},"content":"                            if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"blaketingyu"},"content":"                                taskToBeReturned \u003d handlesDeadlineTasks(index, stringIntoParts[2],dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"blaketingyu"},"content":"                            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"blaketingyu"},"content":"                                taskToBeReturned \u003d handlesEventTasks(index, stringIntoParts[2],dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"blaketingyu"},"content":"                            }","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"blaketingyu"},"content":"                    }  ","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"blaketingyu"},"content":"                } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"blaketingyu"},"content":"                //Todo Task","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"blaketingyu"},"content":"                    taskToBeReturned \u003d handlesTodoTasks(index, stringIntoParts[2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"blaketingyu"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"blaketingyu"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"blaketingyu"},"content":"                //If Task type is not T/D/E    ","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"blaketingyu"},"content":"                throw new DukeExceptions(\"ERROR! I do not recognise that task type!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"blaketingyu"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"blaketingyu"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"What? Second input has to be an integer! Eg T | 1 | read book, D | 0 | return book | 27/02/1998 1800 \\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"blaketingyu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"ERROR: Date and time is entered in the wrong format eg 27/02/1998 1800\");","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"blaketingyu"},"content":"        return taskToBeReturned;","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"blaketingyu"},"content":"        ","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"blaketingyu"},"content":"            ","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"blaketingyu"},"content":"            ","lastModifiedDate":"2022-01-22"},{"lineNumber":120,"author":{"gitId":"blaketingyu"},"content":"           ","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"blaketingyu"},"content":"        ","lastModifiedDate":"2022-01-22"},{"lineNumber":122,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"blaketingyu":125}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"import java.io.File;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"public class Storage {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"     * Create directory if it does not exist","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"     * Might throw SecurityException if unable to write at directory","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"     * Not necessary to catch since it\u0027s a RuntimeException","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"    private void createDirectory() {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"            String path \u003d Paths.get(\"\").toAbsolutePath() + \"/data/\";","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"            File dir \u003d new File(path);","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"            if (dir.mkdir()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"\\nI\u0027ve created the directory \" + dir.getName());","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"\\nYou better be grateful, kid\");","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"\\nERROR! What? I\u0027m unable to create directory\");","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"     * Create file if the  file does not exist","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"    private void createFile() {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath() + \"/data/Duke.txt\";","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"        File filename \u003d new File(path);","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"            if (filename.createNewFile()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"\\nI\u0027ve created the file \" + filename.getName());","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"You better be grateful, kid\");","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"            } ","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"\\nWhat\u0027s this? An error occured when I tried to create the file\");","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"       ","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"    public void loadFile(TaskList tasklist) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"            String dir \u003d Paths.get(\"\").toAbsolutePath() + \"/data/\";","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"            String filename \u003d Paths.get(\"\").toAbsolutePath() + \"/data/Duke.txt\";","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"blaketingyu"},"content":"            File directory \u003d new File(dir); ","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"blaketingyu"},"content":"            File fileToBeLoaded \u003d new File(filename);","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"blaketingyu"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"\\nHUH? The directory doesn\u0027t exist?!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"blaketingyu"},"content":"                createDirectory();","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"blaketingyu"},"content":"            } ","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"blaketingyu"},"content":"            ","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"blaketingyu"},"content":"            if (!fileToBeLoaded.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(\"HUH? The file doesn\u0027t exist?!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"blaketingyu"},"content":"                createFile();","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"blaketingyu"},"content":"            Scanner reader \u003d new Scanner(fileToBeLoaded);","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"blaketingyu"},"content":"            ParseFiles parser \u003d new ParseFiles();","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"blaketingyu"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"blaketingyu"},"content":"                Task currentTask \u003d parser.parseTask(reader.nextLine());","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"blaketingyu"},"content":"                tasklist.add(currentTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"blaketingyu"},"content":"            reader.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"blaketingyu"},"content":"           ","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"blaketingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"\\nWhat\u0027s this? An error occured when I tried to load the file\");","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"blaketingyu"},"content":"    public void updateList(TaskList tasklist) {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"blaketingyu"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"blaketingyu"},"content":"            String filename \u003d Paths.get(\"\").toAbsolutePath() + \"/data/Duke.txt\";","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"blaketingyu"},"content":"            FileWriter writer \u003d new FileWriter(filename);","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"blaketingyu"},"content":"            writer.write(tasklist.listTasksInTextFormat());","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"blaketingyu"},"content":"            writer.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"blaketingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"ERROR: Writing tasklists to file\");","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"blaketingyu"},"content":"        ","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"blaketingyu":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":" * Task encapsulates the information necessary for a user task","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"    protected String taskName;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"    protected Boolean completed;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"     * Constructor for Task Objects","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"     * @param taskName - The name/description of the task","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"     *  Marks the task as completed","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"    public void markTask() {","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"     *  Marks a completed task as incomplete","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"     *  Format the string representation of task objects","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"     * @return String representation of task objects","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"blaketingyu"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"blaketingyu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"blaketingyu"},"content":"        String completedOrNah \u003d this.completed? \"X\":\"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"blaketingyu"},"content":"         return \"[\" + completedOrNah + \"] \" + taskName;","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"blaketingyu"},"content":"     * Save format in the hard disk","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"blaketingyu"},"content":"     * For Overriding purposes only","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"blaketingyu"},"content":"    protected String saveToFileFormat() {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"blaketingyu"},"content":"        return taskName;","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"blaketingyu":67}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":" * Tasklist encapsulates the list of tasks the user adds","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"    public int currentSize;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"     * Constructor for tasklist","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"        this.tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"        this.currentSize \u003d 0;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"     * Returns the task object at the index specified","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"     * @param index","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"     * @return Task object at the index specified","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"        return this.tasklist.get(index);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"     * Adds the task into the existing tasklist","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"     * @param Task object","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"        tasklist.add(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"        currentSize+\u003d1;","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"     * Mark the task in the tasklist at the specified index","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"     * @param index index at which the task is to be marked","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"blaketingyu"},"content":"    public void mark(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"blaketingyu"},"content":"        this.tasklist.get(index).markTask();","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"blaketingyu"},"content":"     * Unmark the task in the tasklist at the specified index","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"blaketingyu"},"content":"     * @param index index at which the task is to be unmarked","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"blaketingyu"},"content":"    public void unmark(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"blaketingyu"},"content":"        this.tasklist.get(index).unmarkTask();","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"blaketingyu"},"content":"     /**","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"blaketingyu"},"content":"     * Delete the task in the tasklist at the specified index","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"blaketingyu"},"content":"     * @param index index at which the task is to be deleted","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"blaketingyu"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"blaketingyu"},"content":"        this.tasklist.remove(index);","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"blaketingyu"},"content":"        currentSize -\u003d 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"blaketingyu"},"content":"     /**","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"blaketingyu"},"content":"     * Display the list","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"blaketingyu"},"content":"    public void list() {","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"blaketingyu"},"content":"        //Handle the case of list being empty","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"blaketingyu"},"content":"        if (currentSize \u003d\u003d 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"    \\nYou haven\u0027t added any task, brat!\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"blaketingyu"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"blaketingyu"},"content":"             //Display the task list","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"blaketingyu"},"content":"             System.out.println(\"    \\nHere are the tasks in your list:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"blaketingyu"},"content":"             for (int i \u003d 0; i \u003c currentSize; i++)","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"blaketingyu"},"content":"                 System.out.println(\"    \" + (i + 1) + \". \" + this.tasklist.get(i));","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"blaketingyu"},"content":"         ","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"blaketingyu"},"content":"    public String listTasksInTextFormat() {","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"blaketingyu"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"blaketingyu"},"content":"        for (Task task:tasklist) {","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"blaketingyu"},"content":"            result \u003d result.concat(task.saveToFileFormat());","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"blaketingyu"},"content":"            result \u003d result.concat(\"\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"blaketingyu"},"content":"        return result.trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"blaketingyu"},"content":"    public void find(String strToFind) {","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"blaketingyu"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"blaketingyu"},"content":"        for (Task task:tasklist) {","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"blaketingyu"},"content":"            if (task.taskName.contains(strToFind)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"blaketingyu"},"content":"                System.out.println(count + \". \" + task);","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"blaketingyu"},"content":"                count++;","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"blaketingyu"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"blaketingyu"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"blaketingyu"},"content":"            System.out.println(\"No task with that keyword\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"blaketingyu"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"blaketingyu":118}},{"path":"src/main/java/Taskmaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"public class Taskmaster {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"    //Taskmaster logo ","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"    protected String logo \u003d \"  _____\\n\" + \" /     \\\\\\n\" + \"| () () |\\n\" + \" \\\\  ^  /\\n\" + \"  |||||\\n\" + \"  |||||\\n\"; ","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"    protected TaskList tasklist;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"    protected Storage storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"     * Constructor for Taskmaster the chatbot ","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"    private Taskmaster () {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"        this.tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"     * The opening message we see when the program runs","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"    private void openingMessage() {","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"Greetings, I\u0027m Taskmaster, I\u0027m super grumpy 24/7\");","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"....................................\");","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"Okay, what do you want?\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"     * The main chatbot program that will run in a loop","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"    private void chatBot() {","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"         //Scanner initialization for user input","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"         Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"blaketingyu"},"content":"         String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"blaketingyu"},"content":"         while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"blaketingyu"},"content":"           Commands command \u003d new Commands(userInput);","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"blaketingyu"},"content":"           command.performCommand(tasklist);","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"blaketingyu"},"content":"           userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"blaketingyu"},"content":"         }","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"blaketingyu"},"content":"         sc.close();","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"blaketingyu"},"content":"     * The bye message displayed when the user exits","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"blaketingyu"},"content":"     * ","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"blaketingyu"},"content":"    private void bye() {","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"See you around kiddo, I\u0027m an angsty dude but deep down i\u0027m a lonely man\");","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"blaketingyu"},"content":"    private void loadingExistingFile() {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"blaketingyu"},"content":"        System.out.println(\"\\nLoading up saved task files ...\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"blaketingyu"},"content":"        storage.loadFile(tasklist);","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"blaketingyu"},"content":"    private void updateList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"blaketingyu"},"content":"        storage.updateList(tasklist);","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"blaketingyu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"blaketingyu"},"content":"        Taskmaster taskMaster \u003d new Taskmaster(); //Creates Chatbot","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"blaketingyu"},"content":"        taskMaster.openingMessage(); //Display opening message","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"blaketingyu"},"content":"        taskMaster.loadingExistingFile(); //Load existing file","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"blaketingyu"},"content":"        taskMaster.chatBot(); //Runs the chatbot","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"blaketingyu"},"content":"        taskMaster.bye(); //Exits","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"blaketingyu"},"content":"        taskMaster.updateList(); //Save tasks in the hard disk if task list changes","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"blaketingyu":74,"-":2}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"//Author: Tan Ting Yu","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"//Student Number: A218235J","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":" * Task encapsulates the information necessary for a TodoTask","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"     *  Constructor for a TodoTask","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"     * @param taskname - Name/Description of a TodoTask Object","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"    TodoTask(String taskname) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"        super(taskname);","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"     *  Format the string representation of TodoTask objects","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"     *","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"     * @return String representation of TodoTask objects","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"blaketingyu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"blaketingyu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"blaketingyu"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"blaketingyu"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"blaketingyu"},"content":"    public String saveToFileFormat() {","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"blaketingyu"},"content":"        String result \u003d \"T\";","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"blaketingyu"},"content":"        String mark \u003d this.completed? \"1\":\"0\";","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"blaketingyu"},"content":"        return result + \" | \" + mark + \" | \" + taskName;","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"blaketingyu"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"blaketingyu"},"content":"    ","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"blaketingyu"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"blaketingyu":40}},{"path":"src/main/java/data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"D | 1 | hello | 27/2/1998 1800","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"E | 0 | feed dog | 1/1/1998 0100","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"E | 1 | feed dog | 1/1/1998 1300","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"T | 0 | me","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"blaketingyu":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blaketingyu"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"blaketingyu"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"blaketingyu"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"blaketingyu"},"content":"todo sports club","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"blaketingyu"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"blaketingyu"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"blaketingyu"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"blaketingyu"},"content":"unmark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"blaketingyu"},"content":"unmark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"blaketingyu"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"blaketingyu"},"content":"mark 10","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"blaketingyu"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"blaketingyu"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"blaketingyu"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"blaketingyu"},"content":"what","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"blaketingyu"},"content":"huh?","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"blaketingyu"},"content":"mark","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"blaketingyu"},"content":"mark me","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"blaketingyu"},"content":"unmark me","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"blaketingyu"},"content":"event hahahaha","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"blaketingyu"},"content":"deadline hahahaha","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"blaketingyu"},"content":"event hahahaha /at 8pm","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"blaketingyu"},"content":"event hahahaha /by 7pm","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"blaketingyu"},"content":"deadline hehehehe /at 8pm","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"blaketingyu"},"content":"event hohohohooh /by 8pm","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"blaketingyu"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"blaketingyu":26}}]
