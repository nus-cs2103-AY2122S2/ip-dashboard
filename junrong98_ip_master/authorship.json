[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"# FunBox project template","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"3. After that, locate the `src/main/java/FunBox.java` file, right-click it, and choose `Run FunBox.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junrong98":2,"-":22}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"T,0,yolo your mum","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"T,0,mum yolo damn","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"T,0,eageagea","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":3}},{"path":"src/main/java/funbox/FunBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":" * The FunBox class is used as the outer shell of FunBoxGear,","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" * which contains the functionality of FunBox","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class FunBox {","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        Storage storage \u003d new Storage(ui, parser);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        TaskList taskList \u003d storage.getTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        ui.greetUser();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        while(!isExit) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"                String command \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"                Command c \u003d parser.parseCommand(command, taskList, ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            } catch (FunBoxExceptions | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        sc.close();","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":39}},{"path":"src/main/java/funbox/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" * Deal with handling command that user exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     * Constructor for ByeCommand Class.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        super(true);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * Execute the command and print a goodbye message to users.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * @param storage Store user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        ui.printBye();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":29}},{"path":"src/main/java/funbox/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" * This is the abstract class for Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    boolean isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * This is the constructor for command class.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param isExit Use for determining whether the command is a `Bye` command.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * Return a boolean value.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @return Return true if it is a `Bye` command, else return false.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * Return","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions Returns exceptions related to FunBox.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     * @throws IOException Returns exceptions related to input/output.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":42}},{"path":"src/main/java/funbox/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * The constructor for DeadlineCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    public DeadlineCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Execute the command which add Deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If description \u003d\u003d \"\"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`deadline` command is missing a field!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            String[] resultArr \u003d this.parser.getDescriptionAndDate(this.description, \"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            Deadline deadline \u003d new Deadline(resultArr[0],","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"                    parser.stringToLocalDate(resultArr[1]),","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"                    parser.getTime(resultArr[1]), \"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"            taskList.add(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            ui.printTask(taskList.getSize(), deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"            storage.writeTaskToStorage(deadline, ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":50}},{"path":"src/main/java/funbox/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"    int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the tasks on the list to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * Execute the command to delete a task from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @throws IOException Throws if file do not exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        if ((index - 1) \u003e taskList.getSize() || (index - 1) \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"Wrong index!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"            taskList.delete(this.index - 1, ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"            storage.deleteTask(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":40}},{"path":"src/main/java/funbox/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * Constructor class for EventCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    public EventCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Execute the command which add Event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If description \u003d\u003d \"\"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`event` command is missing a field!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            String[] resultArr \u003d this.parser.getDescriptionAndDate(this.description, \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            Event event \u003d new Event(resultArr[0],","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"                    parser.stringToLocalDate(resultArr[1]),","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"                    parser.getTime(resultArr[1]), \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"            taskList.add(event);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            ui.printTask(taskList.getSize(), event);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"            storage.writeTaskToStorage(event, ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":50}},{"path":"src/main/java/funbox/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Filter.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for FilterCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param description The string used to filter the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public FilterCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * Execute the command to filter the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If date is not formatted in `yyyy-mm-dd`.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        taskList.filterTasks(this.description, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":36}},{"path":"src/main/java/funbox/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"        taskList.findTasks(this.description, ui, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":18}},{"path":"src/main/java/funbox/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for List.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     * The constructor for ListCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * Execute the command to display tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        taskList.printTasks(ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":30}},{"path":"src/main/java/funbox/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Mark.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for MarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param index The index of the task which should be marked as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * Execute the command to mark the tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        if ((index - 1) \u003e taskList.getSize() || (index - 1) \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"Wrong index!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"            taskList.setTaskDone(this.index - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":40}},{"path":"src/main/java/funbox/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for ToDo.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * Constructor class for ToDoCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * Execute the command which add ToDo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If description \u003d\u003d \"\"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`todo` command is missing a field!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"            ToDo todo \u003d new ToDo(this.description, \"todo\");","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            taskList.add(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"            ui.printTask(taskList.getSize(), todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            storage.writeTaskToStorage(todo, ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":44}},{"path":"src/main/java/funbox/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for UnmarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for UnmarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param index The index of the task which should be marked as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * Execute the command to mark the tasks in the list as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        if ((index - 1) \u003e taskList.getSize() || (index - 1) \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"Wrong index!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"            taskList.setTaskUndone(this.index - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":40}},{"path":"src/main/java/funbox/exception/FunBoxExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":" * FunBoxExceptions is exceptions used by FunBoxGear for error handling","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public class FunBoxExceptions extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * Constructor for FunBoxExceptions","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @param errorMessage The error message to be displayed","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    public FunBoxExceptions(String errorMessage) {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":16}},{"path":"src/main/java/funbox/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":" * The Deadline class which inherits from Task.","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    public LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public String time;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param date The date the task should be completed at.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param time The time the task should be complete at.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @param type The type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    public Deadline(String description, LocalDate date, String time, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        super(description, type);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"                + \" \"  + time + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":39}},{"path":"src/main/java/funbox/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":" * The Event class which inherits from Task.","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    public LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public String time;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param date The date the task should be completed at.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param time The time the task should be complete at.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @param type The type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    public Event(String description, LocalDate date, String time, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        super(description, type);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"                + \" \"  + time + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":39}},{"path":"src/main/java/funbox/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author junrong98-reused","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//Reused from https://nus-cs2103-ay2122s2.github.io/website/admin/ip-w2.html","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * The task class represents the task user\u0027s wants to do","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public String type;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructor for the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param type The type of task (Deadline, Event, Todo).","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The icon representing the current status of the task","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return Return \"X\" if status of task is completed else return \" \"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Set the task to done","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        System.out.println(this);","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Set the task to unfinished","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        System.out.println(this);","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets task to done","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void presetDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":2,"-":68}},{"path":"src/main/java/funbox/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":" * The ToDo class which inherits from Task.","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * The constructor for ToDo class","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @param description The task sent by the users","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     * @param type The type of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    public ToDo(String description, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        super(description, type);","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":27}},{"path":"src/main/java/funbox/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.command.*;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" * Deal with parsing and making sense of the user commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    public final String unknownCommand \u003d \"Sorry! You have used the command wrongly!\";","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * Parses the user text commands to a Command object.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param taskList The list containing the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @return Return a command object to be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If command is not available/exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public Command parseCommand(String command, TaskList taskList, Ui ui) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        String[] parsedCommand \u003d command.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        String commandType \u003d parsedCommand[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        String description \u003d parsedCommand.length \u003e 1","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"                ? this.concatFormat(parsedCommand, 1) : \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        switch (commandType) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            return new ToDoCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"            return new EventCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            return new DeadlineCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            return new DeleteCommand(Integer.parseInt(description));","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"            return new MarkCommand(Integer.parseInt(description));","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"            return new UnmarkCommand(Integer.parseInt(description));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        case \"filter\":","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"            return new FilterCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"            return new FindCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        default:","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! I do not know what the commands means :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"     * Concats the strings in the array to a single string.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     * @param parsedCommand The array containing the strings to be concatenated.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     * @param startingIndex The point which the concatenation should begin.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     * @return Return a concatenated string.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"    public String concatFormat(String[] parsedCommand, int startingIndex) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        for (int i \u003d startingIndex; i \u003c parsedCommand.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"            if (i \u003d\u003d parsedCommand.length - 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"                result \u003d result.concat(parsedCommand[i]);","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"                result \u003d result.concat(parsedCommand[i]).concat(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"     * Gets the description and date from a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"     * @param message The message to be parsed to retrieve the description and date.","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"     * @param type The type of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string array where the first item is the description","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"     *         and the second item contains the date.","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"    public String[] getDescriptionAndDate(String message, String type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"        if (type.equals(\"event\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"            return message.split(\" /at \");","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"        return message.split(\" /by \");","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"     * Formats the user\u0027s message to be able to differentiate between special commands","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"     * @param message The user\u0027s message to be formatted","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"     * @return Return a String array which contains the split message. The first element is used to differentiate","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"     * whether it\u0027s a message, command, or command which require special formatting","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"    public String[] formatCommands(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"        // Split message by blank space","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"        return message.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"     * Converts string consisting of a date and time to LocalDate object","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"     * @param dateTime The date and time which the task should be completed by","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"     * @return Returns a LocalDate object","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If dateTimeArr.length !\u003d 2","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"    public LocalDate stringToLocalDate(String dateTime) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"        String[] dateTimeArr \u003d this.formatCommands(dateTime);","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"        LocalDate result;","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"        if (dateTimeArr.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"            result \u003d LocalDate.parse(dateTimeArr[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! Please ensure date and time\"","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"                    + \" is in the correct format: yyyy-mm-dd time\");","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"     * Gets the time from a string consisting of a date and time","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"     * @param dateTime The date and time which the task should be completed by","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"     * @return Returns a time","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If dateTimeArr.length !\u003d 2","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"    public String getTime(String dateTime) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"        String[] dateTimeArr \u003d this.formatCommands(dateTime);","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"        String time;","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"        if (dateTimeArr.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"            time \u003d dateTimeArr[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! Please ensure date and time\"","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"                    + \" is in this format: yyyy-mm-dd time\");","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"        return time;","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":141}},{"path":"src/main/java/funbox/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.*;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" * Deal with writing and reading user commands locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    private final String DIRURL \u003d \"data/\";","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    private final String FILEURL \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    private final String TEMPFILEURL \u003d \"data/temp.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    private final String DELIMITOR \u003d \",\";","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    HashMap\u003cString, String\u003e typeHashmap;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * The constructor for the storage class.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @param parser Parses user commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public Storage(Ui ui, Parser parser) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        setUpHashMap();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        preCheck();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"     * Sets up the hashmap","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    private void setUpHashMap() {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap.put(\"D\", \"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap.put(\"T\", \"todo\");","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap.put(\"E\", \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"     * Checks if the required directory and file exists, and reads tasks from the file and","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"     * insert it into a list.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    private void preCheck() {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        if (!isDirectoryExist()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"            boolean isDirectoryCreated \u003d this.createDirectory();","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"            if (isDirectoryCreated) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"                this.ui.printDirSuccess();","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"                this.createFile(this.FILEURL);","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"                this.ui.printDirAlreadyExist();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        } else if (!isFileExist()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"            this.createFile(this.FILEURL);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"            this.ui.printLoadData();","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"                this.taskList \u003d this.readFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            } catch (IOException | FunBoxExceptions e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"     * Checks if directory \u0027data\u0027 exists in \u0027ip\u0027 folder","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"     * @return Return true if directory exist, otherwise, false","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    private boolean isDirectoryExist() {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"        return new File(this.DIRURL).isDirectory();","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"     * Check if file tasks.txt exist in \u0027data\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"     * @return Return true if file exist, otherwise, false","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"    private boolean isFileExist() {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"        return Files.exists(Paths.get(this.FILEURL));","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"     * Creates directory \u0027data\u0027 under \u0027ip\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     * @return Return true if directory exists, otherwise, false","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"    private boolean createDirectory() {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"        return new File(this.DIRURL).mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"     * Creates file `tasks.txt` under \u0027data\u0027 directory","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"    private void createFile(String fileUrl) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"            if (new File(fileUrl).createNewFile() \u0026\u0026 fileUrl \u003d\u003d this.FILEURL) {","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"                this.ui.printFileSuccess();","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"     * Reads the existing file, if there are existing tasks in the file, add to the current list","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"     * @throws FileNotFoundException If file is not found in the given URL","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"     * @throws IOException           If an I/O error occur","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"    public TaskList readFile() throws IOException, FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILEURL);","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"        String task;","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"        String[] resultArr;","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"        int isDone \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"            task \u003d br.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"                String[] taskSplit \u003d task.split(this.DELIMITOR);","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"                String type \u003d this.typeHashmap.get(taskSplit[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"                isDone \u003d Integer.parseInt(taskSplit[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"                String description \u003d taskSplit[2];","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":"                switch (type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"junrong98"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"junrong98"},"content":"                    taskList.add(new ToDo(description, type));","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"junrong98"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"junrong98"},"content":"                case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"junrong98"},"content":"                    taskList.add(new Event(description,","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"junrong98"},"content":"                            parser.stringToLocalDate(taskSplit[3]),","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"junrong98"},"content":"                            parser.getTime(taskSplit[3]), type));","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"junrong98"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"junrong98"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"junrong98"},"content":"                    taskList.add(new Deadline(description,","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"junrong98"},"content":"                            parser.stringToLocalDate(taskSplit[3]),","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"junrong98"},"content":"                            parser.getTime(taskSplit[3]), type));","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"junrong98"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"junrong98"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"junrong98"},"content":"            taskList.setPreTaskDone(counter);","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"        counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"junrong98"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"junrong98"},"content":"     * The task to be deleted from the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task in the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"junrong98"},"content":"     * @throws IOException If file does not exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"    public void deleteTask(int index) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"junrong98"},"content":"        this.createFile(this.TEMPFILEURL);","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":"        File tempFile \u003d new File(this.TEMPFILEURL);","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILEURL);","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"        FileWriter fw \u003d new FileWriter(this.TEMPFILEURL, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"junrong98"},"content":"        String task;","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"junrong98"},"content":"            task \u003d br.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"junrong98"},"content":"                fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"junrong98"},"content":"                file.delete();","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"junrong98"},"content":"                tempFile.renameTo(new File(this.FILEURL));","lastModifiedDate":"2022-01-26"},{"lineNumber":194,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":195,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":196,"author":{"gitId":"junrong98"},"content":"                if (counter !\u003d index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":197,"author":{"gitId":"junrong98"},"content":"                    fw.write(task + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":198,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"junrong98"},"content":"     * Writes task into storage","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"junrong98"},"content":"     * @param task The task user inputted","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"junrong98"},"content":"    public void writeTaskToStorage(Task task, Ui ui) {","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"junrong98"},"content":"            String result \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"junrong98"},"content":"            switch (task.type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":213,"author":{"gitId":"junrong98"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":214,"author":{"gitId":"junrong98"},"content":"                result \u003d \"T,0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":215,"author":{"gitId":"junrong98"},"content":"                result \u003d result.concat(DELIMITOR).concat(task.description);","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":217,"author":{"gitId":"junrong98"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":218,"author":{"gitId":"junrong98"},"content":"                Deadline temp \u003d (Deadline) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":219,"author":{"gitId":"junrong98"},"content":"                result \u003d \"D,0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":220,"author":{"gitId":"junrong98"},"content":"                result \u003d result.concat(DELIMITOR).concat(temp.description).concat(DELIMITOR)","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"junrong98"},"content":"                        .concat(temp.date.toString()).concat(\" \").concat(temp.time);","lastModifiedDate":"2022-01-26"},{"lineNumber":222,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":223,"author":{"gitId":"junrong98"},"content":"            case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"junrong98"},"content":"                Event temp2 \u003d (Event) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":225,"author":{"gitId":"junrong98"},"content":"                result \u003d \"E,0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":226,"author":{"gitId":"junrong98"},"content":"                result \u003d result.concat(DELIMITOR).concat(temp2.description).concat(DELIMITOR)","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"junrong98"},"content":"                        .concat(temp2.date.toString()).concat(\" \").concat(temp2.time);","lastModifiedDate":"2022-01-26"},{"lineNumber":228,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"junrong98"},"content":"            FileWriter fw \u003d new FileWriter(this.FILEURL, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":231,"author":{"gitId":"junrong98"},"content":"            fw.write(result + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":232,"author":{"gitId":"junrong98"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":234,"author":{"gitId":"junrong98"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":235,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":236,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":237}},{"path":"src/main/java/funbox/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import funbox.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public void delete(int index, Ui ui) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        Task temp \u003d taskList.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        ui.printNotice();","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        ui.printDeletedTask(temp);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        ui.printRemainingTasks(this);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public void setTaskDone(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).setDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    public void setPreTaskDone(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).presetDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    public void getTask(Ui ui, int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        ui.printTask(index, this.taskList.get(index));","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    public void printTasks(Ui ui) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        if (this.getSize() \u003e\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"            ui.printListHeader();","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"                ui.printTask(i + 1, this.taskList.get(i));","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"            ui.emptyList();","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    public void setTaskUndone(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).setUndone();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"     * Filter the list based on the date provided by the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"     * @param filterDate The date used to filter the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"     * @param taskList The list containing the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If date is not formatted in `yyyy-mm-dd`.","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"    public void filterTasks(String filterDate, TaskList taskList) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"        LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"            date \u003d LocalDate.parse(filterDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"            ArrayList\u003cTask\u003e eventList \u003d new ArrayList\u003c\u003e(taskList.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"            ArrayList\u003cTask\u003e deadlineList \u003d new ArrayList\u003c\u003e(taskList.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"            eventList.removeIf(task -\u003e (task.type.contains(\"todo\") || task.type.contains(\"deadline\")));","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"            deadlineList.removeIf(task -\u003e (task.type.contains(\"todo\") || task.type.contains(\"event\")));","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"            int counter \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"            int eventSize \u003d eventList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"            int deadlineSize \u003d deadlineList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"            for (int i \u003d 0; i \u003c eventSize; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"                Event temp \u003d (Event) eventList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"                if (temp.date.equals(date)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"                    counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"                    System.out.println(counter + \".\" + temp);","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"            for (int i \u003d 0; i \u003c deadlineSize; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"                Deadline temp \u003d (Deadline) deadlineList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"                if (temp.date.equals(date)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"                    counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"                    System.out.println(counter + \".\" + temp);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"                System.out.println(\"No tasks found on this date! You are free!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! Please ensure date is in the correct format: yyyy-mm-dd\");","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"    public void findTasks(String filter, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e(taskList.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"        String filterLowerCase \u003d filter.toLowerCase();","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"        tempTaskList.removeIf(task -\u003e !task.description.toLowerCase().contains(filterLowerCase));","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"        for (Task task : tempTaskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"            ui.printTask(counter, task);","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":131}},{"path":"src/main/java/funbox/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    public void greetUser() {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Yo! I am FunBox [0 _ 0] \\nWhat can I do for you?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public void printListHeader() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    public void printBye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"B-b-bbye. Hope to see you again soon [0 n 0]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public void printDirSuccess() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Directory \u0027data\u0027 has been created for you!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public void printDirAlreadyExist() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Directory already exists!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    public void printFileSuccess() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"I have created tasks.txt for you!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public void printLoadData() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Loading saved task ... beep ... boop\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    public void printTask(int index, Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        System.out.println(index + \".\" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    public void printNotice() {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    public void printRemainingTasks(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    public void emptyList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        System.out.println(\"You have no tasks at the moment!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    public void printDeletedTask(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"        System.out.println(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        sc.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        return command;","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":68}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.command.ToDoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class EventCommandTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public void execute_createTodo_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        Task testResult \u003d taskListStub.getTaskList().get(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        assertEquals(testResult.toString(),","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"                new ToDo(\"Hello World\", \"todo\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public void execute_whenFunBoxExceptionThrow_wrongInput() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        assertThrows(FunBoxExceptions.class, () -\u003e {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        });","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    public void isExit_isFalse_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        assertEquals(toDoCommand.isExit(), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":48}},{"path":"src/test/java/command/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.command.ToDoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public void execute_createTodo_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        Task testResult \u003d taskListStub.getTaskList().get(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        assertEquals(testResult.toString(),","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"                new ToDo(\"Hello World\", \"todo\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public void execute_whenFunBoxExceptionThrow_wrongInput() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        assertThrows(FunBoxExceptions.class, () -\u003e {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        });","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    public void isExit_isFalse_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        assertEquals(toDoCommand.isExit(), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"java -classpath ..\\bin FunBox \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"junrong98":1}}]
