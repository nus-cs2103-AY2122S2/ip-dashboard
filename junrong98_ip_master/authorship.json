[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"# FunBox project template","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"3. After that, locate the `src/main/java/FunBox.java` file, right-click it, and choose `Run FunBox.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junrong98":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"javafx {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    mainClassName \u003d \"funbox.Launcher\"","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"    archiveBaseName \u003d \"FunBoxLauncher\"","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"junrong98":8}},{"path":"src/main/java/funbox/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Constructor for DialogBox.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @param text Display the user text.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param img Display the user image.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     * Display the user dialog.","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     * @param text Gets the user text.","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"     * @param img Gets the user image.","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"     * @return Returns a dialog box to be displayed.","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"     * Display the bot\u0027s dialog.","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"     * @param text Gets the bot\u0027s text.","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"     * @param img Gets the bot\u0027s image.","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"     * @return Returns a dialog box to be displayed.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"        db.flip();","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"        return db;","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":81}},{"path":"src/main/java/funbox/FunBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" * The FunBox class is used as the outer shell of FunBoxGear,","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":" * which contains the functionality of FunBox","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"public class FunBox  {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    private final Storage storage \u003d new Storage(ui, parser);","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    private final TaskList taskList \u003d storage.getTaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     * Get input from the user and return a Result.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    public Result getResponse(String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        String result;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            Command task \u003d parser.parseCommand(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"            result \u003d task.execute(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"            isExit \u003d task.isExit();","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        } catch (FunBoxExceptions | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        return new Result(result, isExit);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":40}},{"path":"src/main/java/funbox/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"public class Launcher {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":12}},{"path":"src/main/java/funbox/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.FunBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    private FunBox funBox \u003d new FunBox();","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * Display the GUI for the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param stage Use to build the GUI on.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFunBox(funBox);","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"            stage.show();","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":38}},{"path":"src/main/java/funbox/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    private FunBox funbox;","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    private Stage stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        String greeting \u003d ui.greetUser();","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        );","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    public void setFunBox(FunBox d) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        funbox \u003d d;","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        Result response \u003d funbox.getResponse(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"        if (!response.isExit()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"                    DialogBox.getDukeDialog(response.getResponse(), dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            );","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"                    DialogBox.getDukeDialog(response.getResponse(), dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"            );","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"            delay.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"            delay.play();","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":81}},{"path":"src/main/java/funbox/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"public class Result {","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"    private String response;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"    private boolean isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"     * The constructor for the result class.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     * @param response The response to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @param isExit Whether the command is an exit command.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    public Result(String response, boolean isExit) {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"        this.response \u003d response;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public String getResponse() {","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        return this.response;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * Check if the result should close the GUI.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * @return Returns true if the commAnd is to exit, otherwise, returns false.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":30}},{"path":"src/main/java/funbox/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" * Deal with handling command that user exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     * Constructor for ByeCommand Class.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        super(true);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * Execute the command and returns a goodbye message to users.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to users.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        return ui.printBye();","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":31}},{"path":"src/main/java/funbox/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" * This is the abstract class for Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    boolean isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * This is the constructor for command class.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param isExit Use for determining whether the command is a `Bye` command.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * Return a boolean value.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @return Return true if it is a `Bye` command, else return false.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * Returns a response to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions Returns exceptions related to FunBox.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"     * @throws IOException Returns exceptions related to input/output.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":44}},{"path":"src/main/java/funbox/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * The constructor for DeadlineCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public DeadlineCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * Execute the command which add Deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions Returns exceptions related to FunBox.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        String result;","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        assert storage !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`deadline` command usage: deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        String[] resultArr \u003d this.parser.getDescAndDate(this.description, \"deadline\");","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        if (resultArr.length \u003c 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`deadline` command usage: deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        LocalDate date \u003d parser.stringToLocalDate(resultArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        String time \u003d parser.getTime(resultArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"        Deadline deadline \u003d new Deadline(resultArr[0], date, time,\"deadline\");","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"        taskList.add(deadline);","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"        result \u003d ui.taskPrefix().concat(ui.printTask(taskList.getSize(), deadline));","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"        storage.writeTaskToStorage(deadline);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":65}},{"path":"src/main/java/funbox/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"    int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the tasks on the list to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * Execute the command to delete a task from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @throws IOException Throws if file do not exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        boolean isGreaterThanList \u003d (index - 1) \u003e taskList.getSize();","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        boolean isNegative \u003d (index - 1) \u003c 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        if (isGreaterThanList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index entered is larger than the list!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        if (isNegative) {","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index cannot be negative!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        result \u003d taskList.delete(this.index - 1, ui);","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        storage.deleteTask(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":52}},{"path":"src/main/java/funbox/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    private final String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * Constructor class for EventCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public EventCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * Execute the command which add Event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If description \u003d\u003d \"\"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        String result;","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        assert storage !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`event` command usage: event \u003ctask\u003e /at \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        String[] resultArr \u003d parser.getDescAndDate(description, \"event\");","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        if (resultArr.length \u003c 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`event` command usage: event \u003ctask\u003e /at \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        LocalDate date \u003d parser.stringToLocalDate(resultArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"        String time \u003d parser.getTime(resultArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"        Event event \u003d new Event(resultArr[0], date, time,\"event\");","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"        taskList.add(event);","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"        result \u003d ui.taskPrefix().concat(ui.printTask(taskList.getSize(), event));","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        storage.writeTaskToStorage(event);","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":66}},{"path":"src/main/java/funbox/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Filter.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for FilterCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param description The string used to filter the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public FilterCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * Execute the command to filter the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If date is not formatted in `yyyy-mm-dd`.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        return taskList.filterTasks(this.description, taskList, ui);","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":38}},{"path":"src/main/java/funbox/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * Execute the command to find a task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        return taskList.findTasks(this.description, ui, taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":27}},{"path":"src/main/java/funbox/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for List.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     * The constructor for ListCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * Execute the command to display tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        return taskList.printTasks(ui);","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":32}},{"path":"src/main/java/funbox/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Mark.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * The constructor for MarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param index The index of the task which should be marked as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * Execute the command to mark the tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        boolean isGreaterThanList \u003d (index - 1) \u003e taskList.getSize();","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        boolean isNegative \u003d (index - 1) \u003c 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        if (isGreaterThanList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index entered is larger than the list!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        if (isNegative) {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index cannot be negative!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        int currIndex \u003d index - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        taskList.setTaskDone(currIndex);","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        result \u003d ui.printMarkDone().concat(taskList.getTask(ui, currIndex));","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        storage.markTask(currIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":55}},{"path":"src/main/java/funbox/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for Mark.","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    private String description;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    private final String errorMessage \u003d \"`tag` command usage: tag \u003cindex\u003e \u003ctag\u003e\";","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * The constructor for TagCommand.","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task which contains the index and tag.","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    public TagCommand(String description) {","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    public static boolean isInteger(String str) {","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            return false;","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        int length \u003d str.length();","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        if (length \u003d\u003d 0) {","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            return false;","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        if (str.charAt(0) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            if (length \u003d\u003d 1) {","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"                return false;","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            i \u003d 1;","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        for (; i \u003c length; i++) {","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"            char c \u003d str.charAt(i);","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            if (c \u003c \u00270\u0027 || c \u003e \u00279\u0027) {","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"                return false;","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        return true;","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"     * Execute the command to mark the tasks in the list.","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        String[] resultsArr \u003d parser.formatCommands(description);","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"        if (resultsArr.length \u003c 2 || !(isInteger(resultsArr[0]))) {","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(errorMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        int index \u003d Integer.parseInt(resultsArr[0]);","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"        boolean isGreaterThanList \u003d (index - 1) \u003e taskList.getSize();","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"        boolean isNegative \u003d (index - 1) \u003c 0;","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        if (isGreaterThanList) {","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index entered is larger than the list!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"        if (isNegative) {","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index cannot be negative!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"        int currIndex \u003d index - 1;","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        String tag \u003d parser.concatFormat(resultsArr, 1);","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"        taskList.addTagToTask(currIndex, tag);","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"        storage.addTagToTask(currIndex, tag);","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"        return taskList.getTask(ui, currIndex);","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"junrong98":92}},{"path":"src/main/java/funbox/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for ToDo.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * Constructor class for ToDoCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * Execute the command which add ToDo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If description \u003d\u003d \"\"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        String result;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        assert storage !\u003d null : \"ui should not be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"`todo` command usage: todo \u003ctask\u003e\");","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        ToDo todo \u003d new ToDo(description, \"todo\");","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        taskList.add(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        result \u003d ui.taskPrefix().concat(ui.printTask(taskList.getSize(), todo));","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        storage.writeTaskToStorage(todo);","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":52}},{"path":"src/main/java/funbox/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" * Deal with handling command for UnmarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * The constructor for UnmarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param index The index of the task which should be marked as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        super(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * Execute the command to mark the tasks in the list as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @param storage Stores user tasks locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If (index - 1) \u003e taskList.getSize() or (index - 1) \u003c 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws FunBoxExceptions, IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        String result;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        boolean isGreaterThanList \u003d (index - 1) \u003e taskList.getSize();","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        boolean isNegative \u003d (index - 1) \u003c 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        if (isGreaterThanList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index entered is larger than the list!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        if (isNegative) {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"The index cannot be negative!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        int currIndex \u003d index - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        taskList.setTaskUndone(currIndex);","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        result \u003d ui.printMarkUndone() + \"\\n\" + taskList.getTask(ui, currIndex);","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        storage.unmarkTask(currIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":55}},{"path":"src/main/java/funbox/exception/FunBoxExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":" * FunBoxExceptions is exceptions used by FunBoxGear for error handling","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public class FunBoxExceptions extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * Constructor for FunBoxExceptions","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @param errorMessage The error message to be displayed","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    public FunBoxExceptions(String errorMessage) {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":16}},{"path":"src/main/java/funbox/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":" * The Deadline class which inherits from Task.","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"    public LocalDate date;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    public String time;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"     * The constructor for the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param date The date the task should be completed at.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param time The time the task should be complete at.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param type The type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public Deadline(String description, LocalDate date, String time, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        super(description, type);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"                + \" \" + time + \")\\nTags: \" + super.showTags();","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":38}},{"path":"src/main/java/funbox/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":" * The Event class which inherits from Task.","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    public LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public String time;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * The constructor for the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param date The date the task should be completed at.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @param time The time the task should be complete at.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @param type The type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    public Event(String description, LocalDate date, String time, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        super(description, type);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"                + \" \"  + time + \")\\nTags: \" + super.showTags();","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":39}},{"path":"src/main/java/funbox/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author junrong98-reused","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//Reused from https://nus-cs2103-ay2122s2.github.io/website/admin/ip-w2.html","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The task class represents the task user\u0027s wants to do","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String type;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public ArrayList\u003cString\u003e tags;","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructor for the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param type The type of task (Deadline, Event, Todo).","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.tags \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * The icon representing the current status of the task","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return Return \"X\" if status of task is completed else return \" \"","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Set the task to done","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the task to unfinished","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets task to done","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void presetDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows the current tags of the task.","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return Returns all tags of the task.","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String showTags() {","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        int lth \u003d tags.size();","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c lth; i++) {","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (i \u003d\u003d lth - 1) {","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                result \u003d result.concat(tags.get(i));","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                result \u003d result.concat(tags.get(i)).concat(\",\");","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return result \u003d\u003d \"\" ? \"No tags found!\" : result;","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Add tag to task.","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param tag The tags to be added to the task.","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        tags.add(\"#\".concat(tag));","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":2,"-":95}},{"path":"src/main/java/funbox/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":" * The ToDo class which inherits from Task.","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * The constructor for ToDo class","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @param description The task sent by the users","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     * @param type The type of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    public ToDo(String description, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        super(description, type);","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * Return a string representation.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @return Return a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        return \"[T]\" + super.toString() + \"\\nTags: \" + super.showTags();","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":27}},{"path":"src/main/java/funbox/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import funbox.command.*;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import javax.swing.text.html.HTML;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":" * Deal with parsing and making sense of the user commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    private final String dateFormat \u003d \"[dd/MM/yyyy][d/MM/yyyy][dd/M/yyyy][d/MM/yyyy]\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"            \"[dd-MM-yyyy][d-MM-yyyy][dd-M-yyyy][d-MM-yyyy][yyyy-MM-dd]\";","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * Parses the user text commands to a Command object.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * @return Return a command object to be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If command is not available/exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public Command parseCommand(String command) throws FunBoxExceptions {","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        String[] parsedCommand \u003d command.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        String commandType \u003d parsedCommand[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        String description \u003d parsedCommand.length \u003e 1","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"                ? this.concatFormat(parsedCommand, 1) : \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        switch (commandType) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"            return new ToDoCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"            return new EventCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"            return new DeadlineCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            return new DeleteCommand(Integer.parseInt(description));","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"            return new MarkCommand(Integer.parseInt(description));","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            return new UnmarkCommand(Integer.parseInt(description));","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        case \"filter\":","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"            return new FilterCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"        case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"            return new FindCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        case \"tag\":","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"            return new TagCommand(description);","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        default:","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! I do not know what the commands means :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     * Concatenates the strings in the array to a single string.","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     * @param parsedCommand The array containing the strings to be concatenated.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"     * @param startingIndex The point which the concatenation should begin.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"     * @return Return a concatenated string.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"    public String concatFormat(String[] parsedCommand, int startingIndex) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"        int arrayLength \u003d parsedCommand.length;","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"        int lastIndex \u003d arrayLength - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        for (int i \u003d startingIndex; i \u003c arrayLength; i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"            if (i \u003d\u003d lastIndex) {","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"                result \u003d result.concat(parsedCommand[i]);","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"            result \u003d result.concat(parsedCommand[i] + \" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"     * Gets the description and date from a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"     * @param message The message to be parsed to retrieve the description and date.","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"     * @param type The type of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string array where the first item is the description","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"     *         and the second item contains the date.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    public String[] getDescAndDate(String message, String type) {","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"        if (type.equals(\"event\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"            return message.split(\" /at \");","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"        return message.split(\" /by \");","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     * Formats the user\u0027s message to be able to differentiate between special commands","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"     * @param message The user\u0027s message to be formatted","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"     * @return Return a String array which contains the split message. The first element is used to differentiate","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"     * whether it\u0027s a message, command, or command which require special formatting","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"    public String[] formatCommands(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"        return message.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"     * Converts string consisting of a date and time to LocalDate object","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"     * @param dateTime The date and time which the task should be completed by","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"     * @return Returns a LocalDate object","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If the length of dateTimeArr !\u003d 2","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"    public LocalDate stringToLocalDate(String dateTime) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"        String[] dateTimeArr \u003d this.formatCommands(dateTime);","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"        LocalDate result;","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"        if (dateTimeArr.length \u003c 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! Please ensure date and time\"","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"                    + \" follows the following format: \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"        result \u003d LocalDate.parse(dateTimeArr[0], DateTimeFormatter.ofPattern(dateFormat));","lastModifiedDate":"2022-02-10"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"     * Gets the time from a string consisting of a date and time","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"     * @param dateTime The date and time which the task should be completed by","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"     * @return Returns a time","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If the length of dateTimeArr !\u003d 2","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"    public String getTime(String dateTime) throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"        String[] dateTimeArr \u003d formatCommands(dateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"        if (dateTimeArr.length !\u003d 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! Please ensure date and time\"","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"                    + \" is in this format: yyyy-mm-dd time\");","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"        return dateTimeArr[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":146}},{"path":"src/main/java/funbox/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import funbox.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"import funbox.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":" * Deal with writing and reading user commands locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private final String DIR_URL \u003d \"data/\";","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    private final String FILE_URL \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    private final String DELIMITER \u003d \",\";","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    private final HashMap\u003cString, String\u003e typeHashmap;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * The constructor for the storage class.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * @param parser Parses user commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    public Storage(Ui ui, Parser parser) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        setUpHashMap();","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        createDirectory();","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        createFile();","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        setTaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"     * Sets up the hashmap","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    private void setUpHashMap() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap.put(\"D\", \"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap.put(\"T\", \"todo\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        this.typeHashmap.put(\"E\", \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     * Creates a new directory if the specified directory do not exist.","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"    private void createDirectory() {","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        if (!doesDirectoryExist()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"            new File(DIR_URL).mkdir();","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"     * Set the task list by reading the file.","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"    public void setTaskList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"            this.taskList \u003d readFile();","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"        } catch (FunBoxExceptions | IOException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"     * Creates a new file if the specified file does not exist.","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    private void createFile() {","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"        if (!doesFileExist()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"                new File(FILE_URL).createNewFile();","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"     * Creates a new file if the specified file does not exist.","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"    private void createTempFile(String url) {","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"            new File(url).createNewFile();","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"     * Checks if directory \u0027data\u0027 exists in \u0027ip\u0027 folder","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"     * @return Return true if directory exist, otherwise, false","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"    private boolean doesDirectoryExist() {","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"        return new File(this.DIR_URL).isDirectory();","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"     * Checks if file tasks.txt exist in \u0027data\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"     * @return Return true if file exist, otherwise, false","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"    private boolean doesFileExist() {","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"        return Files.exists(Paths.get(this.FILE_URL));","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"     * Returns the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"     * @return Return the task list to the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"     * Reads the existing file, if there are existing tasks in the file, add to the current list","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"     * @throws FileNotFoundException If file is not found in the given URL","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"     * @throws IOException           If an I/O error occur","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"    public TaskList readFile() throws IOException, FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILE_URL);","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"        FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"            String task \u003d br.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"junrong98"},"content":"            String[] taskSplit \u003d task.split(DELIMITER);","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"junrong98"},"content":"            String type \u003d typeHashmap.get(taskSplit[0]);","lastModifiedDate":"2022-02-09"},{"lineNumber":152,"author":{"gitId":"junrong98"},"content":"            String description \u003d taskSplit[2];","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"junrong98"},"content":"            boolean isDone \u003d isTaskDone(taskSplit[1]);","lastModifiedDate":"2022-02-10"},{"lineNumber":154,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"junrong98"},"content":"            switch (type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"junrong98"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"junrong98"},"content":"                ToDo todo \u003d new ToDo(description, type);","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":159,"author":{"gitId":"junrong98"},"content":"                if (isTask(3, taskSplit)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"junrong98"},"content":"                    addTagsToTask(3, taskSplit, todo);","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-02-14"},{"lineNumber":162,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"junrong98"},"content":"                taskList.add(todo);","lastModifiedDate":"2022-02-14"},{"lineNumber":164,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"junrong98"},"content":"            case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"junrong98"},"content":"                LocalDate eventDate \u003d parser.stringToLocalDate(taskSplit[3]);","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"                String eventTime \u003d parser.getTime(taskSplit[3]);","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"junrong98"},"content":"                Event event \u003d new Event(description, eventDate, eventTime, type);","lastModifiedDate":"2022-02-14"},{"lineNumber":169,"author":{"gitId":"junrong98"},"content":"                if (isTask(4, taskSplit)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"                    addTagsToTask(4, taskSplit, event);","lastModifiedDate":"2022-02-14"},{"lineNumber":171,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-02-14"},{"lineNumber":172,"author":{"gitId":"junrong98"},"content":"                taskList.add(event);","lastModifiedDate":"2022-02-14"},{"lineNumber":173,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"junrong98"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"junrong98"},"content":"                LocalDate deadlineDate \u003d parser.stringToLocalDate(taskSplit[3]);","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"junrong98"},"content":"                String deadlineTime \u003d parser.getTime(taskSplit[3]);","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"                Deadline deadline \u003d new Deadline(description, deadlineDate, deadlineTime, type);","lastModifiedDate":"2022-02-14"},{"lineNumber":178,"author":{"gitId":"junrong98"},"content":"                if (isTask(4, taskSplit)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":"                    addTagsToTask(4, taskSplit, deadline);","lastModifiedDate":"2022-02-14"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-02-14"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"                taskList.add(new Deadline(description, deadlineDate, deadlineTime, type));","lastModifiedDate":"2022-02-09"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":183,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"junrong98"},"content":"            if (isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"junrong98"},"content":"                taskList.setPreTaskDone(counter);","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":188,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":189,"author":{"gitId":"junrong98"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"junrong98"},"content":"    private boolean isTask(int index, String[] arr) {","lastModifiedDate":"2022-02-14"},{"lineNumber":193,"author":{"gitId":"junrong98"},"content":"        return index \u003c\u003d (arr.length - 1);","lastModifiedDate":"2022-02-14"},{"lineNumber":194,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":195,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":196,"author":{"gitId":"junrong98"},"content":"    private void addTagsToTask(int index, String[] tags, Task task) {","lastModifiedDate":"2022-02-14"},{"lineNumber":197,"author":{"gitId":"junrong98"},"content":"        for (int i \u003d index; i \u003c tags.length; i++) {","lastModifiedDate":"2022-02-14"},{"lineNumber":198,"author":{"gitId":"junrong98"},"content":"            task.addTag(tags[i]);","lastModifiedDate":"2022-02-14"},{"lineNumber":199,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":200,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":201,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":202,"author":{"gitId":"junrong98"},"content":"    private boolean isTaskDone(String x) {","lastModifiedDate":"2022-02-09"},{"lineNumber":203,"author":{"gitId":"junrong98"},"content":"        int temp \u003d Integer.parseInt(x);","lastModifiedDate":"2022-02-09"},{"lineNumber":204,"author":{"gitId":"junrong98"},"content":"        return temp !\u003d 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":205,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":206,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":207,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"junrong98"},"content":"     * The task to be deleted from the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task in the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"junrong98"},"content":"     * @throws IOException If file does not exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":213,"author":{"gitId":"junrong98"},"content":"    public void deleteTask(int index) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":214,"author":{"gitId":"junrong98"},"content":"        assert index \u003e\u003d 0 : \"index should be greater or equal to 0\";","lastModifiedDate":"2022-02-07"},{"lineNumber":215,"author":{"gitId":"junrong98"},"content":"        String tempFileUrl \u003d \"data/temp.txt\";","lastModifiedDate":"2022-02-09"},{"lineNumber":216,"author":{"gitId":"junrong98"},"content":"        createTempFile(tempFileUrl);","lastModifiedDate":"2022-02-09"},{"lineNumber":217,"author":{"gitId":"junrong98"},"content":"        File tempFile \u003d new File(tempFileUrl);","lastModifiedDate":"2022-02-09"},{"lineNumber":218,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILE_URL);","lastModifiedDate":"2022-01-30"},{"lineNumber":219,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":220,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"junrong98"},"content":"        FileWriter fw \u003d new FileWriter(tempFileUrl, true);","lastModifiedDate":"2022-02-09"},{"lineNumber":222,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":223,"author":{"gitId":"junrong98"},"content":"        String task;","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":225,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":226,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"junrong98"},"content":"            task \u003d br.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":228,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"junrong98"},"content":"                fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":231,"author":{"gitId":"junrong98"},"content":"                File temp \u003d file;","lastModifiedDate":"2022-02-09"},{"lineNumber":232,"author":{"gitId":"junrong98"},"content":"                file.delete();","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"junrong98"},"content":"                tempFile.renameTo(temp);","lastModifiedDate":"2022-02-09"},{"lineNumber":234,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":235,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":236,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":237,"author":{"gitId":"junrong98"},"content":"            if (counter !\u003d index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":238,"author":{"gitId":"junrong98"},"content":"                fw.write(task + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":240,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":241,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":242,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":243,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":244,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":245,"author":{"gitId":"junrong98"},"content":"     * The task to be mark from the file.","lastModifiedDate":"2022-02-10"},{"lineNumber":246,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":247,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task in the file.","lastModifiedDate":"2022-02-10"},{"lineNumber":248,"author":{"gitId":"junrong98"},"content":"     * @throws IOException If file does not exist.","lastModifiedDate":"2022-02-10"},{"lineNumber":249,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":250,"author":{"gitId":"junrong98"},"content":"    public void markTask(int index) throws IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":251,"author":{"gitId":"junrong98"},"content":"        assert index \u003e\u003d 0 : \"index should be greater or equal to 0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":252,"author":{"gitId":"junrong98"},"content":"        String tempFileUrl \u003d \"data/temp.txt\";","lastModifiedDate":"2022-02-10"},{"lineNumber":253,"author":{"gitId":"junrong98"},"content":"        createTempFile(tempFileUrl);","lastModifiedDate":"2022-02-10"},{"lineNumber":254,"author":{"gitId":"junrong98"},"content":"        File tempFile \u003d new File(tempFileUrl);","lastModifiedDate":"2022-02-10"},{"lineNumber":255,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILE_URL);","lastModifiedDate":"2022-02-10"},{"lineNumber":256,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":257,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-02-10"},{"lineNumber":258,"author":{"gitId":"junrong98"},"content":"        FileWriter fw \u003d new FileWriter(tempFileUrl, true);","lastModifiedDate":"2022-02-10"},{"lineNumber":259,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":260,"author":{"gitId":"junrong98"},"content":"        String task;","lastModifiedDate":"2022-02-10"},{"lineNumber":261,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":262,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":263,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-02-10"},{"lineNumber":264,"author":{"gitId":"junrong98"},"content":"            task \u003d br.readLine();","lastModifiedDate":"2022-02-10"},{"lineNumber":265,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-02-10"},{"lineNumber":266,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":267,"author":{"gitId":"junrong98"},"content":"                fw.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":268,"author":{"gitId":"junrong98"},"content":"                File temp \u003d file;","lastModifiedDate":"2022-02-10"},{"lineNumber":269,"author":{"gitId":"junrong98"},"content":"                file.delete();","lastModifiedDate":"2022-02-10"},{"lineNumber":270,"author":{"gitId":"junrong98"},"content":"                tempFile.renameTo(temp);","lastModifiedDate":"2022-02-10"},{"lineNumber":271,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":272,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":273,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":274,"author":{"gitId":"junrong98"},"content":"            if (counter !\u003d index) {","lastModifiedDate":"2022-02-10"},{"lineNumber":275,"author":{"gitId":"junrong98"},"content":"                fw.write(task + \"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":276,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":277,"author":{"gitId":"junrong98"},"content":"                String[] temp \u003d task.split(\",\");","lastModifiedDate":"2022-02-10"},{"lineNumber":278,"author":{"gitId":"junrong98"},"content":"                temp[1] \u003d \"1\";","lastModifiedDate":"2022-02-10"},{"lineNumber":279,"author":{"gitId":"junrong98"},"content":"                String result \u003d String.join(\",\", temp);","lastModifiedDate":"2022-02-10"},{"lineNumber":280,"author":{"gitId":"junrong98"},"content":"                fw.write(result + \"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":281,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":282,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":283,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-02-10"},{"lineNumber":284,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":285,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":286,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":287,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":288,"author":{"gitId":"junrong98"},"content":"     * The task to be unmark from the file.","lastModifiedDate":"2022-02-10"},{"lineNumber":289,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":290,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task in the file.","lastModifiedDate":"2022-02-10"},{"lineNumber":291,"author":{"gitId":"junrong98"},"content":"     * @throws IOException If file does not exist.","lastModifiedDate":"2022-02-10"},{"lineNumber":292,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":293,"author":{"gitId":"junrong98"},"content":"    public void unmarkTask(int index) throws IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":294,"author":{"gitId":"junrong98"},"content":"        assert index \u003e\u003d 0 : \"index should be greater or equal to 0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":295,"author":{"gitId":"junrong98"},"content":"        String tempFileUrl \u003d \"data/temp.txt\";","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"junrong98"},"content":"        createTempFile(tempFileUrl);","lastModifiedDate":"2022-02-10"},{"lineNumber":297,"author":{"gitId":"junrong98"},"content":"        File tempFile \u003d new File(tempFileUrl);","lastModifiedDate":"2022-02-10"},{"lineNumber":298,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILE_URL);","lastModifiedDate":"2022-02-10"},{"lineNumber":299,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":300,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-02-10"},{"lineNumber":301,"author":{"gitId":"junrong98"},"content":"        FileWriter fw \u003d new FileWriter(tempFileUrl, true);","lastModifiedDate":"2022-02-10"},{"lineNumber":302,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":303,"author":{"gitId":"junrong98"},"content":"        String task;","lastModifiedDate":"2022-02-10"},{"lineNumber":304,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":305,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":306,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-02-10"},{"lineNumber":307,"author":{"gitId":"junrong98"},"content":"            task \u003d br.readLine();","lastModifiedDate":"2022-02-10"},{"lineNumber":308,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-02-10"},{"lineNumber":309,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":310,"author":{"gitId":"junrong98"},"content":"                fw.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":311,"author":{"gitId":"junrong98"},"content":"                File temp \u003d file;","lastModifiedDate":"2022-02-10"},{"lineNumber":312,"author":{"gitId":"junrong98"},"content":"                file.delete();","lastModifiedDate":"2022-02-10"},{"lineNumber":313,"author":{"gitId":"junrong98"},"content":"                tempFile.renameTo(temp);","lastModifiedDate":"2022-02-10"},{"lineNumber":314,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":315,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":316,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":317,"author":{"gitId":"junrong98"},"content":"            if (counter !\u003d index) {","lastModifiedDate":"2022-02-10"},{"lineNumber":318,"author":{"gitId":"junrong98"},"content":"                fw.write(task + \"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":319,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":320,"author":{"gitId":"junrong98"},"content":"                String[] temp \u003d task.split(\",\");","lastModifiedDate":"2022-02-10"},{"lineNumber":321,"author":{"gitId":"junrong98"},"content":"                temp[1] \u003d \"0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":322,"author":{"gitId":"junrong98"},"content":"                String result \u003d String.join(\",\", temp);","lastModifiedDate":"2022-02-10"},{"lineNumber":323,"author":{"gitId":"junrong98"},"content":"                fw.write(result + \"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":324,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":325,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":326,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-02-10"},{"lineNumber":327,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":328,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":329,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":330,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":331,"author":{"gitId":"junrong98"},"content":"     * Writes task into storage","lastModifiedDate":"2022-01-26"},{"lineNumber":332,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":333,"author":{"gitId":"junrong98"},"content":"     * @param task The task user inputted","lastModifiedDate":"2022-01-26"},{"lineNumber":334,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":335,"author":{"gitId":"junrong98"},"content":"    public void writeTaskToStorage(Task task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":336,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":337,"author":{"gitId":"junrong98"},"content":"            String prefix;","lastModifiedDate":"2022-02-09"},{"lineNumber":338,"author":{"gitId":"junrong98"},"content":"            String finalResult \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":339,"author":{"gitId":"junrong98"},"content":"            assert task.type !\u003d null : \"The type of task is not suppose to be null\";","lastModifiedDate":"2022-02-07"},{"lineNumber":340,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":341,"author":{"gitId":"junrong98"},"content":"            switch (task.type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":342,"author":{"gitId":"junrong98"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":343,"author":{"gitId":"junrong98"},"content":"                prefix \u003d \"T,0\";","lastModifiedDate":"2022-02-09"},{"lineNumber":344,"author":{"gitId":"junrong98"},"content":"                finalResult \u003d parseTask(prefix, task.description);","lastModifiedDate":"2022-02-09"},{"lineNumber":345,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":346,"author":{"gitId":"junrong98"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":347,"author":{"gitId":"junrong98"},"content":"                prefix \u003d \"D,0\";","lastModifiedDate":"2022-02-09"},{"lineNumber":348,"author":{"gitId":"junrong98"},"content":"                Deadline deadlineTemp \u003d (Deadline) task;","lastModifiedDate":"2022-02-09"},{"lineNumber":349,"author":{"gitId":"junrong98"},"content":"                finalResult \u003d parseTask(prefix, task.description,","lastModifiedDate":"2022-02-09"},{"lineNumber":350,"author":{"gitId":"junrong98"},"content":"                        deadlineTemp.time, deadlineTemp.date.toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":351,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":352,"author":{"gitId":"junrong98"},"content":"            case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":353,"author":{"gitId":"junrong98"},"content":"                prefix \u003d \"E,0\";","lastModifiedDate":"2022-02-09"},{"lineNumber":354,"author":{"gitId":"junrong98"},"content":"                Event eventTemp \u003d (Event) task;","lastModifiedDate":"2022-02-09"},{"lineNumber":355,"author":{"gitId":"junrong98"},"content":"                finalResult \u003d parseTask(prefix, task.description,","lastModifiedDate":"2022-02-09"},{"lineNumber":356,"author":{"gitId":"junrong98"},"content":"                        eventTemp.time, eventTemp.date.toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":357,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":358,"author":{"gitId":"junrong98"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":359,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":360,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":361,"author":{"gitId":"junrong98"},"content":"            FileWriter fw \u003d new FileWriter(this.FILE_URL, true);","lastModifiedDate":"2022-01-30"},{"lineNumber":362,"author":{"gitId":"junrong98"},"content":"            fw.write(finalResult + \"\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":363,"author":{"gitId":"junrong98"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":364,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":365,"author":{"gitId":"junrong98"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":366,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":367,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":368,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":369,"author":{"gitId":"junrong98"},"content":"    public void addTagToTask(int index, String tag) throws IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":370,"author":{"gitId":"junrong98"},"content":"        String tempFileUrl \u003d \"data/temp.txt\";","lastModifiedDate":"2022-02-14"},{"lineNumber":371,"author":{"gitId":"junrong98"},"content":"        createTempFile(tempFileUrl);","lastModifiedDate":"2022-02-14"},{"lineNumber":372,"author":{"gitId":"junrong98"},"content":"        File tempFile \u003d new File(tempFileUrl);","lastModifiedDate":"2022-02-14"},{"lineNumber":373,"author":{"gitId":"junrong98"},"content":"        File file \u003d new File(this.FILE_URL);","lastModifiedDate":"2022-02-14"},{"lineNumber":374,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":375,"author":{"gitId":"junrong98"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-02-14"},{"lineNumber":376,"author":{"gitId":"junrong98"},"content":"        FileWriter fw \u003d new FileWriter(tempFileUrl, true);","lastModifiedDate":"2022-02-14"},{"lineNumber":377,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":378,"author":{"gitId":"junrong98"},"content":"        String task;","lastModifiedDate":"2022-02-14"},{"lineNumber":379,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-14"},{"lineNumber":380,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":381,"author":{"gitId":"junrong98"},"content":"        while (true) {","lastModifiedDate":"2022-02-14"},{"lineNumber":382,"author":{"gitId":"junrong98"},"content":"            task \u003d br.readLine();","lastModifiedDate":"2022-02-14"},{"lineNumber":383,"author":{"gitId":"junrong98"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-02-14"},{"lineNumber":384,"author":{"gitId":"junrong98"},"content":"                br.close();","lastModifiedDate":"2022-02-14"},{"lineNumber":385,"author":{"gitId":"junrong98"},"content":"                fw.close();","lastModifiedDate":"2022-02-14"},{"lineNumber":386,"author":{"gitId":"junrong98"},"content":"                File temp \u003d file;","lastModifiedDate":"2022-02-14"},{"lineNumber":387,"author":{"gitId":"junrong98"},"content":"                file.delete();","lastModifiedDate":"2022-02-14"},{"lineNumber":388,"author":{"gitId":"junrong98"},"content":"                tempFile.renameTo(temp);","lastModifiedDate":"2022-02-14"},{"lineNumber":389,"author":{"gitId":"junrong98"},"content":"                break;","lastModifiedDate":"2022-02-14"},{"lineNumber":390,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":391,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":392,"author":{"gitId":"junrong98"},"content":"            if (counter !\u003d index) {","lastModifiedDate":"2022-02-14"},{"lineNumber":393,"author":{"gitId":"junrong98"},"content":"                fw.write(task + \"\\n\");","lastModifiedDate":"2022-02-14"},{"lineNumber":394,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":395,"author":{"gitId":"junrong98"},"content":"                task \u003d task.concat(DELIMITER).concat(tag);","lastModifiedDate":"2022-02-14"},{"lineNumber":396,"author":{"gitId":"junrong98"},"content":"                fw.write(task + \"\\n\");","lastModifiedDate":"2022-02-14"},{"lineNumber":397,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":398,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":399,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-02-14"},{"lineNumber":400,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":401,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":402,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":403,"author":{"gitId":"junrong98"},"content":"    private String parseTask(String prefix, String task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":404,"author":{"gitId":"junrong98"},"content":"        return prefix.concat(DELIMITER).concat(task);","lastModifiedDate":"2022-02-14"},{"lineNumber":405,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":406,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":407,"author":{"gitId":"junrong98"},"content":"    private String parseTask(String prefix, String task, String time, String date) {","lastModifiedDate":"2022-02-09"},{"lineNumber":408,"author":{"gitId":"junrong98"},"content":"        return prefix.concat(DELIMITER).concat(task).concat(DELIMITER).concat(date).concat(\" \").concat(time);","lastModifiedDate":"2022-02-09"},{"lineNumber":409,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":410,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":411,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":411}},{"path":"src/main/java/funbox/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import funbox.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * Deletes an item on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     * @param index The item to be deleted from the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    public String delete(int index, Ui ui) {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        Task temp \u003d taskList.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        String result \u003d ui.printNotice() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"        result +\u003d ui.printDeletedTask(temp) + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        result +\u003d ui.printRemainingTasks(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"     * Sets the task as done on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    public void setTaskDone(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).setDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"     * Sets the task as done on the list during startup.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"    public void setPreTaskDone(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).presetDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"     * Add tags to the task on the list.","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"     * @param index The index of the task on the list.","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"     * @param tag The tag to be added to the task.","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"    public void addTagToTask(int index, String tag) {","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).addTag(tag);","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"     * Gets the task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    public String getTask(Ui ui, int index) {","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"        return ui.printTask(index + 1, this.taskList.get(index));","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"     * Prints the task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    public String printTasks(Ui ui) {","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"            result \u003d ui.emptyList();","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"            result \u003d ui.printListHeader() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"                result +\u003d ui.printTask(i + 1, this.taskList.get(i)) + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"     * Sets the task as not done.","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"     * @param index The position of the task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"    public void setTaskUndone(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"        this.taskList.get(index).setUndone();","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"     * Gets the size of the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"     * @return Returns the size of the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"        return taskList.size();","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"     * @return Returns a tasks of list.","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"     * Filter the list based on the date provided by the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"     * @param filterDate The date used to filter the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"     * @param taskList The list containing the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"     * @throws FunBoxExceptions If date is not formatted in `yyyy-mm-dd`.","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"    public String filterTasks(String filterDate, TaskList taskList, Ui ui) throws FunBoxExceptions {","lastModifiedDate":"2022-01-31"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"        LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"            date \u003d LocalDate.parse(filterDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":"            ArrayList\u003cTask\u003e eventList \u003d new ArrayList\u003c\u003e(taskList.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"junrong98"},"content":"            ArrayList\u003cTask\u003e deadlineList \u003d new ArrayList\u003c\u003e(taskList.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"junrong98"},"content":"            filterTaskList(eventList,\"deadline\");","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"junrong98"},"content":"            filterTaskList(deadlineList, \"event\");","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"junrong98"},"content":"            int counter \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"junrong98"},"content":"            int eventSize \u003d eventList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"junrong98"},"content":"            int deadlineSize \u003d deadlineList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"junrong98"},"content":"            for (int i \u003d 0; i \u003c eventSize; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"junrong98"},"content":"                Event temp \u003d (Event) eventList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"junrong98"},"content":"                if (temp.date.equals(date)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"junrong98"},"content":"                    counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"junrong98"},"content":"                    result +\u003d ui.printTask(counter, temp);","lastModifiedDate":"2022-02-09"},{"lineNumber":162,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"junrong98"},"content":"            for (int i \u003d 0; i \u003c deadlineSize; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"junrong98"},"content":"                Deadline temp \u003d (Deadline) deadlineList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"                if (temp.time.equals(date)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"junrong98"},"content":"                    counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"junrong98"},"content":"                    result +\u003d ui.printTask(counter, temp);","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"junrong98"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"junrong98"},"content":"                result \u003d ui.printNoTaskFound();","lastModifiedDate":"2022-01-31"},{"lineNumber":175,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"junrong98"},"content":"            throw new FunBoxExceptions(\"ERROR! Please ensure date is in the correct format: yyyy-mm-dd\");","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"junrong98"},"content":"    private void filterTaskList(ArrayList\u003cTask\u003e tasks, String filter) {","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"junrong98"},"content":"        tasks.removeIf(task -\u003e (task.type.contains(\"todo\") || task.type.contains(filter)));","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":189,"author":{"gitId":"junrong98"},"content":"     * Finds a filtered task on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":190,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":191,"author":{"gitId":"junrong98"},"content":"     * @param filter The filter used to filter the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":192,"author":{"gitId":"junrong98"},"content":"     * @param ui Interface which interact with users.","lastModifiedDate":"2022-01-31"},{"lineNumber":193,"author":{"gitId":"junrong98"},"content":"     * @param taskList The tasklist use for filtering.","lastModifiedDate":"2022-01-31"},{"lineNumber":194,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string to be displayed to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":195,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"junrong98"},"content":"    public String findTasks(String filter, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":197,"author":{"gitId":"junrong98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":198,"author":{"gitId":"junrong98"},"content":"        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e(taskList.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"junrong98"},"content":"        String filterLowerCase \u003d filter.toLowerCase();","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"junrong98"},"content":"        tempTaskList.removeIf(task -\u003e !task.description.toLowerCase().contains(filterLowerCase));","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"junrong98"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"junrong98"},"content":"        for (Task task : tempTaskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"junrong98"},"content":"            result +\u003d ui.printTask(counter, task) + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":205,"author":{"gitId":"junrong98"},"content":"            counter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"junrong98"},"content":"        return result;","lastModifiedDate":"2022-01-31"},{"lineNumber":208,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":209}},{"path":"src/main/java/funbox/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package funbox.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"     * Returns a string which greets the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string which greets the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public String greetUser() {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"        return \"Yo! I am FunBox [0 _ 0] \\nWhat can I do for you?\";","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * Returns a string when list function is called.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     * @return Returns a string when list function is called.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public String printListHeader() {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        return \"Here are the tasks in your list:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * Returns a bye message when bye function is called.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     * @return Returns a bye message when bye function is called.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    public String printBye() {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        return \"B-b-bbye. Hope to see you again soon [0 n 0]\";","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * Returns a success message when directory is found.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @return Returns a success message when directory is found.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    public String printDirSuccess() {","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        return \"Directory \u0027data\u0027 has been created for you!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"     * Returns a message when directory already exist.","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"     * @return Returns a message when directory already exist.","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    public String printDirAlreadyExist() {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"       return \"Directory already exists!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"     * Returns a message of an item on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"     * @param index The position which the item is listed on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"     * @return Returns a message of an item on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"    public String printTask(int index, Task task) {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"       return index + \".\" + task + \"\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"     * Returns an error message.","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"     * @param errorMessage The error message to be returned.","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"     * @return Returns an error message.","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"       return errorMessage;","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"     * Returns a header message when a task is being removed.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"     * @return Returns a header message when a task is being removed.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"    public String printNotice() {","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"       return \"Noted! I\u0027ve removed this task:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"     * Returns a message displaying the remaining items on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"     * @param taskList The tasklist containing the remaining tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"     * @return Returns a message displaying the remaining items on the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    public String printRemainingTasks(TaskList taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"       return \"Now you have \" + taskList.getSize() + \" tasks in the list\";","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"     * Returns a message when no task is found.","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"     * @return Returns a message when no task is found.s","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"    public String printNoTaskFound() {","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"        return \"No tasks found on this date! You are free!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"     * Returns a header message when a task is marked as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"     * @return Returns a header message when a task is marked as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"    public String printMarkDone() {","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"     * Returns a header message when a task is marked as undone.","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"     * @return Returns a header message when a task is marked as undone.","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"    public String printMarkUndone() {","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"     * Returns a header message when there is no task on the tasklist.","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"     * @return Returns a header message when there is no task on the tasklist.","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"    public String emptyList() {","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"       return \"You have no tasks at the moment!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"     * Returns a message of the deleted task.","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"     * ","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"     * @param task The deleted task.","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"     * @return Returns a message of the deleted task.","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"    public String printDeletedTask(Task task) {","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"       return task.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"     * Returns a prefix message when a task has been added to the list.","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"     * @return Returns a prefix message of the added task.","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"    public String taskPrefix() {","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"        return \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":146}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" graphicTextGap\u003d\"2.0\" text\u003d\"Label\" textOverrun\u003d\"WORD_ELLIPSIS\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"            \u003cFont size\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"funbox.MainWindow\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"junrong98":19}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.command.ToDoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class EventCommandTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public void execute_createTodo_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        Task testResult \u003d taskListStub.getTaskList().get(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        assertEquals(testResult.toString(),","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"                new ToDo(\"Hello World\", \"todo\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public void execute_whenFunBoxExceptionThrow_wrongInput() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        assertThrows(FunBoxExceptions.class, () -\u003e {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        });","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    public void isExit_isFalse_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        assertEquals(toDoCommand.isExit(), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":48}},{"path":"src/test/java/command/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import funbox.exception.FunBoxExceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import funbox.util.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import funbox.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import funbox.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import funbox.command.ToDoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import funbox.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import funbox.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import funbox.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public void execute_createTodo_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"        toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        Task testResult \u003d taskListStub.getTaskList().get(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        assertEquals(testResult.toString(),","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"                new ToDo(\"Hello World\", \"todo\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    public void execute_whenFunBoxExceptionThrow_wrongInput() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        Ui uiStub \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        TaskList taskListStub \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        Parser parserStub \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        Storage storageStub \u003d new Storage(uiStub, parserStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        assertThrows(FunBoxExceptions.class, () -\u003e {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            toDoCommand.execute(taskListStub, uiStub, storageStub);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        });","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    public void isExit_isFalse_correctInput() throws FunBoxExceptions {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(\"Hello World\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        assertEquals(toDoCommand.isExit(), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junrong98":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"junrong98":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"java -classpath ..\\bin FunBox \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"junrong98":1}}]
