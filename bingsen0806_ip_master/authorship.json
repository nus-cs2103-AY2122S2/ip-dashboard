[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"# duke.main.Duke project template","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bingsen0806":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"bingsen0806":16}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"D | 0 | return book | HIGH | 2022/01/26 0200","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"E | 0 | project meeting | HIGH | 2022/01/26 0200","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"E | 1 | cs2010 lect | MEDIUM | 2022/01/24 0800","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"T | 0 | read book | MEDIUM","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"T | 0 | testAdd | MEDIUM","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"T | 0 | test | LOW","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"bingsen0806":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"Charizard is a **desktop app for managing tasks** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you are a _Pokemon Fan_ who is keen on letting _Charizard_ burn away your tasks for you, ***this is the app*** for you!","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"\u003cimg src \u003d \"Ui.png.PNG\" width \u003d \"350\" alt\u003d\"Oops, unable to load image!\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"## Table of Contents","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"- [Summary of feature commands](#summary-of-feature-commands)","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"- [Usages](#usage)","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"    - [Add a task](#adding-a-task--todo-deadline-and-event)","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    - [Delete a task](#deleting-a-task--delete)","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    - [Find a task](#finding-a-task--find)","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    - [List all tasks](#listing-all-tasks--list)","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    - [Mark or unmark a task](#marking-and-unmarking-a-task--mark-and-unmark)","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    - [Sort tasks based on priority](#sorting-tasks-based-on-priority--sort)","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    - [Change priority of a task](#change-priority-of-a-task--priority)","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    - [Exit and save data](#exiting-and-saving--bye)","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"## Summary of feature commands","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"If you would to have a quick summary of feature usage without diving into the detailed usages, the table below serves as a quick guide.","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"| Action              | Format, Examples                                                                                                            |","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"|---------------------|-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"| **Add Todo**        | `todo \u003cname of todo\u003e [/p PRIORITY]` \u003cbr\u003e e.g., `todo Apply for internship`                                                  |","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"| **Add Deadline**    | `deadline \u003cname of deadline\u003e /by \u003cdate\u003e [/p PRIORITY]` \u003cbr\u003e e.g., `deadline CS3243 Project 1 /by 2022/02/18 2359 /p medium` |","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"| **Add Event**       | `event \u003cname of event\u003e /at \u003cdate\u003e [/p PRIORITY]` \u003cbr\u003e e.g., `event CS2103T Meeting /at 2022/02/15 2100 /p low`              |","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"| **Delete**          | `delete INDEX`\u003cbr\u003e e.g., `delete 1 `                                                                                        |","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"| **Mark**            | `mark INDEX`\u003cbr\u003e e.g., `mark 1`                                                                                             |","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"| **Unmark**          | `unmark INDEX`\u003cbr\u003e e.g., `unmark 1`                                                                                         |","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"| **List**            | `list`                                                                                                                      |","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"| **Sort**            | `sort`                                                                                                                      |","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"| **Change Priority** | `priority INDEX PRIORITY` \u003cbr\u003e e.g., `priority 1 high`                                                                      |","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"| **Find**            | `find KEYWORD`\u003cbr\u003e e.g., `find CS2103T`                                                                                     |","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"1. _Add tasks_ such as `todo` `deadline` or `event` tasks to Charizard\u0027s burning list.","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"2. _Mark tasks_ that are ready for Charizard to burnt.","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"3. _Unmark tasks_ to signify Charizard that the task was not burnt completely.","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"4. Assign _priority_ to tasks and _sort_ tasks based on priority.","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"5. _Customized response images_ by Charizard based on the type of command.","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"### Adding a Task : `todo` `deadline` and `event`","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"Adds a new Task to Charizard\u0027s burning wish list. A Task can be a `todo`, `deadline`, or `event`","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"Format: ","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"* `todo \u003cname of todo\u003e [/p PRIORITY]`","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"* `deadline \u003cname of deadline\u003e /by \u003cdate\u003e [/p PRIORITY]`","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"* `event \u003cname of event\u003e /at \u003cdate\u003e [/p PRIORITY]`","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"* `PRIORITY` must be one of `HIGH` `LOW` or `MEDIUM` and is case-insensitive.","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"* If no priority is specified, the default priority is `LOW`","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"**Note:** Date must be in `yyyy/MM/dd HHmm` format","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"* `todo Apply for internship`","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"* `deadline CS3243 Project 1 /by 2022/02/18 2359 /p medium`","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"* `event CS2103T Meeting /at 2022/02/15 2100 /p high`","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"* Charizard adds a new `todo` task with name _Apply for internship_ with _LOW_ priority.","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"* Charizard adds a new `deadline` task with name _CS3243 Project 1_ with deadline set at _February 18 2022 2359hrs_ and _MEDIUM_ priority .","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"* Charizard adds a new `event` task with name _CS2103T Project Meeting_ at _February 15 2022 2100hrs_ with _HIGH_ priority.","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"* If the input is in an invalid format, Charizard will respond to you with the format he expects.","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"Examples of error respond messages:","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"Charizard remembers this move but cannot recognize the format.","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"Try using:\"deadline \u003ctask_name\u003e /by \u003cdeadline\u003e [/p \u003cpriority\u003e]\".","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"Date and time must be in yyyy/MM/dd HHmm format.","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"Priority must be \"HIGH\", \"MEDIUM\" or \"LOW\"","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"Please specify the name of new task to be burnt","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"### Deleting a Task : `delete`","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"Deletes the specified Task from Charizard\u0027s burning wish list.","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"* The index refers to the number shown in Charizard\u0027s burning wish list. If you forget the index of a task, try using `list` command to list down all tasks and their index.","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"* The index **must be a positive integer** and smaller or equal to the number of tasks in Charizard\u0027s burning wish list.","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"* `delete 1`","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has at least 1 task, the 1st task will be deleted.","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has no task, or the input is invalid, Charizard will respond to you with the format he expects.","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"Examples of error respond messages:","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"(Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"Task number does not exist. Charizard is confused..","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"### Finding a Task : `find`","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"Finds a task whose name contains a substring of the given input.","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"* The search will search for any task name that contains `KEYWORD` as substring. e.g. `find CS` will match task `CS2103T` and task `CS3243`","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"* The search is case-sensitive. e.g. `find cs` will not match task `CS2103T`","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-02-13"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"* `find CS2103T`","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"* Charizard will display a list of all tasks with names matching `CS2103T`.","lastModifiedDate":"2022-02-13"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"* If no tasks match `CS21O3T`, Charizard displays an empty list of tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"Example of error respond message (if `KEYWORD` is empty):","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"Please specify the name of task to find","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"### Listing all Tasks : `list`","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"Shows a list of all tasks in Charizard\u0027s burning wish list.","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"Format: `list`","lastModifiedDate":"2022-02-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"* Charizard will display all tasks in its burning wish list.","lastModifiedDate":"2022-02-13"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"### Marking and Unmarking a Task : `mark` and `unmark`","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"Marks a task in Charizard\u0027s burning wish list that is ready to be burnt by Charizard. Charizard will happily burnt the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"Alternatively, unmark a task that was previously marked. Charizard will be shocked that the task was not burnt completely.","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"Format: `mark INDEX` or `unmark INDEX`","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"* Marks or unmarks the task at the specified `INDEX`.","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"* The index refers to the number shown in Charizard\u0027s burning wish list. If you forget the index of a task, try using `list` command to list down all tasks and their index.","lastModifiedDate":"2022-02-13"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"* The index **must be a positive integer** and smaller or equal to the number of tasks in Charizard\u0027s burning list.","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"* `mark 1`","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"* `unmark 1`","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has at least 1 task, the 1st task will be marked with **[X]**","lastModifiedDate":"2022-02-13"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has at least 1 task, the 1st task will be unmarked with **[]**. If the 1st task is originally not marked, nothing happens.","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has less than 1 task, Charizard will tell you that the index is invalid.","lastModifiedDate":"2022-02-13"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"* If `INDEX` is not an integer, Charizard will respond to you with the format he expects.","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"Examples of error respond messages:","lastModifiedDate":"2022-02-13"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-02-13"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"(Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-02-13"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"Task number does not exist. Charizard is confused..","lastModifiedDate":"2022-02-13"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"### Sorting tasks based on priority : `sort`","lastModifiedDate":"2022-02-13"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"Sorts tasks in Charizard\u0027s burning wish list based on priority of tasks, in the order of HIGH-\u003eMEDIUM-\u003eLOW priority.","lastModifiedDate":"2022-02-13"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"Format: `sort`","lastModifiedDate":"2022-02-13"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"**Note** After you sort the list, take note that the index of the same task may be changed the next time you use `mark` `unmark` or `delete` command.","lastModifiedDate":"2022-02-13"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"* Charizard will sort all tasks in its burning wish list from highest to lowest priority and displays all of them.","lastModifiedDate":"2022-02-13"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"### Change priority of a Task : `priority`","lastModifiedDate":"2022-02-13"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"Changes the priority of a task in Charizard\u0027s burning wish list.","lastModifiedDate":"2022-02-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"Format: `priority INDEX PRIORITY`","lastModifiedDate":"2022-02-13"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"* Changes priority of the task at the specified `INDEX`.","lastModifiedDate":"2022-02-13"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"* The index refers to the number shown in Charizard\u0027s burning wish list. If you forget the index of a task, try using `list` command to list down all tasks and their index.","lastModifiedDate":"2022-02-13"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"* The index **must be a positive integer** and smaller or equal to the number of tasks in Charizard\u0027s burning list.","lastModifiedDate":"2022-02-13"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"* `PRIORITY` must be `HIGH` `MEDIUM` or `LOW` and is case-insensitive.","lastModifiedDate":"2022-02-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"* `priority 1 HIGH`","lastModifiedDate":"2022-02-13"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has at least 1 task, the 1st task will have its priority changed to `HIGH`","lastModifiedDate":"2022-02-13"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"* If Charizard\u0027s burning wish list has less than 1 task, Charizard will tell you that the index is invalid.","lastModifiedDate":"2022-02-13"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"* If `INDEX` is not an integer, or `PRIORITY` is not a valid priority, Charizard will respond to you with the format he expects.","lastModifiedDate":"2022-02-13"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"Examples of error respond messages:","lastModifiedDate":"2022-02-13"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-02-13"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"(Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-02-13"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"Charizard remembers this move but cannot recognize the format.","lastModifiedDate":"2022-02-13"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"Try using:\"priority \u003ctask_number\u003e \u003cpriority\u003e\".","lastModifiedDate":"2022-02-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"Task number does not exist. Charizard is confused..","lastModifiedDate":"2022-02-13"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"Priority must be \"HIGH\", \"MEDIUM\" or \"LOW\"","lastModifiedDate":"2022-02-13"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"### Exiting and Saving : `bye`","lastModifiedDate":"2022-02-13"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"Disables the input field and send button and exits the program after 3 seconds. Saves the data into `data/tasks.txt` before exiting the program.","lastModifiedDate":"2022-02-13"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"**Caution:** If you close the program or window without `bye` command, your changes will not be saved.","lastModifiedDate":"2022-02-13"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"Format: `bye`","lastModifiedDate":"2022-02-13"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"* Charizard will roar at you and invite you to burn more tasks next time.","lastModifiedDate":"2022-02-13"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"* Charizard will inform you that the app will be closing in 3 seconds, and disable the input and send button.","lastModifiedDate":"2022-02-13"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":28,"bingsen0806":198}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, adds a Deadline object into a given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final String ENDING_MESSAGE_FORMAT \u003d \"\\nThere are %d tasks in the burning list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    private String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private Priority priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new AddDeadlineCommand instance with the initialized description and deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * @param description Description of the Deadline object to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * @param deadline Deadline of the Deadline object to be added.\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * @param priority The Priority object specifying the priority of the Deadline to be added.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public AddDeadlineCommand(String description, LocalDateTime deadline, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * Adds the Deadline object to the TaskList and displays the newly added Deadline on Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance in which the Deadline object is added into.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * @param ui The Ui object used for displaying messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        Deadline newDeadline \u003d new Deadline(description, deadline, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(Ui.ADD_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(newDeadline.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(String.format(ENDING_MESSAGE_FORMAT, tasks.getSize()));","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.ADD_OR_DELETE);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":54}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, adds an Event object into a given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final String ENDING_MESSAGE_FORMAT \u003d \"\\nThere are %d tasks in the burning list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    private String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private Priority priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new AddEventCommand instance with the initialized description and deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * @param description Description of the Event object to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * @param dateTime Date and Time of the Event object to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * @param priority The Priority object specifying the priority of the Event to be added.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public AddEventCommand(String description, LocalDateTime dateTime, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * Adds the Event object to the TaskList and displays the newly added Event on Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance in which the Event object is added into.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * @param ui The Ui object used for displaying messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        Event newEvent \u003d new Event(description, dateTime, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(Ui.ADD_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(newEvent.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(String.format(ENDING_MESSAGE_FORMAT, tasks.getSize()));","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.ADD_OR_DELETE);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":54}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, adds a ToDo object into a given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private static final String ENDING_MESSAGE_FORMAT \u003d \"\\nThere are %d tasks in the burning list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    private Priority priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new AddTodoCommand instance with the initialized description and deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     * @param description Description of the ToDo object to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     * @param priority The Priority object specifying the priority of the ToDo to be added.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public AddTodoCommand(String description, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Adds the ToDo object to the TaskList and displays the newly added Event on Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance in which the ToDo object is added into.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * @param ui The Ui object used for displaying messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        ToDo newTodo \u003d new ToDo(description, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(Ui.ADD_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(newTodo.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(String.format(ENDING_MESSAGE_FORMAT, tasks.getSize()));","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.ADD_OR_DELETE);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":50}},{"path":"src/main/java/duke/command/ChangePriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class ChangePriorityCommand extends Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    private int taskIndex;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private Priority newPriority;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new ChangePriorityCommand instance with the initialized index and action.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * @param taskIndex Zero based index of the Task to have its priority changed.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * @param newPriority The new priority level of the Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public ChangePriorityCommand(int taskIndex, Priority newPriority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        this.newPriority \u003d newPriority;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * Changes the priority of the Task object in the TaskList and displays the message on Ui.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * Displays the error message on Ui if priority of the given Task cannot be changed successfully.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance containing the Task object to be marked or unmarked.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * @param ui    The Ui object used for displaying messages.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the index of the Task is out of range.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        tasks.setPriority(taskIndex, newPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(Ui.CHANGE_PRIORITY_MESSAGE);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(tasks.getTask(taskIndex).toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.GENERAL);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"bingsen0806":44}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    private boolean isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        return isExit;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, deletes a Task from the given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private static final String ENDING_MESSAGE_FORMAT \u003d \"\\nThere are %d tasks in the burning list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new DeleteCommand instance with the initialized index.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     * @param taskIndex Zero based index of the Task to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * Deletes the Task object to the TaskList and displays the deleted Task on Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * Displays the error message on Ui if the given Task cannot be deleted successfully.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance in which the Task object is deleted from.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     * @param ui    The Ui object used for displaying messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        tasks.delete(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(Ui.REMOVE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(task.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(String.format(ENDING_MESSAGE_FORMAT, tasks.getSize()));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.ADD_OR_DELETE);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, exits the Duke Program.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new ExitCommand instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     * Saves all user tasks into disk and displays an exit message on the Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     * Displays the error message on Ui if the tasks cannot be stored successfully.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks   The TaskList object that contains all user tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * @param ui      The Ui object used for displaying the Task objects.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * @param storage The Storage object used for storing tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        storage.saveFileData(tasks.getTasks());","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(Ui.BYE_MESSAGE);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.GENERAL);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, finds all matching Task objects in the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final String BEGINNING_MESSAGE \u003d \"Charizard found some stuff from the burning list:\";","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    private String searchDescription;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new FindCommand instance with the specified search description.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     * @param searchDescription The text which descriptions of matching tasks are expected to contain","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public FindCommand(String searchDescription) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        this.searchDescription \u003d searchDescription;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * Displays all matching Task objects from the given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance to be searched.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     * @param ui The Ui object used for displaying the Task objects.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d tasks.findTasks(searchDescription);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(BEGINNING_MESSAGE);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            message +\u003d String.format(\"%d. %s\", i + 1, matchedTasks.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            if (i \u003c matchedTasks.size() - 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                message +\u003d \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        ui.setRespondImage(ImageType.GENERAL);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"bingsen0806":52}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, lists all Task objects in the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private static final String BEGINNING_MESSAGE \u003d \"Charizard\u0027s burning wish list:\";","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new ListCommand instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     * Displays all Task objects from the given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance that contains the Task objects to be displayed.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * @param ui The Ui object used for displaying the Task objects.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"            ui.appendMessage(BEGINNING_MESSAGE);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            String message \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"                message +\u003d String.format(\"%d. %s\", i + 1, tasks.getTask(i).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"                if (i \u003c tasks.getSize() - 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"                    message +\u003d \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            ui.appendMessage(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            ui.setRespondImage(ImageType.GENERAL);","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INTERNAL);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":47}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.ImageType;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, marks or unmarks a Task from the given TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new MarkCommand instance with the initialized index and action.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * @param taskIndex Zero based index of the Task to be marked or unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * @param isDone    The intended state of the Task after execution of Command.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     *                  true if the intended action is to mark the task, false if the","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     *                  intended action is to unmark the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public MarkCommand(int taskIndex, boolean isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * Marks or unmarks the Task object in the TaskList and displays the message on Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Displays the error message on Ui if the given Task cannot be marked or unmarked successfully.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance containing the Task object to be marked or unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * @param ui    The Ui object used for displaying messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        tasks.markTask(taskIndex, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        String message;","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            message \u003d Ui.MARK_MESSAGE;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"            message \u003d String.format(Ui.UNMARK_MESSAGE);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        ui.appendBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        ui.appendMessage(tasks.getTask(taskIndex).toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            ui.setRespondImage(ImageType.MARK);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            ui.setRespondImage(ImageType.UNMARK);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":57}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Represents a Command which, when executed, sorts the TaskList based on priority.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public SortCommand() {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     * Sorts all Task objects in the TaskList based on priority followed by deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The TaskList instance containing the Task object to be marked or unmarked.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * @param ui    The Ui object used for displaying messages.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assert ui.hasEmptyMessage() : \"Ui has leftover message from previous tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        tasks.sort(Comparator.comparing(Task::getPriority));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        new ListCommand().execute(tasks, ui, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"bingsen0806":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_NO_COMMAND \u003d \"Charizard does not know this move. Try a different command.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_PARSE_INT \u003d \"Charizard\u0027s can only remember numbers. Try specifying a task number.\"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"            + \"(Use \\\"list\\\" command to see the tasks and their corresponding task number).\";","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_INVALID_INDEX \u003d \"Task number does not exist. Charizard is confused..\";","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_TODO_NO_NAME \u003d \"Please specify the name of new task to be burnt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_FIND_NO_NAME \u003d \"Please specify the name of task to find\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_WRONG_FORMAT \u003d \"Charizard remembers this move but cannot recognize the format.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_IO_INPUT \u003d \"Error: File input cannot be read\";","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_INTERNAL \u003d \"Oops. Some internal error has occurred\";","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_INPUT_FILE_FORMAT_SPLIT \u003d \"Error: Input file is not formatted correctly using |\";","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_INPUT_FILE_FORMAT_DONE \u003d \"Error: isDone field is not indicated by 0 or 1 in file\";","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_INPUT_FILE_FORMAT_TASK \u003d \"Error: Task type is not T,D or E in file\";","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final String ERROR_WRITE_FILE \u003d \"Unable to write to file\";","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public static final String FORMAT_DEADLINE \u003d \"Try using:\\\"deadline \u003ctask_name\u003e /by \u003cdeadline\u003e [/p \u003cpriority\u003e].\\\"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public static final String FORMAT_EVENT \u003d \"Try using:\\\"event \u003ctask_name\u003e /by \u003cevent_time\u003e [/p \u003cpriority\u003e].\\\"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public static final String FORMAT_DATE \u003d \"Date and time must be in yyyy/MM/dd HHmm format.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String FORMAT_PRIORITY \u003d \"Try using:\\\"priority \u003ctask_number\u003e \u003cpriority\u003e\\\".\";","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String FORMAT_PRIORITY_LEVEL \u003d \"Priority must be \\\"HIGH\\\", \\\"MEDIUM\\\" or \\\"LOW\\\"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public DukeException(String displayMessage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        super(displayMessage);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bingsen0806":26}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Pair;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    private boolean hasExited;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private boolean hasLoadingError;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a Duke program that stores task data at the specified file path.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public Duke() {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        hasExited \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        hasLoadingError \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            hasLoadingError \u003d true;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public Pair\u003cString, Image\u003e getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assert hasExited \u003d\u003d false : \"Program should have ended\";","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assert hasLoadingError \u003d\u003d false : \"Program should have loading error\";","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            hasExited \u003d c.isExit();","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            return new Pair\u003cString, Image\u003e(ui.getResponse(), ui.getResponseImage());","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            Image errorImage \u003d ui.getErrorImage();","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"            return new Pair\u003cString, Image\u003e(e.getMessage(), errorImage);","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        } finally {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            ui.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasExited() {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        return hasExited;","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasLoadingError() {","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        return hasLoadingError;","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    public void setHasLoadingError(boolean hasLoadingError) {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        this.hasLoadingError \u003d hasLoadingError;","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bingsen0806":61,"-":3}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private static final String APP_NAME \u003d \"Charizard\";","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"        MainWindow mainWindow \u003d new MainWindow();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/Icon.png\")));","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        stage.setTitle(APP_NAME);","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":26}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import duke.command.ChangePriorityCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Pair;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.PriorityLevel;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":" * Parser is a utility class with static methods used to parse","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":" * user input into Command and LocalDateTime objects.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":" * the output on the screen.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Command object representing the user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * @param fullCommand Raw input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * @return A Command representing the user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If user input is not a valid command or valid but in the wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    static Command parseCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        if (fullCommand.trim().compareToIgnoreCase(\"bye\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"sort\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            return new SortCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"mark\", \"\").trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            return parseMarkCommand(inputWithoutCommand, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"unmark\", \"\").trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            return parseMarkCommand(inputWithoutCommand, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"            return parseTodoCommand(inputWithoutCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            return parseDeadlineCommand(inputWithoutCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"event\", \"\").trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"            return parseEventCommand(inputWithoutCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"delete\", \"\").trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"            return parseDeleteCommand(inputWithoutCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"            return parseFindCommand(inputWithoutCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        } else if (fullCommand.startsWith(\"priority\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            String inputWithoutCommand \u003d fullCommand.replaceFirst(\"priority\", \"\").trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"            return parsePriorityCommand(inputWithoutCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_NO_COMMAND);","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"     * Returns a java.time.LocalDateTime object representing the input.","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * @param input The input to be parsed, \"yyyy/MM/dd HHmm\" format.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     * @return The parsed LocalDateTime.","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the input cannot be parsed based on the stated format.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    static LocalDateTime parseDateTime(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"            return LocalDateTime.parse(input, format);","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.FORMAT_DATE);","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    private static MarkCommand parseMarkCommand(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            int taskId \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"            return new MarkCommand(taskId, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_PARSE_INT);","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    private static ChangePriorityCommand parsePriorityCommand(String input) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"            String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"            int taskId \u003d Integer.parseInt(splitInput[0]) - 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"            String priority \u003d splitInput[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"            if (!isValidPriority(priority)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"                throw new DukeException(DukeException.FORMAT_PRIORITY_LEVEL);","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"            return new ChangePriorityCommand(taskId, new Priority(priority));","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_WRONG_FORMAT + DukeException.FORMAT_PRIORITY);","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_PARSE_INT);","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    private static AddTodoCommand parseTodoCommand(String inputWithPriority) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        Pair\u003cString, Priority\u003e inputWithoutPriority \u003d checkInputPriority(inputWithPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        Priority priority \u003d inputWithoutPriority.getSecond();","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        String processedInput \u003d inputWithoutPriority.getFirst();","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        if (isEmptyString(processedInput)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_TODO_NO_NAME);","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        return new AddTodoCommand(processedInput, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    private static AddDeadlineCommand parseDeadlineCommand(String inputWithPriority) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        Pair\u003cString, Priority\u003e inputWithoutPriority \u003d checkInputPriority(inputWithPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        Priority priority \u003d inputWithoutPriority.getSecond();","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        String processedInput \u003d inputWithoutPriority.getFirst();","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        String[] splitInputs \u003d processedInput.split(\"/by\");","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        if (!isValidDeadlineEventSplit(splitInputs)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_WRONG_FORMAT + DukeException.FORMAT_DEADLINE);","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        String description \u003d splitInputs[0].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"        String deadlineString \u003d splitInputs[1].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        LocalDateTime deadline \u003d parseDateTime(deadlineString);","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        return new AddDeadlineCommand(description, deadline, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    private static AddEventCommand parseEventCommand(String inputWithPriority) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        Pair\u003cString, Priority\u003e inputWithoutPriority \u003d checkInputPriority(inputWithPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        Priority priority \u003d inputWithoutPriority.getSecond();","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        String processedInput \u003d inputWithoutPriority.getFirst();","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        String[] splitInputs \u003d processedInput.split(\"/at\");","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        if (!isValidDeadlineEventSplit(splitInputs)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_WRONG_FORMAT + DukeException.FORMAT_EVENT);","lastModifiedDate":"2022-02-04"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        String description \u003d splitInputs[0].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        String timeString \u003d splitInputs[1].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        LocalDateTime time \u003d parseDateTime(timeString);","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        return new AddEventCommand(description, time, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"    private static DeleteCommand parseDeleteCommand(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"            int taskId \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"            return new DeleteCommand(taskId);","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_PARSE_INT);","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"    private static FindCommand parseFindCommand(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"        if (isEmptyString(input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_FIND_NO_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        return new FindCommand(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidDeadlineEventSplit(String[] splitInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        return splitInput.length \u003d\u003d 2 \u0026\u0026 !isEmptyString(splitInput[0]) \u0026\u0026 !isEmptyString(splitInput[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidPriority(String priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"        return priority.equalsIgnoreCase(\"HIGH\")","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"                || priority.equalsIgnoreCase(\"MEDIUM\")","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"                || priority.equalsIgnoreCase(\"LOW\");","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isEmptyString(String s) {","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        return s.matches(\"\\\\s*\");","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"    private static Pair\u003cString, Priority\u003e checkInputPriority(String command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        String[] splitPriorityInput \u003d command.split(\"/p\");","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        if (splitPriorityInput.length !\u003d 2) {","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"            Priority defaultPriority \u003d new Priority(PriorityLevel.LOW);","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"            return new Pair\u003cString, Priority\u003e(splitPriorityInput[0], defaultPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        if (!isValidPriority(splitPriorityInput[1].trim())) {","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.FORMAT_PRIORITY_LEVEL);","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"        Priority specifiedPriority \u003d new Priority(splitPriorityInput[1].trim());","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        return new Pair\u003cString, Priority\u003e(splitPriorityInput[0], specifiedPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":193}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * Storage is a utility class representing the file path on the disk","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" * storing the user\u0027s list of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":" * \u003cp/\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":" * This class contains functions to load and save tasks to the disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new Storage instance with the given file path.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * @param filePath The file path on the disk for saving and loading tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * Returns an ArrayList of tasks stored in the file path of this storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     * @return An ArrayList containing the tasks loaded from the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"     * If the file does not exist, returns an empty ArrayList.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If file input cannot be read of file input has wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            String taskInput;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            ArrayList\u003cTask\u003e readTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            while ((taskInput \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                String[] splitTaskInput \u003d taskInput.split(\" \\\\| \");","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"                Task newTask \u003d getTaskFromStringArray(splitTaskInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                readTasks.add(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"            return readTasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_IO_INPUT);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"     * Stores an ArrayList of tasks to the file path of this storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The ArrayList of tasks to be stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the contents cannot be written to the specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public void saveFileData(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"            if (Files.notExists(Paths.get(filePath))) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"                Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"                Files.createFile(Paths.get(filePath));","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"            BufferedWriter bw \u003d Files.newBufferedWriter(Paths.get(filePath), Charset.forName(\"UTF-8\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"                bw.append(t.getFileSaveFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"                bw.append(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"            bw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_WRITE_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    private Task getTaskFromStringArray(String[] splitTaskInput) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"            Task newTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            Priority priority \u003d new Priority(splitTaskInput[3]);;","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"            if (splitTaskInput[0].equals(\"T\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"                newTask \u003d new ToDo(splitTaskInput[2], priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"            } else if (splitTaskInput[0].equals(\"D\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"                LocalDateTime dateTime \u003d Parser.parseDateTime(splitTaskInput[4]);","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                newTask \u003d new Deadline(splitTaskInput[2], dateTime, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"            } else if (splitTaskInput[0].equals(\"E\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"                LocalDateTime dateTime \u003d Parser.parseDateTime(splitTaskInput[4]);","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"                newTask \u003d new Event(splitTaskInput[2], dateTime, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"                throw new DukeException(DukeException.ERROR_INPUT_FILE_FORMAT_TASK);","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"            int isDone \u003d Integer.parseInt(splitTaskInput[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"            if (isDone \u003d\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"                newTask.mark(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"            return newTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INPUT_FILE_FORMAT_SPLIT);","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INPUT_FILE_FORMAT_DONE);","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":116}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" * Represents a list of Task objects.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a new empty TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a new TaskList instance initialized to contain the specified tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * @param tasks The Arraylist whose elements are to be placed in this TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * Marks or unmarks the Task in the TaskList at the given index.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * @param zeroBasedIndex Index of the Task to be marked or unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * @param isDone Boolean indicating mark or unmark action. A true value indicates mark","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     *               and false value indicates unmark.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the given zeroBasedIndex is out of bounds.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public void markTask(int zeroBasedIndex, boolean isDone) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            tasks.get(zeroBasedIndex).mark(isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INVALID_INDEX);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"     * Sets the priority of the Task in the TaskList at the given index.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"     * @param zeroBasedIndex Index of the Task to have its priority set.","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"     * @param newPriority The new priority level of the Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the given zeroBasedIndex is out of bounds.","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public void setPriority(int zeroBasedIndex, Priority newPriority) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            tasks.get(zeroBasedIndex).setPriority(newPriority);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INVALID_INDEX);","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"     * Adds a new Task to the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * Deletes a Task object from the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"     * @param zeroBasedIndex Index of the Task object to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the given zeroBasedIndex is out of bounds.","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    public void delete(int zeroBasedIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"            tasks.remove(zeroBasedIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INVALID_INDEX);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Task object from the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"     * @param zeroBasedIndex Index of the Task object to be returned.","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"     * @throws DukeException If the given zeroBasedIndex is out of bounds.","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    public Task getTask(int zeroBasedIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"            return this.tasks.get(zeroBasedIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"            throw new DukeException(DukeException.ERROR_INVALID_INDEX);","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"     * Returns an ArrayList representing the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"     * @return An ArrayList representing the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"     * Returns the number of Task objects in the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"     * @return Number of Task objects in the TaskList instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"     * Returns an ArrayList of tasks that matches the description.","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"     * @param searchDescription Search text to be partially matched with task\u0027s description.","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"     * @return ArrayList of tasks that matches the description.","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"    public ArrayList\u003cTask\u003e findTasks(String searchDescription) {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        return new ArrayList\u003cTask\u003e(tasks.stream()","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"                .filter(task -\u003e task.hasSubstring(searchDescription))","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    public void sort(Comparator\u003cTask\u003e taskComparator) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        Collections.sort(tasks, taskComparator);","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":135}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"     * Creates a Deadline with the given description and deadline.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"     * @param description The name of the Deadline task.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"     * @param deadline The deadline of the Deadline task.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * @param priority The Priority object specifying the priority of this Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public Deadline(String description, LocalDateTime deadline, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        super(description, TaskType.DEADLINE, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        return String.format(\"%s (by: %shrs)\", super.toString(), deadline.format(format));","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public String getFileSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        return String.format(\"%s | %s\", super.getFileSaveFormat(), deadline.format(format));","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bingsen0806":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"     * Creates an Event with the given description and time.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"     * @param description The name of the event.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"     * @param time The time of the event.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * @param priority The Priority object specifying the priority of this Event.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public Event(String description, LocalDateTime time, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        super(description, TaskType.EVENT, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        return String.format(\"%s (at: %shrs)\", super.toString(), time.format(format));","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public String getFileSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        return String.format(\"%s | %s\", super.getFileSaveFormat(), time.format(format));","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bingsen0806":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.PriorityLevel;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"    private final String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    private TaskType type;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"    private Priority priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"     * Creates a Task with the given description and type.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"     * @param description The name of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * @param type The type of the task, such as TODO, DEADLINE, or EVENT.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        this(description, type, new Priority(PriorityLevel.LOW));","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     * Creates a Task with the given description, type and priority.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * @param description The name of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * @param type The type of the task, such as TODO, DEADLINE, or EVENT.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * @param priority The Priority object specifying the priority of this Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public Task(String description, TaskType type, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public void mark(boolean done) {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public void setPriority(Priority newPriority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        priority \u003d newPriority;","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        return priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public String getFileSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        String doneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        return String.format(\"%s | %s | %s | %s\", getSymbol(), doneString, description, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSubstring(String searchText) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        return description.contains(searchText);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        return String.format(\"[%s][%s] %s (%s priority)\", getSymbol(), getStatusSymbol(), description, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    private String getStatusSymbol() {","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    private String getSymbol() {","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        switch (type) {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        case TODO:","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"            return \"T\";","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"            return \"D\";","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        case EVENT:","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"            return \"E\";","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        default:","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            return \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    };","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bingsen0806":78}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bingsen0806":5}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Priority;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"    public ToDo(String description, Priority priority) {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"        super(description, TaskType.TODO, priority);","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bingsen0806":9}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private static final String BACKGROUND_PATH \u003d \"/images/FireBackground2.jpg\";","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private final Circle imageShape \u003d new Circle(48, 48, 48);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"            this.getStylesheets().add(\"/view/dialogBox.css\");","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        displayPicture.setClip(imageShape);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        initializeBackground();","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    private void initializeBackground() {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        Image image \u003d new Image(this.getClass().getResourceAsStream(BACKGROUND_PATH));","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        BackgroundImage backgroundImage \u003d new BackgroundImage(image,","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                BackgroundPosition.DEFAULT,","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                new BackgroundSize(1.0, 1.0, true, true, false, true));","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        Background background \u003d new Background(backgroundImage);","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        dialog.setBackground(background);","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":84}},{"path":"src/main/java/duke/ui/ImageType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public enum ImageType {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    ADD_OR_DELETE, MARK, UNMARK, ERROR, GENERAL","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":5}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import duke.utils.Pair;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final String LOADING_ERROR_MESSAGE \u003d \"Unable to read saved task from file.\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            + \"Starting with a new task list..\";","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private static final String CLOSING_MESSAGE \u003d \"Closing this app in 3 seconds..\";","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Ash.PNG\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Initializes a new MainWindow and sets itself to be the root and controller of MainWindow fxml.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public MainWindow() {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            this.getStylesheets().add(\"/view/mainWindow.css\");","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        initializeBackgrounds();","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    private void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        scrollPane.setStyle(\"-fx-background: transparent; -fx-background-color: transparent; \");","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        String welcomeMessage \u003d duke.getWelcomeMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"                DialogBox.getDukeDialog(welcomeMessage, Ui.GENERAL_IMAGE)","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        if (duke.hasLoadingError()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                    DialogBox.getDukeDialog(LOADING_ERROR_MESSAGE, Ui.GENERAL_IMAGE)","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"            );","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"            duke.setHasLoadingError(false);","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    private void initializeBackgrounds() {","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        //set main background","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        Image fireImage1 \u003d new Image(this.getClass().getResourceAsStream(\"/images/Background.jpg\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        BackgroundImage mainBackgroundImage \u003d new BackgroundImage(fireImage1,","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"                BackgroundPosition.DEFAULT,","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"                new BackgroundSize(1.0, 1.0, true, true, false, true));","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        Background background \u003d new Background(mainBackgroundImage);","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        this.setBackground(background);","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        //set input background","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        Image fireImage2 \u003d new Image(this.getClass().getResourceAsStream(\"/images/FireBackground.jpg\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        BackgroundImage inputBackgroundImage \u003d new BackgroundImage(fireImage2,","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"                BackgroundPosition.DEFAULT,","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"                new BackgroundSize(1.0, 1.0, true, true, false, true));","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        Background inputBackground \u003d new Background(inputBackgroundImage);","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        userInput.setBackground(inputBackground);","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        sendButton.setBackground(inputBackground);","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        Pair\u003cString, Image\u003e dukeResponse \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"                DialogBox.getDukeDialog(dukeResponse.getFirst(), dukeResponse.getSecond())","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        if (duke.hasExited()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"            prepareToCloseWindow();","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    private void prepareToCloseWindow() {","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"                DialogBox.getDukeDialog(CLOSING_MESSAGE, Ui.GENERAL_IMAGE)","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        sendButton.setDisable(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        userInput.setDisable(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-02-04"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        delay.setOnFinished(event -\u003e javafx.application.Platform.exit());","lastModifiedDate":"2022-02-04"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        delay.play();","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":126}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":" * Ui is a utility class for reading and writing input to the Duke program.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * \u003cp/\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Ui is a wrapper around BufferedReader and PrintWriter that reads from System.in InputStream","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" * and writes to System.out OutputStream.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * An Ui instance also stores the message to be shown before showResponse flushes the message to the outputsteam.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String BYE_MESSAGE \u003d \"Roarrr....Let\u0027s burn more tasks next time!\";","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final String ADD_MESSAGE \u003d \"Charizard is ready to burn task:\";","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final String REMOVE_MESSAGE \u003d \"Charizard got tired of waiting and deleted this task\";","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public static final String MARK_MESSAGE \u003d \"Charizard breathe out fire and burned the task.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public static final String UNMARK_MESSAGE \u003d \"Oh no! The task was not burnt completely!\";","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public static final String CHANGE_PRIORITY_MESSAGE \u003d \"Charizard changed priority of some tasks.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final Image GENERAL_IMAGE \u003d new Image(Ui.class.getResourceAsStream(\"/images/General.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private static final int BORDER_LENGTH \u003d 38;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private static final String GREET_MESSAGE \u003d \"Roarrr.... I\u0027m Burning Charizard, tasked to burnnn down your tasks.\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            + \"Which task shall we burn today?\";","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final Image ADD_OR_DELETE_IMAGE \u003d new Image(Ui.class.getResourceAsStream(\"/images/Add.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final Image MARK_IMAGE \u003d new Image(Ui.class.getResourceAsStream(\"/images/Mark.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final Image UNMARK_IMAGE \u003d new Image(Ui.class.getResourceAsStream(\"/images/Unmark.PNG\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private static final Image ERROR_IMAGE \u003d new Image(Ui.class.getResourceAsStream(\"/images/Error.PNG\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private Image responseImage \u003d GENERAL_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private StringBuilder message;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a new Ui instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public Ui() {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        message \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * Appends the message to the stored message in Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     * @param message The message to be appended.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public void appendMessage(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        this.message.append(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"     * Appends the line border to the stored message in Ui.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public void appendBorder() {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        appendMessage(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c BORDER_LENGTH; i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            appendMessage(\"-\");","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        appendMessage(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public void setRespondImage(ImageType imageType) {","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        if (imageType \u003d\u003d ImageType.ADD_OR_DELETE) {","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"            responseImage \u003d ADD_OR_DELETE_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        } else if (imageType \u003d\u003d ImageType.MARK) {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"            responseImage \u003d MARK_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        } else if (imageType \u003d\u003d ImageType.UNMARK) {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            responseImage \u003d UNMARK_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        } else if (imageType \u003d\u003d ImageType.ERROR) {","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"            responseImage \u003d ERROR_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"            responseImage \u003d GENERAL_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public void clear() {","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        message.setLength(0);","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasEmptyMessage() {","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        return message.length() \u003c\u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"     * Flushes the stored message in the Ui and displays the message to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    public String getResponse() {","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        assert message.length() \u003e 0 : \"Response is empty!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        String respondMessage \u003d message.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        message.setLength(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        assert message.length() \u003d\u003d 0 : \"Message buffer not cleared\";","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        return respondMessage;","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    public Image getResponseImage() {","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        return responseImage;","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public Image getErrorImage() {","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return ERROR_IMAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     * Immediately displays the welcome message to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        return GREET_MESSAGE;","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":106}},{"path":"src/main/java/duke/utils/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.utils;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    private final T first;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"    private final U second;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new Pair with the two input elements.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"     * @param first The first element of the Pair.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"     * @param second The second element of the Pair.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    public Pair(T first, U second) {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"        this.first \u003d first;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"        this.second \u003d second;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public T getFirst() {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        return first;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public U getSecond() {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        return second;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":25}},{"path":"src/main/java/duke/utils/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.utils;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public class Priority implements Comparable\u003cPriority\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    private static final int HIGH_LEVEL \u003d 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"    private static final int MEDIUM_LEVEL \u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"    private static final int LOW_LEVEL \u003d 3;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"    private static final int INVALID_LEVEL \u003d -1;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    private final int priorityLevel;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new Priority instance based on the given priority","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"     * @param priorityLevel A PriorityLevel enum representing the given priority.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public Priority(PriorityLevel priorityLevel) {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"        if (priorityLevel \u003d\u003d PriorityLevel.HIGH) {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d HIGH_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        } else if (priorityLevel \u003d\u003d PriorityLevel.MEDIUM) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d MEDIUM_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        } else if (priorityLevel \u003d\u003d PriorityLevel.LOW) {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d LOW_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d INVALID_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * Creates a new Priority instance based on the given priority","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * @param priorityLevel A String representing high, medium or low priority.","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public Priority(String priorityLevel) {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        if (priorityLevel.equalsIgnoreCase(\"HIGH\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d HIGH_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        } else if (priorityLevel.equalsIgnoreCase(\"MEDIUM\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d MEDIUM_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        } else if (priorityLevel.equalsIgnoreCase(\"LOW\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d LOW_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            this.priorityLevel \u003d INVALID_LEVEL;","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public int compareTo(Priority o) {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        if (priorityLevel \u003d\u003d INVALID_LEVEL \u0026\u0026 o.priorityLevel !\u003d INVALID_LEVEL) {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            return 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        return priorityLevel - o.priorityLevel;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        if (priorityLevel \u003d\u003d HIGH_LEVEL) {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            return \"HIGH\";","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        } else if (priorityLevel \u003d\u003d MEDIUM_LEVEL) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"            return \"MEDIUM\";","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        } else if (priorityLevel \u003d\u003d LOW_LEVEL) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            return \"LOW\";","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"            return \"INVALID\";","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"bingsen0806":64}},{"path":"src/main/java/duke/utils/PriorityLevel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.utils;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public enum PriorityLevel {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    HIGH, MEDIUM, LOW, INVALID","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"bingsen0806":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Charizard is waiting for your command ...\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#b90a0a\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"bingsen0806":26}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validExit_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            assertTrue(Parser.parseCommand(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse exit command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validList_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            assertTrue(Parser.parseCommand(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse list command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validMark_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            assertTrue(Parser.parseCommand(\"mark 1\") instanceof MarkCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse mark command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_invalidMark_throwsDukeException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"            Parser.parseCommand(\"mark \");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to catch invalid mark command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            assertEquals(e.getMessage(), DukeException.ERROR_PARSE_INT);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validUnmark_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            Parser.parseCommand(\"unmark 1\");","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse unmark command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    void parsetTest_invalidUnmark_throwsDukeException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            Parser.parseCommand(\"unmark anything\");","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to catch invalid unmark command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"            assertEquals(e.getMessage(), DukeException.ERROR_PARSE_INT);","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validDelete_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"            Parser.parseCommand(\"delete 1\");","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse delete command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_invalidDelete_throwsDukeException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"            Parser.parseCommand(\"delete anything\");","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to catch invalid delete command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            assertEquals(e.getMessage(), DukeException.ERROR_PARSE_INT);","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validAddTodo_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"            assertTrue(Parser.parseCommand(\"todo test\") instanceof AddTodoCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse todo command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_emptyTodo_throwsDukeException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"            Parser.parseCommand(\"todo \");","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to catch empty todo command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"            assertEquals(e.getMessage(), DukeException.ERROR_TODO_NO_NAME);","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validAddDeadline_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"            assertTrue(Parser.parseCommand(\"deadline test /by 2022/01/26 1200\") instanceof AddDeadlineCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse deadline command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_invalidAddDeadline_throwsDukeException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        assertAll(\"Invalid Add Deadline\", () -\u003e {","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"                Parser.parseCommand(\"deadline testDeadline /by /by anything\");","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"                Assertions.fail(\"Parser fails to catch deadline command with invalid structure\");","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"                assertEquals(e.getMessage(), DukeException.ERROR_WRONG_FORMAT","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"                        + DukeException.FORMAT_DEADLINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"        }, () -\u003e {","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"                    Parser.parseCommand(\"deadline testDeadline /by notADate format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"                    Assertions.fail(\"Parser fails to catch deadline command with invalid date format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"                    assertEquals(e.getMessage(), DukeException.FORMAT_DATE);","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        );","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_validAddEvent_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"            assertTrue(Parser.parseCommand(\"event test /at 2022/01/26 1200\") instanceof AddEventCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"            Assertions.fail(\"Parser fails to parse event command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"    void parserTest_invalidAddEvent_throwsDukeException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        assertAll(\"Invalid Add Event\", () -\u003e {","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"                Parser.parseCommand(\"event /at anything\");","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"                Assertions.fail(\"Parser fails to catch event command with invalid structure\");","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"                assertEquals(e.getMessage(), DukeException.ERROR_WRONG_FORMAT","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"                        + DukeException.FORMAT_EVENT);","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        }, () -\u003e {","lastModifiedDate":"2022-02-03"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"                    Parser.parseCommand(\"event testEvent /at notADate format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"                    Assertions.fail(\"Parser fails to catch event command with invalid date format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"                    assertEquals(e.getMessage(), DukeException.FORMAT_DATE);","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        );","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":172}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    void getTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"                testList.getTask(0));","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(exception.getMessage(), DukeException.ERROR_INVALID_INDEX);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"                testList.delete(-1));","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(exception.getMessage(), DukeException.ERROR_INVALID_INDEX);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"bingsen0806":26}},{"path":"text-ui-test/EXPECTED..txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":" ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    Roarrr.... I\u0027m Burning Charizard, tasked to burnnn down your tasks.","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"    Which task shall we burn today?","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    Charizard is ready to burn task:","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"      [T][ ] read book","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    There are 1 tasks in the burning list.","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s burning wish list:","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    1. [T][ ] read book","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    Charizard breathe out fire and burned the task.","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"      [T][X] read book","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s burning wish list:","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    1. [T][X] read book","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    Charizard is ready to burn task:","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"      [D][ ] return book (by: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    There are 2 tasks in the burning list.","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    Charizard is ready to burn task:","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"      [E][ ] project meeting (at: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    There are 3 tasks in the burning list.","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s burning wish list:","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    1. [T][X] read book","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    2. [D][ ] return book (by: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    3. [E][ ] project meeting (at: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    (Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    Task number does not exist. Charizard is confused..","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    Oh no! The task was not burnt completely!","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"      [T][ ] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s burning wish list:","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    1. [T][ ] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    2. [D][ ] return book (by: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    3. [E][ ] project meeting (at: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    Please specify the name of new task to be burnt","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    (Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    Task number does not exist. Charizard is confused..","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    Charizard remembers this move but cannot recognize the format.","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    Try using \"deadline \u003ctask_name\u003e /by \u003cdeadline\u003e\".","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    Charizard remembers this move but cannot recognize the format.","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    Try using \"deadline \u003ctask_name\u003e /by \u003cdeadline\u003e\".","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    Charizard remembers this move but cannot recognize the format.","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    Try using \"deadline \u003ctask_name\u003e /by \u003cdeadline\u003e\".","lastModifiedDate":"2022-01-16"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    Charizard remembers this move but cannot recognize the format.","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    Try using \"event \u003ctask_name\u003e /by \u003cevent_time\u003e\".","lastModifiedDate":"2022-01-16"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s burning wish list:","lastModifiedDate":"2022-01-16"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"    1. [T][ ] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"    2. [D][ ] return book (by: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    3. [E][ ] project meeting (at: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"    Task number does not exist. Charizard is confused..","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    (Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-01-16"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s can only remember numbers. Try specifying a task number.","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    (Use \"list\" command to see the tasks and their corresponding task number).","lastModifiedDate":"2022-01-16"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"    Charizard got tired of waiting and deleted this task","lastModifiedDate":"2022-01-16"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"      [T][ ] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    There are 2 tasks in the burning list.","lastModifiedDate":"2022-01-16"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    Charizard\u0027s burning wish list:","lastModifiedDate":"2022-01-16"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"    1. [D][ ] return book (by: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"    2. [E][ ] project meeting (at: Jan 26 2022 0200hrs)","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"What should Charizard do next?","lastModifiedDate":"2022-01-16"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"    Roarrr....Let\u0027s burn more tasks next time!","lastModifiedDate":"2022-01-15"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"********************************************************************************","lastModifiedDate":"2022-01-16"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"-":7,"bingsen0806":163}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"deadline return book /by 2022/01/26 0200","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"event project meeting /at 2022/01/26 0200","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"unmark anything","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"unmark 4","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"unmark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"todo","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"mark anything","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"mark -1","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"deadline /by 2022/01/26 0200","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"deadline 2103T level-6 /by Sunday 2359 /by 2022/01/27 1200","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"deadline 2103T level-6","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"event","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"delete 0","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"delete anything","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"delete","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bingsen0806":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"bingsen0806":1}}]
