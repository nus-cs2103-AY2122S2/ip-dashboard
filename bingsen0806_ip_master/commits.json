{"authorDailyContributionsMap":{"bingsen0806":[{"date":"2022-01-15","commitResults":[{"hash":"be06c6759830287931ad18dcd0c7da285eb57d35","messageTitle":"Add functionality to read and echo output.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":0}}},{"hash":"c055d882d14d22c2d9b4d69f8a5f98a2337592d9","messageTitle":"Move all code from Main.java to Duke.java","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":47}}},{"hash":"6bf6891e8987ca9011cb7eda028aca4e745c8ef5","messageTitle":"Add functionality to add task and list task.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":2}}},{"hash":"89f999c5ca9d3fc6d15c7c729a02dee11f833044","messageTitle":"Add functionality to mark task as Done or Undone.","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":5}}},{"hash":"eb0f4a979d68a84dad86a9c332f95c2066cb40fa","messageTitle":"Add 3 new types of task: ToDo, Deadline and Event. Change Task to abstract class.","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":10}}},{"hash":"19fa56df3530633a78fe4ba3f14f103ccff53cc5","messageTitle":"Add input and expected output files for automated text UI testing","messageBody":"","tags":["A-TextUITesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":2,"deletions":1}}}]},{"date":"2022-01-16","commitResults":[{"hash":"97966582d5a38b5d3ecd54d849e84cffdfdd3a26","messageTitle":"Add exceptions to handle invalid inputs for wrong command, invalid todo command, mark and unmark command, deadline command, event command. Update expected output for automated text-ui testing. Abstract out error handling logic into seprate methods for each command.","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"java":{"insertions":99,"deletions":41}}},{"hash":"9c567cd9a8ca66f7de90f99b36fd2f933bd89d36","messageTitle":"Move all replies from Duke as final static String variables.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":21}}},{"hash":"7f01e269c1c97965dd8de6cd7b615fa1a6115531","messageTitle":"Add delete functionality","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":19,"deletions":1}}},{"hash":"bcc95f61c2f43e67def76fa292ccc1bb021af30f","messageTitle":"Modify Task class to use TaskType enum","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":17}}}]},{"date":"2022-01-24","commitResults":[{"hash":"5a10f2ee1e6694741590de8d6189eafb7511b470","messageTitle":"Duke file: Save tasks to harddrive","messageBody":"Tasks only exists throughout the lifetime of programme.\n\nNon-persistent tasks does not allow users to retrieve data stored during\nprevious execution of the programme.\n\nLet\u0027s,\n* initialize the task list from a file on program load\n* save the task list to a file on exit\n* use relative path to track the location of the save file\n\nUsing relative path will allow our programme to be platform independent\nand be able to run on different machines regardless of where the program\nis downloaded.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":96,"deletions":9}}},{"hash":"81790a1350455952aeea4e4fabf7813c164d070f","messageTitle":"Task: Modidy Deadline and Event to use LocalDateTime instead of String","messageBody":"Deadline and event uses String to store their deadline and event time.\n\nSuch strings are not validated and may not contain information regarding\ndate and time\n\nLet\u0027s\n* Use LocalDateTime instead of String to represent event and deadlines\n* Validate the user String input to check for correct datetime format\n\nValidating datetime input ensures that Deadline and Event objects stores\nthe correct time for the respective tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":8}}}]},{"date":"2022-01-26","commitResults":[{"hash":"d46ee7d4aff4399da332d274fab2245daea5411f","messageTitle":"Refactor code using OOP principles","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":174,"deletions":4},"java":{"insertions":540,"deletions":272}}},{"hash":"32e00d512bd8acf227ce4cbc52b7f6aad2a2c2ca","messageTitle":"Refactor code in packages and changed method accessibility.","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":3},"java":{"insertions":148,"deletions":44},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"6b9570bc9e0b1b58d72392f64afb6898ae7fc809","messageTitle":"ParserTest and TaskListTest: Add JUnit test","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":3},"java":{"insertions":200,"deletions":0}}}]},{"date":"2022-01-27","commitResults":[{"hash":"212dff267eb25cd320b9452880c8d484749933c7","messageTitle":"Add Javadocs for Parser class methods.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":10}}},{"hash":"8689f67b98b069ec96a6c3040204d31beac49c93","messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":225,"deletions":0}}},{"hash":"599f0b722449783fadeea151fe3b62e57255d788","messageTitle":"Edit code to adhere to coding standards.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":37}}},{"hash":"037b7fcca8373c65268c24790c23a25aafa685d1","messageTitle":"Add Find functionality to find tasks based on substring of description","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":0}}},{"hash":"7a68cd00b79fb97945e0daebee3dba7a5856174e","messageTitle":"Update JavaDocs related to find functionality after merging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}}]},{"date":"2022-02-03","commitResults":[{"hash":"81efaa7d44972a1b1928d973aaec0b193e1fcdc4","messageTitle":"Add gradle support to project","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"6e0b9eef393a60ee17ce5de003375411823af7ce","messageTitle":"Modify files to follow checkstyles.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":77}}}]},{"date":"2022-02-04","commitResults":[{"hash":"5dc55a3abb660f0b48ac2feedcaeb0995c496063","messageTitle":"Add some initial gradle configuration and basix fxml files for JavaFX.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":180,"deletions":0}}},{"hash":"20fd72d784f510ffa1648c79a3e6ad8cec08b9c0","messageTitle":"Lauch UI successfully without logical output.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":20,"deletions":25}}},{"hash":"a8536024b7100be9dce8b0f12b16655663fbdce7","messageTitle":"Improve GUI","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":2},"fxml":{"insertions":18,"deletions":5},"java":{"insertions":267,"deletions":194}}},{"hash":"1756b7990b0305f1959fc31eb9db9cb66a0e7cbe","messageTitle":"Repackage into ui and utils package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":52}}}]},{"date":"2022-02-05","commitResults":[{"hash":"8e0a817b6daca1213e3b8563d863684fa83e3006","messageTitle":"Build jar files for production.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2022-02-06","commitResults":[{"hash":"1daf3708b3db620f41b0cb9c458c0053c652ff35","messageTitle":"Package command and ui: use assertions","messageBody":"Assertions are not used to check whether the ui buffer is empty before a\nnew command is executed. Assertions are also not used to check whether\nthe program has exited.\n\nUsing assertions allows us to explicitly verify that the ui buffer is\nempty at the state of program execution before new messages for a new\ncommand is added. It also helps us ensure no response is received after\nthe program has exited.\n\nLet\u0027s,\n* Include a new function in Ui to check for empty buffer\n* Use assertions and the new function to ensure the buffer is empty\nbefore execution of any command\n* Use assertions to ensure program does not receive response after it\nhas exited\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":18}}},{"hash":"62749b6dc8ef10dcd85a453857a8cf21a326a039","messageTitle":"Refactor to improve code quality","messageBody":"There are several methods in Parser, Storage and MainWindow class that\nare too long. There are also multiple magic string literals representing\nerror messages across different files. This makes it hard to change\nlocate usages of exisiting error messages and change them. The same\nproblem applies to starting and ending messages resulting from ui\ncommands.\n\nExtracting all error messages into DukeException static variable allows\nus to easily locate all error messages when they need to be changed.\nExtracting parts of longer methods into shorter private methods also\nimproves readability of code and helps conform to SLAP principle.\n\nLet\u0027s\n* Extract methods that are longer than 30 LoC into smaller methods\n* Extract all error messages into DukeException class as static class\nvariables\n* Extract all magic string literals in command package to become static\nvariables of their respective classes\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":53}}},{"hash":"55ffa20fad0810c7641b6eb0a0ac730c8b5eb22f","messageTitle":"Add stream tag for streams used in previous TaskList class","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":4}}},{"hash":"4d59c074edfe3c52c6ded23d99d8db189275933c","messageTitle":"Update JUnit tests.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0e8837d2de074295ad364202a660ade0f78dbed4","messageTitle":"Add functionality for priority and allow sorting based on priority","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":6},"java":{"insertions":303,"deletions":37}}},{"hash":"3ed594b649d458f56726d8010985bb9ec04bcb7d","messageTitle":"Add JavaDocs to SortCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2022-02-13","commitResults":[{"hash":"348c66969bc68704e0e7b74e8e86ff55c42da924","messageTitle":"README.md : Add User Guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":135,"deletions":13}}},{"hash":"b8afb5dd655e0346b0f6ddca670489b39d462110","messageTitle":"Add expected error messages to User Guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2},"md":{"insertions":73,"deletions":13}}},{"hash":"b1a374e2ad7968275d4eafcac6a7a408934de1ca","messageTitle":"Add table of contents and image to User Guide","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":18,"deletions":3}}}]}]},"authorFileTypeContributionMap":{"bingsen0806":{"java":1838,"md":200,"fxml":48,"sh":0,"bat":1,"gradle":16,"txt":194}},"authorContributionVariance":{"bingsen0806":92206.6},"authorDisplayNameMap":{"bingsen0806":"CS2103T-W14-1 LIM .. SEN"}}
