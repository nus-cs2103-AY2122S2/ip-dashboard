[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"arcornior":1,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":" * Duke helps the user manage their tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    private static final String LOG_PATH \u003d \"data/log.txt\";","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * Prints welcome message, initialises storage and taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     * @param filePath Path to log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        Ui.welcome();","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"            taskList \u003d new TaskList(storage.readTasks());","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"            Ui.printBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"            Ui.printBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"     * Runs Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    public void run() {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"        //add scanner onwards","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"                String command \u003d input.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"                Ui.printBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"                isExit \u003d Parser.parse(command, taskList);","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"                // Updates log file","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"                try {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"                    storage.updateTasks(taskList);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"                    System.out.printf(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"                Ui.print(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"            } finally {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"                Ui.printBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"        new Duke(LOG_PATH).run();","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"arcornior":67,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.exception;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":" * Represents an exception thrown by Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"        super(error);","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"arcornior":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import duke.task.*;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":" * Represents a parser for reading input from the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"public class Parser {","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"     * Returns boolean stating whether or not the user wants to quit Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"     * Handles logic for each implemented command.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     * @return Whether user is quitting Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If user enters unknown command.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"    public static boolean parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"BYE WHAT BYE? YOU GO DROP TWENTY THEN BYE! DOWN!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"            return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"            handleList(taskList);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"            //Split command into 2 parts, the type of task, and remaining text","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"            String[] inputArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"            String command \u003d inputArgs[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"                handleMark(taskList, inputArgs, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"                handleMark(taskList, inputArgs, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"                handleDelete(taskList, inputArgs);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"                handleFind(taskList, inputArgs);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"                handleDeadline(taskList, inputArgs);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"                handleEvent(taskList, inputArgs);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"                handleToDo(taskList, inputArgs);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"                throw new DukeException(\"WHAT TALKING YOU? CHAO RECRUIT YOU BETTER WAKE UP YOUR IDEA!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"     * Handles logic for list command.","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"     * Prints all tasks in taskList","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"    private static void handleList(TaskList taskList) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        //Add name of task to str for easy printing","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"NOTHING TO DO AH?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU BETTER FIND SOMETHING TO DO BEFORE I CONFINE YOU CHAO RECRUIT!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"NEED ME TO REMIND YOU AH?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"                Ui.print((i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"     * Checks if input is incomplete.","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"     * If input is incomplete, returns true.","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"arcornior"},"content":"     * @returns Whether input is incomplete.","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"    private static boolean checkIncompleteness(String[] inputArgs) {","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"        return (inputArgs.length \u003c 2 || inputArgs[1].isBlank());","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"arcornior"},"content":"     * Handles logic for mark/ unmark command.","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"arcornior"},"content":"     * @param isMark Whether to mark or unmark the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If number of task to mark/unmark not specified.","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"arcornior"},"content":"    private static void handleMark(TaskList taskList, String[] inputArgs, boolean isMark) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"arcornior"},"content":"        if (checkIncompleteness(inputArgs)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"WHAT YOU WANT MARK? WEAR HELMET CANNOT THINK ALREADY AH?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"arcornior"},"content":"            int num \u003d Integer.parseInt(inputArgs[1]) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"arcornior"},"content":"            if (isMark) {","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"arcornior"},"content":"                taskList.get(num).mark();","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"THIS ONE\");","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"arcornior"},"content":"                Ui.print(taskList.get(num));","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"FINISH ALREADY AH? SWEE CHAI BUTTERFLY RECRUIT!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"arcornior"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"arcornior"},"content":"                taskList.get(num).unmark();","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"I THOUGHT THIS ONE\");","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"arcornior"},"content":"                Ui.print(taskList.get(num));","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"FINISH ALREADY? NEVER MIND THIS WEEKEND CONFINE!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"arcornior"},"content":"     * Handles logic for delete command.","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"arcornior"},"content":"     * Deletes selected task.","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If number of task to mark/unmark not specified.","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"arcornior"},"content":"    private static void handleDelete(TaskList taskList, String[] inputArgs) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":124,"author":{"gitId":"arcornior"},"content":"        if (checkIncompleteness(inputArgs)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"YOU TRYING TO LEPAK IS IT? WAKE UP YOUR BLOODY IDEA!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"arcornior"},"content":"            int num \u003d Integer.parseInt(inputArgs[1]) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"arcornior"},"content":"            Task toDelete \u003d taskList.get(num);","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"arcornior"},"content":"            taskList.remove(num);","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"arcornior"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU DON\u0027T WANT DO THEN SAY DON\u0027T DO AH?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":132,"author":{"gitId":"arcornior"},"content":"            Ui.print(toDelete);","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"WAKE UP YOUR BLOODY IDEA CHAO RECRUIT!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":134,"author":{"gitId":"arcornior"},"content":"            if (size \u003d\u003d 0) {","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"NOTHING ELSE TO DO CAN RILEK ALREADY AH RECRUIT? DOWN 20!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"arcornior"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":137,"author":{"gitId":"arcornior"},"content":"                Ui.print(size + \" MORE TASKS REMAINING! YOU BETTER ONE TIMES GOOD ONE!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":138,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":140,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":141,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":142,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"arcornior"},"content":"     * Handles logic for find command.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"arcornior"},"content":"     * Looks for and displays tasks containing keyword.","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If keyword missing.","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"arcornior"},"content":"    private static void handleFind(TaskList taskList, String[] inputArgs) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"arcornior"},"content":"        if (checkIncompleteness(inputArgs)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"WHAT YOU TRYING TO FIND? WAKE UP YOUR BLOODY IDEA!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"arcornior"},"content":"            String keyword \u003d inputArgs[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"arcornior"},"content":"            TaskList tempTaskList \u003d new TaskList();","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"arcornior"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"arcornior"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"arcornior"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"arcornior"},"content":"                if (currentTask.getName().contains(keyword)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"arcornior"},"content":"                    tempTaskList.add(currentTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"arcornior"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"arcornior"},"content":"            int tempSize \u003d tempTaskList.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"arcornior"},"content":"            if (tempSize \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"I NEVER FIND ANYTHING! YOU DARE MAKE ME WASTE MY TIME AH?? VERY GOOD!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"arcornior"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"arcornior"},"content":"                Ui.print(\"NEED ME HELP YOU FIND AH? VERY GOOD! THIS WEEKEND YOU WATCH OUT!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"arcornior"},"content":"                for (int i \u003d 0; i \u003c tempTaskList.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"arcornior"},"content":"                    Ui.print((i + 1) + \".\" + tempTaskList.get(i));","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"arcornior"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"arcornior"},"content":"     * Handles logic for deadline command.","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"arcornior"},"content":"     * Creates new Deadline with supplied information.","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If input is incomplete.","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"arcornior"},"content":"    private static void handleDeadline(TaskList taskList, String[] inputArgs) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":186,"author":{"gitId":"arcornior"},"content":"        if (checkIncompleteness(inputArgs)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":187,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"WHAT YOU WANT DO? NOTHING AH HELLOOOOOO?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":188,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":189,"author":{"gitId":"arcornior"},"content":"            String remainder \u003d inputArgs[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":190,"author":{"gitId":"arcornior"},"content":"            //DateTimeFormatter pattern for reading date and time","lastModifiedDate":"2022-02-04"},{"lineNumber":191,"author":{"gitId":"arcornior"},"content":"            DateTimeFormatter dateInputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-02-04"},{"lineNumber":192,"author":{"gitId":"arcornior"},"content":"            DateTimeFormatter timeInputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-02-04"},{"lineNumber":193,"author":{"gitId":"arcornior"},"content":"            String taskName \u003d remainder.split(\" /by \")[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":194,"author":{"gitId":"arcornior"},"content":"            String dateTime \u003d remainder.split(\" /by \")[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":195,"author":{"gitId":"arcornior"},"content":"            String date \u003d dateTime.split(\" \")[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":196,"author":{"gitId":"arcornior"},"content":"            String time \u003d dateTime.split(\" \")[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":197,"author":{"gitId":"arcornior"},"content":"            LocalDate d1 \u003d LocalDate.parse(date, dateInputFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":198,"author":{"gitId":"arcornior"},"content":"            LocalTime t1 \u003d LocalTime.parse(time, timeInputFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":199,"author":{"gitId":"arcornior"},"content":"            Task newTask \u003d new Deadline(taskName, d1, t1);","lastModifiedDate":"2022-02-04"},{"lineNumber":200,"author":{"gitId":"arcornior"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":201,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU BETTER FINISH THIS AH:\");","lastModifiedDate":"2022-02-04"},{"lineNumber":202,"author":{"gitId":"arcornior"},"content":"            Ui.print(newTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":203,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU STILL GOT \" + taskList.size() + \" THINGS TO DO AH BETTER NOT FORGET!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":204,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":205,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":206,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":207,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"arcornior"},"content":"     * Handles logic for event command.","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"arcornior"},"content":"     * Creates new Event with supplied information.","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If input is incomplete.","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"arcornior"},"content":"    private static void handleEvent(TaskList taskList, String[] inputArgs) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":216,"author":{"gitId":"arcornior"},"content":"        if (checkIncompleteness(inputArgs)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":217,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"WHAT YOU WANT DO? NOTHING AH HELLOOOOOO?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":218,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":219,"author":{"gitId":"arcornior"},"content":"            String remainder \u003d inputArgs[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":220,"author":{"gitId":"arcornior"},"content":"            //DateTimeFormatter pattern for reading date and time","lastModifiedDate":"2022-02-04"},{"lineNumber":221,"author":{"gitId":"arcornior"},"content":"            DateTimeFormatter dateInputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-02-04"},{"lineNumber":222,"author":{"gitId":"arcornior"},"content":"            DateTimeFormatter timeInputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-02-04"},{"lineNumber":223,"author":{"gitId":"arcornior"},"content":"            String taskName \u003d remainder.split(\" /at \")[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":224,"author":{"gitId":"arcornior"},"content":"            String dateTime \u003d remainder.split(\" /at \")[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":225,"author":{"gitId":"arcornior"},"content":"            String date \u003d dateTime.split(\" \")[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":226,"author":{"gitId":"arcornior"},"content":"            String[] time \u003d dateTime.split(\" \")[1].split(\"-\");","lastModifiedDate":"2022-02-04"},{"lineNumber":227,"author":{"gitId":"arcornior"},"content":"            LocalDate d1 \u003d LocalDate.parse(date, dateInputFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":228,"author":{"gitId":"arcornior"},"content":"            LocalTime timeFrom \u003d LocalTime.parse(time[0], timeInputFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":229,"author":{"gitId":"arcornior"},"content":"            LocalTime timeTo \u003d LocalTime.parse(time[1], timeInputFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":230,"author":{"gitId":"arcornior"},"content":"            Task newTask \u003d new Event(taskName, d1, timeFrom, timeTo);","lastModifiedDate":"2022-02-04"},{"lineNumber":231,"author":{"gitId":"arcornior"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":232,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU BETTER REMEMBER THIS AH:\");","lastModifiedDate":"2022-02-04"},{"lineNumber":233,"author":{"gitId":"arcornior"},"content":"            Ui.print(newTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":234,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU STILL GOT \" + taskList.size() + \" THINGS TO DO AH BETTER NOT FORGET!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":235,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":236,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":237,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":238,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":239,"author":{"gitId":"arcornior"},"content":"     * Handles logic for todo command.","lastModifiedDate":"2022-02-06"},{"lineNumber":240,"author":{"gitId":"arcornior"},"content":"     * Creates new ToDo with supplied information.","lastModifiedDate":"2022-02-06"},{"lineNumber":241,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":242,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":243,"author":{"gitId":"arcornior"},"content":"     * @param inputArgs String array made up of individual words from input.","lastModifiedDate":"2022-02-06"},{"lineNumber":244,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If input is incomplete.","lastModifiedDate":"2022-02-06"},{"lineNumber":245,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":246,"author":{"gitId":"arcornior"},"content":"    private static void handleToDo(TaskList taskList, String[] inputArgs) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":247,"author":{"gitId":"arcornior"},"content":"        if (checkIncompleteness(inputArgs)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":248,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"WHAT YOU WANT DO? NOTHING AH HELLOOOOOO?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":249,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":250,"author":{"gitId":"arcornior"},"content":"            Task newTask \u003d new ToDo(inputArgs[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":251,"author":{"gitId":"arcornior"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":252,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"YOU WANT TO DO THIS AH:\");","lastModifiedDate":"2022-02-04"},{"lineNumber":253,"author":{"gitId":"arcornior"},"content":"            Ui.print(newTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":254,"author":{"gitId":"arcornior"},"content":"            Ui.print(\"VERY GOOD! YOU STILL GOT \" + taskList.size() + \" THINGS TO DO AH BETTER NOT FORGET!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":255,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":256,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":257,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"arcornior":257}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import duke.task.*;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":" * Represents a file storing a list of Tasks keyed into Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"public class Storage {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"    private String path;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     * Creates new Storage object pointing to log file provided by path.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * If there is no file at provided path, creates file at provided path.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     * @param path Path to text file containing tasks entered into Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    public Storage(String path) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        // Splits pathname into relative path and filename","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"        String filename \u003d path.substring(path.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"        String dir \u003d path.split(filename)[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"        File d \u003d new File(dir);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"        // Creates missing dir/ file","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"        if (!d.exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"            d.mkdirs();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"            f.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"            throw new DukeException(\"WHERE YOUR NOTEPAD RECRUIT? YOU BETTER GO FIND IT NOW!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"     * Updates log file with current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"     * @throws IOException If log file is not found.","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"    public void updateTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"        FileWriter log \u003d new FileWriter(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"            log.write(\"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"            for (int i \u003d 0; i \u003c size; i ++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"                Task curr \u003d taskList.get(i);","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"                String toWrite \u003d curr.getType() + \" | \" + curr.getDone() + \" | \" + curr.getName();","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"                if (curr.getType() \u003d\u003d \"D\") {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"                    toWrite +\u003d \" | \" + curr.getDate() + \" | \" + curr.getTime();","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"                } else if (curr.getType() \u003d\u003d \"E\") {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"                    toWrite +\u003d \" | \" + curr.getDate() + \" | \" + curr.getTimeFrom() + \" \" + curr.getTimeTo();","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"                toWrite +\u003d \"\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"                log.write(toWrite);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"        log.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"     * Parses each task in log file and returns ArrayList containing each task.","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"     * @return ArrayList of tasks in log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"    public ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"arcornior"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"            Scanner fileToRead \u003d new Scanner(f);","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"arcornior"},"content":"            while (fileToRead.hasNext()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"arcornior"},"content":"                // For formatting date/time","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"arcornior"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"arcornior"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"arcornior"},"content":"                String curr \u003d fileToRead.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"arcornior"},"content":"                // taskComponent[0]: Type of Task","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"arcornior"},"content":"                // taskComponent[1]: Completion of Task, can be either \"1\" or \"0\"","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"arcornior"},"content":"                // taskComponent[2]: Name of Task","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"arcornior"},"content":"                // taskComponent[3]: Date of Task","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"arcornior"},"content":"                // taskComponent[4]: Time of Task","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"arcornior"},"content":"                // \\\\| needed to split \"|\"","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"arcornior"},"content":"                String[] taskComponent \u003d curr.split(\" \\\\| \");","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"arcornior"},"content":"                switch (taskComponent[0]) {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"arcornior"},"content":"                case \"T\":","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"arcornior"},"content":"                    ToDo newToDo\u003d new ToDo(taskComponent[2]);","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"arcornior"},"content":"                    if (taskComponent[1].equals(\"1\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"arcornior"},"content":"                        newToDo.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"arcornior"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"arcornior"},"content":"                    tasks.add(newToDo);","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"arcornior"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"arcornior"},"content":"                case \"D\":","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"arcornior"},"content":"                    LocalDate d1 \u003d LocalDate.parse(taskComponent[3], dateFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"arcornior"},"content":"                    LocalTime t1 \u003d LocalTime.parse(taskComponent[4], timeFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"arcornior"},"content":"                    Deadline newDeadline \u003d new Deadline(taskComponent[2], d1, t1);","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"arcornior"},"content":"                    if (taskComponent[1].equals(\"1\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"arcornior"},"content":"                        newDeadline.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"arcornior"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"arcornior"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"arcornior"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"arcornior"},"content":"                case \"E\":","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"arcornior"},"content":"                    //dTA[0] \u003d date","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"arcornior"},"content":"                    //dTA[1] \u003d timeFrom","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"arcornior"},"content":"                    //dTA[2] \u003d timeTo","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"arcornior"},"content":"                    String[] timeArray \u003d taskComponent[4].split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"arcornior"},"content":"                    LocalDate d2 \u003d LocalDate.parse(taskComponent[3], dateFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"arcornior"},"content":"                    LocalTime timeFrom \u003d LocalTime.parse(timeArray[0], timeFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"arcornior"},"content":"                    LocalTime timeTo \u003d LocalTime.parse(timeArray[1], timeFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"arcornior"},"content":"                    Event newEvent \u003d new Event(taskComponent[2], d2, timeFrom, timeTo);","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"arcornior"},"content":"                    if (taskComponent[1].equals(\"1\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"arcornior"},"content":"                        newEvent.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"arcornior"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"arcornior"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"arcornior"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"arcornior"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"arcornior"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"arcornior"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"arcornior"},"content":"        } finally {","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"arcornior"},"content":"            return tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"arcornior":138}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.task;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":" * Represents a Deadline. A Deadline is a type of task that must be done by a certain date and time.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    private DateTimeFormatter dateOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"    private DateTimeFormatter timeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"     * @param name Name of Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * @param date Date to complete Deadline by.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     * @param time Time to complete Deadline by.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    public Deadline(String name, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"        super(\"D\", name, date, time);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"     * Overrides toString to display type of Task, whether or not it is completed, its name,","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"     * and by when to complete Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     * @return String containing above information","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(dateOutputFormatter) + \" \"","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"                + time.format(timeOutputFormatter) + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"arcornior":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.task;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":" * Represents an Event. An Event is a type of task that must be done from a certain date and time to another","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":" * date and time.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"    private DateTimeFormatter dateOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    private DateTimeFormatter timeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"    private LocalTime timeFrom;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    private LocalTime timeTo;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * @param name Name of Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     * @param date Date Event starts.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * @param timeFrom Time Event starts.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     * @param timeTo Time Event ends.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    public Event(String name, LocalDate date, LocalTime timeFrom, LocalTime timeTo) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        super(\"E\", name, date, timeFrom, timeTo);","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        this.timeFrom \u003d timeFrom;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"        this.timeTo \u003d timeTo;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     * Overrides toString to display type of Task, whether or not it is completed, its name,","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     * and by when to start and end Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     * @return String containing above information","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(dateOutputFormatter) + \" \"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"                + timeFrom.format(timeOutputFormatter) + \"-\" + timeTo.format(timeOutputFormatter) + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"arcornior":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.task;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":" * Represents a Task. Each Task has a name and its completion can be tracked.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"public class Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"    private String name;","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"    private boolean done;","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"    private LocalTime timeFrom;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    private LocalTime timeTo;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    private String type;","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"     * Defaults to constructor for ToDo.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * Task is not done by default.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * @param type Type of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     * @param name Name of Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    public Task(String type, String name) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"     * Defaults to constructor for Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     * Deadline is not done by default.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"     * @param type Type of Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     * @param name Name of Deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"     * @param date Date to complete Deadline by.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"     * @param time Time to complete Deadline by.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"    public Task(String type, String name, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-14"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"     * Defaults to constructor for Event.","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"     * Event is not done by default.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"     * @param type Type of Event.","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"     * @param name Name of Event.","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"     * @param date Date Event starts.","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"     * @param timeFrom Time Event starts.","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"     * @param timeTo Time Event ends.","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"    public Task(String type, String name, LocalDate date, LocalTime timeFrom, LocalTime timeTo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"        this.timeFrom \u003d timeFrom;","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        this.timeTo \u003d timeTo;","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"     * Marks task.","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"    public void mark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"     * Unmarks task.","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":82,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"     * Returns type of task.","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"arcornior"},"content":"     * @return String (D/E/T) representing type of task.","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"arcornior"},"content":"    public String getType() {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"arcornior"},"content":"        return type;","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"arcornior"},"content":"     * Returns whether task is completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"arcornior"},"content":"     * @return String representing if task is completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"arcornior"},"content":"    public String getDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"arcornior"},"content":"        if (done) {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"arcornior"},"content":"            return \"1\";","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"arcornior"},"content":"            return \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"arcornior"},"content":"     * Returns name of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"arcornior"},"content":"     * @return Name of task.","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"arcornior"},"content":"    public String getName(){","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"arcornior"},"content":"        return name;","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"arcornior"},"content":"     * Returns date of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"arcornior"},"content":"     * @return Date of task.","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"arcornior"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"arcornior"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"arcornior"},"content":"        return date.format(outputFormatter).toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"arcornior"},"content":"     * Returns time to complete Deadline by.","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"arcornior"},"content":"     * @return Time to complete Deadline by.","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"arcornior"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"arcornior"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"arcornior"},"content":"        return time.format(outputFormatter).toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"arcornior"},"content":"     * Returns time Event starts.","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"arcornior"},"content":"     * @return Time Event starts.","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"arcornior"},"content":"    public String getTimeFrom() {","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"arcornior"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"arcornior"},"content":"        return timeFrom.format(outputFormatter).toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"arcornior"},"content":"     * Returns time Event ends.","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"arcornior"},"content":"     * Used for writing into log file.","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"arcornior"},"content":"     * @return Time Event ends.","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"arcornior"},"content":"    public String getTimeTo() {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"arcornior"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"arcornior"},"content":"        return timeTo.format(outputFormatter).toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"arcornior"},"content":"     * Overrides toString to display whether or not Task is completed, and name of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"arcornior"},"content":"     * @return String containing above information","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":166,"author":{"gitId":"arcornior"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":167,"author":{"gitId":"arcornior"},"content":"        String str \u003d \"[\";","lastModifiedDate":"2022-01-14"},{"lineNumber":168,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"arcornior"},"content":"        if (this.done) {","lastModifiedDate":"2022-01-14"},{"lineNumber":170,"author":{"gitId":"arcornior"},"content":"            str +\u003d \"X\";","lastModifiedDate":"2022-01-14"},{"lineNumber":171,"author":{"gitId":"arcornior"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":172,"author":{"gitId":"arcornior"},"content":"            str +\u003d \" \";","lastModifiedDate":"2022-01-14"},{"lineNumber":173,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":174,"author":{"gitId":"arcornior"},"content":"        str +\u003d \"] \" + this.name;","lastModifiedDate":"2022-01-14"},{"lineNumber":175,"author":{"gitId":"arcornior"},"content":"        return str;","lastModifiedDate":"2022-01-14"},{"lineNumber":176,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":177,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"arcornior":177}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.task;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"public class TaskList {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"     * Constructor for TaskList containing Tasks in taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * Constructor for empty TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"     * Adds a task to taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"     * @param task Task to add.","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"        taskList.add(task);","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     * Returns size of taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"     * @return  Size of taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"    public int size() {","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"        return taskList.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"     * Gets a specified Task from taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"     * @param n Index of Task to get.","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"     * @return Task specified by n.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"    public Task get(int n) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"        return taskList.get(n);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"     * Removes a specified Task from taskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"     * @param n Index of Task to remove.","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"     * @return Task specified by n.","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"    public Task remove(int n) {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"        return taskList.remove((n));","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"     * Checks if taskList is empty.","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"     * @return Boolean stating if taskList is empty.","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"arcornior":73}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.task;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":" * Represents a ToDo. A ToDo is a type of task that does not need to be completed by a certain date or time.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"        super(\"T\", name);","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"     * Overrides toString to display type of Task, whether or not it has been completed, and its name.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"     * @return String containing above information","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"arcornior":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":" * Represents the UI for Duke. Handles printing of output.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"public class Ui {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"    private static final String NORMAL_SPACE \u003d \"      \";","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"    private static final String TASK_SPACE \u003d \"        \";","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"            \" _____           _ _   \\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"            \"|  ___|         (_) |   \\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"            \"| |__ _ __   ___ _| | __\\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"            \"|  __| \u0027_ \\\\ / __| | |/ /\\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"            \"| |__| | | | (__| |   \u003c \\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"            \"\\\\____/_| |_|\\\\___|_|_|\\\\_\\\\\";","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    private static final String BORDER \u003d \"   ____________________________________________________________\";","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * Prints out welcome message.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    public static void welcome() {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"        System.out.println(\"GOOD MORNING GENNERMEN from\");","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"        printBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        print(\"GOOD MORNING CHAO RECRUIT! YOU MAY CALL ME ENCIK ENCIK\");","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        print(\"WHAT YOU WANT?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        printBorder();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"     * Prints out border.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"    public static void printBorder() {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"     * Prints input with correct space.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"     * @param input Input to print.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"    public static void print(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"        System.out.println(NORMAL_SPACE + input);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"     * Prints Task with correct space.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"     * @param taskInput Task to print.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"    public static void print(Task taskInput) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"        System.out.println(TASK_SPACE + taskInput.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"arcornior":56}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package duke.task;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"class TaskListTest {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"    @Test","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"    public void size_two_success() {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"        test.add(new ToDo(\"smn\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"        test.add(new ToDo(\"smn1\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"        assertEquals(2,test.size());","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    @Test","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    public void isEmpty_success() {","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"        test.add(new ToDo(\"smn\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"        test.remove(0);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"        assertEquals(true, test.isEmpty());","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"arcornior":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"todo task A","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"event task B /at idk hehe xd","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"deadline task C /by yesterday oops","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"unmark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"unmark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"deadline","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"event","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"mark","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"unmark","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"delete","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"delete 3","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"delete 2","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"delete 1","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"arcornior":23}}]
