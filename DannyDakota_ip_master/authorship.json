[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DannyDakota":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"    archiveBaseName \u003d \"Whey\"","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DannyDakota":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"Productivilisation is your own personal task tracker chatbot!","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"    - [Adding a Todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    - [Adding a Deadline task: `deadline`](#adding-a-deadline-deadline)","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"    - [Adding a Event task: `event`](#adding-an-event-event)","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    - [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    - [Finding tasks by keywords: `find`](#finding-tasks-by-keywords-find)","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    - [Marking a task: `mark`](#marking-a-task-mark)","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    - [Unmarking a task: `unmark`](#unmarking-a-task-unmark)","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    - [Specifying priority of task](#specifying-priority-of-task-pri)","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"## Quick Start","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"2. Download the Productivilisation.jar from [here](https://github.com/DannyDakota/ip/releases/tag/A-Release).","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"3. Copy the file to the folder you want to use as the home folder.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"4. Double-click the file to start being productive!","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"### Adding a ToDo task: `todo`","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"Creates a ToDo task in the task tracker","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"Format: `todo {TASK}`","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"Examples:","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"- `todo finish this`","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"- `todo eat chicken`","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"Creates a Deadline task in the task tracker","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"Format: `deadline {TASK} /by {DATE} {TIME}`","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"- The date must in the format YYYY-MM-DD e.g. `2022-02-14`","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"- The time must be in the 24-hour format HHMM e.g. `1800`","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"Examples:","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"- `deadline finish assignment /by 2022-02-02 2100`","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"- `deadline submit iP /by 2022-02-22 1800`","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"### Adding a Event task: `event`","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"Creates an Event task with a date and start time in the task tracker","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"Format: `event {TASK} /at {DATE} {TIME}`","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"- The date must in the format YYYY-MM-DD e.g. `2022-02-14`","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"- The start time and end time must both be in the 24-hour format HHMM e.g. `1800`","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"Examples:","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"- `event watch anime /at 2022-02-02 1800`","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"- `event mother\u0027s birthday /at 2022-02-02 2000`","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"Lists all tasks in the task tracker","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"Format: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"Deletes a specified task from the task tracker","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"Format: `delete {TASK_NUMBER}`","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"- Deletes the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"- The index must be within the range of the number of tasks in the task list e.g. `delete 4` with 3 tasks in the list will result in the chatbot replying with `EH HULLO!! TASK DOES NOT EXIST! CHECK AGAIN HEHE`","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"Examples:","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"- `delete 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"### Finding tasks by keywords: `find`","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"Finds all tasks that match a given keyword","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"Format: `find {KEYWORD}`","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"- The keyword is case-sensitive e.g. `Cat` will not match `cat`","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"- Only the task description is searched","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"- Full words will be matched e.g. `was` will match tasks with `wash`","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"- Only tasks matching the entire keyword input will be matched e.g. `wash car` will not match `wash clothes`","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"Example Usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"DannyDakota"},"content":"`find assignment`","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"Finds all tasks with description containing `anime`","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"1. [E][X][H] event watch anime (at: Feb 2 2022 0900AM)","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"3. [D][ ][L] deadline anime assignment (by: Feb 2 2022 0900PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"### Marking a task: `mark`","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"Marks a task as done","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"DannyDakota"},"content":"Format: `mark {TASK_NUMBER}`","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"DannyDakota"},"content":"- Marks the task at the specified `INDEX` as done. The index refers to the index number shown in the displayed task list","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"DannyDakota"},"content":"  The index must be within the range of the number of tasks in the task list e.g. `mark 20` with 2 tasks in the list will result in the chatbot replying with `EH HULLO!! TASK DOES NOT EXIST! CHECK AGAIN HEHE`","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"Examples:","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"- `mark 4`","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"DannyDakota"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"DannyDakota"},"content":"Marks a task as not done","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"DannyDakota"},"content":"Format: `unmark {TASK_NUMBER}`","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"DannyDakota"},"content":"- Marks the task at the specified index as not done. The index refers to the index number shown in the displayed task list","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"DannyDakota"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"DannyDakota"},"content":"  The index must be within the range of the number of tasks in the task list e.g. `unmark 20` with 2 tasks in the list will result in the chatbot replying with `EH HULLO!! TASK DOES NOT EXIST! CHECK AGAIN HEHE`","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"DannyDakota"},"content":"Examples:","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"DannyDakota"},"content":"- `unmark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"DannyDakota"},"content":"### Specifying priority of task: `/pri`","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"DannyDakota"},"content":"Allows you to specify the task priority, allowing you to better manage your tasks according to the priority level","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"DannyDakota"},"content":"Format: `{TASK} /pri {LOW/MEDIUM/HIGH}`","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"DannyDakota"},"content":"- The priority extension works for ToDo, Deadline and Event tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"DannyDakota"},"content":"- For Event tasks, format would be e.g `event CS2040S tutorial /at 2020-01-01 1000 /pri low`","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"DannyDakota"},"content":"- For Deadline tasks, likewise","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"DannyDakota"},"content":"- You can also choose not to specify priority by not specifying /pri","lastModifiedDate":"2022-02-16"},{"lineNumber":147,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"DannyDakota"},"content":"Example command usage and their outputs:","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"DannyDakota"},"content":"Command: todo eat lunch /pri medium","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"DannyDakota"},"content":"Output: [T][ ][M] eat lunch","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"DannyDakota"},"content":"Command: deadline thesis submission /by 2022-02-02 2000 /pri high","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"DannyDakota"},"content":"Output: [D][ ][H] thesis submission (by: Feb 2 2022 0800PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"DannyDakota"},"content":"Command: event CS2040S tutorial /at 2022-01-01 1000 /pri low","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"DannyDakota"},"content":"Output: [E][ ][L] CS2040S tutorial (at: Jan 1 2022 1000AM)","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"DannyDakota"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"DannyDakota"},"content":"Exits the program","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"DannyDakota"},"content":"Format: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"DannyDakota"},"content":"### Saving the data","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"DannyDakota"},"content":"Data in Productivilisation automatically saved in the hard disk on your computer after any changes to the task tracker","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"DannyDakota"},"content":"## FAQ","lastModifiedDate":"2022-02-16"},{"lineNumber":170,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":171,"author":{"gitId":"DannyDakota"},"content":"**Q:** How do I transfer my data to another Computer?","lastModifiedDate":"2022-02-16"},{"lineNumber":172,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":173,"author":{"gitId":"DannyDakota"},"content":"\u003e**A:** Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data file of your previous Productivilisation application","lastModifiedDate":"2022-02-16"},{"lineNumber":174,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":175,"author":{"gitId":"DannyDakota"},"content":"**Q:** Why should I use Productivilisation?","lastModifiedDate":"2022-02-16"},{"lineNumber":176,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"DannyDakota"},"content":"\u003e**A:** Because I spent a long time on it :grinning:","lastModifiedDate":"2022-02-16"},{"lineNumber":178,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":179,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":180,"author":{"gitId":"DannyDakota"},"content":"## Command Summary","lastModifiedDate":"2022-02-16"},{"lineNumber":181,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":182,"author":{"gitId":"DannyDakota"},"content":"| Action             | Format, Examples                                                                   |","lastModifiedDate":"2022-02-16"},{"lineNumber":183,"author":{"gitId":"DannyDakota"},"content":"|--------------------|------------------------------------------------------------------------------------| ","lastModifiedDate":"2022-02-16"},{"lineNumber":184,"author":{"gitId":"DannyDakota"},"content":"| **Add to-do task** | `todo {TASK}` e.g. `todo watch anime`                                              |","lastModifiedDate":"2022-02-16"},{"lineNumber":185,"author":{"gitId":"DannyDakota"},"content":"| **Add deadline**   | `deadline {TASK} /by {DATE} {TIME}` e.g. `deadline fix specs /by 2021-02-15 2100`  |","lastModifiedDate":"2022-02-16"},{"lineNumber":186,"author":{"gitId":"DannyDakota"},"content":"| **Add event**      | `event {TASK} /at {DATE} {TIME}` e.g. `event wash car /at 2022-03-01 1800 to 1900` |","lastModifiedDate":"2022-02-16"},{"lineNumber":187,"author":{"gitId":"DannyDakota"},"content":"| **List**           | `list`                                                                             |","lastModifiedDate":"2022-02-16"},{"lineNumber":188,"author":{"gitId":"DannyDakota"},"content":"| **Delete**         | `delete {TASK_NUMBER}` e.g. `delete 2`                                             |","lastModifiedDate":"2022-02-16"},{"lineNumber":189,"author":{"gitId":"DannyDakota"},"content":"| **Find**           | `find KEYWORD` e.g. `find cat`                                                     |","lastModifiedDate":"2022-02-16"},{"lineNumber":190,"author":{"gitId":"DannyDakota"},"content":"| **Mark**           | `mark {TASK_NUMBER}` e.g. `mark 3`                                                 |","lastModifiedDate":"2022-02-16"},{"lineNumber":191,"author":{"gitId":"DannyDakota"},"content":"| **Unmark**         | `unmark {TASK_NUMBER}` e.g. `unmark 2`                                             |","lastModifiedDate":"2022-02-16"},{"lineNumber":192,"author":{"gitId":"DannyDakota"},"content":"| **Priority**       | `{TASK SYNTAX} /pri {HIGH/MEDIUM/LOW}` e.g. `[T][ ][M] eat lunch`                  |","lastModifiedDate":"2022-02-16"},{"lineNumber":193,"author":{"gitId":"DannyDakota"},"content":"| **Exit**           | `bye`                                                                              |","lastModifiedDate":"2022-02-16"},{"lineNumber":194,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"DannyDakota":166,"-":28}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for DialogBox","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"     * @param text text to set for label of dialog box","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     * @param img image for avatar of user and productivilisation","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"     * creates a new user DialogBox with required image and label","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"     * @param text input from user","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"     * @param img image of user","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"     * @return new DialogBox label","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"     * creates a new Whey DialogBox with required image and label","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"     * @param text response from Whey","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"     * @param img image of Whey","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"     * @return new DialogBox label","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"DannyDakota":76}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.exception.DukeManager;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":" * Duke class containing entry point to program","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    public static int COUNTER \u003d 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for Duke object","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"     * @param filePath filepath of data to be saved/retrieved","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"            taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     * Entry point to run Whey, taking in inputs and outputting the appropriate response","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"    public void run(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        DukeManager dukeManager \u003d new DukeManager();","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"            String testCommand \u003d dukeManager.test(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            Command\u003cString\u003e newTask \u003d Parser.parseCommand(testCommand, taskList, storage, ui);","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"            if (!newTask.isRunning()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            System.out.print(e.getMessage() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"     * Function to convert system out from Whey to String","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"     * @param input input from text input","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"     * @return string output from Productivilisaiton","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"        ByteArrayOutputStream responseOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"        PrintStream stringConvert \u003d new PrintStream(responseOutput);","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"        PrintStream old \u003d System.out;","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        System.setOut(stringConvert);","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"        run(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"        System.out.flush();","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"        System.setOut(old);","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"        return responseOutput.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DannyDakota":68,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":" * Launcher class that serves as entry point into application","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"     * entry point to Whey GUI","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"     * @param args arguments for system input","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"DannyDakota":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    private String pathToFile \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    private Duke duke \u003d new Duke(pathToFile);","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * Show the stage for defined javafx configurations","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     * @param stage stage foundation to build productivilisation GUI","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"            stage.setTitle(\"Productivilisation\");","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"DannyDakota":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/slime.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mushroom.jpeg\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"     * Initialise the program","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        String welcomeMessage \u003d \"YO WHASSUPPP I\u0027m Productivitisation\\n\" + \"What can I do for you today?\";","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     * Set duke in javafx","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     * @param d Duke object to be set","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"DannyDakota":60}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":" * ByeCommand class","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class ByeCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for ByeCommand object that causes the program to exit","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     * changes the status of the program","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        super.changeRunning(false);","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":" * Abstract class for command","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":" * @param \u003cString\u003e Command object accepts String","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"public abstract class Command\u003cString\u003e {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"     * abstract method for runCommand to be implemented by subclasses","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    public abstract void runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * change status of program","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param isRunning boolean to change the status of program","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    public void changeRunning(boolean isRunning) {","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        this.isRunning \u003d isRunning;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"     * check status of program","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean to check status of program","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        return isRunning;","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":31}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" * Deadline Command class","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"public class DeadlineCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private String inputText;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for DeadlineCommand object","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * @param text unformatted string for deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to add this task to","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage of where this task will be added to","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @param ui ui of subsequent system out to user","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    public DeadlineCommand(String text, TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        this.inputText \u003d text;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"     * Splice the string and add to list and display to user","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        Deadline freshDeadline \u003d deadlineCreator();","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        taskList.addTask(freshDeadline);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        ui.showAddDeadline(freshDeadline, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    public Deadline deadlineCreator() {","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        String[] splicedString \u003d inputText.split(\" /by \");","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        String splicedDescription \u003d splicedString[0].substring(9);","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        if (inputText.contains(\"/pri\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"            String[] splicedDetails \u003d splicedString[1].split(\" /pri \");","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"            String dueDate \u003d splicedDetails[0];","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            String priorityLevel \u003d splicedDetails[1];","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"            Deadline freshDeadline \u003d new Deadline(splicedDescription, dueDate, priorityLevel, false);","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            return freshDeadline;","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            String dueDate \u003d splicedString[1];","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            Deadline freshDeadline \u003d new Deadline(splicedDescription, dueDate, \"\", false);","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"            return freshDeadline;","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":61}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" * DeleteCommand class","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"public class DeleteCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    private String inputText;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param text unformatted string for deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to add this task to","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage of where this task will be added to","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    public DeleteCommand(String text, TaskList list, Storage storage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        this.inputText \u003d text;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     * Splice the string and delete from list and display to user","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        int indexToDelete \u003d intSearch(inputText) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        if (indexToDelete \u003c 0 || indexToDelete \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"EH HULLO!! Task does not exist! Check again hehe\");","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            Task deleteTask \u003d taskList.getTask(indexToDelete);","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            taskList.deleteTask(indexToDelete);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"   \" + \"ALRIGHTY. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"                    + \"    \" + deleteTask + \"\\n\" + \"   Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"     * Format string to obtain index","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"     * @param inputText unformatted string","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"     * @return index of task to mark","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"    public int intSearch(String inputText) {","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"        String[] splicedString \u003d inputText.split(\" \");","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"        return Integer.parseInt(splicedString[1]);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":55}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" * EventCommand class","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"public class EventCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private String inputText;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for EventCommand object","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * @param description unformatted string for deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to add this task to","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage of where this task will be added to","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @param ui ui of subsequent system out to user","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    public EventCommand(String description, TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        this.inputText \u003d description;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"     * Splice the string and add to list and display to user","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        Event freshEvent \u003d eventCreator();","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        taskList.addTask(freshEvent);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        ui.showAddEvent(freshEvent, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"     * Creates an event object based on whether priority was specified","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"     * @return Event object","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"    public Event eventCreator() {","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        if (inputText.contains(\"/pri\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            String[] splicedString \u003d inputText.split(\" /at \");","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"            String splicedDescription \u003d splicedString[0].substring(6);","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            String[] splicedDetails \u003d splicedString[1].split(\" /pri \");","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"            String dueDate \u003d splicedDetails[0];","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            String priorityLevel \u003d splicedDetails[1];","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            Event freshEvent \u003d new Event(splicedDescription, dueDate, priorityLevel, false);","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"            return freshEvent;","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"            String[] splicedString \u003d inputText.split(\" /at \");","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"            String splicedDescription \u003d splicedString[0].substring(6);","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"            String dueDate \u003d splicedString[1];","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"            Event freshEvent \u003d new Event(splicedDescription, dueDate, \"\", false);","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"            return freshEvent;","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":65}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" * FindCommand class","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"public class FindCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private String command;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for find command","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param command command to format","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * @param list list of task to find","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    public FindCommand(String command, TaskList list) {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"     * command to return the list of Tasks required by find command","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        String searchText \u003d command.substring(5);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        ArrayList\u003cTask\u003e freshList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            if (currTask.toString().contains(searchText)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"                freshList.add(currTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"Here are the matching tasks in your list\");","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        for (Task s : freshList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"  \" + counter + \".\" + s);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"            counter++;","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"DannyDakota":47}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * list class","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"public class ListCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for list object","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to display","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    public ListCommand(TaskList list) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * display tasks in task list","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        int counter \u003d Duke.COUNTER;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"  \" + counter + \".\" + taskList.getTask(i));","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"            counter++;","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":34}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" * MarkCommand class","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"public class MarkCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    private String inputText;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for MarkCommand object","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param text string containing index of task to mark","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to mark specified task","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage of where this task will be marked","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    public MarkCommand(String text, TaskList list, Storage storage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        this.inputText \u003d text;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     * Mark task","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        int taskNumber \u003d intSearch(inputText) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        if (taskNumber \u003c taskList.getSize() \u0026\u0026 taskNumber \u003e\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            assert taskNumber \u003c taskList.getSize() : \"condition falsely returning true\";","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"            assert taskNumber \u003e\u003d 0 : \"condition falsely returning true\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            Task intendedTask \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            intendedTask.setDone(true);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"            assert intendedTask.getDone() \u003d\u003d true : \"Method not working\";","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"  \" + \"SOLID! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"                    + \"    \" + intendedTask);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"EH HULLO!! Task does not exist! Check again hehe\");","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"     * Format string to obtain index","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"     * @param inputText unformatted string","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"     * @return index of task to mark","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"    public int intSearch(String inputText) {","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"        String[] splicedString \u003d inputText.split(\" \");","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"        return Integer.parseInt(splicedString[1]);","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":58}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" * TodoCommand Class","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"public class TodoCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private String inputText;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for ToDoCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * @param description unformatted string for todo","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to add this task to","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage of where this task will be added to","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @param ui ui of subsequent system out to user","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    public TodoCommand(String description, TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        this.inputText \u003d description;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"     * add todo task to task list","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        ToDo freshToDo \u003d toDoCreator();","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        taskList.addTask(freshToDo);","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        ui.showAddTodo(freshToDo, taskList);","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"     * Creates a ToDo object based on whether priority was specified","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"     * @return ToDo object","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"    public ToDo toDoCreator() {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"        if (inputText.contains(\"/pri\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"            String[] splicedString \u003d inputText.split(\" /pri \");","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            String description \u003d splicedString[0].substring(5);","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"            String priority \u003d splicedString[1];","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            ToDo freshToDo \u003d new ToDo(description, priority);","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            return freshToDo;","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"            String splicedString \u003d inputText.substring(5);","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"            ToDo freshTodo \u003d new ToDo(splicedString, \"\");","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"            return freshTodo;","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":62}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" * UnmarkCommand class","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"public class UnmarkCommand extends Command\u003cString\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    private String inputText;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for UnmarkCommand object","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param text string containing index of task to unmark","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * @param list task list to unmark specified task","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage of where this task will be unmarked","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    public UnmarkCommand(String text, TaskList list, Storage storage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        this.inputText \u003d text;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        runCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     * method to unmark task","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    public void runCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        int taskNumber \u003d intSearch(inputText) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        if (taskNumber \u003c taskList.getSize() \u0026\u0026 taskNumber \u003e\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            assert taskNumber \u003c taskList.getSize() : \"condition falsely returning true\";","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"            assert taskNumber \u003e\u003d 0 : \"condition falsely returning true\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            Task intendedTask \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            intendedTask.setDone(false);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"            assert intendedTask.getDone() \u003d\u003d false : \"Method not working\";","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"  \" + \"AIYO! I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"                    + \"    \" + intendedTask);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            System.out.println(\"EH HULLO!! Task does not exist! Check again hehe\");","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"     * Format string to obtain index","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"     * @param inputText unformatted string","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"     * @return index of task to mark","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"    public int intSearch(String inputText) {","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"        String[] splicedString \u003d inputText.split(\" \");","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"        return Integer.parseInt(splicedString[1]);","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":58}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.exception;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":" * DukeException class","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for DukeException object","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"     * @param message message to be outputted","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"        super(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"DannyDakota":15}},{"path":"src/main/java/duke/exception/DukeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.exception;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":" * DukeManager class","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class DukeManager {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for DukeManager","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    public DukeManager() {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     * test if input is a valid command","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     * @param command input command","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * @return command if valid","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @throws DukeException if command not valid","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    public String test(String command) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        if ((command.replaceAll(\"\\\\s+\", \"\")).equals(\"list\")","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"                || (command.replaceAll(\"\\\\s+\", \"\")).equals(\"bye\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"            return command;","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        String[] keyWords \u003d {\"todo\", \"event\", \"deadline\", \"mark\", \"unmark\", \"delete\", \"find\"};","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        String[] splicedCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        if (splicedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        String key \u003d splicedCommand[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        String text \u003d splicedCommand[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        for (String s : keyWords) {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"            if (key.equals(s)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"                if (!text.isBlank()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"                    return command;","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"DannyDakota":41}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.command.*;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" * Parser class","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for parser object","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    public Parser() {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"     * Parse the command and select appropriate command","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * @param command input command","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @param taskList task list that the command will act on","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     * @param storage storage where command will store result","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"     * @param ui ui to interact with user","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"     * @return parsed command","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"     * @throws DukeException if input is not a command","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    public static Command\u003cString\u003e parseCommand(String command, TaskList taskList, Storage storage, Ui ui)","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"            throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        if ((command.replaceAll(\"\\\\s+\", \"\")).equals(\"bye\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        } else if ((command.replaceAll(\"\\\\s+\", \"\")).equals(\"list\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"            return new ListCommand(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            return new DeleteCommand(command, taskList, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            return new TodoCommand(command, taskList, storage, ui);","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"            return new DeadlineCommand(command, taskList, storage, ui);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"            return new EventCommand(command, taskList, storage, ui);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"            return new UnmarkCommand(command, taskList, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"            return new MarkCommand(command, taskList, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"            return new FindCommand(command, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            throw new DukeException(\"Oh dear, there must be an error somewhere!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":53}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.*;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import java.io.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" * Storage class","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    private String storedFilePath;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for storage object","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * @param filePath filepath of where data will be stored","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"            directory.mkdir();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"                File saveTask \u003d new File(filePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"                saveTask.createNewFile();","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        } else if (directory.exists()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"            storedFilePath \u003d filePath;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        this.storedFilePath \u003d filePath;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"     * modify contents of data","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     * @param taskList list of tasks be saved","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"            FileWriter fw \u003d new FileWriter(storedFilePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"            int counter \u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"                try {","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"                    fw.write(counter + \".\" + taskList.getTask(i) + \"\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"                    counter++;","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"            fw.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"     * loading data in file to program","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"     * @return data in file","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"     * @throws DukeException error occurred","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"            FileInputStream readFile \u003d new FileInputStream(storedFilePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"            Scanner sc \u003d new Scanner(readFile);","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"            diskParser(sc, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"            sc.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"            try {","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"                File saveTask \u003d new File(storedFilePath);","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"                saveTask.createNewFile();","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"            } catch (IOException err) {","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"        return taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"     * parse the text file to load the content","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"     * @param scanner scanner object to scan text file","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"     * @param taskList task list to add to current task list object","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"    public void diskParser(Scanner scanner, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"            String currTask \u003d scanner.nextLine();","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"            char taskType \u003d currTask.charAt(3);","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"            boolean isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"            if (currTask.charAt(6) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"                isDone \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"            if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"                char priorityLevel \u003d currTask.charAt(9);","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"                ToDo freshTodo \u003d new ToDo(currTask.substring(12), Character.toString(priorityLevel));","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"DannyDakota"},"content":"                if (isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"DannyDakota"},"content":"                    freshTodo.setDone(true);","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"                taskList.add(freshTodo);","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"            } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"DannyDakota"},"content":"                char priorityLevel \u003d currTask.charAt(9);","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"                String[] splicedString \u003d currTask.split(\" \\\\(by: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"                String description \u003d splicedString[0].substring(12);","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"                String date \u003d splicedString[1].substring(0, splicedString[1].length() - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"                Deadline freshDeadline \u003d new","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"                        Deadline(description, date, Character.toString(priorityLevel), true);","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"                if (isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"                    freshDeadline.setDone(true);","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"                taskList.add(freshDeadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"DannyDakota"},"content":"                char priorityLevel \u003d currTask.charAt(9);","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"DannyDakota"},"content":"                String[] splicedString \u003d currTask.split(\" \\\\(at: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"DannyDakota"},"content":"                String description \u003d splicedString[0].substring(12);","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"                String date \u003d splicedString[1].substring(0, splicedString[1].length() - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"DannyDakota"},"content":"                Event freshEvent \u003d new Event(description, date, Character.toString(priorityLevel), true);","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"                if (isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"                    freshEvent.setDone(true);","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"DannyDakota"},"content":"                taskList.add(freshEvent);","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":127}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" * Represents a Deadline Task","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     * Constructor to create a Deadline object","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     * @param description description of task","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * @param dueDate due date of task","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param priority priority level","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     * @param fromDisk boolean to determine if object was created from hard disk or from commandline","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    public Deadline(String description, String dueDate, String priority, boolean fromDisk) {","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        super(description, priority);","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        if (fromDisk) {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hhmma\");","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"            LocalDateTime parsedDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"            this.dueDate \u003d parsedDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"            try {","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"                LocalDateTime parsedDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"                this.dueDate \u003d parsedDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     * Override toString function to display task in required syntax","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     * @return String in required syntax","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"                + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmma\")) + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"DannyDakota":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * Event class","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for Event object","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     * @param description description of task","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     * @param dueDate due date of task","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * @param priority priority level","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @param fromDisk boolean to determine if object was created from hard disk or from commandline","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    public Event(String description, String dueDate, String priority, boolean fromDisk) {","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        super(description, priority);","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        if (fromDisk) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hhmma\");","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"            LocalDateTime parsedDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"            this.dueDate \u003d parsedDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"            LocalDateTime parsedDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"            this.dueDate \u003d parsedDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"     * Override toString function to display task in required syntax","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"     * @return String in required syntax","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"                + \" (at: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmma\")) + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"DannyDakota":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":" * Task class","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    private String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    private Priority priorityLevel;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    public enum Priority {","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"        LOW,","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"        MEDIUM,","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"        HIGH,","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        EMPTY","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    };","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for task object","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @param description description of task","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    public Task(String description, String priority) {","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        assert !this.isDone : \"isDone should be false after instantiating the object\";","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"            this.priorityLevel \u003d Priority.valueOf(determinePriority(priority));","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"            System.out.print(e.getMessage() + \"\\n\");","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"     * Determine priority of the task","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     * @param priority priority level based on specified string","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     * @return string conforming to enum class","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     * @throws DukeException if string provided does not specify priority","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    public String determinePriority(String priority) throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"        String upperCasePriority \u003d priority.toUpperCase();","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        if (upperCasePriority.equals(\"LOW\") || upperCasePriority.equals(\"L\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"            return \"LOW\";","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        } else if (upperCasePriority.equals(\"MEDIUM\") || upperCasePriority.equals(\"M\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"            return \"MEDIUM\";","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        } else if (upperCasePriority.equals(\"HIGH\") || upperCasePriority.equals(\"H\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            return \"HIGH\";","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"        } else if (priority.equals(\" \") || priority.equals(\"\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            return \"EMPTY\";","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            throw new DukeException(\"Incorrect priority level format!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"     * Getter for checking task","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean for whether task is done","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        return isDone;","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"     * Setter for to mark task as done","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"     * @param bool Set task according to boolean","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"    public void setDone(boolean bool) {","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"    public String getPriorityLevel(Priority priority) {","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"        switch (priorityLevel) {","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"        case LOW:","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"            return \"[L] \";","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"        case MEDIUM:","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"            return \"[M] \";","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"        case HIGH:","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"            return \"[H] \";","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"        default:","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"            return \"[ ] \";","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"     * Override the toString method from the object class","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"     * @return the task description with checkbox depending on isDone","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"        return \"[\"","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"                + (this.isDone ? \"X\" : \" \")","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"                + \"]\"","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"                + getPriorityLevel(priorityLevel)","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"                + this.description;","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DannyDakota":99}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":" * ToDo class","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for ToDo object","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"     * @param description description of task","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    public ToDo(String description, String priorityLevel) {","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"        super(description, priorityLevel);","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     * Override toString function to display task in required syntax","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"     * @return String in required syntax","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"DannyDakota":24}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":" * TaskList class","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for task list","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for task list from saved data","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @param list list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        taskList \u003d list;","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     * add task to list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     * @param task task to be added","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        assert taskList.size() \u003e 0 : \"Task List not updated\";","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     * delete task from list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     * @param n index of task to be deleted","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    public void deleteTask(int n) {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        this.taskList.remove(n);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"     * get task from list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"     * @param n index of task to be returned","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"     * @return task at specified index","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"    public Task getTask(int n) {","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"        return this.taskList.get(n);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"     * return size of task list","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"     * @return size of taks list","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":62}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" * Ui class","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"     * Constructor for Ui","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    public Ui() {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"     * read next input","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"     * @return String from input","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     * System out loading error","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"Loading error!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"     * System out welcome","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"YO WHASSUPPP I\u0027m Productivitisation\\n\" + \"What can I do for you today?\");","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"     * System out for exit program","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    public void showBye() {","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"  \" + \"That\u0027s all?? lame!!!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"     * System out for addition of deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"     * @param freshDeadline deadline task added","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"     * @param list current list of task","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"    public void showAddDeadline(Deadline freshDeadline, TaskList list) {","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"   \"","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"                + \"ALRIGHTY. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"                + \"    \"","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"                + freshDeadline","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"                + \"   Now you have \"","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"                + list.getSize()","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"     * System out for addition of event","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"     * @param freshEvent event task added","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"     * @param list current list of task","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"    public void showAddEvent(Event freshEvent, TaskList list) {","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"   \"","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"                + \"ALRIGHTY. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"                + \"    \"","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"                + freshEvent","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"                + \"   Now you have \"","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"                + list.getSize()","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"     * System out for addition of todo","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"     * @param freshTodo todo task added","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"     * @param list current list of task","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"    public void showAddTodo(ToDo freshTodo, TaskList list) {","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"        System.out.println(\"   \"","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"                + \"ALRIGHTY. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"                + \"    \"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"                + freshTodo","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"                + \"   Now you have \"","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"                + list.getSize()","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"DannyDakota":98}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" prefWidth\u003d\"280.0\"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #66cd00;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"        -fx-background-radius: 15; -fx-border-color: white; -fx-border-radius: 15; -fx-label-padding: 5;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"         -fx-max-height: 400; -fx-max-width: 400;\" text\u003d\"Label\" textFill\u003d\"#58526b\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"                \u003cFont name\u003d\"Copperplate\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" blendMode\u003d\"DARKEN\" fitHeight\u003d\"100.0\" fitWidth\u003d\"107.0\" pickOnBounds\u003d\"true\" smooth\u003d\"false\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        \u003cInsets /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"DannyDakota":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"background\" stylesheets\u003d\"@../stylesheet.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" opacity\u003d\"0.77\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"        \u003cfont\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"            \u003cFont name\u003d\"Copperplate\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"        \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"                \u003cFont name\u003d\"Copperplate\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"            \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" opacity\u003d\"0.77\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black; -fx-background-position: center;                      -fx-background-size: 600, 400;\" styleClass\u003d\"background\" stylesheets\u003d\"@/stylesheet.css\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"400.0\" style\u003d\"-fx-alignment: center; -fx-padding: 10px;\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"DannyDakota":26}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class EventTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    public void TimeParser_WithoutDisk_expectedBehavior() {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"        Event freshEvent \u003d new Event(\"do this\", \"2020-10-10 0000\", \"\", false);","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(\"[E][ ][ ] do this (at: Oct 10 2020 1200AM)\", freshEvent.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    public void TimeParser_WithDisk_expectedBehavior() {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"        Event freshEvent \u003d new Event(\"do this\", \"Oct 10 2020 1200AM\", \"\", true);","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(\"[E][ ][ ] do this (at: Oct 10 2020 1200AM)\", freshEvent.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"DannyDakota":18}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    public void toString_expectString_expectedBehavior() {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"        ToDo freshToDo \u003d new ToDo(\"Try this\", \"\");","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(\"[T][ ][ ] Try this\", freshToDo.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"DannyDakota":12}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    public void addTask_addTodo_expectedBehavior() {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        ToDo freshTodo \u003d new ToDo(\"try this\", \"\");","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        taskList.addTask(freshTodo);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(\"[T][ ][ ] try this\", taskList.getTask(0).toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    public void markTask_markTodo_expectedBehavior() {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        ToDo freshTodo \u003d new ToDo(\"try this\", \"\");","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        freshTodo.setDone(true);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        taskList.addTask(freshTodo);","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(\"[T][X][ ] try this\", taskList.getTask(0).toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"DannyDakota":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"DannyDakota":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DannyDakota":1,"-":20}}]
