[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"    id \u0027org.beryx.jlink\u0027 version \u00272.24.1\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"group \u0027com.example\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"ext {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    junitVersion \u003d \u00275.8.1\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"sourceCompatibility \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"targetCompatibility \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"application {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    mainClassName \u003d \u0027gui.Launcher\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"javafx {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"    version \u003d \u002711.0.2\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"    testImplementation(\"org.junit.jupiter:junit-jupiter-api:${junitVersion}\")","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:${junitVersion}\")","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"jlink {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    imageZip \u003d project.file(\"${buildDir}/distributions/app-${javafx.platform.classifier}.zip\")","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    options \u003d [\u0027--strip-debug\u0027, \u0027--compress\u0027, \u00272\u0027, \u0027--no-header-files\u0027, \u0027--no-man-pages\u0027]","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"    launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        name \u003d \u0027app\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"jlinkZip {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"    group \u003d \u0027distribution\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"alexteo98":44,"-":32}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"rootProject.name \u003d \"duke\"","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"public class Duke {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"    private TaskManager manager;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"    private boolean hasExited \u003d false;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"            ui.showLoadFilePath(storage.getFullPath());","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"            manager \u003d storage.loadTaskManagerFromFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"            ui.showLoadingComplete();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"            ui.showFileReadError();","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"            ui.showInitializeDefaults();","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"            manager \u003d new TaskManager();","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    public void run() {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        ui.showBanner();","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        ui.showList(manager);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"                String userInput \u003d ui.getUserInputLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"                System.out.println(command.execute(storage, ui, manager));","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"            assert !this.hasExited : \"Program has already exited!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"            assert command !\u003d null : \"Command is null!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"            this.hasExited \u003d command.isExit();","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"            return command.execute(storage, ui, manager);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"    public boolean hasExited() {","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        return this.hasExited;","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        new Duke(\"duke/data\").run();","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":66}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import duke.commands.MarkDoneCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import duke.commands.MarkUndoneCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import duke.commands.SortByDateCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import duke.commands.SortByNameCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"import duke.commands.UpdateCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"import duke.commands.UpdateDateCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"import duke.commands.UpdateNameCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"public class Parser {","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input to a task object.","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"     * @param userInput The string entered by the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"     * @return The task object parsed from the string.","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If a wrong format is entered by the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"    public static Task parseToTask(String userInput) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"            return Parser.newToDo(userInput);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"            return Parser.newDeadline(userInput);","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"            return Parser.newEvent(userInput);","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"            // Not used","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"            return null;","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    private static Todo newToDo(String s) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        String taskName \u003d s.replaceFirst(\"todo\", \"\").strip();","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Todo Name is empty!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        return new Todo(taskName);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"    private static Event newEvent(String s) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        String[] fields \u003d s.replaceFirst(\"event\", \"\").split(\"/at\");","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"        if (fields.length !\u003d 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Wrong format entered! Please enter \u003cEvent Name\u003e /at \u003cEvent Date\u003e\");","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        if (fields[0].strip().equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Event Name is empty!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        if (fields[1].strip().equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"No Date Specified!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"        String taskName \u003d fields[0].strip();","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        String dateString \u003d fields[1].strip();","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        assert !dateString.equals(\"\") : \"No date supplied!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        LocalDateTime date \u003d Parser.parseDateTime(dateString);","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"            return new Event(taskName, dateString);","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        return new Event(taskName, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"    private static Deadline newDeadline(String s) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        String[] fields \u003d s.replaceFirst(\"deadline\", \"\").split(\"/by\");","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"        if (fields.length !\u003d 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Wrong format entered! Please enter \u003cDeadline Name\u003e /by \u003cDeadline\u003e\");","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"        if (fields[0].strip().equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Deadline Name is empty!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"        if (fields[1].strip().equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"No Date Specified!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"        String taskName \u003d fields[0].strip();","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        String dateString \u003d fields[1].strip();","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        assert !dateString.equals(\"\") : \"No date supplied!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"        LocalDateTime date \u003d Parser.parseDateTime(dateString);","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"            return new Deadline(taskName, dateString);","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"        return new Deadline(taskName, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"     * Converts a Task to the correct format to be saved in the file.","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"     * @param t The task to be saved.","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"     * @return The String format of the task to be stored in the file.","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"    public static String parseToFileFromTask(Task t) {","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"        String dateStr \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"        if (t.getDateObj() \u003d\u003d null) {","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"            dateStr \u003d t.getDate();","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"            if (dateStr.equals(\"\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"                dateStr \u003d \"None\";","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"            dateStr \u003d t.getDateObj().format(format);","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"%c\\t%c\\t%s\\t%s\", t.getType(), t.getDone(), t.getTaskName(), dateStr);","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"     * Parses the contents saved in the file to Task objects.","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"     * @param fileInput The string representing the Task object stored in the file.","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"     * @return The Task that is parsed.","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If the input is in the wrong format.","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"    public static Task parseToTaskFromFile(String fileInput) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"        // \u003ctype\u003e\\t\u003cdone\u003e\\t\u003cname\u003e\\t\u003cdate\u003e","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"        char type;","lastModifiedDate":"2022-01-22"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"        char done;","lastModifiedDate":"2022-01-22"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"        String name;","lastModifiedDate":"2022-01-22"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"        String dateStr;","lastModifiedDate":"2022-01-30"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"        LocalDateTime date;","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"        Task t;","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"            String[] split \u003d fileInput.split(\"\\t\");","lastModifiedDate":"2022-01-22"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"            type \u003d split[0].toCharArray()[0];","lastModifiedDate":"2022-01-22"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"            done \u003d split[1].toCharArray()[0];","lastModifiedDate":"2022-01-22"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"            name \u003d split[2].strip();","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"                throw new DukeException(\"Unable to load task from file!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"            dateStr \u003d split[3];","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"alexteo98"},"content":"            date \u003d Parser.parseDateTime(split[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"alexteo98"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Unable to load task from file!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"        switch(type) {","lastModifiedDate":"2022-01-22"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-01-22"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"            t \u003d new Todo(name);","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-01-22"},{"lineNumber":165,"author":{"gitId":"alexteo98"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"alexteo98"},"content":"                t \u003d new Deadline(name, dateStr);","lastModifiedDate":"2022-01-31"},{"lineNumber":167,"author":{"gitId":"alexteo98"},"content":"            } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"alexteo98"},"content":"                t \u003d new Deadline(name, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"alexteo98"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":171,"author":{"gitId":"alexteo98"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-01-22"},{"lineNumber":172,"author":{"gitId":"alexteo98"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"alexteo98"},"content":"                t \u003d new Event(name, dateStr);","lastModifiedDate":"2022-01-31"},{"lineNumber":174,"author":{"gitId":"alexteo98"},"content":"            } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":175,"author":{"gitId":"alexteo98"},"content":"                t \u003d new Event(name, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"alexteo98"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":178,"author":{"gitId":"alexteo98"},"content":"        default:","lastModifiedDate":"2022-01-22"},{"lineNumber":179,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Unable to load task from file!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":181,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":182,"author":{"gitId":"alexteo98"},"content":"        if (done \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":183,"author":{"gitId":"alexteo98"},"content":"            t.markDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":184,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":186,"author":{"gitId":"alexteo98"},"content":"        assert t !\u003d null : \"No task parsed!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":187,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":188,"author":{"gitId":"alexteo98"},"content":"        return t;","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":191,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2022-02-09"},{"lineNumber":193,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":194,"author":{"gitId":"alexteo98"},"content":"     * @param input The string given by the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":195,"author":{"gitId":"alexteo98"},"content":"     * @return A command representing the command to execute.","lastModifiedDate":"2022-02-09"},{"lineNumber":196,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If the string entered is not of the correct form.","lastModifiedDate":"2022-02-09"},{"lineNumber":197,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":198,"author":{"gitId":"alexteo98"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":199,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":200,"author":{"gitId":"alexteo98"},"content":"        input \u003d input.strip();","lastModifiedDate":"2022-02-12"},{"lineNumber":201,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"alexteo98"},"content":"        if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":203,"author":{"gitId":"alexteo98"},"content":"            return newAddCommand(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"alexteo98"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":205,"author":{"gitId":"alexteo98"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"alexteo98"},"content":"        } else if (input.equals(\"list name\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":207,"author":{"gitId":"alexteo98"},"content":"            return new SortByNameCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":208,"author":{"gitId":"alexteo98"},"content":"        } else if (input.equals(\"list date\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":209,"author":{"gitId":"alexteo98"},"content":"            return new SortByDateCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":210,"author":{"gitId":"alexteo98"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":211,"author":{"gitId":"alexteo98"},"content":"            return newMarkDoneCommand(input.replaceFirst(\"mark\", \"\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":212,"author":{"gitId":"alexteo98"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":213,"author":{"gitId":"alexteo98"},"content":"            return newMarkUndoneCommand(input.replaceFirst(\"unmark\", \"\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":214,"author":{"gitId":"alexteo98"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":215,"author":{"gitId":"alexteo98"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":216,"author":{"gitId":"alexteo98"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":217,"author":{"gitId":"alexteo98"},"content":"            return newDeleteTaskCommand(input.replaceFirst(\"delete\", \"\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":218,"author":{"gitId":"alexteo98"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":219,"author":{"gitId":"alexteo98"},"content":"            return newFindCommand(input.replaceFirst(\"find\", \"\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":220,"author":{"gitId":"alexteo98"},"content":"        } else if (input.startsWith(\"update\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":221,"author":{"gitId":"alexteo98"},"content":"            return newUpdateCommand(input.replaceFirst(\"update\", \"\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":222,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":224,"author":{"gitId":"alexteo98"},"content":"        throw new DukeException(\"Invalid Command!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":225,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":226,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":227,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":228,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into an add command.","lastModifiedDate":"2022-02-13"},{"lineNumber":229,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":230,"author":{"gitId":"alexteo98"},"content":"     * @param input The user input specifying the task to add.","lastModifiedDate":"2022-02-13"},{"lineNumber":231,"author":{"gitId":"alexteo98"},"content":"     * @return The command to add the task specified by the user.","lastModifiedDate":"2022-02-13"},{"lineNumber":232,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If the user input fails to parse to a Task.","lastModifiedDate":"2022-02-13"},{"lineNumber":233,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":234,"author":{"gitId":"alexteo98"},"content":"    public static AddCommand newAddCommand(String input) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":235,"author":{"gitId":"alexteo98"},"content":"        Task taskToAdd \u003d Parser.parseToTask(input);","lastModifiedDate":"2022-02-12"},{"lineNumber":236,"author":{"gitId":"alexteo98"},"content":"        assert taskToAdd !\u003d null : \"Failed to parse user input to task!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":237,"author":{"gitId":"alexteo98"},"content":"        return new AddCommand(taskToAdd);","lastModifiedDate":"2022-02-12"},{"lineNumber":238,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":239,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":240,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":241,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into a delete command.","lastModifiedDate":"2022-02-13"},{"lineNumber":242,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":243,"author":{"gitId":"alexteo98"},"content":"     * @param index The user input to parse.","lastModifiedDate":"2022-02-13"},{"lineNumber":244,"author":{"gitId":"alexteo98"},"content":"     * @return The command to delete the task specified with an index.","lastModifiedDate":"2022-02-13"},{"lineNumber":245,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If an invalid index is entered.","lastModifiedDate":"2022-02-13"},{"lineNumber":246,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":247,"author":{"gitId":"alexteo98"},"content":"    public static DeleteTaskCommand newDeleteTaskCommand(String index) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":248,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":249,"author":{"gitId":"alexteo98"},"content":"            int indexToDelete \u003d Integer.parseInt(index.strip());","lastModifiedDate":"2022-02-12"},{"lineNumber":250,"author":{"gitId":"alexteo98"},"content":"            return new DeleteTaskCommand(indexToDelete);","lastModifiedDate":"2022-02-12"},{"lineNumber":251,"author":{"gitId":"alexteo98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":252,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Invalid number entered! Please enter an integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":253,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":254,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":255,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":256,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":257,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into a find command.","lastModifiedDate":"2022-02-13"},{"lineNumber":258,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":259,"author":{"gitId":"alexteo98"},"content":"     * @param keyword The keyword to search the tasks for.","lastModifiedDate":"2022-02-13"},{"lineNumber":260,"author":{"gitId":"alexteo98"},"content":"     * @return The command to find tasks containing the keyword.","lastModifiedDate":"2022-02-13"},{"lineNumber":261,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":262,"author":{"gitId":"alexteo98"},"content":"    public static FindCommand newFindCommand(String keyword) {","lastModifiedDate":"2022-02-12"},{"lineNumber":263,"author":{"gitId":"alexteo98"},"content":"        keyword \u003d keyword.strip();","lastModifiedDate":"2022-02-12"},{"lineNumber":264,"author":{"gitId":"alexteo98"},"content":"        assert !keyword.equals(\"\") : \"No keyword supplied!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":265,"author":{"gitId":"alexteo98"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2022-02-12"},{"lineNumber":266,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":267,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":268,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":269,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into a mark done command.","lastModifiedDate":"2022-02-13"},{"lineNumber":270,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":271,"author":{"gitId":"alexteo98"},"content":"     * @param input The user input to parse.","lastModifiedDate":"2022-02-13"},{"lineNumber":272,"author":{"gitId":"alexteo98"},"content":"     * @return The command to mark the task as done.","lastModifiedDate":"2022-02-13"},{"lineNumber":273,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If an invalid index is entered.","lastModifiedDate":"2022-02-13"},{"lineNumber":274,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":275,"author":{"gitId":"alexteo98"},"content":"    public static MarkDoneCommand newMarkDoneCommand(String input) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":276,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":277,"author":{"gitId":"alexteo98"},"content":"            int indexToMark \u003d Integer.parseInt(input.strip()) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":278,"author":{"gitId":"alexteo98"},"content":"            return new MarkDoneCommand(indexToMark);","lastModifiedDate":"2022-02-12"},{"lineNumber":279,"author":{"gitId":"alexteo98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":280,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Invalid number entered! Please enter an integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":281,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":282,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":283,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":284,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":285,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into a mark undone command.","lastModifiedDate":"2022-02-13"},{"lineNumber":286,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":287,"author":{"gitId":"alexteo98"},"content":"     * @param input The user input to parse.","lastModifiedDate":"2022-02-13"},{"lineNumber":288,"author":{"gitId":"alexteo98"},"content":"     * @return The command to mark the task as undone.","lastModifiedDate":"2022-02-13"},{"lineNumber":289,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If an invalid index is entered.","lastModifiedDate":"2022-02-13"},{"lineNumber":290,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":291,"author":{"gitId":"alexteo98"},"content":"    public static MarkUndoneCommand newMarkUndoneCommand(String input) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":292,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":293,"author":{"gitId":"alexteo98"},"content":"            int indexToMark \u003d Integer.parseInt(input.strip()) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":294,"author":{"gitId":"alexteo98"},"content":"            return new MarkUndoneCommand(indexToMark);","lastModifiedDate":"2022-02-12"},{"lineNumber":295,"author":{"gitId":"alexteo98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":296,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Invalid number entered! Please enter an integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":297,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":298,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":299,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":300,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":301,"author":{"gitId":"alexteo98"},"content":"     * Parses the user input into an update command.","lastModifiedDate":"2022-02-13"},{"lineNumber":302,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":303,"author":{"gitId":"alexteo98"},"content":"     * @param input The user input to parse.","lastModifiedDate":"2022-02-13"},{"lineNumber":304,"author":{"gitId":"alexteo98"},"content":"     * @return The command to update the name or date of the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":305,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If an invalid index is entered.","lastModifiedDate":"2022-02-13"},{"lineNumber":306,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":307,"author":{"gitId":"alexteo98"},"content":"    public static UpdateCommand newUpdateCommand(String input) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":308,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":309,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":310,"author":{"gitId":"alexteo98"},"content":"            int indexToUpdate \u003d Integer.parseInt(input.strip().split(\" \")[0]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":311,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":312,"author":{"gitId":"alexteo98"},"content":"            if (input.contains(\"/name\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":313,"author":{"gitId":"alexteo98"},"content":"                String newName \u003d input.split(\"/name\")[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":314,"author":{"gitId":"alexteo98"},"content":"                return new UpdateNameCommand(indexToUpdate, newName);","lastModifiedDate":"2022-02-12"},{"lineNumber":315,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":316,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":317,"author":{"gitId":"alexteo98"},"content":"            if (input.contains(\"/date\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":318,"author":{"gitId":"alexteo98"},"content":"                String inputDate \u003d input.split(\"/date\")[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":319,"author":{"gitId":"alexteo98"},"content":"                assert !inputDate.equals(\"\") : \"No date supplied!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":320,"author":{"gitId":"alexteo98"},"content":"                LocalDateTime date \u003d Parser.parseDateTime(inputDate);","lastModifiedDate":"2022-02-12"},{"lineNumber":321,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":322,"author":{"gitId":"alexteo98"},"content":"                if (date !\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":323,"author":{"gitId":"alexteo98"},"content":"                    return new UpdateDateCommand(indexToUpdate, date);","lastModifiedDate":"2022-02-12"},{"lineNumber":324,"author":{"gitId":"alexteo98"},"content":"                } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":325,"author":{"gitId":"alexteo98"},"content":"                    return new UpdateDateCommand(indexToUpdate, inputDate);","lastModifiedDate":"2022-02-12"},{"lineNumber":326,"author":{"gitId":"alexteo98"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":327,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":328,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":329,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Invalid format entered! \" +","lastModifiedDate":"2022-02-13"},{"lineNumber":330,"author":{"gitId":"alexteo98"},"content":"                    \"Please enter \\\"/date\\\" to change date or \\\"/name\\\" to change name\");","lastModifiedDate":"2022-02-13"},{"lineNumber":331,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":332,"author":{"gitId":"alexteo98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":333,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Invalid number entered! Please enter an integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":334,"author":{"gitId":"alexteo98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":335,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"No name or date entered!\");","lastModifiedDate":"2022-02-13"},{"lineNumber":336,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":337,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":338,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":339,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":340,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":341,"author":{"gitId":"alexteo98"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2022-02-09"},{"lineNumber":342,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":343,"author":{"gitId":"alexteo98"},"content":"     * @param input The string to try to parse into a LocalDateTime object","lastModifiedDate":"2022-02-09"},{"lineNumber":344,"author":{"gitId":"alexteo98"},"content":"     * @return The LocalDateTime object if successfully parsed, null if it failed.","lastModifiedDate":"2022-02-09"},{"lineNumber":345,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":346,"author":{"gitId":"alexteo98"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2022-01-26"},{"lineNumber":347,"author":{"gitId":"alexteo98"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":348,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":349,"author":{"gitId":"alexteo98"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(input.strip(), format);","lastModifiedDate":"2022-02-12"},{"lineNumber":350,"author":{"gitId":"alexteo98"},"content":"            return date;","lastModifiedDate":"2022-01-27"},{"lineNumber":351,"author":{"gitId":"alexteo98"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":352,"author":{"gitId":"alexteo98"},"content":"            return null;","lastModifiedDate":"2022-01-26"},{"lineNumber":353,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":354,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":355,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"alexteo98":355}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    private String filePath \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    private String dirPath \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    private File file;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    public Storage() { }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @param path The path of the file to save and load from.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        String fileSeparator \u003d \"/\";","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        filePath \u003d System.getProperty(\"user.home\") + fileSeparator + path;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        String dir \u003d path.substring(0, path.lastIndexOf(\"/\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        dirPath \u003d System.getProperty(\"user.home\") + fileSeparator + dir;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"     * Loads a TaskManager from the information saved in the file.","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"     * @return A TaskManager containing all tasks from the saved file.","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If an error is encountered when accessing the saved file.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    public TaskManager loadTaskManagerFromFile() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"                    String fileInput \u003d scanner.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"                    try {","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"                        Task t \u003d Parser.parseToTaskFromFile(fileInput);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"                        tasks.add(t);","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"                    } catch (DukeException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"                        continue;","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"                return new TaskManager(tasks);","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"                throw new DukeException(\"Unable to read Task List from file!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        } catch (SecurityException | IOException exception) {","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Unable to read Task List from file!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"     * Saves the contents of the current task manager to a file to be loaded later.","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The task manager to be saved.","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"     * @return True if task manager is saved successfully.","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If error is encountered during saving.","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    public boolean saveTaskManager(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"            file \u003d new File(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"            if (!dirExists()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"                boolean dirCreated \u003d createDir();","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"                if (!dirCreated) {","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"                    throw new IOException(\"Unable to create directory!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"            for (Task task: taskManager.getTaskList()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"                writer.write(Parser.parseToFileFromTask(task) + \"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"            writer.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"            return true;","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"            throw new DukeException(\"Unable to save to disk!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"     * Checks if the directory of the file exists.","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"     * @return True if the directory exists.","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"    public boolean dirExists() {","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"        return dir.exists();","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"     * Creates the directory that the file will be saved in.","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"     * @return True if the directory is successfully created, false otherwise.","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"    public boolean createDir() {","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"        return dir.mkdir();","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"    public String getFullPath() {","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"        return this.filePath;","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"alexteo98":117}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"    public TaskManager() { }","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    public boolean deleteTask(Task t) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"        return tasks.remove(t);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    public boolean deleteTask(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        return tasks.remove(index) !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     * Marks a task as done in the current task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"     * @param index The index of the task in this task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"     * @return True if the task is successfully marked, false otherwise.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    public boolean markTaskDone(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        if (tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"                return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"            } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                return t.markDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"     * Marks a task as undone in the current task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"     * @param index The index of the task in this task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"     * @return True if the task is successfully unmarked, false otherwise.","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"    public boolean markTaskUndone(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        if (tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"                return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"            } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"                Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"                return t.markUndone();","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"            return null;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"            return null;","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"    public int size() {","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"alexteo98":83}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"public class Ui {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"    private static final String line \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"            \"------------------------------------------------\";","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private static final String doubleLine \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    private PrintStream writer \u003d System.out;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     * Returns a help menu of possible commands.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * @return Help menu.","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public String showHelpMenu() {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        String helpMenu \u003d \"List of available commands:\\n\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"list\\\": View Current Task List\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"list name\\\": View Current Task List sorted by name\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"list date\\\": View Current Task List sorted by date\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"todo \u003cname\u003e\\\": Add a new Task\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"deadline \u003cname\u003e /by \u003cdate/time\u003e\\\": Add a new Deadline\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"event \u003cname\u003e /at \u003cdate/time\u003e\\\": Add a new Event\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"delete \u003cnumber\u003e\\\": delete the corresponding entry in your task list\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"mark \u003cnumber\u003e\\\": mark the corresponding entry in your task list as done\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"unmark \u003cnumber\u003e\\\": mark the corresponding entry in your task list as not done\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"update \u003cnumber\u003e /date \u003cnew date\u003e\\\": Updates the task number with a new date\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"                + \"\\\"update \u003cnumber\u003e /name \u003cnew name\u003e\\\": Updates the task number with a new name \";","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        return helpMenu;","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    public String showBanner() {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        String intro \u003d \"I am a Personal Assistant Chatbot that helps you to keep track of various things.\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"                + \"Let\u0027s get started.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        return \"Hello from\" + \"\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"                + logo + \"\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"                + intro + \" \";","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"    public String showBye() {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        return line + \"\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"                + bye + \"\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"                + line;","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"    // Error Messages","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"    public String showInvalidIntegerError() {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        return \"Invalid number entered! Please enter an integer\";","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    // Mark/Unmark Messages","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    public String showMarked(Task t) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"    Nice! I\u0027ve marked this task as done:\\n+++ %s\", t);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    public String showUnmarked(Task t) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"    OK, I\u0027ve marked this task as not done yet:\\n--- %s\", t);","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"    public String showUnmarkNotNeeded(Task t) {","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"    This task has not been marked as done yet:\\n    %s\", t);","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"    public String showMarkNotNeeded(Task t) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"    This task is already marked as done:\\n    %s\", t);","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"    public String showMarkOutOfBounds() {","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"        return \"Invalid number entered! No tasks marked.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"    public String showUnmarkOutOfBounds() {","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"        return \"Invalid number entered! No tasks unmarked.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"    public String showMarkEmptyList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"        return \"There are no tasks in your task list to mark\";","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"    public String showUnmarkEmptyList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        return \"There are no tasks in your task list to unmark\";","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"     * Returns a list displaying all tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"     * @param tm The TaskManager containing the tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"     * @return A string listing the tasks in taskManager.","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"    public String showList(TaskManager tm) {","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        String s \u003d doubleLine + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        if (tm.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"            s +\u003d \"Your task list is empty.\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"            s +\u003d \"Here is your task list:\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"            for (Task t : tm.getTaskList()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"                s +\u003d String.format(\"%d.%s\\n\", i, t.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"                i++;","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        s +\u003d doubleLine;","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"        return s;","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"     * Returns a list displaying the results of tasks that was found.","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"     * @param tm The TaskManager containing the results of the find command.","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"     * @return A string listing the find results.","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"    public String showFindResults(TaskManager tm) {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"        String s \u003d doubleLine + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"        if (tm.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"            s +\u003d \"No tasks found!\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"            s +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"            for (Task t : tm.getTaskList()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"                s +\u003d String.format(\"%d.%s\\n\", i, t.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"                i++;","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"        s +\u003d doubleLine;","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"        return s;","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"    // Add/Delete Messages","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"     * Returns a string showing the task that was added.","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"     * @param t The task that was added.","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"     * @param numberOfTasks The number of tasks left.","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"     * @return A string describing the added task.","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"    public String showAddedTask(Task t, int numberOfTasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"                + \"Now you have %d tasks in the list.\", t.toString(), numberOfTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"     * Returns a string showing the task that was deleted.","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"     * @param t The task that was deleted.","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"alexteo98"},"content":"     * @param numberOfTasks The number of tasks left.","lastModifiedDate":"2022-02-13"},{"lineNumber":156,"author":{"gitId":"alexteo98"},"content":"     * @return A string describing the deleted task.","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"    public String showDeletedTask(Task t, int numberOfTasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"Noted. I have removed this task:\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"                + \"\\t%s\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"                + \"There are now %d tasks in your task list\\n\", t, numberOfTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"    public String showDeleteEmptyList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"        return \"There are no tasks in your task list to delete.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"alexteo98"},"content":"    public String showDeleteFailed() {","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"alexteo98"},"content":"        return \"Delete Task Failed\";","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":169,"author":{"gitId":"alexteo98"},"content":"    public String showDeleteOutOfBounds(int limit) {","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"Invalid number entered! The number entered must be between 1 and %s\", limit);","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"alexteo98"},"content":"    // Update Messages","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"alexteo98"},"content":"    public String showNoName() {","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"alexteo98"},"content":"        return \"No Name entered!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"alexteo98"},"content":"    public String showUpdateOutOfBounds() {","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"alexteo98"},"content":"        return \"Invalid number entered! No tasks updated.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":179,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":180,"author":{"gitId":"alexteo98"},"content":"    public String showUpdateSuccess(Task t) {","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"+++ Nice! I\u0027ve updated this task:\\n... %s\", t);","lastModifiedDate":"2022-02-09"},{"lineNumber":182,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":183,"author":{"gitId":"alexteo98"},"content":"    public String showIncompatibleType() {","lastModifiedDate":"2022-02-09"},{"lineNumber":184,"author":{"gitId":"alexteo98"},"content":"        return \"No date information is associated with this task.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"alexteo98"},"content":"    public String showSameDateError() {","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"alexteo98"},"content":"        return \"Updated Date is the same as the old date!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":189,"author":{"gitId":"alexteo98"},"content":"    public String showSameNameError() {","lastModifiedDate":"2022-02-09"},{"lineNumber":190,"author":{"gitId":"alexteo98"},"content":"        return \"Updated name is the same as the old name!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":191,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":193,"author":{"gitId":"alexteo98"},"content":"    // Save/Load Files","lastModifiedDate":"2022-01-20"},{"lineNumber":194,"author":{"gitId":"alexteo98"},"content":"    public String showInitializeDefaults() {","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"alexteo98"},"content":"        return \"...Initializing Defaults...\";","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":197,"author":{"gitId":"alexteo98"},"content":"    public String showLoadFilePath(String filePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":198,"author":{"gitId":"alexteo98"},"content":"        return \"Loading task from: \" + filePath;","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":200,"author":{"gitId":"alexteo98"},"content":"    public String showFileReadError() {","lastModifiedDate":"2022-02-06"},{"lineNumber":201,"author":{"gitId":"alexteo98"},"content":"        return \"Error Reading from file!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":202,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":203,"author":{"gitId":"alexteo98"},"content":"    public String showLoadingComplete() {","lastModifiedDate":"2022-02-06"},{"lineNumber":204,"author":{"gitId":"alexteo98"},"content":"        return \"Loading Completed!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":205,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":206,"author":{"gitId":"alexteo98"},"content":"    public String showSavingComplete() {","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"alexteo98"},"content":"        return \"Saving Completed!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":209,"author":{"gitId":"alexteo98"},"content":"    public String showSavingFailed() {","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"alexteo98"},"content":"        return \"Saving Failed!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":212,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":213,"author":{"gitId":"alexteo98"},"content":"    public String getUserInputLine() {","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"alexteo98"},"content":"        writer.print(\"--\u003e \");","lastModifiedDate":"2022-01-30"},{"lineNumber":215,"author":{"gitId":"alexteo98"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"alexteo98"},"content":"    public String getUserInput() {","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"alexteo98"},"content":"        return scanner.next();","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":220,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":221,"author":{"gitId":"alexteo98"},"content":"    public String showMessage(String s) {","lastModifiedDate":"2022-02-06"},{"lineNumber":222,"author":{"gitId":"alexteo98"},"content":"        return s;","lastModifiedDate":"2022-02-06"},{"lineNumber":223,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":224,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":225,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":226,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"alexteo98":226}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" * Represents a command to Add a new Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    private Task taskToAdd;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    public AddCommand(Task t) {","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"        this.taskToAdd \u003d t;","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * Executes and adds a Task to TaskManager. Throws a Duke Exception","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * if the task entered is in the wrong format. Returns true if the command executed successfully,","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @param storage To Storage to save after the command executes.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output to.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager that contains the Task object.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * @return true if command executed successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If format of the task is wrong.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        assert taskToAdd !\u003d null : \"No task to add in AddCommand!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        taskManager.addTask(taskToAdd);","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        save(storage, ui, taskManager);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        return ui.showAddedTask(taskToAdd, taskManager.size());","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"alexteo98":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * Represents a general command entered by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" * @see AddCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" * @see DeleteTaskCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":" * @see ExitCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":" * @see ListCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":" * @see SortByDateCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":" * @see SortByNameCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    public Command() { }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * Saves the given Tasks in the given TaskManager to the storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * Shows a success message to the Ui when saved successfully,","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * or an error message otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * @param storage The storage to save the TaskManager to.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display after saving success or failure.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager to save.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    protected void save(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"            storage.saveTaskManager(taskManager);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"            ui.showSavingComplete();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"            ui.showSavingFailed();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"     * Executes the given command type.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"     * @param storage The storage to save the TaskManager to if required.","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output of the command to.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager containing the tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"     * @return true if the command executes successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If there is an error encountered during execution.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"    public abstract String execute(Storage storage, Ui ui, TaskManager taskManager) throws DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"alexteo98":54}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private int indexToDelete;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"        this.indexToDelete \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * Executes and deletes a task from the given TaskManager.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * Returns true when the task is deleted, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @param storage To Storage to save after the command executes.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output to.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager that contains the Task object.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @return true if command executed successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        if (taskManager.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"            return ui.showDeleteEmptyList();","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        if (this.indexToDelete \u003c 0 || this.indexToDelete \u003e\u003d taskManager.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"            return ui.showDeleteOutOfBounds(taskManager.size());","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        Task toDelete \u003d taskManager.getTask(this.indexToDelete);","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        boolean isSuccess \u003d taskManager.deleteTask(this.indexToDelete);","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        if (isSuccess) {","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"            save(storage, ui, taskManager);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"            return ui.showDeletedTask(toDelete, taskManager.size());","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        return ui.showDeleteFailed();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":45}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":" * Represents a command to cause the application to quit.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     * Executes and shows a goodbye message to the Ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * @param storage Not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the goodbye message to.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager Not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * @return true after displaying goodbye message to the ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        return ui.showBye();","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"alexteo98":28}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" * Represents a command to find all tasks containing the specified keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    private String keyword;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * Executes and finds all tasks with names containing the supplied keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @param storage Not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display search results to.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The Task Manager containing all tasks to search in.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * @return True after printing search results.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        assert !keyword.equals(\"\") : \"No keyword supplied!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"                new ArrayList\u003c\u003e(taskManager.getTaskList())","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"                        .stream()","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"                        .filter(x -\u003e x.getTaskName().contains(keyword))","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        return ui.showFindResults(new TaskManager(results));","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"alexteo98":41}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * Represents a command to show all tasks in the TaskManager.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"     * Executes and prints the list of tasks currently in the TaskManager.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"     * Returns true after displaying the task list to the Ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"     * @param storage Not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the task list to.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager that contains the tasks to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * @return true after the list is displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        return ui.showList(taskManager);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"alexteo98":25}},{"path":"src/main/java/duke/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private int indexToMark;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"        this.indexToMark \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * Executes and marks the Task as not done. If an invalid number is provided,","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * throws a Duke Exception containing the error message. Returns true","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * if executed successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * @param storage To Storage to save after the command executes.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output to.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager that contains the Task object.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     * @return true if command executed successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If index entered is not a number.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"            if (taskManager.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"                return ui.showMarkEmptyList();","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            if (this.indexToMark \u003c 0 || indexToMark \u003e\u003d taskManager.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"                return ui.showMarkOutOfBounds();","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"            boolean isSuccess \u003d taskManager.markTaskDone(indexToMark);","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"            if (isSuccess) {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                save(storage, ui, taskManager);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                return ui.showMarked(taskManager.getTask(indexToMark));","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"            return ui.showMarkNotNeeded(taskManager.getTask(indexToMark));","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"            return ui.showInvalidIntegerError();","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"alexteo98":49}},{"path":"src/main/java/duke/commands/MarkUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"public class MarkUndoneCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private int indexToUnmark;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    public MarkUndoneCommand(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"        this.indexToUnmark \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * Executes and marks the Task as done. If an invalid number is provided,","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * throws a Duke Exception containing the error message. Returns true","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * if executed successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * @param storage To Storage to save after the command executes.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output to.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager that contains the Task object.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     * @return true if command executed successfully, false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * @throws DukeException If index entered is not a number.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"            if (taskManager.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"                return ui.showUnmarkEmptyList();","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            if (indexToUnmark \u003c 0 || indexToUnmark \u003e\u003d taskManager.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"                return ui.showUnmarkOutOfBounds();","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"            boolean isSuccess \u003d taskManager.markTaskUndone(indexToUnmark);","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"            if (isSuccess) {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                save(storage, ui, taskManager);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                return ui.showUnmarked(taskManager.getTask(indexToUnmark));","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            return ui.showUnmarkNotNeeded(taskManager.getTask(indexToUnmark));","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"            return \"Invalid number entered!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"alexteo98":49}},{"path":"src/main/java/duke/commands/SortByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":" * Represents a command to display the current tasks in TaskManager, sorted by Date.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"public class SortByDateCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     * Executes and displays the given TaskManager to the Ui, ordered by their date.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * @param storage Not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the task list to.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The Task Manager that contains the list of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * @return true after the list is displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @see TaskByDateComparator","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        ArrayList tasks \u003d taskManager.getTaskList();","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        Collections.sort(tasks, new TaskByDateComparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        save(storage, ui, taskManager);","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        return new ListCommand().execute(storage, ui, taskManager);","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":" * Represents a comparator to compare two Tasks, to impose a total ordering on a collection of Tasks,","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":" * ordered by their dates. If the Task object does not have a date, or the date is not of a LocalDateTime","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":" * object, it will have a lower order as compared to one that does.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":" * @see Task","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":" * @see java.time.LocalDateTime","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":" * @see Comparator","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"class TaskByDateComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        if (t1.getDateObj() !\u003d null \u0026\u0026 t2.getDateObj() !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"            return t1.getDateObj().compareTo(t2.getDateObj());","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        } else if (t1.getDateObj() \u003d\u003d null \u0026\u0026 t2.getDateObj() \u003d\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"            return t1.getDate().compareTo(t2.getDate());","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"            if (t1.getDateObj() \u003d\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"                return 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"                return -1;","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":58}},{"path":"src/main/java/duke/commands/SortByNameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":" * Represents a command to display the current tasks in TaskManager, sorted by name.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"public class SortByNameCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * Executes and displays the given TaskManager to the Ui, ordered by their names.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * @param storage Not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the task list to.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The Task Manager that contains the list of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * @return true after the list is displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @see TaskByNameComparator","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        ArrayList tasks \u003d taskManager.getTaskList();","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        Collections.sort(tasks, new TaskByNameComparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        save(storage, ui, taskManager);","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        return new ListCommand().execute(storage, ui, taskManager);","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":" * Represents a comparator to compare two Tasks, to impose a total ordering on a collection of Tasks,","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":" * ordered by their names lexicographically.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":" * @see Task","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":" * @see Comparator","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"class TaskByNameComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        return t1.getTaskName().compareTo(t2.getTaskName());","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":45}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":" * Represents a general command to update a task.","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"public abstract class UpdateCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"alexteo98":7}},{"path":"src/main/java/duke/commands/UpdateDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" * Represents a Command to update the date of the task.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"public class UpdateDateCommand extends UpdateCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    private int indexToUpdate;","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    private LocalDateTime newDate;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    private String newDateString;","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Update Command with LocalDateTime object.","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * @param index The index of the task to update (0 Indexed).","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The LocalDateTime object that represents the new date of the task.","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    public UpdateDateCommand(int index, LocalDateTime newDate) {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        this.indexToUpdate \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        this.newDate \u003d newDate;","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Update Command with LocalDateTime object.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"     * @param index The index of the task to update (0 Indexed).","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"     * @param newDateString The string that represents the new date of the task.","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    public UpdateDateCommand(int index, String newDateString) {","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        this.indexToUpdate \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        this.newDateString \u003d newDateString.strip();","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"     * Executes and updates the task indicated with the new date.","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"     * @param storage The storage to save the TaskManager to if required.","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output of the command to.","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager containing the tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"     * @return The output of the command.","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        if (taskManager.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"            return ui.showMarkEmptyList();","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        if (indexToUpdate \u003c 0 || indexToUpdate \u003e\u003d taskManager.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"            return ui.showUpdateOutOfBounds();","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        Task toUpdate \u003d taskManager.getTask(indexToUpdate);","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"        if (toUpdate.getType() \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"            return ui.showIncompatibleType();","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"        boolean isSuccess;","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        if (newDate !\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"            /* Recognizable date format entered */","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"            isSuccess \u003d toUpdate.updateDate(newDate);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"            isSuccess \u003d toUpdate.updateDate(newDateString);","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"        if (!isSuccess) {","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"            return ui.showSameDateError();","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        save(storage, ui, taskManager);","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        return ui.showUpdateSuccess(toUpdate);","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"alexteo98":79}},{"path":"src/main/java/duke/commands/UpdateNameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.commands;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * Represents a command to update the name of the task.","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"public class UpdateNameCommand extends UpdateCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private int indexToUpdate;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    private String newName;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Update Command with LocalDateTime object.","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     * @param index The index of the task to update (0 Indexed).","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * @param newName The string that represents the new name of the task.","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    public UpdateNameCommand(int index, String newName) {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"        this.indexToUpdate \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        this.newName \u003d newName.strip();","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * Executes and updates the name of the task.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"     * @param storage The storage to save the TaskManager to if required.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"     * @param ui The Ui to display the output of the command to.","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"     * @param taskManager The TaskManager containing the tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"     * @return The output of the command.","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    public String execute(Storage storage, Ui ui, TaskManager taskManager) {","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        assert newName !\u003d null : \"New name is null in UpdateNameCommand!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        if (newName.strip().equals(\"\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"            return ui.showNoName();","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        if (taskManager.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            return ui.showMarkEmptyList();","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        if (indexToUpdate \u003c 0 || indexToUpdate \u003e\u003d taskManager.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"            return ui.showUpdateOutOfBounds();","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        Task toUpdate \u003d taskManager.getTask(indexToUpdate);","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        boolean isSuccess \u003d toUpdate.updateName(newName);","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        if (!isSuccess) {","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"            return ui.showSameNameError();","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        save(storage, ui, taskManager);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        return ui.showUpdateSuccess(toUpdate);","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"alexteo98":60}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"        super(s);","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"alexteo98":7}},{"path":"src/main/java/duke/exceptions/FailedTaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"public class FailedTaskParseException extends DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"    public FailedTaskParseException(String userInput) {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"        super(\"Failed to parse task from: \" + userInput);","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"alexteo98":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":" * Represents a Task with a Deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private String dateString \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Deadline class. Takes in a LocalDateTime object as the date instead of a string.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     * @param taskName The string that represents the name of this deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"     * @param date The LocalDateTime object that represents its deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    public Deadline(String taskName, LocalDateTime date) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Deadline class. Takes in a string describing its deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * @param taskName The string that represents the name of this deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     * @param dateString The string that represents its deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    public Deadline(String taskName, String dateString) {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    public char getType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"     * Returns a String representation of the deadline Task, to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"     * @return The String representation of the deadline task, in the form of:\u003cbr\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"     * [\u0026lt;Type\u0026gt;][\u0026lt;Marked\u0026gt;]  \u0026lt;Task Name\u0026gt; (by: \u0026lt;Deadline\u0026gt;)","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"[%c][%c] %s (by: %s)\", this.getType(), this.done, this.taskName, this.getDate());","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"     * Gets the LocalDateTime object associated to this deadline task, if it exists.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"     * Returns null if it does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"     * @return The LocalDateTime object containing the Date of the deadline, null if it does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"     * @see Deadline#getDate()","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    public LocalDateTime getDateObj() {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        return this.date;","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"     * Gets the String representation of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"     * If the date is stored as a LocalDateTime object, this will format as (D MMM YYYY H:MM AM/PM).","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"     * @return The String representation of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"            return this.dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, K:mma\");","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"            return this.date.format(format);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"     * Returns whether if the given object is equals to this deadline task.","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"     * The given object will be equals to this object if and only if it is of the same task type,","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"     * has the same name and has the same deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"     * @param o The object to be compared to.","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"     * @return true if they are equivalent.","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"        if (deadline.taskName.equals(this.taskName)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"            return deadline.getDate().equals(this.getDate());","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"     * Updates the current date information with the given new date.","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The new date to replace the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"     * @return True if updated successfully, False if the new date given is the same as the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"    public boolean updateDate(LocalDateTime newDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"        if (newDate.equals(this.date)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"        this.date \u003d newDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"        this.dateString \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"        return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"     * Updates the current date information with the given new date.","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The new date to replace the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"     * @return True if updated successfully, False if the new date given is the same as the current date or empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"    public boolean updateDate(String newDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"        if (newDate.strip().equals(this.dateString)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"        this.date \u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"        this.dateString \u003d newDate.strip();","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"        return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":136}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":" * Represents an Task with a Date.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    private LocalDateTime date \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private String dateString \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Event class. Takes in a LocalDateTime object as the date instead of a string.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     * @param taskName The string that represents the name of this event.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"     * @param date The LocalDateTime object that represents the date of this event.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    public Event(String taskName, LocalDateTime date) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"     * Constructor for Event class. Takes in a string describing the date of this event.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"     * @param taskName The string that represents the name of this event.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"     * @param dateString The string that represents the date of this event.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    public Event(String taskName, String dateString) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    public char getType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"     * Gets the LocalDateTime object associated to this event, if it exists.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"     * Returns null if it does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"     * @return The LocalDateTime object containing the Date of the event, null if it does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"     * @see Event#getDate()","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"    public LocalDateTime getDateObj() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        return this.date;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"     * Returns a String representation of the event, to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"     * @return The String representation of the event, in the form of:\u003cbr\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"     * [\u0026lt;Type\u0026gt;][\u0026lt;Marked\u0026gt;]  \u0026lt;Task Name\u0026gt; (at: \u0026lt;Date\u0026gt;)","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"[%c][%c] %s (at: %s)\", this.getType(), this.done, this.taskName, this.getDate());","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"     * Gets the String representation of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"     * If the date is stored as a LocalDateTime object, this will format as (D MMM YYYY H:MM AM/PM).","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"     * @return The String representation of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"            return this.dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, K:mma\");","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"            return this.date.format(format);","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"     * Returns whether if the given object is equals to this event.","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"     * The given object will be equals to this object if and only if it is of the same task type,","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"     * has the same name and has the same date.","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"     * @param o The object to be compared to.","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"     * @return true if they are equivalent.","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"        if (event.taskName.equals(this.taskName)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"            return event.getDate().equals(this.getDate());","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"     * Updates the current date information with the given new date.","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The new date to replace the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"     * @return True if updated successfully, False if the new date given is the same as the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"    public boolean updateDate(LocalDateTime newDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        if (newDate.equals(this.date)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"        this.date \u003d newDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"        this.dateString \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"        return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"     * Updates the current date information with the given new date.","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The new date to replace the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"     * @return True if updated successfully, False if the new date given is the same as the current date or empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"    public boolean updateDate(String newDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"        if (newDate.strip().equals(this.dateString)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"        this.date \u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"        this.dateString \u003d newDate.strip();","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"        return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":137}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":" * Represents a general task created by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":" * @see Deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" * @see Event","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" * @see Todo","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    protected String taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    protected char done \u003d \u0027 \u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    public Task() { }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * Marks this task as done. Does nothing if this task is already marked.","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * @return True if the task is successfully marked, false if it is already marked.","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    public boolean markDone() {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        if (this.done \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"            this.done \u003d \u0027X\u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"     * Marks this task as not done. Does nothing if this task is already unmarked.","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"     * @return True if the task is successfully unmarked, false if it is already unmarked.","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"    public boolean markUndone() {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        if (this.done \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"            this.done \u003d \u0027 \u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"     * Checks whether a task is marked as done or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"     * @return \u0027X\u0027 if it is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"    public char getDone() {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        return this.done;","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"     * Gets the name of this Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"     * @return The name of the Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"    public abstract String getDate();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    public abstract LocalDateTime getDateObj();","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"     * @return The String representation of the Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        return String.format(\"[%c][%c] %s\", this.getType(), this.done, this.taskName);","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"    public char getType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        return \u0027 \u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"     * Updates the name of this task to a new name. Does nothing if the new name is the same as the current name.","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"     * @param newName The new name of this task.","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"     * @return True if the Task is successfully renamed, false otherwise.","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"    public boolean updateName(String newName) {","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        if (this.taskName.equals(newName.strip())) {","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"            /* New Task name is the same, update not needed */","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        this.taskName \u003d newName.strip();","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"        return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"     * Updates the date of this task to a new date. Does nothing if the new date is the same as the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The new date string to replace the current one with.","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"     * @see Task#updateDate(LocalDateTime)","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"    public boolean updateDate(String newDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"     * Updates the date of this task to a new date. Does nothing if the new date is the same as the current date.","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"     * @param newDate The new date object to replace the current one with.","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"     * @see Task#updateDate(String)","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"    public boolean updateDate(LocalDateTime newDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":113}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    public char getType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     * Gets the LocalDateTime object associated to this event, if it exists.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"     * Returns null if it does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"     * @return The LocalDateTime object containing the Date of the event, null if it does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * @see Event#getDate()","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    public LocalDateTime getDateObj() {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        return null;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        return \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"     * Returns whether if the given object is equals to this event.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"     * The given object will be equals to this object if and only if","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"     * it is of the same task type and has the same name.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"     * @param o The object to be compared to.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"     * @return true if they are equivalent.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        if (!(o instanceof Todo)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        Todo todo \u003d (Todo) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        return todo.taskName.equals(this.taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"alexteo98":51}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package gui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            this.dialog.setStyle(\"-fx-padding: 10;\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"                    \"-fx-border-style: solid inside;\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"                    \"-fx-border-width: 2;\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"                    \"-fx-border-insets: 2;\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"                    \"-fx-border-radius: 5;\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                    \"-fx-border-color: black;\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                    \"-fx-background-color: beige;\");","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    public static DialogBox getStartingBanner(Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        var db \u003d new DialogBox(ui.showBanner(), img);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        db.dialog.setWrapText(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"    public static DialogBox getHelpBanner(Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        var db \u003d new DialogBox(ui.showHelpMenu(), img);","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"        db.dialog.setWrapText(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":86}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package gui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package gui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    private Duke duke \u003d new Duke(\"duke/data\");","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.png\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"            stage.getIcons().add(dukeImage);","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":37}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package gui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getStartingBanner(dukeImage));","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getHelpBanner(dukeImage));","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        DialogBox userDialogBox \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        DialogBox botDialogBox \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        dialogContainer.getChildren().addAll(userDialogBox, botDialogBox);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        if (duke.hasExited()) {","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"350.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"\u003cAnchorPane id\u003d\"fdd\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" promptText\u003d\"Type something here!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send!\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"alexteo98":23}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"        date \u003d LocalDateTime.parse(\"2007-12-03T10:15:30\");","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"        deadline \u003d new Deadline(\"Deadline Name\", date);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    public void getType_noInputs_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\u0027D\u0027, deadline.getType());","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    public void toString_noInputs_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"[D][ ] Deadline Name (by: 3 Dec 2007, 10:15AM)\", deadline.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        deadline.markDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"[D][X] Deadline Name (by: 3 Dec 2007, 10:15AM)\", deadline.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"alexteo98":31}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"public class EventTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    private Event event;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"        date \u003d LocalDateTime.parse(\"2007-12-03T10:15:30\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"        event \u003d new Event(\"Event Name\", date);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public void getType_noInputs_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\u0027E\u0027, event.getType());","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public void toString_noInputs_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"[E][ ] Event Name (at: 3 Dec 2007, 10:15AM)\", event.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        event.markDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"[E][X] Event Name (at: 3 Dec 2007, 10:15AM)\", event.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"alexteo98":34}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import duke.Parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_emptyInput_null() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"        assertNull(Parser.parseToTask(\"\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_invalidTaskType_null() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        assertNull(Parser.parseToTask(\"anyinput TaskName /by 11/11/2011 1500\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        assertNull(Parser.parseToTask(\"anyinput TaskName /at 11/11/2011 1500\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_emptyTaskName_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"todo \");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Todo Name is empty!\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline  /by 11/11/2011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Deadline Name is empty!\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"event  /at 11/11/2011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Event Name is empty!\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_emptyDate_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"No Date Specified!\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Wrong format entered! Please enter \u003cDeadline Name\u003e /by \u003cDeadline\u003e\", e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"event name /at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Wrong format entered! Please enter \u003cEvent Name\u003e /at \u003cEvent Date\u003e\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"event name /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"No Date Specified!\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /by 11112011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Invalid Date format! Please enter Date/Time in the form DD/MM/YYYY HHMM\",","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /by 11-11-2011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Invalid Date format! Please enter Date/Time in the form DD/MM/YYYY HHMM\",","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /by 11/11/2011 15:00\");","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Invalid Date format! Please enter Date/Time in the form DD/MM/YYYY HHMM\",","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /by 11/11/11 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Invalid Date format! Please enter Date/Time in the form DD/MM/YYYY HHMM\",","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_wrongSeparator_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"deadline name /at 11/11/2011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Wrong format entered! Please enter \u003cDeadline Name\u003e /by \u003cDeadline\u003e\",","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTask(\"event name /by 11/11/2011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Wrong format entered! Please enter \u003cEvent Name\u003e /at \u003cEvent Date\u003e\",","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"    public void parseToTask_success() throws Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"        Todo todo \u003d new Todo(\"Todo Name\");","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"2011-11-11T15:00:00\");","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"        Event event \u003d new Event(\"Event Name\", date);","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Name\", date);","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"        assertEquals(todo.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"                Parser.parseToTask(\"todo Todo Name\").toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"        assertEquals(event.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"                Parser.parseToTask(\"event Event Name /at 11/11/2011 1500\").toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"                Parser.parseToTask(\"deadline Deadline Name /by 11/11/2011 1500\").toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"    public void parseToTaskFromFile_emptyWrongType_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTaskFromFile(\"F\\tX\\tTask Name\\tNone\");","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Unable to load task from file!\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTaskFromFile(\"G\\tX\\tTask Name\\tNone\");","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Unable to load task from file!\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"            Parser.parseToTaskFromFile(\"\\tX\\tTask Name\\t11/11/2011 1500\");","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"alexteo98"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"alexteo98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"alexteo98"},"content":"            assertEquals(\"Unable to load task from file!\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"    public void parseDateTime_success() {","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"        assertEquals(LocalDateTime.parse(\"2011-11-11T15:00:00\"), Parser.parseDateTime(\"11/11/2011 1500\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":167,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"alexteo98"},"content":"    public void parseToFileFromTask_success() {","lastModifiedDate":"2022-01-31"},{"lineNumber":169,"author":{"gitId":"alexteo98"},"content":"        Todo todo \u003d new Todo(\"Todo Name\");","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"alexteo98"},"content":"        todo.markDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":171,"author":{"gitId":"alexteo98"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"2011-11-11T15:00:00\");","lastModifiedDate":"2022-01-31"},{"lineNumber":172,"author":{"gitId":"alexteo98"},"content":"        Event event \u003d new Event(\"Event Name\", date);","lastModifiedDate":"2022-01-31"},{"lineNumber":173,"author":{"gitId":"alexteo98"},"content":"        Event eventDateStr \u003d new Event(\"Event Name String\", \"event date\");","lastModifiedDate":"2022-01-31"},{"lineNumber":174,"author":{"gitId":"alexteo98"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Name\", date);","lastModifiedDate":"2022-01-31"},{"lineNumber":175,"author":{"gitId":"alexteo98"},"content":"        Deadline deadlineDateStr \u003d new Deadline(\"Deadline Name String\", \"deadline\");","lastModifiedDate":"2022-01-31"},{"lineNumber":176,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"T\\tX\\tTodo Name\\tNone\", Parser.parseToFileFromTask(todo));","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"E\\t \\tEvent Name\\t11/11/2011 1500\", Parser.parseToFileFromTask(event));","lastModifiedDate":"2022-01-31"},{"lineNumber":179,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"E\\t \\tEvent Name String\\tevent date\", Parser.parseToFileFromTask(eventDateStr));","lastModifiedDate":"2022-01-31"},{"lineNumber":180,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"D\\t \\tDeadline Name\\t11/11/2011 1500\", Parser.parseToFileFromTask(deadline));","lastModifiedDate":"2022-01-31"},{"lineNumber":181,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"D\\t \\tDeadline Name String\\tdeadline\", Parser.parseToFileFromTask(deadlineDateStr));","lastModifiedDate":"2022-01-31"},{"lineNumber":182,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":183,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"alexteo98":183}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    private Todo todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"        todo \u003d new Todo(\"Todo Name\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    public void getType_noInputs_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\u0027T\u0027, todo.getType());","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    public void toString_noInputs_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"[T][ ] Todo Name\", todo.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        todo.markDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        assertEquals(\"[T][X] Todo Name\", todo.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"alexteo98":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"todo borrow book","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"alexteo98":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alexteo98":1,"-":20}}]
