[{"path":"src/main/java/Apollo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"public class Apollo {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"    public static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"    private static Commands input;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"    private static boolean isRunning;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"    protected static void printMessage(String message) {","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"        System.out.println(\"\\t________________________________________________________________________\\n\\t \"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"                + message.replace(\"\\n\",\"\\n\\t \")","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"                + \"\\n\\t________________________________________________________________________\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"    private static void initialise() {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"j4ck990"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"j4ck990"},"content":"        input \u003d new Commands();","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"        isRunning \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"j4ck990"},"content":"        Banner.welcomeMsg();","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"j4ck990"},"content":"    private static void run() {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"j4ck990"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"j4ck990"},"content":"            tasks \u003d Storage.load();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"j4ck990"},"content":"        } catch (IOException | ClassNotFoundException ignored) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"j4ck990"},"content":"            printMessage(\"No save loaded. \");","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"j4ck990"},"content":"        while (isRunning) {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"j4ck990"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"j4ck990"},"content":"                input.response();","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"j4ck990"},"content":"                Storage.save(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"j4ck990"},"content":"            } catch (ApolloException error) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"j4ck990"},"content":"                printMessage(error.getMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"j4ck990"},"content":"            } catch (NumberFormatException error) {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"j4ck990"},"content":"                printMessage(\"Please enter an Integer instead. \");","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"j4ck990"},"content":"    public static void stop() {","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"j4ck990"},"content":"        isRunning \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"j4ck990"},"content":"        printMessage(\"See you next time. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"j4ck990"},"content":"                + \"I am always available when you need me. \");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"j4ck990"},"content":"    public static void addTask(Task newTask) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"j4ck990"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"j4ck990"},"content":"        printMessage(String.format(\"I\u0027ve added this task:\\n  %s\\nThere\u0027s a total of %d tasks now. \",","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"j4ck990"},"content":"                newTask, tasks.size()));","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"j4ck990"},"content":"    public static void deleteTask(int i) throws ApolloException {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"j4ck990"},"content":"        if (i \u003e tasks.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"j4ck990"},"content":"            throw new ApolloException(String.format(\"Task %d. does not exist, unable to delete. \", i));","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"j4ck990"},"content":"        String message \u003d String.format(\"Alright, I\u0027ve remove this task. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"j4ck990"},"content":"                + \"  %s\\nThere\u0027s a total of %d tasks now. \", tasks.get(i-1), tasks.size()-1);","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"j4ck990"},"content":"        tasks.remove(i-1);","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"j4ck990"},"content":"        printMessage(message);","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"j4ck990"},"content":"    public static void printList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"j4ck990"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"j4ck990"},"content":"            printMessage(\"You have no tasks left. \");","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"j4ck990"},"content":"            return;","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"j4ck990"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"j4ck990"},"content":"        list.append(\"These are your current tasks. \");","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"j4ck990"},"content":"        var counter \u003d new Object() {","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"j4ck990"},"content":"            int num \u003d 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"j4ck990"},"content":"        };","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"j4ck990"},"content":"        tasks.forEach(i -\u003e {","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"j4ck990"},"content":"            list.append(\"\\n  \").append(counter.num).append(\".\").append(i);","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"j4ck990"},"content":"            counter.num++;","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"j4ck990"},"content":"        });","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"j4ck990"},"content":"        printMessage(list.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"j4ck990"},"content":"    public static void mark(int i, boolean mark) throws ApolloException {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"j4ck990"},"content":"        if (i \u003e tasks.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"j4ck990"},"content":"            throw new ApolloException(","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"j4ck990"},"content":"                    String.format(\"Task %d. does not exist, unable to mark or unmark. \", i));","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"j4ck990"},"content":"        Task task \u003d tasks.get(i-1);","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"j4ck990"},"content":"        String message;","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"j4ck990"},"content":"        if (mark) {","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"j4ck990"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"j4ck990"},"content":"            message \u003d \"Alright, I\u0027ve mark this task as done. \\n  \";","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"j4ck990"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"j4ck990"},"content":"            task.markAsNotDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"j4ck990"},"content":"            message \u003d \"Noted, I\u0027ve marked this task as not done yet. \\n  \";","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"j4ck990"},"content":"        printMessage(message + task);","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"j4ck990"},"content":"        initialise();","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"j4ck990"},"content":"        run();","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"j4ck990":101,"-":3}},{"path":"src/main/java/ApolloException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"public class ApolloException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"    public ApolloException(String message) {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"        super(message);","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":5}},{"path":"src/main/java/Banner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"public class Banner extends Apollo{","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"    public static String dayTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"        // define the border values","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"        LocalTime eleven \u003d LocalTime.of(11, 0);","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"        LocalTime four \u003d LocalTime.of(4, 0);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"        LocalTime fifteen \u003d LocalTime.of(15, 0);","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"        LocalTime eighteenThirty \u003d LocalTime.of(18, 30);","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"        LocalTime now \u003d LocalTime.now();","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"        // check if the time is after four and either before or exactly eleven","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"        if (now.isAfter(four) \u0026\u0026","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"                (now.isBefore(eleven) || now.equals(eleven)))","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"j4ck990"},"content":"            return \"Morning\";","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"j4ck990"},"content":"            // check if the time is after eleven and either before or exactly fifteen","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"        else if (now.isAfter(eleven) \u0026\u0026","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"j4ck990"},"content":"                (now.isBefore(fifteen) || now.equals(fifteen)))","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"j4ck990"},"content":"            return \"Afternoon\";","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"j4ck990"},"content":"            // check if the time is after fifteen and either before or exactly eighteen thirty","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"j4ck990"},"content":"        else if (now.isAfter(fifteen) \u0026\u0026","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"j4ck990"},"content":"                (now.isBefore(eighteenThirty) || now.equals(eighteenThirty)))","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"j4ck990"},"content":"            return \"Evening\";","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"j4ck990"},"content":"            // otherwise, it\u0027s night","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"j4ck990"},"content":"        else return \"Night\";","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"j4ck990"},"content":"    public static void welcomeMsg() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"j4ck990"},"content":"        String logo \u003d \"       @@@%      @@@@@@*.      :@@@@@.    %@@@@@+    @@@@@@        #@@@@\u003d       \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"j4ck990"},"content":"                + \"       @@@@\u003d     @@@@@@@@@    @@@@@@@@#   @@@@@@*    @@@@@@.     -@@@@@@@@      \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"j4ck990"},"content":"                + \"       @@@@@     @@@@@@@@@*  %@@@@@@@@@+  @@@@@@*    @@@@@@.    .@@@@@@@@@@     \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"j4ck990"},"content":"                + \"      #@@@@@     +@@@@+@@@@  @@@@%+%@@@@   @@@@       @@@@      @@@@@**@@@@\u003d    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"j4ck990"},"content":"                + \"      @@@@@@+     %@@@  @@@ \u003d@@@#   @@@@:  @@@@       @@@@      @@@@    @@@@    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"j4ck990"},"content":"                + \"      @@@.@@@     #@@@ @@@@ %@@@     @@@#  @@@@       @@@%      @@@*    @@@@    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"j4ck990"},"content":"                + \"     .@@@ @@@     *@@@@@@@\u003d @@@@     @@@@  @@@@       @@@#      @@@-    @@@@    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"j4ck990"},"content":"                + \"     \u003d@@@@@@@*    *@@@@@@%  @@@@     @@@@  @@@@       @@@*      @@@-    @@@@    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"j4ck990"},"content":"                + \"     @@@@@@@@@    +@@@@%    #@@@.    @@@+  @@@@  @@%  @@@+  @@* @@@@    @@@@    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"j4ck990"},"content":"                + \"     @@@-:-@@@.   +@@@      -@@@@   @@@@   @@@@  @@@  @@@\u003d  @@% @@@@*  *@@@%    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"j4ck990"},"content":"                + \"     @@@.  @@@#   +@@@       @@@@@@@@@@@  -@@@@-\u003d@@@ -@@@*-*@@% #@@@@@@@@@@.    \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"j4ck990"},"content":"                + \"    @@@@@:@@@@@@ @@@@@@@     \u003d@@@@@@@@@   @@@@@@@@@@ @@@@@@@@@%  @@@@@@@@@%     \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"j4ck990"},"content":"                + \"    @@@@@-@@@@@@ @@@@@@@      \u003d@@@@@@@-   @@@@@@@@@@ @@@@@@@@@%   @@@@@@@@      \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"j4ck990"},"content":"                + \"    @%#*+:+%#*+\u003d -\u003d+++++        \u003d%@%\u003d     --\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003d\u003d\u003d\u003d\u003d\u003d\u003d-    :*@@*.       \\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"j4ck990"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"j4ck990"},"content":"        String daytime \u003d dayTime();","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"j4ck990"},"content":"        String msg \u003d String.format(\"Good %s Sir, I am Apollo. \\nHow can I help you on this wonderful %s? \",","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"j4ck990"},"content":"                daytime, daytime.toLowerCase());","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"j4ck990"},"content":"        Apollo.printMessage(msg);","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":50}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"public class Commands {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"    private String[] fullCommand;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"    static Scanner scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"    private enum Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, SAVE, LOAD, INVALID","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"    public Commands() {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"    private void next() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"j4ck990"},"content":"        this.fullCommand \u003d scanner.nextLine().trim().split(\" \", 2);","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"j4ck990"},"content":"    private LocalDateTime parseDateTime(String datetime) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"j4ck990"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"j4ck990"},"content":"        return LocalDateTime.parse(datetime, pattern);","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"j4ck990"},"content":"    public void response() throws ApolloException {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"j4ck990"},"content":"        next();","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"j4ck990"},"content":"        Command command \u003d Command.INVALID;","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"j4ck990"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"j4ck990"},"content":"            command \u003d Command.valueOf(this.fullCommand[0].toUpperCase());","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"j4ck990"},"content":"        } catch (IllegalArgumentException error) {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand[0].equals(\"\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"j4ck990"},"content":"                response();","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"j4ck990"},"content":"        Task newTask;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"j4ck990"},"content":"        switch (command) {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"j4ck990"},"content":"        case BYE:","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"j4ck990"},"content":"            Apollo.stop();","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"j4ck990"},"content":"        case LIST:","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"j4ck990"},"content":"            Apollo.printList();","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"j4ck990"},"content":"        case MARK:","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please specify which task to mark as done. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"j4ck990"},"content":"                        + \"  mark \u003ctask number\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"j4ck990"},"content":"            Apollo.mark(Integer.parseInt(this.fullCommand[1]), true);","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"j4ck990"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please specify which task to mark as not done yet. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"j4ck990"},"content":"                        + \"  unmark \u003ctask number\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"j4ck990"},"content":"            Apollo.mark(Integer.parseInt(this.fullCommand[1]), false);","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"j4ck990"},"content":"        case TODO:","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please specify the description of the task. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"j4ck990"},"content":"                        + \"  todo \u003cdescription\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"j4ck990"},"content":"            newTask \u003d new Todo(this.fullCommand[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"j4ck990"},"content":"            Apollo.addTask(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"j4ck990"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please specify the description and deadline of the task. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"j4ck990"},"content":"                        + \"  deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"j4ck990"},"content":"            String[] descTime \u003d this.fullCommand[1].split(\" */[Bb][Yy] *\", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"j4ck990"},"content":"            if (descTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please add the time that this task is due. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"j4ck990"},"content":"                        + \"  deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"j4ck990"},"content":"            newTask \u003d new Deadline(descTime[0], parseDateTime(descTime[1]));","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"j4ck990"},"content":"            Apollo.addTask(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"j4ck990"},"content":"        case EVENT:","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please specify the description and period of the task. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"j4ck990"},"content":"                        + \"  event \u003cdescription\u003e /at \u003cperiod\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"j4ck990"},"content":"            String[] descPeriod \u003d this.fullCommand[1].split(\" */[Aa][Tt] *\", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"j4ck990"},"content":"            if (descPeriod.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please add the period that this task happens. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"j4ck990"},"content":"                        + \"  event \u003cdescription\u003e /at \u003cperiod\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"j4ck990"},"content":"            newTask \u003d new Event(descPeriod[0], parseDateTime(descPeriod[1]));","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"j4ck990"},"content":"            Apollo.addTask(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"j4ck990"},"content":"        case DELETE:","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"j4ck990"},"content":"            if (this.fullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"j4ck990"},"content":"                throw new ApolloException(\"Please specify which task to delete. \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"j4ck990"},"content":"                        + \"  delete \u003ctask number\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"j4ck990"},"content":"            Apollo.deleteTask(Integer.parseInt(this.fullCommand[1]));","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"j4ck990"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"j4ck990"},"content":"        default:","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"j4ck990"},"content":"            throw new ApolloException(\"Apologies, I do not understand that. \");","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":106}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"    public Deadline(String description, LocalDateTime time) {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.time);","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"    private final LocalDateTime period;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"    public Event(String description, LocalDateTime period) {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.period);","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":15}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"    private static final Path DATA_PATH \u003d Paths.get(\"data\", \"apollo.ser\");","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"    private static void initialiseDir() throws ApolloException {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"            if (!Files.exists(DATA_PATH)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"                if (!Files.exists(DATA_PATH.getParent())) {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"j4ck990"},"content":"                    Files.createDirectory(DATA_PATH.getParent());","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"j4ck990"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"                Files.createFile(DATA_PATH);","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"j4ck990"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"j4ck990"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"j4ck990"},"content":"            throw new ApolloException(\"Cannot create save. \");","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"j4ck990"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) throws ApolloException {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"j4ck990"},"content":"        initialiseDir();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"j4ck990"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"j4ck990"},"content":"            ObjectOutputStream objStream \u003d new ObjectOutputStream(Files.newOutputStream(DATA_PATH));","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"j4ck990"},"content":"            objStream.writeObject(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"j4ck990"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"j4ck990"},"content":"            throw new ApolloException(\"Cannot write to save file. \");","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"j4ck990"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"j4ck990"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"j4ck990"},"content":"    public static ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"j4ck990"},"content":"        ObjectInputStream objStream \u003d new ObjectInputStream(Files.newInputStream(DATA_PATH));","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"j4ck990"},"content":"        return (ArrayList\u003cTask\u003e) objStream.readObject();","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"j4ck990":40}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"public class Task implements java.io.Serializable {","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"    private final String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"j4ck990"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"j4ck990"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"j4ck990"},"content":"        return String.format(\"[%s] %s\",  this.getStatus(), this.description);","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"j4ck990"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"j4ck990"},"content":"Hello","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"j4ck990"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"j4ck990"},"content":"deadline","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"j4ck990"},"content":"event","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"j4ck990"},"content":"todo Breakfast /By morning","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"j4ck990"},"content":"deaDLine lunch/Yb /Byafternoon or im just joking","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"j4ck990"},"content":"EVEnt dinner /bY night/TA /aT night","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"j4ck990"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"j4ck990"},"content":"mark 4","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"j4ck990"},"content":"unmark 4","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"j4ck990"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"j4ck990"},"content":"mark 3","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"j4ck990"},"content":"unmark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"j4ck990"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"j4ck990"},"content":"save","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"j4ck990"},"content":"unmark 3","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"mark a","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"j4ck990"},"content":"mark 1a","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"j4ck990"},"content":"mark 1,3","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"j4ck990"},"content":"mark 1.3","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"j4ck990"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"j4ck990"},"content":"delete 4","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"j4ck990"},"content":"delete 1.3","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"j4ck990"},"content":"delete 1","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"j4ck990"},"content":" list","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"j4ck990"},"content":"load","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"j4ck990"},"content":"list","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"j4ck990"},"content":"bye","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"j4ck990":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"j4ck990"},"content":"C:\\Users\\jack\\.jdks\\jdk-11.0.9\\bin\\java.exe -classpath ..\\bin Apollo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"j4ck990":1,"-":20}}]
