[{"path":"src/main/java/jose/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"import jose.task.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":" * The main class used to run Jose. Is called Duke for consistency.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"     * Class constructor that also sets up the task list and retrieves/creates the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"     * @param filePath The path of the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"     * Method containing the main logic of the program.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"    public void run() {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"        boolean isModified \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"        while (isRunning) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"            String[] taskInfo;","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"            Task tempTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"                Parser.Command command \u003d parser.parse(input);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"                switch (command) {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"                case BYE:","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"                    ui.showExitMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"                case LIST:","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"                    ui.showList(tasks.getTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"                case MARK:","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"                    tempTask \u003d tasks.getTask(parser.getIndex(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"                    tempTask.mark();","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"                    ui.showMarkMessage(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"                case UNMARK:","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"                    tempTask \u003d tasks.getTask(parser.getIndex(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"                    tempTask.unmark();","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"                    ui.showUnmarkMessage(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"                case DELETE:","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"                    tempTask \u003d tasks.getTask(parser.getIndex(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"                    ui.showDeleteMessage(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"                    tasks.removeTask(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"                    ui.showRemainingTasks(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"                case FIND:","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"                    taskInfo \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"                    ui.showList(tasks.findTasks(taskInfo[1]));","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":"                case TODO:","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"                    taskInfo \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"                    tempTask \u003d new ToDo(taskInfo[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"DaneMarc"},"content":"                    tasks.addTask(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"DaneMarc"},"content":"                    ui.showAddMessage(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"DaneMarc"},"content":"                    ui.showRemainingTasks(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"DaneMarc"},"content":"                case DEADLINE:","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"DaneMarc"},"content":"                    taskInfo \u003d input.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"DaneMarc"},"content":"                    tempTask \u003d new Deadline(taskInfo[0], taskInfo[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":91,"author":{"gitId":"DaneMarc"},"content":"                    tasks.addTask(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"DaneMarc"},"content":"                    ui.showAddMessage(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"DaneMarc"},"content":"                    ui.showRemainingTasks(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"DaneMarc"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"DaneMarc"},"content":"                case EVENT:","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"DaneMarc"},"content":"                    taskInfo \u003d input.split(\" \", 2)[1].split(\" /at \");","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"DaneMarc"},"content":"                    tempTask \u003d new Event(taskInfo[0], taskInfo[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"DaneMarc"},"content":"                    tasks.addTask(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"DaneMarc"},"content":"                    ui.showAddMessage(tempTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"DaneMarc"},"content":"                    ui.showRemainingTasks(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"DaneMarc"},"content":"                if (isModified) {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"DaneMarc"},"content":"                    storage.update(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"DaneMarc"},"content":"                    isModified \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"DaneMarc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":110,"author":{"gitId":"DaneMarc"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-17"},{"lineNumber":111,"author":{"gitId":"DaneMarc"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"DaneMarc"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":114,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"DaneMarc"},"content":"        scanner.close();","lastModifiedDate":"2022-01-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"DaneMarc"},"content":"     * Main method.","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"DaneMarc"},"content":"     * @param args Arguments to be passed in.","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"DaneMarc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"DaneMarc"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"/data/db.txt\").run();","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DaneMarc":123,"-":3}},{"path":"src/main/java/jose/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":" * A basic exception class that allows for more personalised error handling and messaging.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"     * @param msg The desired message to be shown to the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"        super(msg);","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DaneMarc":15}},{"path":"src/main/java/jose/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":" * Class to parse user input and return the appropriate command.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"     * A set of predefined commands.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"    public enum Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"     * Parses user input and returns its corresponding command if valid; throws a DukeException otherwise.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"     * @param input The given user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"     * @return A Parser.Command representing the given user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"     * @throws DukeException If given an unknown or invalid command.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"            return Command.BYE;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"            return Command.LIST;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"            String[] task \u003d input.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"            String command \u003d task[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"                return Command.MARK;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"                return Command.UNMARK;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"                return Command.DELETE;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"                return Command.FIND;","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"                if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"                    if (task.length \u003e 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"                        if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"                            return Command.TODO;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"                        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"                            return Command.DEADLINE;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"                        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"                            return Command.EVENT;","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"                        }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"                    } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"                        throw new DukeException(command + \" requires additional info\");","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"                } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"                    throw new DukeException(\"Nani?! No comprende por favor\");","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"     * Returns an int index as given in the user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"     * @param input The user command containing an index of a task in the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"     * @return An int index of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"    public int getIndex(String input) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DaneMarc":66}},{"path":"src/main/java/jose/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"import jose.task.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":" * A class that handles the reading and writing of data stored in the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    private File file;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"     * The main constructor that also creates a data file and its relevant directories if one does not already exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"     * @param filePath The path of the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"     * @throws IOException If there are any errors creating the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"            file.createNewFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"     * Reads the data file and compiles all the tasks saved in it for further processing.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"     * @return An ArrayList containing the tasks stored in the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"     * @throws IOException If there are any errors accessing the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"    public ArrayList\u003cString\u003e load() throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"        String s;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"        while ((s \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"            tasks.add(s);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"        br.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"     * Rewrites the data file with the given list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"     * @param tasks  A list of tasks to be stored in the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"     * @throws IOException If there are any errors when writing to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"    public void update(TaskList tasks) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"            bw.write(t.formatData());","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"            bw.newLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"        bw.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DaneMarc":65}},{"path":"src/main/java/jose/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import jose.task.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":" * Class that represents a task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"     * The default constructor that sets up an empty list.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"     * A constructor that sets up the tasks list based on the given tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"     * @param arr An ArrayList containing tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"    public TaskList(ArrayList\u003cString\u003e arr) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"        String[] task;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"        boolean isDone;","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"        for (String s : arr) {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"            task \u003d s.split(\"\\\\|\");","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"            isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"            if (task[0].equals(\"T\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"                tasks.add(new ToDo(task[2], isDone));","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"            } else if (task[0].equals(\"D\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"                tasks.add(new Deadline(task[2], isDone, task[3]));","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"                tasks.add(new Event(task[2], isDone, task[3]));","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"    public ArrayList\u003cTask\u003e findTasks(String query) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"            if (task.matchDescription(query)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"                results.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"        return results;","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"        tasks.remove(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DaneMarc":74}},{"path":"src/main/java/jose/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import jose.task.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":" * The class that handles the UI","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"    private static final String DIVIDER \u003d \"-----------------------------------------\";","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"     * The default constructor also initializes the PrintStream.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"    public Ui() {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"        this.out \u003d new PrintStream(System.out);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"     * Shows the welcome message.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"        out.println(\"Hola! soy José\\nQué puedo hacer por ti? UwU\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"     * Says goodbye.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER + LS + \"Adiós. Espero volver a verte pronto!\" + LS + DIVIDER);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"     * Shows the task that was just marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"     * @param task A task.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"    public void showMarkMessage(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER + LS + \"¡Bonito! He marcado esta tarea como hecha:\" + LS + task + LS + DIVIDER);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"     * Shows the task that was just unmarked.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"     * @param task A task.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"    public void showUnmarkMessage(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER + LS + \"Bien, he marcado esta tarea como aún no realizada:\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"                LS + task + LS + DIVIDER);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"     * Shows the task that was just added to the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"     * @param task A task.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"    public void showAddMessage(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER + LS + \"Entendido. he añadido esta tarea:\" + LS + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"     * Shows the task that was just deleted from the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"     * @param task A task.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"    public void showDeleteMessage(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER + LS + \"Señalado. He eliminado esta tarea:\" + LS + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"     * Shows the number of tasks in the given task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"     * @param tasks A task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"    public void showRemainingTasks(TaskList tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":"        out.println(\"Ahora tienes \" + tasks.getSize() + \" tareas en la lista.\" + LS + DIVIDER);","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"DaneMarc"},"content":"     * Displays a list of tasks in the given task list","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"DaneMarc"},"content":"     * @param tasks A task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"DaneMarc"},"content":"    public void showList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER + LS + \"Aquí están las tareas en su lista:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"DaneMarc"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"DaneMarc"},"content":"            out.println(i + 1 + \": \" + tasks.get(i));","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"DaneMarc"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DaneMarc":95}},{"path":"src/main/java/jose/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets isDone to false.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"     * @param description Task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"        super(description, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"        String[] dateTime \u003d by.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"        this.by \u003d LocalDateTime.of(LocalDate.parse(dateTime[0]),","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"                LocalTime.parse(dateTime[1], DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets all variables.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"     * @param description Task description","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"     * Returns a formatted representation of a task that will be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"     * @return A formatted string to be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"    public String formatData() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"        return \"D|\" + super.formatData() + \"|\" + by;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"     * @return A string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DaneMarc":51}},{"path":"src/main/java/jose/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets isDone to false.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"     * @param description Task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"        super(description, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"        String[] dateTime \u003d at.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"        this.at \u003d LocalDateTime.of(LocalDate.parse(dateTime[0]),","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"                LocalTime.parse(dateTime[1], DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets all variables.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"     * @param description Task description","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"        this.at \u003d LocalDateTime.parse(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"     * Returns a formatted representation of a task that will be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"     * @return A formatted string to be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"    public String formatData() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"        return \"E|\" + super.formatData() + \"|\" + at.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"     * @return A string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DaneMarc":51}},{"path":"src/main/java/jose/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":" * Class that encapsulates a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"    protected String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that only takes in a description and sets the isDone variable to false by default.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"     * @param description Description of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets both description and task status.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"     * @param description Description of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"     * @param isDone Boolean stating whether a task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"     * Checks whether a query can be found in the task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"     * @param query The given word or phrase.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"     * @return Boolean stating whether the description contains the query.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"    public boolean matchDescription(String query) {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"        return description.contains(query);","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"    public void mark() {","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"     * Method to mark a task as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"     * Returns an icon representing the status of a task based on the isDone variable.","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"     * @return An icon representing the status of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"     * Returns a formatted representation of a task that will be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"     * @return A formatted string to be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"    public String formatData() {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"        return (isDone ? \"1\" : \"0\") + \"|\" + description;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"     * @return A string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DaneMarc":82}},{"path":"src/main/java/jose/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":" * A class representing the todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets isDone to false.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"     * @param description Task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"        super(description, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"     * Constructor that sets all variables.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"     * @param description Task description","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"     * Returns a formatted representation of a task that will be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"     * @return A formatted string to be saved to the data file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    public String formatData() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"        return \"T|\" + super.formatData();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"     * @return A string representation of a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DaneMarc":43}},{"path":"src/test/java/Task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import jose.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"    public void getStatusIconTest_marked(){","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(\"[X]\", new Task(\"\", true).getStatusIcon());","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    public void getStatusIconTest_unmarked(){","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(\"[ ]\", new Task(\"\", false).getStatusIcon());","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"    public void formatDataTest(){","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(\"0|test\", new Task(\"test\").formatData());","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"    public void toStringTest(){","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(\"[ ] test\", new Task(\"test\").toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DaneMarc":28}},{"path":"src/test/java/jose/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"package jose;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import jose.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    public void getSizeTest(){","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(0, new TaskList().getSize());","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    public void getTasksTest(){","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(new ArrayList\u003c\u003e(), new TaskList().getTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"DaneMarc":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"todo make test cases","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"deadline make more test cases /by 21 Jan","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"event testing /at 20 Jan 8-9pm","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"todo watch oturan","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"unmark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DaneMarc":13}}]
