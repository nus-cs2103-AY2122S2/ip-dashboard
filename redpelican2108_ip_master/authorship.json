[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"    private String time;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"    public Deadline(String name, String time) {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\"[D][ ] \" + name + \" (by: \" + time +\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"redpelican2108"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"redpelican2108"},"content":"        return \"[D]\" + super.getStatus() +\" (by: \" + time +\")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"redpelican2108"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[D]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"redpelican2108"},"content":"        super.markDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\" (by: \" + time +\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"redpelican2108"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[D]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"redpelican2108"},"content":"        super.markNotDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\" (by: \" + time +\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"redpelican2108"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"redpelican2108":27}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"    private String time;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\"[E][ ] \" + name + \" (at: \" + time +\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"redpelican2108"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"redpelican2108"},"content":"        return \"[E]\" + super.getStatus() + \" (at: \" + time +\")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"redpelican2108"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[E]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"redpelican2108"},"content":"        super.markDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\" (at: \" + time +\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"redpelican2108"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[E]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"redpelican2108"},"content":"        super.markNotDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\" (at: \" + time +\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"redpelican2108"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"redpelican2108":27}},{"path":"src/main/java/IncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"public class IncorrectFormatException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"    public IncorrectFormatException (String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"redpelican2108":5}},{"path":"src/main/java/Narcibot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"public class Narcibot {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"redpelican2108"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\"I\u0027m Narcibot, the best bot ever created.\\nOh it\u0027s you, what a bother.\\nHere\u0027s a hello as a formality. What do you want this time?\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"redpelican2108"},"content":"        String input;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"redpelican2108"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"redpelican2108"},"content":"        while(true) {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"redpelican2108"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"redpelican2108"},"content":"            if(command(input)) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"redpelican2108"},"content":"                return;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"redpelican2108"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"redpelican2108"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"redpelican2108"},"content":"    private static boolean command(String command) {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"redpelican2108"},"content":"        boolean end \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"redpelican2108"},"content":"        String[] tokens \u003d command.split(\" \",2);","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"redpelican2108"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"redpelican2108"},"content":"            switch (tokens[0]) {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"redpelican2108"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter only one word for this command\");","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"So you finally decided to leave. Goodbye! Not that I really care.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"redpelican2108"},"content":"                    end \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"redpelican2108"},"content":"                case \"list\":","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter only one word for this command.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"Do I have to remind you again?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"redpelican2108"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"redpelican2108"},"content":"                        System.out.println((i + 1) + \".\" + list.get(i).getStatus());","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"redpelican2108"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter mark followed by a number for this command. Example: mark 8\");","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"redpelican2108"},"content":"                    int index1 \u003d Integer.parseInt((tokens[1]));","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"redpelican2108"},"content":"                    if(index1 \u003c 1 || index1 \u003e list.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter a valid task number.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"You finally did something? I\u0027ll mark it for you then.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"redpelican2108"},"content":"                    list.get(index1 - 1).markDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"redpelican2108"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter unmark followed by a number for this command. Example: unmark 7\");","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"redpelican2108"},"content":"                    int index2 \u003d Integer.parseInt((tokens[1]));","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"redpelican2108"},"content":"                    if(index2 \u003c 1 || index2 \u003e list.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter a valid task number.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"As expected... another task that wasn\u0027t finished at all.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"redpelican2108"},"content":"                    list.get(index2 - 1).markNotDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"redpelican2108"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter delete followed by a number for this command. Example: delete 7\");","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"redpelican2108"},"content":"                    int index3 \u003d Integer.parseInt((tokens[1]));","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"redpelican2108"},"content":"                    if(index3 \u003c 1 || index3 \u003e list.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please enter a valid task number.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"Removing this task, guess you gave up after all.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"redpelican2108"},"content":"                    list.remove(index3 - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"redpelican2108"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"You want me to remind you of something but you won\u0027t tell me of what it is?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"redpelican2108"},"content":"                    list.add(new ToDo(tokens[1]));","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"I have added this task cause you won\u0027t remember it.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"You now have \" + list.size() + \" tasks\");","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"redpelican2108"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"You want me to remind you of something but you won\u0027t tell me of what it is? The format is deadline (task) /by (time)\");","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"redpelican2108"},"content":"                    String[] tokens2 \u003d tokens[1].split(\"/by\", 2);","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens2.length !\u003d 2 || tokens2[1].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please tell me the deadline time using /by. Format: deadline (task) /by (time)\");","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"redpelican2108"},"content":"                    list.add(new Deadline(tokens2[0], tokens2[1]));","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"I have added this task cause you won\u0027t remember it.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"You now have \" + list.size() + \" tasks\");","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"redpelican2108"},"content":"                case \"event\":","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens.length !\u003d 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"You want me to remind you of something but you won\u0027t tell me of what it is? The format is event (task) /at (time)\");","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"redpelican2108"},"content":"                    String[] tokens3 \u003d tokens[1].split(\"/at\", 2);","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"redpelican2108"},"content":"                    if(tokens3.length !\u003d 2 || tokens3[1].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"redpelican2108"},"content":"                        throw new IncorrectFormatException(\"Please tell me the time of the event using /at. Format: event (task) /at (time)\");","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"redpelican2108"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"redpelican2108"},"content":"                    list.add(new Event(tokens3[0], tokens3[1]));","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"I have added this task cause you won\u0027t remember it.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"You now have \" + list.size() + \" tasks\");","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"redpelican2108"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"redpelican2108"},"content":"                default:","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"redpelican2108"},"content":"                    System.out.println(\"Could you please talk some sense? I can\u0027t seem to comprehend what you\u0027re saying.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"redpelican2108"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"redpelican2108"},"content":"        }  catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"redpelican2108"},"content":"            System.out.println(\"Are you even trying to specify a task? Please enter in digits if you\u0027re wondering.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"redpelican2108"},"content":"        } catch (IncorrectFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"redpelican2108"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"redpelican2108"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"redpelican2108"},"content":"        return end;","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"redpelican2108"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"redpelican2108":116}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"    private String name;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"    private boolean done;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"redpelican2108"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"redpelican2108"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"redpelican2108"},"content":"        String status \u003d done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"redpelican2108"},"content":"        return status + name;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"redpelican2108"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[X] \" + name);","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"redpelican2108"},"content":"        done \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"redpelican2108"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[ ] \" + name);","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"redpelican2108"},"content":"        done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"redpelican2108"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"redpelican2108":23}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"        System.out.println(\"[T][ ] \" + name);","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"redpelican2108"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"redpelican2108"},"content":"        return \"[T]\" + super.getStatus();","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"redpelican2108"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[T]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"redpelican2108"},"content":"        super.markDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"redpelican2108"},"content":"        System.out.println();","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"redpelican2108"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"redpelican2108"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"redpelican2108"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"redpelican2108"},"content":"        System.out.print(\"[T]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"redpelican2108"},"content":"        super.markNotDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"redpelican2108"},"content":"        System.out.println();","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"redpelican2108"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"redpelican2108"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"redpelican2108":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"redpelican2108"},"content":"todo read a book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"redpelican2108"},"content":"deadline homework /by 8pm","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"redpelican2108"},"content":"event tutorial /at 3pm - 4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"redpelican2108"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"redpelican2108"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"redpelican2108"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"redpelican2108"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"redpelican2108"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"redpelican2108"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"redpelican2108"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"redpelican2108"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"redpelican2108":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"redpelican2108"},"content":"java -classpath ..\\bin Narcibot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redpelican2108":1,"-":20}}]
