[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"public class DeadlineTask extends Task{","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected LocalDate taskDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected LocalTime taskTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"    public DeadlineTask(String title, String taskDate){","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title);","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskDate \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskTime \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"dandaandaaaaaan"},"content":"    public DeadlineTask(String title, String taskDate, String taskTime){","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskDate \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskTime \u003d LocalTime.parse(taskTime);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"dandaandaaaaaan"},"content":"    public DeadlineTask(String title, Boolean isDone, String taskDate){","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskDate \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskTime \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"dandaandaaaaaan"},"content":"    public DeadlineTask(String title, Boolean isDone, String taskDate, String taskTime){","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title, isDone);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskDate \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.taskTime \u003d LocalTime.parse(taskTime);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String getByTime(){","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"dandaandaaaaaan"},"content":"        return \"(by: \" + taskDate + (taskTime !\u003d null ? \" \" + taskTime.toString() : \"\") + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String toOutputLine(){","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.getType() + \" | \" + (isDone ? \"1 \" : \"0 \") + \"| \" + this.title + \" | \" + taskDate.toString() + (taskTime !\u003d null ? \" | \" + taskTime.toString() : \"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"dandaandaaaaaan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.title + \" \" + getByTime();","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dandaandaaaaaan":48}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String FILE_PATH \u003d \"./data/test.txt\";","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_FILEIO \u003d \"OOPS!!! Error writing to file.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String INTRO_MESSAGE \u003d \"Hello! I\u0027m Duke\\n     What can I do for you?\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String MESSAGE_LIST \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String MESSAGE_MARK \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String MESSAGE_UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String MESSAGE_TASKADD \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String COMMAND_TASKDELETE \u003d \"delete\";","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String MESSAGE_TASKDELETE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_EMPTY_MARK \u003d \"OOPS!!! Task to mark cannot be empty:(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_EMPTY_UNMARK \u003d \"OOPS!!! Task to unmark cannot be empty:(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_MARK \u003d \"OOPS!!! Invalid task number, please select a valid task to mark using the task\u0027s number\";","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_UNMARK \u003d \"OOPS!!! Invalid task number, please select a valid task to unmark using the task\u0027s number\";","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"OOPS!!! You have entered an invalid command :(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_TODO_TITLE \u003d \"OOPS!!! The title of a todo cannot be empty :(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_DEADLINETASK_TITLE \u003d \"OOPS!!! The title of a deadline task cannot be empty :(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_EMPTY_DEADLINETASK_DEADLINE \u003d \"OOPS!!! The deadline cannot be empty :( Enter date in the format of yyyy-mm-dd hh:mm or yyyy-mm-dd\";","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_EVENT_TITLE \u003d \"OOPS!!! The title of an event cannot be empty :(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_EMPTY_EVENT_TIME \u003d \"OOPS!!! The time of an event cannot be empty :( Enter date in the format of yyyy-mm-dd hh:mm or yyyy-mm-dd\";","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_EMPTY_DELETE \u003d \"OOPS!!! Task to delete cannot be empty:(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_DELETE \u003d \"OOPS!!! Invalid task number, please select a valid task to delete using the task\u0027s number\";;","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"dandaandaaaaaan"},"content":"    private static final String ERROR_INVALID_TIME \u003d \"OOPS!!! The time is in the wrong format :( Enter date in the format of yyyy-mm-dd hh:mm or yyyy-mm-dd\";","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"dandaandaaaaaan"},"content":"        printContent(INTRO_MESSAGE);","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"dandaandaaaaaan"},"content":"        List\u003cTask\u003e tasks \u003d Storage.loadFromFile(FILE_PATH);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"dandaandaaaaaan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"dandaandaaaaaan"},"content":"            while (true){","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"dandaandaaaaaan"},"content":"                try{","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"dandaandaaaaaan"},"content":"                    String line \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"dandaandaaaaaan"},"content":"                    String[] splitted \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"dandaandaaaaaan"},"content":"                    String query \u003d splitted[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"dandaandaaaaaan"},"content":"                    if (query.compareTo(COMMAND_BYE) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printContent(MESSAGE_BYE);","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"dandaandaaaaaan"},"content":"                        break;","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_LIST) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"dandaandaaaaaan"},"content":"                        processList(tasks);","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_MARK) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (splitted.length \u003d\u003d 1)","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_MARK);","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"dandaandaaaaaan"},"content":"                        else if (!checkNumericString(splitted[1]) || Integer.parseInt(splitted[1]) \u003e tasks.size() || Integer.parseInt(splitted[1]) \u003c\u003d 0)","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_MARK);","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Task thisTask \u003d tasks.get(Integer.parseInt(splitted[1])-1);","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"dandaandaaaaaan"},"content":"                        thisTask.markAsDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printContent(taskLine(thisTask, MESSAGE_MARK));","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_UNMARK) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (splitted.length \u003d\u003d 1)","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_UNMARK);","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"dandaandaaaaaan"},"content":"                        else if (!checkNumericString(splitted[1]) || Integer.parseInt(splitted[1]) \u003e tasks.size() || Integer.parseInt(splitted[1]) \u003c\u003d 0)","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_UNMARK);","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Task thisTask \u003d tasks.get(Integer.parseInt(splitted[1])-1);","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"dandaandaaaaaan"},"content":"                        thisTask.markAsUndone();","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printContent(taskLine(thisTask, MESSAGE_UNMARK));","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_TODO) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (splitted.length \u003d\u003d 1)","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_TODO_TITLE);","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Task thisTask \u003d new TodoTask(line.substring(5).trim());","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"dandaandaaaaaan"},"content":"                        tasks.add(thisTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printAddDeleteTaskSuccess(tasks, thisTask, MESSAGE_TASKADD);","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_DEADLINE) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (splitted.length \u003d\u003d 1)","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_DEADLINETASK_TITLE);","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (!line.contains(\"/by\"))","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_DEADLINETASK_DEADLINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"dandaandaaaaaan"},"content":"                        String[] subSplit \u003d line.split(\"/by\");","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (subSplit.length \u003d\u003d 1)","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_DEADLINETASK_DEADLINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"dandaandaaaaaan"},"content":"                        String[] dateTimeSplit \u003d subSplit[1].substring(1).split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Task thisTask \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (dateTimeSplit.length \u003d\u003d 1){","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"dandaandaaaaaan"},"content":"                            thisTask \u003d new DeadlineTask(subSplit[0].substring(9).trim(), dateTimeSplit[0]);","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"dandaandaaaaaan"},"content":"                        } else if (dateTimeSplit.length \u003d\u003d 2){","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"dandaandaaaaaan"},"content":"                            thisTask \u003d new DeadlineTask(subSplit[0].substring(9).trim(), dateTimeSplit[0], dateTimeSplit[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"dandaandaaaaaan"},"content":"                        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_TIME);","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"dandaandaaaaaan"},"content":"                        }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"dandaandaaaaaan"},"content":"                        tasks.add(thisTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printAddDeleteTaskSuccess(tasks, thisTask, MESSAGE_TASKADD);","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_EVENT) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (splitted.length \u003d\u003d 1)","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_EVENT_TITLE);","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (!line.contains(\"/at\"))","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_EVENT_TIME);","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"dandaandaaaaaan"},"content":"                        String[] subSplit \u003d line.split(\"/at\");","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (subSplit.length \u003d\u003d 1)","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_EVENT_TIME);","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"dandaandaaaaaan"},"content":"                        String[] dateTimeSplit \u003d subSplit[1].substring(1).split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Task thisTask \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (dateTimeSplit.length \u003d\u003d 1){","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"dandaandaaaaaan"},"content":"                            thisTask \u003d new EventTask(subSplit[0].substring(6).trim(), dateTimeSplit[0]);","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"dandaandaaaaaan"},"content":"                        } else if (dateTimeSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"dandaandaaaaaan"},"content":"                            thisTask \u003d new EventTask(subSplit[0].substring(6).trim(), dateTimeSplit[0], dateTimeSplit[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"dandaandaaaaaan"},"content":"                        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_TIME);","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"dandaandaaaaaan"},"content":"                        }","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"dandaandaaaaaan"},"content":"                        tasks.add(thisTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printAddDeleteTaskSuccess(tasks, thisTask, MESSAGE_TASKADD);","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else if (query.compareTo(COMMAND_TASKDELETE) \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"dandaandaaaaaan"},"content":"                        if (splitted.length \u003d\u003d 1)","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_EMPTY_DELETE);","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"dandaandaaaaaan"},"content":"                        else if (!checkNumericString(splitted[1]) || Integer.parseInt(splitted[1]) \u003e tasks.size() || Integer.parseInt(splitted[1]) \u003c\u003d 0)","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"dandaandaaaaaan"},"content":"                            throw new DukeException(ERROR_INVALID_DELETE);","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"dandaandaaaaaan"},"content":"                        int index \u003d Integer.parseInt(splitted[1])-1;","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Task thisTask \u003d tasks.get(index);","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"dandaandaaaaaan"},"content":"                        tasks.remove(index);","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"dandaandaaaaaan"},"content":"                        Storage.saveToFile(FILE_PATH, tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"dandaandaaaaaan"},"content":"                        printAddDeleteTaskSuccess(tasks, thisTask, MESSAGE_TASKDELETE);","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"dandaandaaaaaan"},"content":"                    } else{","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"dandaandaaaaaan"},"content":"                        throw new DukeException(ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"dandaandaaaaaan"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"dandaandaaaaaan"},"content":"                } catch (DukeException e){","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"dandaandaaaaaan"},"content":"                    printContent(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"dandaandaaaaaan"},"content":"                } catch (DateTimeParseException e){","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"dandaandaaaaaan"},"content":"                    printContent(ERROR_INVALID_TIME);","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"dandaandaaaaaan"},"content":"                } catch (IOException e){","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"dandaandaaaaaan"},"content":"                    printContent(ERROR_FILEIO);","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"dandaandaaaaaan"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"dandaandaaaaaan"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"dandaandaaaaaan"},"content":"            sc.close();","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static void printLine(){","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"dandaandaaaaaan"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":156,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static void printAddDeleteTaskSuccess(List\u003cTask\u003e tasks, Task task, String message){","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"dandaandaaaaaan"},"content":"        String content \u003d taskLine(task, message) + \"\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":158,"author":{"gitId":"dandaandaaaaaan"},"content":"        content +\u003d listSizeLine(tasks);","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"dandaandaaaaaan"},"content":"        printContent(content);","lastModifiedDate":"2022-01-18"},{"lineNumber":160,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static String taskLine(Task task, String message){","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"dandaandaaaaaan"},"content":"        return message + \"\\n       [\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":164,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":165,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":166,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static String listSizeLine(List\u003cTask\u003e tasks){","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"dandaandaaaaaan"},"content":"        return \"     Now you have \" + tasks.size() + \" task\" + (tasks.size() !\u003d 1 ? \"s\" : \"\") + \" in the list.\";","lastModifiedDate":"2022-01-18"},{"lineNumber":168,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":169,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":170,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static void printContent(String text){","lastModifiedDate":"2022-01-18"},{"lineNumber":171,"author":{"gitId":"dandaandaaaaaan"},"content":"        String spacing \u003d \"     \";","lastModifiedDate":"2022-01-18"},{"lineNumber":172,"author":{"gitId":"dandaandaaaaaan"},"content":"        printLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":173,"author":{"gitId":"dandaandaaaaaan"},"content":"        System.out.println(spacing + text);","lastModifiedDate":"2022-01-18"},{"lineNumber":174,"author":{"gitId":"dandaandaaaaaan"},"content":"        printLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":175,"author":{"gitId":"dandaandaaaaaan"},"content":"        System.out.println();","lastModifiedDate":"2022-01-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static void processList(List\u003cTask\u003e tasks){","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"dandaandaaaaaan"},"content":"        String list \u003d MESSAGE_LIST + \"\\n     \";","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"dandaandaaaaaan"},"content":"        if(tasks.size() \u003d\u003d 0){","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"dandaandaaaaaan"},"content":"            list +\u003d \"~~List is currently empty~~\";","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"dandaandaaaaaan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"dandaandaaaaaan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2022-01-18"},{"lineNumber":184,"author":{"gitId":"dandaandaaaaaan"},"content":"            Task thisTask \u003d tasks.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":185,"author":{"gitId":"dandaandaaaaaan"},"content":"            list +\u003d (i+1) + \". \" + \"[\" + thisTask.getType() + \"]\" +\"[\" + thisTask.getStatusIcon() + \"] \" + thisTask.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":186,"author":{"gitId":"dandaandaaaaaan"},"content":"            if (i !\u003d tasks.size()-1)","lastModifiedDate":"2022-01-18"},{"lineNumber":187,"author":{"gitId":"dandaandaaaaaan"},"content":"                list +\u003d \"\\n     \";","lastModifiedDate":"2022-01-18"},{"lineNumber":188,"author":{"gitId":"dandaandaaaaaan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":189,"author":{"gitId":"dandaandaaaaaan"},"content":"        printContent(list);","lastModifiedDate":"2022-01-18"},{"lineNumber":190,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":191,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":192,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static Boolean checkNumericString(String string){","lastModifiedDate":"2022-01-18"},{"lineNumber":193,"author":{"gitId":"dandaandaaaaaan"},"content":"        try{","lastModifiedDate":"2022-01-18"},{"lineNumber":194,"author":{"gitId":"dandaandaaaaaan"},"content":"            Integer.parseInt(string);","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"dandaandaaaaaan"},"content":"            return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":196,"author":{"gitId":"dandaandaaaaaan"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2022-01-18"},{"lineNumber":197,"author":{"gitId":"dandaandaaaaaan"},"content":"            return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"dandaandaaaaaan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dandaandaaaaaan":196,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"    public DukeException(String str){","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(str);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dandaandaaaaaan":5}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"public class EventTask extends Task{","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected LocalDate eventDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected LocalTime eventTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"    public EventTask(String title, String eventDate){","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title);","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventDate \u003d LocalDate.parse(eventDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventTime \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"dandaandaaaaaan"},"content":"    public EventTask(String title, String eventDate, String eventTime){","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventDate \u003d LocalDate.parse(eventDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventTime \u003d LocalTime.parse(eventTime);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"dandaandaaaaaan"},"content":"    public EventTask(String title, Boolean isDone, String eventDate){","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title, isDone);","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventDate \u003d LocalDate.parse(eventDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventTime \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"dandaandaaaaaan"},"content":"    public EventTask(String title, Boolean isDone, String eventDate, String eventTime){","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventDate \u003d LocalDate.parse(eventDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.eventTime \u003d LocalTime.parse(eventTime);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String getEventTime(){","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"dandaandaaaaaan"},"content":"        return \"(at: \" + eventDate + (eventTime !\u003d null ? \" \" + eventTime.toString() : \"\") + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String toOutputLine(){","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.getType() + \" | \" + (isDone ? \"1 \" : \"0 \") + \"| \" + this.title + \" | \" + eventDate.toString() + (eventTime !\u003d null ? \" | \" + eventTime.toString() : \"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"dandaandaaaaaan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.title + \" \" + getEventTime();","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dandaandaaaaaan":48}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static int saveToFile(String path, List\u003cTask\u003e taskList) throws IOException{","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"        FileWriter out \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"        //Check if folder/file is present, otherwise create file","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"dandaandaaaaaan"},"content":"        try{","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"dandaandaaaaaan"},"content":"            String split[] \u003d path.split(\"/\");","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"dandaandaaaaaan"},"content":"            String directoryPath \u003d path.substring(0, path.length() - split[split.length-1].length());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"dandaandaaaaaan"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"dandaandaaaaaan"},"content":"            if (!directory.exists())","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"dandaandaaaaaan"},"content":"                directory.mkdirs();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"dandaandaaaaaan"},"content":"            if (!file.exists())","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"dandaandaaaaaan"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"dandaandaaaaaan"},"content":"            out \u003d new FileWriter(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"dandaandaaaaaan"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++){","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"dandaandaaaaaan"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"dandaandaaaaaan"},"content":"                String outputLine \u003d currentTask.toOutputLine() + \"\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"dandaandaaaaaan"},"content":"                out.write(outputLine);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"dandaandaaaaaan"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"dandaandaaaaaan"},"content":"        } catch(IOException exception){","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"dandaandaaaaaan"},"content":"            return -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"dandaandaaaaaan"},"content":"        } finally {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"dandaandaaaaaan"},"content":"            if (out !\u003d null)","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"dandaandaaaaaan"},"content":"                out.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"dandaandaaaaaan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"dandaandaaaaaan"},"content":"        return 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"dandaandaaaaaan"},"content":"    public static List\u003cTask\u003e loadFromFile(String path){","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"dandaandaaaaaan"},"content":"        FileReader in \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"dandaandaaaaaan"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"dandaandaaaaaan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"dandaandaaaaaan"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"dandaandaaaaaan"},"content":"            in \u003d new FileReader(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"dandaandaaaaaan"},"content":"            reader \u003d new BufferedReader(in);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"dandaandaaaaaan"},"content":"            String line;","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"dandaandaaaaaan"},"content":"            while((line \u003d reader.readLine()) !\u003d null){","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"dandaandaaaaaan"},"content":"                String split[] \u003d line.split(\" \\\\| \");                ","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"dandaandaaaaaan"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"dandaandaaaaaan"},"content":"                boolean marked \u003d split[1].equals(\"1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"dandaandaaaaaan"},"content":"                if (split[0].equals(\"T\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"dandaandaaaaaan"},"content":"                    newTask \u003d new TodoTask(split[2], marked);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"dandaandaaaaaan"},"content":"                } else if (split[0].equals(\"D\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"dandaandaaaaaan"},"content":"                    if (split.length \u003d\u003d 4)","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"dandaandaaaaaan"},"content":"                        newTask \u003d new DeadlineTask(split[2], marked, split[3]);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"dandaandaaaaaan"},"content":"                    else if (split.length \u003d\u003d 5)","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"dandaandaaaaaan"},"content":"                        newTask \u003d new DeadlineTask(split[2], marked, split[3], split[4]);","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"dandaandaaaaaan"},"content":"                } else if (split[0].equals(\"E\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"dandaandaaaaaan"},"content":"                    if (split.length \u003d\u003d 4)","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"dandaandaaaaaan"},"content":"                        newTask \u003d new EventTask(split[2], marked, split[3]);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"dandaandaaaaaan"},"content":"                    else if (split.length \u003d\u003d 5)","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"dandaandaaaaaan"},"content":"                        newTask \u003d new EventTask(split[2], marked, split[3], split[4]);","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"dandaandaaaaaan"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"dandaandaaaaaan"},"content":"                taskList.add(newTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"dandaandaaaaaan"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"dandaandaaaaaan"},"content":"            in.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"dandaandaaaaaan"},"content":"            reader.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"dandaandaaaaaan"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"dandaandaaaaaan"},"content":"            return taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"dandaandaaaaaan"},"content":"        } catch (IOException e){","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"dandaandaaaaaan"},"content":"            return taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"dandaandaaaaaan"},"content":"        } finally{","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"dandaandaaaaaan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"dandaandaaaaaan"},"content":"        return taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"dandaandaaaaaan":76}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected String title;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected Boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"    protected TaskType type;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"    public Task(String title){","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"    public Task(String title, Boolean isDone){","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"dandaandaaaaaan"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"dandaandaaaaaan"},"content":"    public void markAsUndone(){","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String getType(){","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.type.getInitial();","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"dandaandaaaaaan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String toOutputLine(){","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.getType() + \" | \" + (isDone ? \"1 \" : \"0 \") + \"| \" + this.title;","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"dandaandaaaaaan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.title;","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dandaandaaaaaan":40}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"    TODO(\"T\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"    EVENT(\"E\");","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"    private String initial;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"    TaskType(String initial){","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.initial \u003d initial;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"    public String getInitial(){","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"        return this.initial;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"dandaandaaaaaan":14}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"public class TodoTask extends Task{","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"    public TodoTask(String title){","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title);","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"    public TodoTask(String title, Boolean isDone){","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"        super(title, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dandaandaaaaaan":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dandaandaaaaaan"},"content":"todo Todo Task 1","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"dandaandaaaaaan"},"content":"deadline Deadline Task 2 /by Deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"dandaandaaaaaan"},"content":"event Event Task 3 /at Event Time","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"dandaandaaaaaan"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"dandaandaaaaaan"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"dandaandaaaaaan"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"dandaandaaaaaan"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"dandaandaaaaaan"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"dandaandaaaaaan"},"content":"unmark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dandaandaaaaaan"},"content":"invalid","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"dandaandaaaaaan"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"dandaandaaaaaan"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"dandaandaaaaaan"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dandaandaaaaaan"},"content":"deadline Deadline Title With No Deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"dandaandaaaaaan"},"content":"event Event Title With No Event","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"dandaandaaaaaan"},"content":"mark invalid","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dandaandaaaaaan"},"content":"mark 7","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"dandaandaaaaaan"},"content":"mark","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"dandaandaaaaaan"},"content":"unmark invalid","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"dandaandaaaaaan"},"content":"unmark 7","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"dandaandaaaaaan"},"content":"unmark","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"dandaandaaaaaan"},"content":"delete","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"dandaandaaaaaan"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"dandaandaaaaaan"},"content":"delete 99","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"dandaandaaaaaan"},"content":"delete 3","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"dandaandaaaaaan"},"content":"delete 3","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"dandaandaaaaaan"},"content":"delete 2","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"dandaandaaaaaan"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"dandaandaaaaaan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"dandaandaaaaaan"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dandaandaaaaaan":37}}]
