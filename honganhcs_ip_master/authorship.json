[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"3. After that, locate the `src/main/java/Ann.java` file, right-click it, and choose `Run Ann.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honganhcs":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    mainClassName \u003d \"ann.Launcher\"","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    archiveBaseName \u003d \"ann\"","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honganhcs":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"# AnnBot User Guide","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"AnnBot is a **desktop app for managing your tasks**. It\u0027s optimized for usage via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"* [Quick Start](./README.md#quick-start)","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"* [Features](./README.md#features)","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"    * Adding a task","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"      * [Adding a deadline](./README.md#adding-a-deadline-add-deadline)","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"      * [Adding an event](./README.md#adding-an-event-add-event)","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"      * [Adding a todo](./README.md#adding-a-todo-add-todo)","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    * [Deleting a task](./README.md#deleting-a-task-delete)","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    * [Viewing the list of tasks](./README.md#viewing-the-list-of-tasks-list)","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    * [Finding a task](./README.md#finding-a-task-find)","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    * [Marking a task as done](./README.md#marking-a-task-as-done-mark)","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    * [Marking a task as not done](./README.md#marking-a-task-as-done-unmark)","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    * [Exiting](./README.md#exiting-bye)","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    ","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"## Quick Start","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"1. Ensure you have Java `11` or above installed in your PC.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"2. Download the latest `ann.jar` from [here](https://github.com/honganhcs/ip/releases).","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your **AnnBot**.","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"4. Double-click the file to start the app. A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"![AnnBot GUI](./start.png)","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"### Adding a deadline: `add deadline`","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"Format: `add deadline CONTENT /by yyyy-MM-dd HH:mm`","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"* Adds a deadline with the specified `CONTENT`, date and time.","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"* The date and time must be in the above format.","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"Example: `add deadline finish homework /by 2022-02-12 18:00`","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"### Adding an event: `add event`","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"Adds an event to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"Format: `add event CONTENT /at yyyy-MM-dd HH:mm`","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"* Adds an event with the specified `CONTENT`, date and time.","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"* The date and time must be in the above format.","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"Example: `add event meet Prof /at 2022-02-12 18:00`","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"### Adding a todo: `add todo`","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"Adds a todo to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"Format: `add todo content`","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"* Adds a todo with the specified content. ","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"Example: `add todo watch lecture`","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"Deletes a task from the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"* `INDEX` must be a **positive integer** 1, 2, 3,...","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"Example: `delete 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"### Viewing the list of tasks: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"Displays the list of tasks to the user.","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"Format: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"### Finding a task: `find`","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"Displays relevant tasks to the user.","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"Format: `find KEYWORDS`","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"* Displays tasks that match at least one of the `KEYWORDS`.","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"Example: `find finish homework event`","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"Marks a task as done.","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"* Marks the task at the specified `INDEX` as done.","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"* `INDEX` must be a **positive integer** 1, 2, 3,...","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"Example: `mark 2`","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"### Marking a task as done: `unmark`","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"Marks a task as not done.","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"* Marks the task at the specified `INDEX` as not done.","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"* `INDEX` must be a **positive integer** 1, 2, 3,...","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"Example: `unmark 3`","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"### Exiting: `bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"Exits from the app.","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"Format: `bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"* Shows a pop-up message asking the user to confirm their decision.","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"* If the user clicks on the **Yes** button, the user will exit from the app.","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"* If the user clicks on the **No** button, the user can continue to use the app.","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"honganhcs":81,"-":15}},{"path":"src/main/java/ann/AnnBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import ann.commands.ExitCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.gui.Ui;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * Represents the main logic of the app.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * Solution below adapted from","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/Main.java.","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"public class AnnBot extends Application {","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Represents the storage component of the program.","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * Represents the current task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Represents the manager for the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     * Creates a new AnnBot object.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    public AnnBot() {","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"     * Starts the program by initializing the storage and task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    public void init() throws Exception {","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        super.init();","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"        ui.start(stage, this);","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"     * Returns AnnBot\u0027s response to user input.","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"     * @param input user input String.","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"     * @return AnnBot\u0027s response String.","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        return executeCommand(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    public boolean isExitCommand(String input) {","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"        return ExitCommand.isExit(Parser.parse(input));","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"     * Executes the given Command, saves the updated TaskList to storage","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"     * and returns a String which is the message of the Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"     * @param command a Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"     * @return a String which is the message of the Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"     * @throws RuntimeException if unable to save to storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"    private String executeCommand(Command command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"            command.setTaskList(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"            command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"            return command.getMessage();","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"        } catch (Storage.StorageOperationException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"honganhcs":93,"-":1}},{"path":"src/main/java/ann/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"public class Launcher {","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"        Application.launch(AnnBot.class, args);","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"honganhcs":9}},{"path":"src/main/java/ann/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Event;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Task;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.TaskType;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to add a task to the user\u0027s task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"add\";","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    /** Represents the type of task being added. */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /** Represents the task being added. */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Creates an AddCommand with the specified TaskType and task components.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * @param tt a TaskType representing the task\u0027s type.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * @param taskComponents a String array containing information about the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    public AddCommand(TaskType tt, String[] taskComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        taskType \u003d tt;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"        setTask(taskComponents);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Task with the specified task components and","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * sets the \u0027task\u0027 field to this newly created Task.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * @param taskComponents a String array containing information about the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    private void setTask(String[] taskComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        case EVENT:","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"            task \u003d new Event(taskComponents[0], taskComponents[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"            task \u003d new Deadline(taskComponents[0], taskComponents[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        case TODO:","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"            task \u003d new Task(taskComponents[0]);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        default:","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"            assert false : \"An illegal task type scenario is handled by the Parser\";","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"     * Adds the newly created Task to the instance\u0027s TaskList and sets the","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"     * \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"        super.taskList.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(\"Alright! I\u0027ve added this task:\\n\" + task.toString()","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"                + \"\\n\" + taskList.getNumTasksString());","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":64}},{"path":"src/main/java/ann/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * Represents a user command.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /** Represents the task list that the user is giving commands on. */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    private String message;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * Sets the \u0027message\u0027 field to the given string.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * @param m the message String.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    public void setMessage(String m) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"        message \u003d m;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * Returns the \u0027message\u0027 field.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * @return a String, which is the command\u0027s message.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        return message;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * Sets the \u0027taskList\u0027 field to the given TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * @param tl the user\u0027s TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    public void setTaskList(TaskList tl) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        taskList \u003d tl;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     * Executes the command.","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    public abstract void executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":46}},{"path":"src/main/java/ann/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to remove a specified Task from the user\u0027s TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"delete\";","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String FORMAT \u003d KEYWORD + \" [task number]\";","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    private final int index;","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     * Creates a new DeleteCommand with the specified task index.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * @param i an int representing the index of the task to be deleted.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"        index \u003d i;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * Removes the Task at the specified index from the TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * and sets the \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"        String deleteTaskMessage \u003d super.taskList.removeTaskAtIndex(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(deleteTaskMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":32}},{"path":"src/main/java/ann/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to exit from the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"bye\";","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"     * Creates a new ExitCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * Returns true if the given command is an ExitCommand and false otherwise.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * @param command the given Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * @return a boolean, which indicates where command is an ExitCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(\"Sad to see you go :( See you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":32}},{"path":"src/main/java/ann/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"find\";","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"    public static final String FORMAT \u003d KEYWORD + \" [keyword(s)]\";","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"    private final String findKeyWords;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"    public FindCommand(String kw) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"        findKeyWords \u003d kw;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(super.taskList.findTask(this.findKeyWords));","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":16}},{"path":"src/main/java/ann/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command that is invalid or incorrect.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"     * Creates a new IncorrectCommand with the specified message.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * @param message a String which is the message to be displayed to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public IncorrectCommand(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     * Does nothing as the command is invalid or incorrect.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":26}},{"path":"src/main/java/ann/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to view their TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"list\";","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"     * Creates a new ListCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * Executes the command by setting the \u0027message\u0027 field to the user\u0027s","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     * list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(super.taskList.getTasksString());","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":26}},{"path":"src/main/java/ann/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to mark a Task as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"mark\";","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String FORMAT \u003d KEYWORD + \" [task number]\";","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    private final int index;","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     * Creates a new MarkCommand with the specified task index.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * @param i an int representing the index of the task to be marked as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"        index \u003d i;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * Marks as done the Task at the specified index in the TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * and sets the \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"        String markTaskMessage \u003d super.taskList.markTaskAtIndex(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(markTaskMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":32}},{"path":"src/main/java/ann/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to mark a Task as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d \"unmark\";","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String FORMAT \u003d KEYWORD + \" [task number]\";","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    private final int index;","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     * Creates a new UnmarkCommand with the specified task index.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * @param i an int representing the index of the task to be marked as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    public UnmarkCommand(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"        index \u003d i;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * Marks as not done the Task at the specified index in the TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * and sets the \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"        String unmarkTaskMessage \u003d super.taskList.unmarkTaskAtIndex(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(unmarkTaskMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":32}},{"path":"src/main/java/ann/data/InputPattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.data;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * Contains Patterns and methods related to the format of user input.","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"public final class InputPattern {","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /** Represents the expected format for date and time input */","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    private static final Pattern DATE_TIME_FORMAT_PATTERN \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\");","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * Returns true if the given String has the expected format for date and time.","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * @param dateTime a String.","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * @return a boolean which indicates whether dateTime matches the DATE_TIME_FORMAT Pattern.","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    public static boolean isValidDateTimeString(String dateTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        return DATE_TIME_FORMAT_PATTERN.matcher(dateTime).matches();","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"honganhcs":24}},{"path":"src/main/java/ann/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.data;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Event;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * Represents the user\u0027s list of Tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"public class TaskList {","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    /** Represents the user\u0027s list of Tasks.*/","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    private int numTasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * Creates a new, empty TaskList.","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        numTasks \u003d 0;","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     * Creates a new TaskList containing the specified Tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * @param tasks an ArrayList of Strings representing the user\u0027s Tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    public TaskList(ArrayList\u003cString\u003e tasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        this();","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        addTasksFromFile(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        assert list.size() \u003d\u003d numTasks : \"The field numTasks should correctly keep track of \"","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"                + \"the number of tasks in the list\";","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"     * Adds the given Task to the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     * @param task a Task to be added.","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        list.add(task);","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        numTasks++;","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        assert list.size() \u003d\u003d numTasks : \"The field numTasks should correctly keep track of \"","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"                + \"the number of tasks in the list\";","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"     * Removes the Task at the specified index from the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"     * @param index an int representing the index of the Task to be removed.","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"     * @return a String which is the message to be displayed to the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    public String removeTaskAtIndex(int index) {","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"            return \"Oops! Currently, you have no tasks :)\";","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        } else if (index \u003c 1 || index \u003e numTasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"            if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"                return \"Oops! You only have 1 task in your list!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"                return \"Oops! Please enter a number between 1 and \" + numTasks + \"!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"            list.remove(index - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"            numTasks--;","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"            assert list.size() \u003d\u003d numTasks : \"The field numTasks should correctly keep track of \"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"                    + \"the number of tasks in the list\";","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"            return \"Alright! I\u0027ve removed this task:\\n\" + task.toString() + \"\\n\" + getNumTasksString();","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"     * Marks as done the Task at the specified index.","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"     * @param index an int representing the index of the Task to be marked as done.","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"     * @return a String which is the message to be displayed to the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"    public String markTaskAtIndex(int index) {","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"            return \"Oops! Currently, you have no tasks :)\";","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"        } else if (index \u003c 1 || index \u003e numTasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"            if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"                return \"Oops! You only have 1 task in your list!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"                return \"Oops! Please enter a number between 1 and \" + numTasks + \"!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"            Task task \u003d this.list.get(index - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"            task.mark();","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"            return \"Alright! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"     * Marks as not done the Task at the specified index.","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"     * @param index an int representing the index of the Task to be marked as not done.","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"     * @return a String which is the message to be displayed to the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"    public String unmarkTaskAtIndex(int index) {","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"            return \"Oops! Currently, you have no tasks :)\";","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"        } else if (index \u003c 1 || index \u003e numTasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"            if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2022-02-11"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"                return \"Oops! You only have 1 task in your list!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"                return \"Oops! Please enter a number between 1 and \" + numTasks + \"!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"honganhcs"},"content":"            Task task \u003d this.list.get(index - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"honganhcs"},"content":"            task.unmark();","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"honganhcs"},"content":"            return \"Alright! I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":121,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"honganhcs"},"content":"     * Parses the Strings into Tasks which are added to the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":124,"author":{"gitId":"honganhcs"},"content":"     * @param tasks an ArrayList containing Strings that represents Tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"honganhcs"},"content":"    public void addTasksFromFile(ArrayList\u003cString\u003e tasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"honganhcs"},"content":"        tasks.forEach(task -\u003e {","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"honganhcs"},"content":"            this.list.add(parseFileString(task));","lastModifiedDate":"2022-02-11"},{"lineNumber":129,"author":{"gitId":"honganhcs"},"content":"            this.numTasks++;","lastModifiedDate":"2022-02-11"},{"lineNumber":130,"author":{"gitId":"honganhcs"},"content":"        });","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"honganhcs"},"content":"     * Returns a Task that is created from its String representation.","lastModifiedDate":"2022-02-11"},{"lineNumber":135,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":136,"author":{"gitId":"honganhcs"},"content":"     * @param task a String which contains comma-separated information on a Task.","lastModifiedDate":"2022-02-11"},{"lineNumber":137,"author":{"gitId":"honganhcs"},"content":"     * @return a Task represented by the given String.","lastModifiedDate":"2022-02-11"},{"lineNumber":138,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":139,"author":{"gitId":"honganhcs"},"content":"    private Task parseFileString(String task) throws AssertionError {","lastModifiedDate":"2022-02-11"},{"lineNumber":140,"author":{"gitId":"honganhcs"},"content":"        String[] components \u003d task.split(\", \");","lastModifiedDate":"2022-02-11"},{"lineNumber":141,"author":{"gitId":"honganhcs"},"content":"        switch (components[0]) {","lastModifiedDate":"2022-02-11"},{"lineNumber":142,"author":{"gitId":"honganhcs"},"content":"        case \"T\":","lastModifiedDate":"2022-02-11"},{"lineNumber":143,"author":{"gitId":"honganhcs"},"content":"            return new Task(components[2], components[1].equals(\"1\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":144,"author":{"gitId":"honganhcs"},"content":"        case \"D\":","lastModifiedDate":"2022-02-11"},{"lineNumber":145,"author":{"gitId":"honganhcs"},"content":"            return Deadline.createDeadlineFromStorage(components[2], components[3], components[1].equals(\"1\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":146,"author":{"gitId":"honganhcs"},"content":"        case \"E\":","lastModifiedDate":"2022-02-11"},{"lineNumber":147,"author":{"gitId":"honganhcs"},"content":"            return Event.createEventFromStorage(components[2], components[3], components[1].equals(\"1\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":148,"author":{"gitId":"honganhcs"},"content":"        default:","lastModifiedDate":"2022-02-11"},{"lineNumber":149,"author":{"gitId":"honganhcs"},"content":"            throw new AssertionError(\"All tasks in storage should have valid type\");","lastModifiedDate":"2022-02-11"},{"lineNumber":150,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":151,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":152,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":153,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":154,"author":{"gitId":"honganhcs"},"content":"     * Returns a String which describes the number of Tasks in the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":155,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":156,"author":{"gitId":"honganhcs"},"content":"     * @return a String which describes the number of Tasks in the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":157,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":158,"author":{"gitId":"honganhcs"},"content":"    public String getNumTasksString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":159,"author":{"gitId":"honganhcs"},"content":"        return numTasks \u003d\u003d 1 ? \"Now there is 1 task in your list.\"","lastModifiedDate":"2022-02-11"},{"lineNumber":160,"author":{"gitId":"honganhcs"},"content":"                : \"Now there are \" + numTasks + \" tasks in your list.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":161,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":162,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":163,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":164,"author":{"gitId":"honganhcs"},"content":"     * Returns a String that describes all the tasks in the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":165,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":166,"author":{"gitId":"honganhcs"},"content":"     * @return a String that describes all the tasks in the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":167,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":168,"author":{"gitId":"honganhcs"},"content":"    public String getTasksString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":169,"author":{"gitId":"honganhcs"},"content":"        StringBuilder tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":170,"author":{"gitId":"honganhcs"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-11"},{"lineNumber":171,"author":{"gitId":"honganhcs"},"content":"            tasks \u003d new StringBuilder(\"Currently, you have no tasks :)\");","lastModifiedDate":"2022-02-11"},{"lineNumber":172,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":173,"author":{"gitId":"honganhcs"},"content":"            tasks \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-02-11"},{"lineNumber":174,"author":{"gitId":"honganhcs"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-02-11"},{"lineNumber":175,"author":{"gitId":"honganhcs"},"content":"            for (Task task : this.list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":176,"author":{"gitId":"honganhcs"},"content":"                tasks.append(i).append(\". \").append(task.toString());","lastModifiedDate":"2022-02-11"},{"lineNumber":177,"author":{"gitId":"honganhcs"},"content":"                i++;","lastModifiedDate":"2022-02-11"},{"lineNumber":178,"author":{"gitId":"honganhcs"},"content":"                if (i \u003c\u003d numTasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":179,"author":{"gitId":"honganhcs"},"content":"                    tasks.append(\"\\n\");","lastModifiedDate":"2022-02-11"},{"lineNumber":180,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":181,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":182,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":183,"author":{"gitId":"honganhcs"},"content":"        return tasks.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":184,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":185,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":186,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":187,"author":{"gitId":"honganhcs"},"content":"     * Returns a String, which describes all the Tasks, to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":188,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":189,"author":{"gitId":"honganhcs"},"content":"     * @return a String containing String representations of the Tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":190,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":191,"author":{"gitId":"honganhcs"},"content":"    public String getFileString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":192,"author":{"gitId":"honganhcs"},"content":"        StringBuilder fileString \u003d new StringBuilder();","lastModifiedDate":"2022-02-11"},{"lineNumber":193,"author":{"gitId":"honganhcs"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":194,"author":{"gitId":"honganhcs"},"content":"            fileString.append(list.get(i).toFileString());","lastModifiedDate":"2022-02-11"},{"lineNumber":195,"author":{"gitId":"honganhcs"},"content":"            if (i !\u003d this.numTasks - 1) {","lastModifiedDate":"2022-02-11"},{"lineNumber":196,"author":{"gitId":"honganhcs"},"content":"                fileString.append(\"\\n\");","lastModifiedDate":"2022-02-11"},{"lineNumber":197,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":198,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":199,"author":{"gitId":"honganhcs"},"content":"        return fileString.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":200,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":201,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":202,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":203,"author":{"gitId":"honganhcs"},"content":"     * Returns a String which contains the Tasks whose description matches the given keyword(s).","lastModifiedDate":"2022-02-11"},{"lineNumber":204,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":205,"author":{"gitId":"honganhcs"},"content":"     * @param keyWords a String containing the keyword(s).","lastModifiedDate":"2022-02-11"},{"lineNumber":206,"author":{"gitId":"honganhcs"},"content":"     * @return a String which contains the Tasks whose description matches the given keyword(s).","lastModifiedDate":"2022-02-11"},{"lineNumber":207,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":208,"author":{"gitId":"honganhcs"},"content":"    public String findTask(String keyWords) {","lastModifiedDate":"2022-02-11"},{"lineNumber":209,"author":{"gitId":"honganhcs"},"content":"        String[] keyWordsInLowerCase \u003d keyWords.toLowerCase().split(\" \");","lastModifiedDate":"2022-02-14"},{"lineNumber":210,"author":{"gitId":"honganhcs"},"content":"        ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":211,"author":{"gitId":"honganhcs"},"content":"        for (int i \u003d 0; i \u003c keyWordsInLowerCase.length; i++) {","lastModifiedDate":"2022-02-14"},{"lineNumber":212,"author":{"gitId":"honganhcs"},"content":"            addMatchingTasks(matchingTasks, keyWordsInLowerCase[i]);","lastModifiedDate":"2022-02-14"},{"lineNumber":213,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":214,"author":{"gitId":"honganhcs"},"content":"        int numMatchingTasks \u003d matchingTasks.size();","lastModifiedDate":"2022-02-14"},{"lineNumber":215,"author":{"gitId":"honganhcs"},"content":"        if (numMatchingTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-14"},{"lineNumber":216,"author":{"gitId":"honganhcs"},"content":"            return \"There are no matching tasks in your list!\";","lastModifiedDate":"2022-02-14"},{"lineNumber":217,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":218,"author":{"gitId":"honganhcs"},"content":"            StringBuilder matchingTasksString \u003d new StringBuilder();","lastModifiedDate":"2022-02-14"},{"lineNumber":219,"author":{"gitId":"honganhcs"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-02-14"},{"lineNumber":220,"author":{"gitId":"honganhcs"},"content":"            for (String s : matchingTasks) {","lastModifiedDate":"2022-02-14"},{"lineNumber":221,"author":{"gitId":"honganhcs"},"content":"                matchingTasksString.append(i).append(\". \").append(s);","lastModifiedDate":"2022-02-14"},{"lineNumber":222,"author":{"gitId":"honganhcs"},"content":"                if (i \u003c numMatchingTasks) {","lastModifiedDate":"2022-02-14"},{"lineNumber":223,"author":{"gitId":"honganhcs"},"content":"                    matchingTasksString.append(\"\\n\");","lastModifiedDate":"2022-02-14"},{"lineNumber":224,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-02-14"},{"lineNumber":225,"author":{"gitId":"honganhcs"},"content":"                i++;","lastModifiedDate":"2022-02-14"},{"lineNumber":226,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":227,"author":{"gitId":"honganhcs"},"content":"            return \"Here are the matching tasks in your list:\\n\" + matchingTasksString;","lastModifiedDate":"2022-02-14"},{"lineNumber":228,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":229,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":230,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":231,"author":{"gitId":"honganhcs"},"content":"    private void addMatchingTasks(ArrayList\u003cString\u003e tasks, String kw) {","lastModifiedDate":"2022-02-14"},{"lineNumber":232,"author":{"gitId":"honganhcs"},"content":"        switch (kw) {","lastModifiedDate":"2022-02-14"},{"lineNumber":233,"author":{"gitId":"honganhcs"},"content":"        case \"event\":","lastModifiedDate":"2022-02-11"},{"lineNumber":234,"author":{"gitId":"honganhcs"},"content":"        case \"events\":","lastModifiedDate":"2022-02-14"},{"lineNumber":235,"author":{"gitId":"honganhcs"},"content":"            for (Task t : list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":236,"author":{"gitId":"honganhcs"},"content":"                if (t instanceof Event) {","lastModifiedDate":"2022-02-11"},{"lineNumber":237,"author":{"gitId":"honganhcs"},"content":"                    tasks.add(t.toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":238,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":239,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":240,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":241,"author":{"gitId":"honganhcs"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-11"},{"lineNumber":242,"author":{"gitId":"honganhcs"},"content":"        case \"deadlines\":","lastModifiedDate":"2022-02-14"},{"lineNumber":243,"author":{"gitId":"honganhcs"},"content":"            for (Task t : list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":244,"author":{"gitId":"honganhcs"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2022-02-11"},{"lineNumber":245,"author":{"gitId":"honganhcs"},"content":"                    tasks.add(t.toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":246,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":247,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":248,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":249,"author":{"gitId":"honganhcs"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-11"},{"lineNumber":250,"author":{"gitId":"honganhcs"},"content":"        case \"todos\":","lastModifiedDate":"2022-02-14"},{"lineNumber":251,"author":{"gitId":"honganhcs"},"content":"            for (Task t : list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":252,"author":{"gitId":"honganhcs"},"content":"                if (!(t instanceof Deadline || t instanceof Event)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":253,"author":{"gitId":"honganhcs"},"content":"                    tasks.add(t.toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":254,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":255,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":256,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":257,"author":{"gitId":"honganhcs"},"content":"        default:","lastModifiedDate":"2022-02-11"},{"lineNumber":258,"author":{"gitId":"honganhcs"},"content":"            for (Task t : list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":259,"author":{"gitId":"honganhcs"},"content":"                if (t.toString().toLowerCase().contains(kw)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":260,"author":{"gitId":"honganhcs"},"content":"                    tasks.add(t.toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":261,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":262,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":263,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":264,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":265,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"honganhcs":265}},{"path":"src/main/java/ann/data/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.data.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.data.InputPattern;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    public static final String INPUT_FORMAT \u003d \"deadline [content] /by yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    private static final TaskType TASK_TYPE \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d TASK_TYPE.getKeyword();","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    private String date;","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    private String time;","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Deadline with the specified content and date and time.","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes the task.","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime a String which describes the date and time (in the user input format).","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    public Deadline(String content, String dateAndTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"        super(content);","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        assert InputPattern.isValidDateTimeString(dateAndTime) : \"An illegal date-time format \"","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"                + \"scenario is handled by the Parser\";","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"        setDateAndTime(dateAndTime);","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Deadline with the specified content and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes the task.","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     * @param isDone a boolean which indicates whether the task is completed.","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public Deadline(String content, boolean isDone) {","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        super(content, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * Returns a newly created Deadline from the specified content, date and time and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes the task.","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime a String which describes the date and time (in the file format).","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"     * @param isDone a boolean which indicates whether the task is completed.","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     * @return a newly created Deadline from the specified content, dateAndTime and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"    public static Deadline createDeadlineFromStorage(String content, String dateAndTime, boolean isDone) {","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        assert !content.isBlank() : \"All Deadlines in storage should have a non-empty description\";","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        Deadline ddl \u003d new Deadline(content, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        parseDateAndTime(ddl, dateAndTime);","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        return ddl;","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     * Parses the date and time inputted by the user and sets the date and time to Strings in the file format.","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime a String representing the date and time (in user input format).","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    public void setDateAndTime(String dateAndTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"        String[] dt \u003d dateAndTime.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        LocalDate date \u003d LocalDate.parse(dt[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"        LocalTime time \u003d LocalTime.parse(dt[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        this.date \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        this.time \u003d time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"     * Sets the date and time of the given Deadline to the result of parsing the given date and time","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"     * String (in file format).","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"     * @param ddl the Deadline whose date and time field is to be set.","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime the String representing the date and time of ddl.","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"    private static void parseDateAndTime(Deadline ddl, String dateAndTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        ddl.date \u003d dateAndTime.substring(0, 11).trim();","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"        ddl.time \u003d dateAndTime.substring(11).trim();","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"     * Returns the String representation of the Deadline to be displayed to users.","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"     * @return the String representation of the Deadline to be displayed to users.","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"        return \"[D]\" + (super.isDone ? \"[X] \" : \"[ ] \") + super.content + \" (by \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"     * Returns the String representation of the Deadline to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"     * @return the String representation of the Deadline to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"    public String toFileString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"        return \"D, \" + (super.isDone ? \"1, \" : \"0, \") + super.content + \", \" + this.date + \" \" + this.time;","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"honganhcs":104}},{"path":"src/main/java/ann/data/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.data.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.data.InputPattern;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * Represents an event that happens at a specified time.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    public static final String INPUT_FORMAT \u003d \"event [content] /at yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    private static final TaskType TASK_TYPE \u003d TaskType.EVENT;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d TASK_TYPE.getKeyword();","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    private String date;","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    private String time;","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Event with the specified content and date and time.","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes the event.","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime a String which describes dateAndTime the event occurs.","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    public Event(String content, String dateAndTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"        super(content);","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        assert InputPattern.isValidDateTimeString(dateAndTime) : \"An illegal date-time format \"","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"                + \"scenario is handled by the Parser\";","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"        setDateAndTime(dateAndTime);","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Event with the specified content and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes the event.","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     * @param isDone a boolean which indicates whether the event is completed.","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public Event(String content, boolean isDone) {","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        super(content, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * Returns a newly created Event from the specified content, time and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes the event.","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime a String which describes the time (in the file format).","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"     * @param isDone a boolean which indicates whether the event is completed.","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     * @return a newly created Event from the specified content, time and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"    public static Event createEventFromStorage(String content, String dateAndTime, boolean isDone) {","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        assert !content.isBlank() : \"All Events in storage should have a non-empty description\";","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        Event event \u003d new Event(content, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        parseDateAndTime(event, dateAndTime);","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        return event;","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     * Sets the date and time of the given Event to the result of parsing the given time","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"     * String (in file format).","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"     * @param event the given Event.","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime the String representing the date and time to be assigned to \u0027event\u0027.","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    private static void parseDateAndTime(Event event, String dateAndTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"        event.date \u003d dateAndTime.substring(0, 11).trim();","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        event.time \u003d dateAndTime.substring(11).trim();","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"     * Parses the time inputted by the user and sets the date and time to Strings in the file format.","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"     * @param dateAndTime a String representing the time of the event (in user input format).","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"    public void setDateAndTime(String dateAndTime) {","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"        String[] dt \u003d dateAndTime.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"        LocalDate date \u003d LocalDate.parse(dt[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"        LocalTime time \u003d LocalTime.parse(dt[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        this.date \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"        this.time \u003d time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"     * Returns the String representation of the Event to be displayed to users.","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"     * @return the String representation of the Event to be displayed to users.","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"        return \"[E]\" + (super.isDone ? \"[X] \" : \"[ ] \") + super.content + \" (at \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"     * Returns the String representation of the Event to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"     * @return the String representation of the Event to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"    public String toFileString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"        return \"E, \" + (super.isDone ? \"1, \" : \"0, \") + super.content + \", \" + this.date + \" \" + this.time;","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"honganhcs":104}},{"path":"src/main/java/ann/data/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.data.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a basic task.","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class Task {","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    private static final TaskType TASK_TYPE \u003d TaskType.TODO;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String KEYWORD \u003d TASK_TYPE.getKeyword();","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    protected String content;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Task from the specified content.","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes what needs to be done.","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    public Task(String content) {","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"        assert !content.isBlank() : \"The Task should have a non-empty description\";","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Task from the specified content and completion status.","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     * @param content a String which describes what needs to be isDone.","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * @param isDone a boolean which indicates whether the task is isDone.","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public Task(String content, boolean isDone) {","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        assert !content.isBlank() : \"The Task should have a non-empty description\";","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     * Marks the Task as done.","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public void mark() {","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * Marks the Task as not done.","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public void unmark() {","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"     * Returns the String representation of the Task to be displayed to users.","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"     * @return the String representation of the Task to be displayed to users.","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        return \"[T]\" + (this.isDone ? \"[X] \" : \"[ ] \") + this.content;","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"     * Returns the String representation of the Task to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"     * @return the String representation of the Task to be written to a file.","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    public String toFileString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"        return \"T, \" + (this.isDone ? \"1, \" : \"0, \") + this.content;","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"honganhcs":70}},{"path":"src/main/java/ann/data/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.data.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents the type of task.","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public enum TaskType {","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    TODO(\"todo\"), EVENT(\"event\"), DEADLINE(\"deadline\");","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    private final String keyword;","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     * Creates a new TaskType object from the specified task type name.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * @param taskName the name of the task type.","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    TaskType(String taskName) {","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"        this.keyword \u003d taskName;","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    public String getKeyword() {","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        return keyword;","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"honganhcs":24}},{"path":"src/main/java/ann/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * Controller for DialogBox, which can contain the user\u0027s input or AnnBot\u0027s response and a display picture.","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" * @@author j-lum-reused","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":" * Source: https://se-education.org/guides/tutorials/javaFxPart4.html.","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Creates a new DialogBox.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * @param text the text.","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     * @param img the picture.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    private void flip() {","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    public static DialogBox getAnnDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"        db.flip();","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        return db;","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"honganhcs":61}},{"path":"src/main/java/ann/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.AnnBot;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart4.html.","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"@SuppressWarnings(\"FieldCanBeLocal\")","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    private AnnBot annBot;","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    private final Image annImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ann.png\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    private final String welcomeMessage \u003d \"Greetings from AnnBot!\\nHow can I help you? :)\";","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    private final Image greetingImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/greeting.png\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * Initializes the MainWindow when application is launched.","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     * Shows welcome message to users.","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        dialogContainer.getChildren().add(DialogBox.getAnnDialog(welcomeMessage, greetingImage));","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    public void setAnn(AnnBot a) {","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        annBot \u003d a;","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"     * Creates two dialog boxes, one repeating user input and the other containing AnnBot\u0027s response, and","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     * then adds them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        String response \u003d annBot.getResponse(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        boolean isExitCommand \u003d annBot.isExitCommand(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        if (isExitCommand) {","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"            dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"            handleExitCommand(response);","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"                    DialogBox.getAnnDialog(response, annImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"            );","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"    private void handleExitCommand(String response) {","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"        if (showConfirmationAlert(\"Are you sure you want to exit?\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"            showInformationAlert(response);","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"    private void showInformationAlert(String response) {","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"        final Alert alert \u003d new Alert(Alert.AlertType.INFORMATION, response);","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"    private boolean showConfirmationAlert(String content) {","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"        final Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION, content, ButtonType.YES, ButtonType.NO);","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"        return alert.getResult() \u003d\u003d ButtonType.YES;","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"honganhcs":88}},{"path":"src/main/java/ann/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.gui;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.AnnBot;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * Represents a manager for the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"public class Ui {","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    public Ui() {","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     * Initializes the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * @@author j-lum-reused","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Source: from https://se-education.org/guides/tutorials/javaFxPart4.html.","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * @param stage the top level JavaFX container.","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * @param annBot represents the main logic of the application.","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    public void start(Stage stage, AnnBot annBot) {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAnn(annBot);","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"            stage.show();","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"            stage.setTitle(\"AnnBot\");","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"            showInitializationErrorAndShutDown(e);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    // Solution below adapted from","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    // https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/ui/UiManager.java.","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    private void showInitializationErrorAndShutDown(Throwable e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        final Alert alert \u003d new Alert(Alert.AlertType.ERROR);","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        alert.setTitle(\"Unable to initialize app... Shutting down...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        alert.setContentText(e.toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        Platform.exit();","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        System.exit(1);","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"honganhcs":50}},{"path":"src/main/java/ann/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.commands.AddCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import ann.commands.Command;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.commands.DeleteCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.commands.ExitCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.commands.FindCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.commands.IncorrectCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import ann.commands.ListCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import ann.commands.MarkCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import ann.commands.UnmarkCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"import ann.data.InputPattern;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Deadline;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Event;","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.TaskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * Represents a parser to parse user input into appropriate commands.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private static final String INVALID_COMMAND_WARNING \u003d \"Oops! Please enter a valid command!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private static final String FORMAT_WARNING \u003d \"Oops! Please use the following format:\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private static final String MISSING_ADD_CONTENT_WARNING \u003d \"Oops! Please specify the task you wish to add!\";","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    private static final String MISSING_ADD_TASK_TYPE_WARNING \u003d \"Oops! Please enter a valid task type!\";","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    private static final String ADD_DEADLINE_FORMAT \u003d AddCommand.KEYWORD + \" \" + Deadline.INPUT_FORMAT;","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    private static final String ADD_EVENT_FORMAT \u003d AddCommand.KEYWORD + \" \" + Event.INPUT_FORMAT;","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     * Returns a Command which is the result of parsing the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * @param input a String which is the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     * @return a Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        if (isExitCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        } else if (isListCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        } else if (isAddCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"            return handleAdd(getSubstringAfterKeyword(input, AddCommand.KEYWORD));","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        } else if (isFindCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"            return handleFind(getSubstringAfterKeyword(input, FindCommand.KEYWORD));","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        } else if (isMarkCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"            return handleMark(getSubstringAfterKeyword(input, MarkCommand.KEYWORD));","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        } else if (isUnmarkCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"            return handleUnmark(getSubstringAfterKeyword(input, UnmarkCommand.KEYWORD));","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"        } else if (isDeleteCommand(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"            return handleDelete(getSubstringAfterKeyword(input, DeleteCommand.KEYWORD));","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(INVALID_COMMAND_WARNING);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    private static boolean isExitCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        return input.equalsIgnoreCase(ExitCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"    private static boolean isListCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"        return input.equalsIgnoreCase(ListCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    private static boolean isAddCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        return hasCommandKeyword(input, AddCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    private static boolean isMarkCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"        return hasCommandKeyword(input, MarkCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    private static boolean isUnmarkCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        return hasCommandKeyword(input, UnmarkCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    private static boolean isDeleteCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"        return hasCommandKeyword(input, DeleteCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"    private static boolean isFindCommand(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"        return hasCommandKeyword(input, FindCommand.KEYWORD);","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"    private static boolean hasCommandKeyword(String input, String ck) {","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"        return input.equals(ck) || input.startsWith(ck + \" \");","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"    private static String getSubstringAfterKeyword(String input, String kw) {","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        return input.equals(kw) ? \"\" : input.substring(kw.length() + 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027add\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"     * @param input a String which represents the contents of the \u0027add\u0027 command.","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"    private static Command handleAdd(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(MISSING_ADD_CONTENT_WARNING);","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"        } else if (isTodo(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"            return handleTodo(getSubstringAfterKeyword(input, TaskType.TODO.getKeyword()));","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"        } else if (isDeadline(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"            return handleDeadline(getSubstringAfterKeyword(input, TaskType.DEADLINE.getKeyword()));","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"        } else if (isEvent(input)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"            return handleEvent(getSubstringAfterKeyword(input, TaskType.EVENT.getKeyword()));","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(MISSING_ADD_TASK_TYPE_WARNING);","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"    private static boolean isTodo(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"        return isTaskType(input, TaskType.TODO);","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"    private static boolean isDeadline(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"        return isTaskType(input, TaskType.DEADLINE);","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"    private static boolean isEvent(String input) {","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"        return isTaskType(input, TaskType.EVENT);","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"    private static boolean isTaskType(String input, TaskType tt) {","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"        return input.equals(tt.getKeyword()) || input.startsWith(tt.getKeyword() + \" \");","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of a \u0027mark\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"honganhcs"},"content":"     * @param index a String which should contain the index of the Task to be mark as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"honganhcs"},"content":"    private static Command handleMark(String index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"honganhcs"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + MarkCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"honganhcs"},"content":"        } else if (index.matches(\"^\\\\d+\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"honganhcs"},"content":"            int i \u003d Integer.parseInt(index);","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"honganhcs"},"content":"            return new MarkCommand(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + MarkCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027unmark\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"honganhcs"},"content":"     * @param index a String which should contain the index of the Task to be mark as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":139,"author":{"gitId":"honganhcs"},"content":"    private static Command handleUnmark(String index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"honganhcs"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + UnmarkCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"honganhcs"},"content":"        } else if (index.matches(\"^\\\\d+\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"honganhcs"},"content":"            int i \u003d Integer.parseInt(index);","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"honganhcs"},"content":"            return new UnmarkCommand(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + UnmarkCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of a \u0027delete\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"honganhcs"},"content":"     * @param index a String which should contain the index of the Task to be deleted.","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":156,"author":{"gitId":"honganhcs"},"content":"    private static Command handleDelete(String index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"honganhcs"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + DeleteCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"honganhcs"},"content":"        } else if (index.matches(\"^\\\\d+\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"honganhcs"},"content":"            int i \u003d Integer.parseInt(index);","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"honganhcs"},"content":"            return new DeleteCommand(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + DeleteCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027add todo\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":169,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"honganhcs"},"content":"     * @param todoContent a String which should contain the contents of the Task to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":171,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":173,"author":{"gitId":"honganhcs"},"content":"    private static Command handleTodo(String todoContent) {","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"honganhcs"},"content":"        if (todoContent.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(\"Oops! Please add a description for the todo!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"honganhcs"},"content":"            return new AddCommand(TaskType.TODO, new String[] {todoContent});","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":182,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027add event\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":183,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":184,"author":{"gitId":"honganhcs"},"content":"     * @param eventComponents a String which should contain the information of the Event to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":185,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":186,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":187,"author":{"gitId":"honganhcs"},"content":"    private static Command handleEvent(String eventComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"honganhcs"},"content":"        if (eventComponents.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + ADD_EVENT_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":190,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"honganhcs"},"content":"            String[] eventComponentsArray \u003d eventComponents.split(\" /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"honganhcs"},"content":"            if (eventComponentsArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_EVENT_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":194,"author":{"gitId":"honganhcs"},"content":"            } else if (eventComponentsArray[0].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a description for the event!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"honganhcs"},"content":"            } else if (eventComponentsArray[1].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a date and time for the event!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"honganhcs"},"content":"            } else if (!InputPattern.isValidDateTimeString(eventComponentsArray[1])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_EVENT_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":200,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"honganhcs"},"content":"                return new AddCommand(TaskType.EVENT, eventComponentsArray);","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":207,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of a \u0027add deadline\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":208,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":209,"author":{"gitId":"honganhcs"},"content":"     * @param deadlineComponents a String which should contain the information of the Deadline to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":210,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":211,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":212,"author":{"gitId":"honganhcs"},"content":"    private static Command handleDeadline(String deadlineComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"honganhcs"},"content":"        if (deadlineComponents.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + ADD_DEADLINE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":215,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"honganhcs"},"content":"            String[] deadlineComponentsArray \u003d deadlineComponents.split(\" /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"honganhcs"},"content":"            if (deadlineComponentsArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_DEADLINE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":219,"author":{"gitId":"honganhcs"},"content":"            } else if (deadlineComponentsArray[0].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":220,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a description for the deadline!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"honganhcs"},"content":"            } else if (deadlineComponentsArray[1].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a deadline for the deadline!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":223,"author":{"gitId":"honganhcs"},"content":"            } else if (!InputPattern.isValidDateTimeString(deadlineComponentsArray[1])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_DEADLINE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":225,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"honganhcs"},"content":"                return new AddCommand(TaskType.DEADLINE, deadlineComponentsArray);","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":229,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"honganhcs"},"content":"    private static Command handleFind(String keyWords) {","lastModifiedDate":"2022-02-17"},{"lineNumber":232,"author":{"gitId":"honganhcs"},"content":"        if (keyWords.isBlank()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":233,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + FindCommand.FORMAT);","lastModifiedDate":"2022-02-17"},{"lineNumber":234,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":235,"author":{"gitId":"honganhcs"},"content":"            return new FindCommand(keyWords.trim());","lastModifiedDate":"2022-02-17"},{"lineNumber":236,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":237,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":238,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":238}},{"path":"src/main/java/ann/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * Represents the storage object which stores the tasks between uses of the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    private static final String DEFAULT_STORAGE_FOLDER_NAME \u003d \"storageFolder\";","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    private static final String DEFAULT_STORAGE_FILE_NAME \u003d \"ann.txt\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private File file;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private String folderName;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private String fileName;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Storage object from the default folder and file names.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    public Storage() throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        if (!isValidFileName(DEFAULT_STORAGE_FILE_NAME)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"            throw new InvalidStorageFilePathException(\"Default storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        openFolder(DEFAULT_STORAGE_FOLDER_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        openFile(DEFAULT_STORAGE_FOLDER_NAME, DEFAULT_STORAGE_FILE_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Storage object with the specified folderName and fileName.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     * @param folderName a String which is the name of the folder containing the storage file.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     * @param fileName a String which is the name of the storage file.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if the storage file\u0027s name does not end with \u0027.txt\u0027.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public Storage(String folderName, String fileName) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        if (!isValidFileName(fileName)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        openFolder(folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        openFile(folderName, fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     * Opens a new folder with the given folder name.","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     * @param folderName a String which is the name of the folder.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if a directory with the specified name cannot be created.","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    private void openFolder(String folderName) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        Path path \u003d Paths.get(folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"            File f1 \u003d new File(folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"            if (!f1.mkdirs()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"                throw new StorageOperationException(\"Error opening folder: \" + folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"     * Creates a new file with the given filename in the given folder.","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"     * @param folderName a String which is the name of the folder.","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"     * @param fileName a String which is the name of the file.","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if the file cannot be created.","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"    private void openFile(String folderName, String fileName) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        Path filePath \u003d Paths.get(folderName + fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"            file \u003d new File(folderName, fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"                throw new StorageOperationException(\"Error opening file: \" + fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"     * Returns an ArrayList of Strings which represent the Tasks, read from the storage file.","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"     * @return an ArrayList of Strings which represent the Tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"     * @throws AssertionError","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"    public ArrayList\u003cString\u003e load() throws AssertionError {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"                tasks.add(sc.nextLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"            return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier\");","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"     * Writes to the storage file the description of all the tasks in the current TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"honganhcs"},"content":"     * @param taskList the current TaskList of the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if unable to write to file.","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"honganhcs"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"honganhcs"},"content":"            String content \u003d taskList.getFileString();","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"honganhcs"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"honganhcs"},"content":"            fw.write(content);","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"honganhcs"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"honganhcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"honganhcs"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + this.folderName + \"/\" + this.fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"honganhcs"},"content":"     * Returns a boolean which indicates whether the given filename is valid.","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"honganhcs"},"content":"     * @param fileName a String which is the filename.","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"honganhcs"},"content":"     * @return true if the given filename ends with \u0027.txt\u0027 and false otherwise.","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"honganhcs"},"content":"    private boolean isValidFileName(String fileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"honganhcs"},"content":"        return fileName.endsWith(\".txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"honganhcs"},"content":"     * Represents an Exception thrown when a given filename is not valid.","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":142,"author":{"gitId":"honganhcs"},"content":"    public static class InvalidStorageFilePathException extends IllegalArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"honganhcs"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"honganhcs"},"content":"            super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"honganhcs"},"content":"     * Represents an Exception thrown when storage operations (open folder/file, save and load)","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"honganhcs"},"content":"     * cannot be completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"honganhcs"},"content":"    public static class StorageOperationException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"honganhcs"},"content":"        public StorageOperationException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"honganhcs"},"content":"            super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":157}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"\u003c!-- @@author: j-lum-reused, from https://se-education.org/guides/tutorials/javaFxPart4.html --\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"honganhcs":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"\u003c!-- @@author: j-lum-reused, from https://se-education.org/guides/tutorials/javaFxPart4.html --\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ann.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"honganhcs":20}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import ann.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public void testParseDeadlineSuccess() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"add deadline finish IP /by 2022-01-27 18:00\");","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(new TaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Alright! I\u0027ve added this task:\\n[D][ ] finish IP (by 27 Jan 2022 06:00 PM)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"                + \"Now there is 1 task in your list.\", command.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    public void testParseEventFailure1() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"add event meeting /at   \");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(new TaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please add a date and time for the event!\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public void testParseEventFailure2() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"add event meeting /at 12-03-2022 17:00\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(new TaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please use the following format:\\nadd event [content] /at yyyy-MM-dd HH:mm\",","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"                command.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public void testParseMarkSuccess() {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        tl.addTask(new Task(\"finish IP\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(tl);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Alright! I\u0027ve marked this task as done:\\n[T][X] finish IP\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    public void testParseUnmarkFailure() {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        tl.addTask(new Task(\"finish IP\", true));","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(tl);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! You only have 1 task in your list!\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    public void testParseDeleteFailure() {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"delete\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please use the following format:\\ndelete [task number]\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    public void testParseIncorrectCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"blah\");","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please enter a valid command!\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":73}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.storage.Storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public void testInvalidStorageFilePathException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"            Storage storage \u003d new Storage(\"data\", \"hello\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"            assertEquals(\"Storage file should end with \u0027.txt\u0027\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"delete","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"delete 1","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"todo","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"todo buy book","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"deadline","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"deadline finish homework","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"deadline  /by Saturday","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"deadline finish homework /by 2022-01-01 06:00","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"boo","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"event meet Prof /at 2022-08-25 16:00","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"event festival /at","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"mark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"unmark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"delete 2","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"honganhcs":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"java -classpath ..\\bin Ann \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honganhcs":1,"-":20}}]
