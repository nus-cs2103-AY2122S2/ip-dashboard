[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"# Ann project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"3. After that, locate the `src/main/java/Ann.java` file, right-click it, and choose `Run Ann.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honganhcs":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    mainClassName \u003d \"ann.Ann\"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    archiveBaseName \u003d \"ann\"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honganhcs":3,"-":44}},{"path":"src/main/java/ann/Ann.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import ann.commands.ExitCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.ui.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" * Represents the main component of the program which controls the other components.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"public class Ann {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    /** Represents the storage component of the program.*/","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    /** Represents the current task list.*/","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /** Represents the user interface component of the program.*/","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Ann object.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * @throws RuntimeException if the storage cannot be initialized.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public Ann() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     * Drives the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * @param args the initial input (folder and file name for storage).","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    private void run(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        start(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        runCommandUntilExitCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        exit();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     * Starts the program by initializing the user interface, storage and task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     * @param args the initial input (folder and file name for storage).","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    public void start(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"            this.storage \u003d initializeStorage(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"            ui.showGreeting();","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"            ui.showFailedInitMessage();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     * Returns a Storage object with the given folder and file names.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     * @param args the initial input (folder and file name for storage).","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"     * @return a Storage object with the given folder and file names.","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"     * @throws Storage.StorageOperationException if the storage cannot be initialized.","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    private Storage initializeStorage(String[] args) throws Storage.StorageOperationException {","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"        return args.length !\u003d 2 ? new Storage(args[0], args[1]) : new Storage();","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"     * Requests for user input continuously until the user inputs \u0027exit\u0027.","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    private void runCommandUntilExitCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"        Command command;","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"        do {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"            command \u003d Parser.parse(ui.getCommand());","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"            String commandMessage \u003d executeCommand(command);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"            ui.showToUser(commandMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"        } while(!ExitCommand.isExit(command));","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"     * Executes the given Command, saves the updated TaskList to storage","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"     * and returns a String which is the message of the Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"     * @param command a Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"     * @return a String which is the message of the Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"     * @throws RuntimeException if unable to save to storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"    private String executeCommand(Command command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"            command.setTaskList(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"            command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"            return command.getMessage();","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"        } catch (Storage.StorageOperationException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"     * Shows the exit message before exiting from the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"    private void exit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"        new Ann().run(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"honganhcs":109,"-":3}},{"path":"src/main/java/ann/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Event;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Task;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.TaskType;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to add a task to the user\u0027s task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /** Represents the type of task being added. */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    private TaskType taskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    /** Represents the task being added. */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * Creates an AddCommand with the specified TaskType and task components.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * @param tt a TaskType representing the task\u0027s type.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * @param taskComponents a String array containing information about the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    public AddCommand(TaskType tt, String[] taskComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        taskType \u003d tt;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        setTask(taskComponents);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Task with the specified task components and","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     * sets the \u0027task\u0027 field to this newly created Task.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     * @param taskComponents a String array containing information about the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    private void setTask(String[] taskComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        case EVENT:","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"            task \u003d new Event(taskComponents[0], taskComponents[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"            task \u003d new Deadline(taskComponents[0], taskComponents[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        default:","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"            task \u003d new Task(taskComponents[0]);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     * Adds the newly created Task to the instance\u0027s TaskList and sets the","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"     * \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        super.taskList.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(\"Alright! I\u0027ve added this task:\\n\" + task.toString()","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"                + \"\\n\" + taskList.getNumTasksString());","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":60}},{"path":"src/main/java/ann/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * Represents a user command.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /** Represents the task list that the user is giving commands on. */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    private String message;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * Sets the \u0027message\u0027 field to the given string.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * @param m the message String.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    public void setMessage(String m) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"        message \u003d m;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * Returns the \u0027message\u0027 field.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * @return a String, which is the command\u0027s message.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        return message;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * Sets the \u0027taskList\u0027 field to the given TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * @param tl the user\u0027s TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    public void setTaskList(TaskList tl) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        taskList \u003d tl;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     * An abstract method to be implemented by sub-classes.","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     * Executes the command.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    public abstract void executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":47}},{"path":"src/main/java/ann/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to remove a specified Task from the user\u0027s TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    private int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * Creates a new DeleteCommand with the specified task index.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     * @param i an int representing the index of the task to be deleted.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"        index \u003d i;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Removes the Task at the specified index from the TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * and sets the \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        String deleteTaskMessage \u003d super.taskList.removeTaskAtIndex(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(deleteTaskMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":30}},{"path":"src/main/java/ann/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to exit from the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"     * Creates a new ExitCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * Returns true if the given command is an ExitCommand and false otherwise.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * @param command the given Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * @return a boolean, which indicates where command is an ExitCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(\"Sad to see you go :( See you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":32}},{"path":"src/main/java/ann/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"    private String findKeyWords;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"    public FindCommand(String kw) {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"        findKeyWords \u003d kw;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(super.taskList.findTask(this.findKeyWords));","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":14}},{"path":"src/main/java/ann/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command that is invalid or incorrect.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"     * Creates a new IncorrectCommand with the specified message.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * @param message a String which is the message to be displayed to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public IncorrectCommand(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     * Does nothing as the command is invalid or incorrect.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":26}},{"path":"src/main/java/ann/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to view their TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"     * Creates a new ListCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * Executes the command by setting the \u0027message\u0027 field to the user\u0027s","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(super.taskList.getTasksString());","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":25}},{"path":"src/main/java/ann/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to mark a Task as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    private int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * Creates a new MarkCommand with the specified task index.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     * @param i an int representing the index of the task to be marked as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"        index \u003d i;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Marks as done the Task at the specified index in the TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * and sets the \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        String markTaskMessage \u003d super.taskList.markTaskAtIndex(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(markTaskMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":30}},{"path":"src/main/java/ann/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Represents a user command to mark a Task as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    private int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * Creates a new UnmarkCommand with the specified task index.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"     * @param i an int representing the index of the task to be marked as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    public UnmarkCommand(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"        index \u003d i;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Marks as not done the Task at the specified index in the TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * and sets the \u0027message\u0027 field to reflect this change.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    public void executeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        String unmarkTaskMessage \u003d super.taskList.unmarkTaskAtIndex(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        super.setMessage(unmarkTaskMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":30}},{"path":"src/main/java/ann/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import ann.commands.AddCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import ann.commands.Command;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import ann.commands.DeleteCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import ann.commands.ExitCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.commands.FindCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.commands.IncorrectCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import ann.commands.ListCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import ann.commands.MarkCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import ann.commands.UnmarkCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"import ann.data.InputPattern;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.TaskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * Represents a parser to parse user input into appropriate commands.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    private static final String INVALID_COMMAND_WARNING \u003d \"Oops! Please enter a valid command!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    private static final String FORMAT_WARNING \u003d \"Oops! Please use the following format:\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private static final String ADD_DEADLINE_FORMAT \u003d \"add deadline [content] /by yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private static final String ADD_EVENT_FORMAT \u003d \"add event [content] /at yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private static final String MARK_FORMAT \u003d \"mark [task number]\";","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    private static final String UNMARK_FORMAT \u003d \"unmark [task number]\";","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    private static final String DELETE_FORMAT \u003d \"delete [task number]\";","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * Returns a Command which is the result of parsing the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     * @param input a String which is the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * @return a Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        } else if (input.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"        } else if (input.length() \u003c 3) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(INVALID_COMMAND_WARNING);","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        } else if (input.substring(0, 3).toLowerCase().equals(\"add\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"            return handleAdd(input.substring(3));","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        } else if (input.length() \u003c 4) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(INVALID_COMMAND_WARNING);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        } else if (input.substring(0, 4).toLowerCase().equals(\"find\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"            return handleFind(input.substring(4));","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        } else if (input.substring(0, 4).toLowerCase().equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"            return handleMark(input.substring(4));","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"        } else if (input.length() \u003c 6) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(INVALID_COMMAND_WARNING);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        } else if (input.substring(0, 6).toLowerCase().equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"            return handleUnmark(input.substring(6));","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        } else if (input.substring(0, 6).toLowerCase().equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"            return handleDelete(input.substring(6));","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(INVALID_COMMAND_WARNING);","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027add\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"     * @param input a String which represents the contents of the \u0027add\u0027 command.","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    private static Command handleAdd(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(\"Oops! Please specify the task you wish to add!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"        } else if (input.charAt(0) !\u003d \u0027 \u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(INVALID_COMMAND_WARNING);","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"            String taskType \u003d input.split(\" \")[1].toLowerCase();","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"            switch (taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"                return handleTodo(input.substring(6));","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"            case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"                return handleEvent(input.substring(7));","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"                return handleDeadline(input.substring(10));","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please enter a valid task type!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of a \u0027mark\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"     * @param index a String which should contain the index of the Task to be mark as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"    private static Command handleMark(String index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + MARK_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"                int i \u003d Integer.parseInt(index.substring(1));","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"                return new MarkCommand(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + MARK_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027unmark\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"     * @param index a String which should contain the index of the Task to be mark as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"    private static Command handleUnmark(String index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"honganhcs"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + UNMARK_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"honganhcs"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"honganhcs"},"content":"                int i \u003d Integer.parseInt(index.substring(1));","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"honganhcs"},"content":"                return new UnmarkCommand(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"honganhcs"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + UNMARK_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of a \u0027delete\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"honganhcs"},"content":"     * @param index a String which should contain the index of the Task to be deleted.","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"honganhcs"},"content":"    private static Command handleDelete(String index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"honganhcs"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + DELETE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"honganhcs"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"honganhcs"},"content":"                int i \u003d Integer.parseInt(index.substring(1));","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"honganhcs"},"content":"                return new DeleteCommand(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"honganhcs"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + DELETE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":141,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":146,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027add todo\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":148,"author":{"gitId":"honganhcs"},"content":"     * @param todoContent a String which should contain the contents of the Task to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"honganhcs"},"content":"    private static Command handleTodo(String todoContent) {","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"honganhcs"},"content":"        if (todoContent.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(\"Oops! Please add a description for the todo!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"honganhcs"},"content":"            return new AddCommand(TaskType.TODO, new String[] {todoContent});","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":160,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of an \u0027add event\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":161,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":162,"author":{"gitId":"honganhcs"},"content":"     * @param eventComponents a String which should contain the information of the Event to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":163,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"honganhcs"},"content":"    private static Command handleEvent(String eventComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"honganhcs"},"content":"        if (eventComponents.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + ADD_EVENT_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":168,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"honganhcs"},"content":"            String[] eventComponentsArray \u003d eventComponents.split(\" /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"honganhcs"},"content":"            if (eventComponentsArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_EVENT_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":172,"author":{"gitId":"honganhcs"},"content":"            } else if (eventComponentsArray[0].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a description for the event!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"honganhcs"},"content":"            } else if (eventComponentsArray[1].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a date and time for the event!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"honganhcs"},"content":"            } else if (!InputPattern.isValidDateTimeString(eventComponentsArray[1])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_EVENT_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":178,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"honganhcs"},"content":"                return new AddCommand(TaskType.EVENT, eventComponentsArray);","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":185,"author":{"gitId":"honganhcs"},"content":"     * Parses the contents of a \u0027add deadline\u0027 command and returns the appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":186,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":187,"author":{"gitId":"honganhcs"},"content":"     * @param deadlineComponents a String which should contain the information of the Deadline to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":188,"author":{"gitId":"honganhcs"},"content":"     * @return an appropriate Command object.","lastModifiedDate":"2022-01-29"},{"lineNumber":189,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":190,"author":{"gitId":"honganhcs"},"content":"    private static Command handleDeadline(String deadlineComponents) {","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"honganhcs"},"content":"        if (deadlineComponents.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + ADD_DEADLINE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":193,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"honganhcs"},"content":"            String[] deadlineComponentsArray \u003d deadlineComponents.split(\" /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"honganhcs"},"content":"            if (deadlineComponentsArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_DEADLINE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":197,"author":{"gitId":"honganhcs"},"content":"            } else if (deadlineComponentsArray[0].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a description for the deadline!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"honganhcs"},"content":"            } else if (deadlineComponentsArray[1].isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(\"Oops! Please add a deadline for the deadline!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"honganhcs"},"content":"            } else if (!InputPattern.isValidDateTimeString(deadlineComponentsArray[1])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"honganhcs"},"content":"                return new IncorrectCommand(FORMAT_WARNING + ADD_DEADLINE_FORMAT);","lastModifiedDate":"2022-02-04"},{"lineNumber":203,"author":{"gitId":"honganhcs"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"honganhcs"},"content":"                return new AddCommand(TaskType.DEADLINE, deadlineComponentsArray);","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":209,"author":{"gitId":"honganhcs"},"content":"    private static Command handleFind(String findKeyWords) {","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"honganhcs"},"content":"        if (findKeyWords.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"honganhcs"},"content":"            return new IncorrectCommand(FORMAT_WARNING + \"find [key word(s)]\");","lastModifiedDate":"2022-02-04"},{"lineNumber":212,"author":{"gitId":"honganhcs"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"honganhcs"},"content":"            return new FindCommand(findKeyWords.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":216}},{"path":"src/main/java/ann/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * Represents the storage object which stores the tasks between uses of the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    private static final String DEFAULT_STORAGE_FOLDER_NAME \u003d \"data\";","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    private static final String DEFAULT_STORAGE_FILE_NAME \u003d \"ann.txt\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private File file;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private String folderName;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private String fileName;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Storage object from the default folder and file names.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    public Storage() throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        if (!isValidFileName(DEFAULT_STORAGE_FILE_NAME)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"            throw new InvalidStorageFilePathException(\"Default storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        openFolder(DEFAULT_STORAGE_FOLDER_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        openFile(DEFAULT_STORAGE_FOLDER_NAME, DEFAULT_STORAGE_FILE_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Storage object with the specified folderName and fileName.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     * @param folderName a String which is the name of the folder containing the storage file.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     * @param fileName a String which is the name of the storage file.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if the storage file\u0027s name does not end with \u0027.txt\u0027.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public Storage(String folderName, String fileName) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        if (!isValidFileName(fileName)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        openFolder(folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        openFile(folderName, fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     * Opens a new folder with the given folder name.","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     * @param folderName a String which is the name of the folder.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if a directory with the specified name cannot be created.","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    private void openFolder(String folderName) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        Path path \u003d Paths.get(folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"            File f1 \u003d new File(folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"            if (!f1.mkdirs()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"                throw new StorageOperationException(\"Error opening folder: \" + folderName);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"     * Create a new file with the given filename in the given folder.","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"     * @param folderName a String which is the name of the folder.","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"     * @param fileName a String which is the name of the file.","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if the file cannot be created.","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"    private void openFile(String folderName, String fileName) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        Path filePath \u003d Paths.get(folderName + fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"            file \u003d new File(folderName, fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"                throw new StorageOperationException(\"Error opening file: \" + fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"     * Returns an ArrayList of Strings which represent the Tasks, read from the storage file.","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"     * @return an ArrayList of Strings which represent the Tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"     * @throws AssertionError","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"    public ArrayList\u003cString\u003e load() throws AssertionError {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"                tasks.add(sc.nextLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"            return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier\");","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"     * Writes to the storage file the description of all the tasks in the current TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"honganhcs"},"content":"     * @param taskList the current TaskList of the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"honganhcs"},"content":"     * @throws StorageOperationException if unable to write to file.","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"honganhcs"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"honganhcs"},"content":"            String content \u003d taskList.getFileString();","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"honganhcs"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"honganhcs"},"content":"            fw.write(content);","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"honganhcs"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"honganhcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"honganhcs"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + this.folderName + \"/\" + this.fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"honganhcs"},"content":"     * Returns a boolean which indicates whether the given filename is valid.","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"honganhcs"},"content":"     * @param fileName a String which is the filename.","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"honganhcs"},"content":"     * @return true if the given filename ends with \u0027.txt\u0027 and false otherwise.","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"honganhcs"},"content":"    private boolean isValidFileName(String fileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"honganhcs"},"content":"        return fileName.endsWith(\".txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"honganhcs"},"content":"     * Represents an Exception thrown when a given filename is not valid.","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":142,"author":{"gitId":"honganhcs"},"content":"    public static class InvalidStorageFilePathException extends IllegalArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"honganhcs"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"honganhcs"},"content":"            super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"honganhcs"},"content":"     * Represents an Exception thrown when storage operations (open folder/file, save and load)","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"honganhcs"},"content":"     * cannot be completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"honganhcs"},"content":"    public static class StorageOperationException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"honganhcs"},"content":"        public StorageOperationException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"honganhcs"},"content":"            super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":157}},{"path":"src/main/java/ann/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package ann.ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" * Represents the user interface component which obtains user input","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * and displays the program output to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * @author Hong Anh","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * @version 0.1","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * Creates a new Ui object.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     * Prints a message which indicates that the program initialisation has failed.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    public void showFailedInitMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        System.out.println(\"Failed to initialize Ann :( Exiting...\");","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Prints a message to greet the user after the program is set up.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        System.out.println(\"Greetings from Ann\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     * Prints a message to greet the user after the program is set up.","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     * Returns a String which is the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * @return a String which is the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public String getCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        System.out.println(\"Please enter a command:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"     * Prints the specified message to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"     * @param message a String which is the message to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    public void showToUser(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":61}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import ann.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import ann.data.tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import ann.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public void testParseDeadlineSuccess() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"add deadline finish IP /by 2022-01-27 18:00\");","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(new TaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Alright! I\u0027ve added this task:\\n[D][ ] finish IP (by 27 Jan 2022 06:00 PM)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"                + \"Now there is 1 task in your list.\", command.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    public void testParseEventFailure1() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"add event meeting /at   \");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(new TaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please add a date and time for the event!\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public void testParseEventFailure2() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"add event meeting /at 12-03-2022 17:00\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(new TaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please use the following format:\\nadd event [content] /at yyyy-MM-dd HH:mm\",","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"                command.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public void testParseMarkSuccess() {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        tl.addTask(new Task(\"finish IP\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(tl);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Alright! I\u0027ve marked this task as done:\\n[T][X] finish IP\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    public void testParseUnmarkFailure() {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        tl.addTask(new Task(\"finish IP\", true));","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        command.setTaskList(tl);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! You only have 1 task in your list!\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    public void testParseDeleteFailure() {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"delete\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please use the following format:\\ndelete [task number]\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    public void testParseIncorrectCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        Command command \u003d Parser.parse(\"blah\");","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        command.executeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"        assertEquals(\"Oops! Please enter a valid command!\", command.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":73}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import ann.storage.Storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public void testInvalidStorageFilePathException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"            Storage storage \u003d new Storage(\"data\", \"hello\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"            assertEquals(\"Storage file should end with \u0027.txt\u0027\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"honganhcs":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"delete","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"delete 1","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"todo","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"todo buy book","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"deadline","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"deadline finish homework","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"deadline  /by Saturday","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"deadline finish homework /by 2022-01-01 06:00","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"boo","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"event meet Prof /at 2022-08-25 16:00","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"event festival /at","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"mark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"unmark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"delete 2","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"honganhcs":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"java -classpath ..\\bin Ann \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honganhcs":1,"-":20}}]
