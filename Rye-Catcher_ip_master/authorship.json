[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"    protected String by;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"     * Convert the plain output text to chat-box style with indentation for output","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"     *","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"     * @param text : String (output text)","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"     * @return chat-box style output text : String","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"    private static String outputChatBox(String text) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"        return \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"                + text.replaceAll(\"(?m)^\", \"     \") + \"\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"     * The main body of the chat box. Will receive commands and do things accordingly","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"     **/","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"    static private ArrayList\u003cTask\u003e todo_list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"    static final String farewell_words \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"    private static class processIO {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"        static boolean run() throws EmptyDescriptionException,  EmptyTimeException, InvalidCommandException, InvalidNumberException {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"                String command \u003d scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"                if (command.equals(\"bye\") || command.equals(\"Bye\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"                    System.out.print(outputChatBox(farewell_words));","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"                    return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"                } else if (command.equals(\"list\")){","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"                    String output_list \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"                    if (todo_list.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"                        output_list \u003d \"Currently the list is empty. There is nothing to output.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"                        for (int i \u003d 1; i \u003c\u003d todo_list.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"                            output_list \u003d output_list.concat(i + \".\" + todo_list.get(i - 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"                            if (i !\u003d todo_list.size()) output_list \u003d output_list.concat(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"                    System.out.print(outputChatBox(output_list));","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"                    String task_type \u003d command.split(\" \")[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"                    if (task_type.equals(\"mark\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"                        int task_id \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"                        if (task_id \u003c 0 || task_id \u003e\u003d todo_list.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new InvalidNumberException();","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"Rye-Catcher"},"content":"                        Task temp \u003d todo_list.get(task_id);","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"Rye-Catcher"},"content":"                        temp.setStatus(true);","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"Rye-Catcher"},"content":"                        String output_list \u003d \"Nice! I\u0027ve marked this task as done: \\n  \" + temp.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Rye-Catcher"},"content":"                        System.out.print(outputChatBox(output_list));","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Rye-Catcher"},"content":"                    } else if (task_type.equals(\"unmark\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Rye-Catcher"},"content":"                        int task_id \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Rye-Catcher"},"content":"                        if (task_id \u003c 0 || task_id \u003e\u003d todo_list.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new InvalidNumberException();","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"Rye-Catcher"},"content":"                        Task temp \u003d todo_list.get(task_id);","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"Rye-Catcher"},"content":"                        temp.setStatus(false);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"Rye-Catcher"},"content":"                        String output_list \u003d \"OK, I\u0027ve marked this task as not done yet: \\n  \" + temp.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"Rye-Catcher"},"content":"                        System.out.print(outputChatBox(output_list));","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"Rye-Catcher"},"content":"                    } else if (task_type.equals(\"todo\")){","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"Rye-Catcher"},"content":"                        String description \u003d command.substring(task_type.length());","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"Rye-Catcher"},"content":"                        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"Rye-Catcher"},"content":"                        ToDo temp \u003d new ToDo(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"Rye-Catcher"},"content":"                        todo_list.add(temp);","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"Rye-Catcher"},"content":"                        String output_text \u003d \"Got it. I\u0027ve added this task:\\n    \" + temp.toString()","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"Rye-Catcher"},"content":"                                + \"\\nNow you have \" + todo_list.size() + \" tasks in the list.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"Rye-Catcher"},"content":"                        System.out.print(outputChatBox(output_text));","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"Rye-Catcher"},"content":"                    } else if (task_type.equals(\"deadline\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"Rye-Catcher"},"content":"                        String description \u003d command.substring(task_type.length()).split(\"/\")[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"Rye-Catcher"},"content":"                        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Rye-Catcher"},"content":"                        String task_by \u003d command.substring(task_type.length()).split(\"/\")[1].substring(3);","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Rye-Catcher"},"content":"                        if (task_by.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new EmptyTimeException();","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Rye-Catcher"},"content":"                        Deadline temp \u003d new Deadline(description, task_by);","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"Rye-Catcher"},"content":"                        todo_list.add(temp);","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"Rye-Catcher"},"content":"                        String output_text \u003d \"Got it. I\u0027ve added this task:\\n    \" + temp.toString()","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"Rye-Catcher"},"content":"                                + \"\\nNow you have \" + todo_list.size() + \" tasks in the list.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"Rye-Catcher"},"content":"                        System.out.print(outputChatBox(output_text));","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"Rye-Catcher"},"content":"                    } else if (task_type.equals(\"event\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"Rye-Catcher"},"content":"                        String description \u003d command.substring(task_type.length()).split(\"/\")[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"Rye-Catcher"},"content":"                        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"Rye-Catcher"},"content":"                        String task_time \u003d command.substring(task_type.length()).split(\"/\")[1].substring(3);","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"Rye-Catcher"},"content":"                        if (task_time.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new EmptyTimeException();","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"Rye-Catcher"},"content":"                        Event temp \u003d new Event(description, task_time);","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"Rye-Catcher"},"content":"                        todo_list.add(temp);","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"Rye-Catcher"},"content":"                        String output_text \u003d \"Got it. I\u0027ve added this task:\\n    \" + temp.toString()","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"Rye-Catcher"},"content":"                                + \"\\nNow you have \" + todo_list.size() + \" tasks in the list.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"Rye-Catcher"},"content":"                        System.out.print(outputChatBox(output_text));","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"Rye-Catcher"},"content":"                    } else if (task_type.equals(\"delete\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"Rye-Catcher"},"content":"                        int task_id \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"Rye-Catcher"},"content":"                        if (task_id \u003c 0 || task_id \u003e\u003d todo_list.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"Rye-Catcher"},"content":"                            throw new InvalidNumberException();","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"Rye-Catcher"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"Rye-Catcher"},"content":"                        Task temp \u003d todo_list.get(task_id);","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"Rye-Catcher"},"content":"                        todo_list.remove(task_id);","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"Rye-Catcher"},"content":"                        String output_list \u003d \" Noted. I\u0027ve removed this task:\\n    \" + temp.toString()","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"Rye-Catcher"},"content":"                                + \"\\nNow you have \" + todo_list.size() + \" tasks in the list.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"Rye-Catcher"},"content":"                        System.out.print(outputChatBox(output_list));","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"Rye-Catcher"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"Rye-Catcher"},"content":"                        throw new InvalidCommandException();","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"Rye-Catcher"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"Rye-Catcher"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"Rye-Catcher"},"content":"                return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"Rye-Catcher"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"Rye-Catcher"},"content":"        String greeting \u003d \"Hello! I\u0027m Pyke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"Rye-Catcher"},"content":"        System.out.print(outputChatBox(greeting));","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"Rye-Catcher"},"content":"        while(true) {","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"Rye-Catcher"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"Rye-Catcher"},"content":"                if(!processIO.run()) break;","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"Rye-Catcher"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"Rye-Catcher"},"content":"                System.out.println(outputChatBox(\"OOPS!!! The description cannot be empty. :-(\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"Rye-Catcher"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"Rye-Catcher"},"content":"                System.out.println(outputChatBox(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"Rye-Catcher"},"content":"            } catch (EmptyTimeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"Rye-Catcher"},"content":"                System.out.println(outputChatBox(\"OOPS!!! The time cannot be empty. :-(\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"Rye-Catcher"},"content":"            } catch (InvalidNumberException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"Rye-Catcher"},"content":"                System.out.println(outputChatBox(\"OOPS!!! Seems like this is a invalid number :-(\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"Rye-Catcher"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":136,"-":10}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":2}},{"path":"src/main/java/EmptyTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class EmptyTimeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"    protected String event_time;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"    public Event(String description, String event_time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"        this.event_time \u003d event_time;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + event_time + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":13}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":3}},{"path":"src/main/java/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class InvalidNumberException extends Exception{","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"    public void setStatus(boolean new_status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"        this.isDone \u003d new_status;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"deadline return book /by Mon 4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"event CS2101 team meeting /at Sat 8-10pm","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"deadline mary has a little lamb /by little lamb little lamb","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"todo todo todo todo","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rye-Catcher":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"javac  -cp \"F:\\OneDrive - National University of Singapore\\Year2\\sem2\\CS2103T\\ip\\ip1-duke\\ip\\src\\main\\java\" -Xlint:none -d C:\\Users\\User\\.jdks\\corretto-11.0.9.1\\bin \"F:\\OneDrive - National University of Singapore\\Year2\\sem2\\CS2103T\\ip\\ip1-duke\\ip\\src\\main\\java\\Duke.java\"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"java -classpath C:\\Users\\User\\.jdks\\corretto-11.0.9.1\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rye-Catcher":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rye-Catcher":1,"-":37}}]
