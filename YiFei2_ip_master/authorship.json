[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"    mainClassName \u003d \"bobby.Bobby\"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    archiveBaseName \u003d \"bobby\"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YiFei2":2,"-":44}},{"path":"src/main/java/bobby/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":" * The Bobby program serves as a notepad, taking in various user","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":" * inputs to execute commands such as adding different types of","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":" * tasks, marking tasks as done and deleting tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"public class Bobby {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    private boolean isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     * Creates an instance of Bobby.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"     * @param filePath location in a directory where contents will be stored.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    public Bobby(String filePath) {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"        tasks \u003d new TaskList(storage.loadFile(), storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"     * Stops the program from running.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    public void terminate() {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"     * Runs the program and starts taking in user inputs.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    public void run() {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"        Scanner scannerObj \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"        while (scannerObj.hasNextLine()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"            String userInput \u003d scannerObj.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"            Parser.parse(tasks, userInput, this);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"            if (isExit) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"     * Main method that uses the run method","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"     * @param args Unused.","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"        Ui.showWelcome();","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"        new Bobby(\"bobby.txt\").run();","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"YiFei2":55}},{"path":"src/main/java/bobby/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"public class BobbyException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"    public BobbyException(String errorMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"YiFei2":8}},{"path":"src/main/java/bobby/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"public enum Commands {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"YiFei2":5}},{"path":"src/main/java/bobby/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"     * Constructor to create an instance of Deadline.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"     * @param description description of the Deadline Task to be done.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"     * @param by deadline in which task needs to be done in YYYY-MM-DD format.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    public void writeToFile(FileWriter fw) throws IOException {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        fw.write(\"D ; \" + isDone + \" ; \" + description + \" ; \" + by + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"YiFei2":30}},{"path":"src/main/java/bobby/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"    protected String at;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"     * Constructor to create an instance of Event.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"     * @param at date/time of the occurrence of the Event.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    public void writeToFile(FileWriter fw) throws IOException {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        fw.write(\"E ; \" + isDone + \" ; \" + description + \" ; \" + at + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"YiFei2":28}},{"path":"src/main/java/bobby/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":" * The Parser class deals with converting user input into commands","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":" * understood by the program and executes them accordingly.","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"public class Parser {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"    public Parser() {","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"     * Converts user input into commands, passes the commands to TaskList","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"     * to be executed, or terminates the Bobby program.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     * @param tasks TaskList that handles the execution of commands.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"     * @param userInput user input to be parsed.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"     * @param bobby instance of Bobby to be terminated if BYE command given.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"    public static void parse(TaskList tasks, String userInput, Bobby bobby) {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"        String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        String command \u003d inputs[0];","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"            switch (Commands.valueOf(command.toUpperCase())) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"            case BYE:","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"                Ui.printExit();","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"                bobby.terminate();","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"            case LIST:","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"                tasks.list();","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"            case MARK:","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"                    int i \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"                    tasks.mark(i);","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"                    int k \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"                    tasks.unmark(k);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"            case TODO:","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"                    tasks.addToDo(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"                    tasks.addDeadline(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(\"Invalid date format. Please use YYYY-MM-DD.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"            case EVENT:","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"                    tasks.addEvent(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"            case DELETE:","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"                    tasks.delete(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"                    System.err.println(e);","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"            case FIND:","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"                String[] queries \u003d inputs[1].split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"                if (queries.length \u003e 1) {","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"                    System.out.println(\"Bobby can only search using 1 keyword.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"                } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"YiFei2"},"content":"                    String query \u003d inputs[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"                    tasks.find(query);","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"YiFei2"},"content":"            default:","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"                try {","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"                    throw new BobbyException(\"Bobby does not understand you. Please use valid inputs.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"YiFei2"},"content":"                } catch (BobbyException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"YiFei2"},"content":"                    System.err.println(e);","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"YiFei2"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Bobby does not understand you. Please use valid inputs.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"YiFei2":99}},{"path":"src/main/java/bobby/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.io.File;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":" * Storage deals with loading tasks from file and saving tasks in the file.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"public class Storage {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    private File file;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     * Constructor to create a Storage instance.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"     * @param filePath file path where the .txt file is loaded from or created.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"     * Loads file from given file path if file exists. Creates an empty file","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"     * if file does not exist.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"     * @return ArrayList of tasks loaded from file.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"            File file \u003d new File(\"bobby.txt\");","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"                    String line \u003d s.nextLine();","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"                    String[] inputs \u003d line.split(\" ; \");","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"                    switch (inputs[0]) {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"                        Todo newToDo \u003d new Todo(inputs[2]);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"                        if (inputs[1].equals(\"true\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"                            newToDo.markAsDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"                        }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"                        taskArray.add(newToDo);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"                        break;","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"                        Deadline newDeadline \u003d new Deadline(inputs[2], LocalDate.parse(inputs[3]));","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"                        if (inputs[1].equals(\"true\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"                            newDeadline.markAsDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"                        }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"                        taskArray.add(newDeadline);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"                        break;","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"                        Event newEvent \u003d new Event(inputs[2], inputs[3]);","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"                        if (inputs[1].equals(\"true\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"                            newEvent.markAsDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"                        }","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"                        taskArray.add(newEvent);","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"                        break;","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"                    default:","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"                        System.out.println(\"Error with loading file.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"                    }","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"            } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"An error has occurred.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"        return taskArray;","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"     * Writes into the file with current list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"     * @param taskArray ArrayList of current tasks to be written into file.","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"    public void updateFile(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"            FileWriter fw \u003d new FileWriter(\"bobby.txt\");","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"                Task t \u003d taskArray.get(i);","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"                t.writeToFile(fw);","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"YiFei2"},"content":"            fw.close();","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Error with updating file\u0027s contents\");","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"YiFei2":89}},{"path":"src/main/java/bobby/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"     * Constructor to create an instance of Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"     * @param description description of the Task to be done.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"    public abstract void writeToFile(FileWriter fw) throws IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"YiFei2":37}},{"path":"src/main/java/bobby/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":" * The TaskList class executes commands and updates the list accordingly.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"public class TaskList {","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"    private ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"     * Constructor to create an instance of TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"     * @param taskArray ArrayList storing Tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     * @param storage used to update the list stored in the .txt file.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArray, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        this.taskArray \u003d taskArray;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"     * Adds a Task of type Todo.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"     * @param task description of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"     * @throws BobbyException if the description of the task is empty.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    public void addToDo(String task) throws BobbyException {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"        String[] inputs \u003d task.split(\" \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"            Todo newTodo \u003d new Todo(inputs[1]);","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Bobby heard: \" + newTodo);","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"            taskArray.add(newTodo);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"            storage.updateFile(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Bobby remembers \" + taskArray.size() + \" task(s).\");","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"            throw new BobbyException(\"Description cannot be empty.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"     * Adds a Task of type Deadline.","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"     * @param task description of Deadline and when the task has to be completed in YYYY-MM-DD format.","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"     * @throws BobbyException when description is empty or date format is invalid.","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"    public void addDeadline(String task) throws BobbyException {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"        String[] inputs \u003d task.split(\" \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"            String[] splitInputs \u003d inputs[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"            if (splitInputs.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"                String description \u003d splitInputs[0];","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"                LocalDate by \u003d LocalDate.parse(splitInputs[1]);","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"                Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"                System.out.println(\"Bobby heard: \" + newDeadline);","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"                taskArray.add(newDeadline);","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"                storage.updateFile(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"                System.out.println(\"Bobby remembers \" + taskArray.size() + \" task(s).\");","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"            } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"                throw new BobbyException(\"Invalid date format. Please use YYYY-MM-DD.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"            throw new BobbyException(\"Description cannot be empty.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"     * Adds a Task of type Event.","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"     * @param task description of Event and date/time of the Event.","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"     * @throws BobbyException when description or date/time is empty.","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"    public void addEvent(String task) throws BobbyException {","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"        String[] inputs \u003d task.split(\" \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"            String[] splitInputs \u003d inputs[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"            if (splitInputs.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"                String description \u003d splitInputs[0];","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"                String at \u003d splitInputs[1];","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"                Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"                System.out.println(\"Bobby heard: \" + newEvent);","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"                taskArray.add(newEvent);","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"                storage.updateFile(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"YiFei2"},"content":"                System.out.println(\"Bobby remembers \" + taskArray.size() + \" task(s).\");","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"            } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"                throw new BobbyException(\"Date/Time format of Event is incorrect or empty\");","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"            throw new BobbyException(\"Description cannot be empty\");","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"     * deletes Removes Task of index given in user input from the list.","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"YiFei2"},"content":"     * @param task user input containing index of task to be deleted.","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"YiFei2"},"content":"     * @throws BobbyException when no given index or when index is bigger than list.","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":98,"author":{"gitId":"YiFei2"},"content":"    public void delete(String task) throws BobbyException {","lastModifiedDate":"2022-02-01"},{"lineNumber":99,"author":{"gitId":"YiFei2"},"content":"        String[] inputs \u003d task.split(\" \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"YiFei2"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"YiFei2"},"content":"            int i \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"YiFei2"},"content":"            if (i \u003e taskArray.size()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":103,"author":{"gitId":"YiFei2"},"content":"                throw new BobbyException(\"Invalid index given to Bobby.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Bobby has forgotten this task:\\n\" + taskArray.get(i));","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"YiFei2"},"content":"            taskArray.remove(i);","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"YiFei2"},"content":"            storage.updateFile(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Bobby remembers \" + taskArray.size() + \" task(s).\");","lastModifiedDate":"2022-01-31"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"YiFei2"},"content":"            throw new BobbyException(\"Indicate which task should be deleted.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":115,"author":{"gitId":"YiFei2"},"content":"     * Generates a list of current tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":117,"author":{"gitId":"YiFei2"},"content":"    public void list() {","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"YiFei2"},"content":"        Ui.printList(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":122,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":123,"author":{"gitId":"YiFei2"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":124,"author":{"gitId":"YiFei2"},"content":"     * @param i index of task to be marked as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":125,"author":{"gitId":"YiFei2"},"content":"     * @throws BobbyException when index given exceeds size of list.","lastModifiedDate":"2022-02-01"},{"lineNumber":126,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":127,"author":{"gitId":"YiFei2"},"content":"    public void mark(int i) throws BobbyException {","lastModifiedDate":"2022-02-01"},{"lineNumber":128,"author":{"gitId":"YiFei2"},"content":"        if (i \u003e taskArray.size()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":129,"author":{"gitId":"YiFei2"},"content":"            throw new BobbyException(\"Invalid index given to Bobby.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":130,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":131,"author":{"gitId":"YiFei2"},"content":"        Task t \u003d taskArray.get(i);","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"YiFei2"},"content":"        t.markAsDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"YiFei2"},"content":"        storage.updateFile(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"YiFei2"},"content":"        Ui.taskDone(t);","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"YiFei2"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"YiFei2"},"content":"     * @param i index of task to be unmarked.","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"YiFei2"},"content":"     * @throws BobbyException when index given exceeds size of list.","lastModifiedDate":"2022-02-01"},{"lineNumber":142,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":143,"author":{"gitId":"YiFei2"},"content":"    public void unmark(int i) throws BobbyException {","lastModifiedDate":"2022-02-01"},{"lineNumber":144,"author":{"gitId":"YiFei2"},"content":"        if (i \u003e taskArray.size()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":145,"author":{"gitId":"YiFei2"},"content":"            throw new BobbyException(\"Invalid index given to Bobby.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":146,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":147,"author":{"gitId":"YiFei2"},"content":"        Task t \u003d taskArray.get(i);","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"YiFei2"},"content":"        t.unmarkAsDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"YiFei2"},"content":"        storage.updateFile(taskArray);","lastModifiedDate":"2022-01-31"},{"lineNumber":150,"author":{"gitId":"YiFei2"},"content":"        Ui.taskNotDone(t);","lastModifiedDate":"2022-01-31"},{"lineNumber":151,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":152,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":153,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":154,"author":{"gitId":"YiFei2"},"content":"     * Find a task by searching for a key word.","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"YiFei2"},"content":"     * @param query keyword used to search.","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":157,"author":{"gitId":"YiFei2"},"content":"    public void find(String query) {","lastModifiedDate":"2022-02-01"},{"lineNumber":158,"author":{"gitId":"YiFei2"},"content":"        boolean isSuccessful \u003d false;","lastModifiedDate":"2022-02-01"},{"lineNumber":159,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby found these task(s):\");","lastModifiedDate":"2022-02-01"},{"lineNumber":160,"author":{"gitId":"YiFei2"},"content":"        for (Task t : taskArray) {","lastModifiedDate":"2022-02-01"},{"lineNumber":161,"author":{"gitId":"YiFei2"},"content":"            String[] contents \u003d t.description.split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":162,"author":{"gitId":"YiFei2"},"content":"            for (String content : contents) {","lastModifiedDate":"2022-02-01"},{"lineNumber":163,"author":{"gitId":"YiFei2"},"content":"                if (Objects.equals(content, query)) {","lastModifiedDate":"2022-02-01"},{"lineNumber":164,"author":{"gitId":"YiFei2"},"content":"                    Ui.printTask(t);","lastModifiedDate":"2022-02-01"},{"lineNumber":165,"author":{"gitId":"YiFei2"},"content":"                    isSuccessful \u003d true;","lastModifiedDate":"2022-02-01"},{"lineNumber":166,"author":{"gitId":"YiFei2"},"content":"                }","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":168,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":169,"author":{"gitId":"YiFei2"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2022-02-01"},{"lineNumber":170,"author":{"gitId":"YiFei2"},"content":"            System.out.println(\"Bobby could not find any matching tasks.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":171,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":172,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":173,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"YiFei2":173}},{"path":"src/main/java/bobby/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"    public void writeToFile(FileWriter fw) throws IOException {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"        fw.write(\"T ; \" + isDone + \" ; \" + description + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"YiFei2":21}},{"path":"src/main/java/bobby/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package bobby;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"public class Ui {","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"    public static void showWelcome() {","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby greets you. Bobby is here to help.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"    public static void fileExists() {","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby remembers previous tasks.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    public static void newFileCreated() {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby has created a new list.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"     * Prints the tasks currently in the list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"     * @param taskArray ArrayList containing current tasks to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"    public static void printList(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Here is what you told Bobby:\");","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"            Task t \u003d taskArray.get(i);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"            int count \u003d i + 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"            System.out.println(count + \".\" + t);","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"    public static void printExit() {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby bids you farewell.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    public static void taskDone(Task t) {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby applauds you. This task is done:\\n\" + t);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    public static void taskNotDone(Task t) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"        System.out.println(\"Bobby will remember that this task is not yet done:\\n\" + t);","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"    public static void printTask(Task t) {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"YiFei2":47}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import bobby.Bobby;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"import bobby.Parser;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"import bobby.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"import bobby.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import bobby.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"class ParserTest {","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    @AfterEach","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"    public void tearDown() {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    public void testInputToDo() throws IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"        Parser.parse(new TaskList(new ArrayList\u003cTask\u003e(), new Storage(\"bobby.txt\")), \"todo 2103 iP\",","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"                new Bobby(\"bobby.txt\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"        assertEquals(\"Bobby heard: [T][ ] 2103 iP\" + System.lineSeparator()","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"                + \"Bobby remembers 1 task(s).\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"    public void testInputDeadLine() throws IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"        Parser.parse(new TaskList(new ArrayList\u003cTask\u003e(), new Storage(\"bobby.txt\")),","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"                \"deadline cs2106 quiz /by 2022-01-31\", new Bobby(\"bobby.txt\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        assertEquals(\"Bobby heard: [D][ ] cs2106 quiz (by: Jan 31 2022)\" + System.lineSeparator()","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"                + \"Bobby remembers 1 task(s).\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"    public void parseInputs_invalidInputs_bobbyExceptionThrown() throws IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"        Parser.parse(new TaskList(new ArrayList\u003cTask\u003e(), new Storage(\"bobby.txt\")), \"random input\",","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"                new Bobby(\"bobby.txt\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"        assertEquals(\"Bobby does not understand you. Please use valid inputs.\",","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"YiFei2":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"todo finish 2103 project tab","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"deadline do daily exercise /by the end of the day","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"event global game jam /at 21 January 1830 hours","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"YiFei2":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"java -classpath ..\\bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YiFei2":1,"-":20}}]
