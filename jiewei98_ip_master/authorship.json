[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"# duke project template","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jiewei98":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"repositories {","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"    mavenCentral()","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"dependencies {","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"jiewei98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":22,"-":45}},{"path":"src/main/java/Duke/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"import task.ToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"public class CommandList {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"     * Executes user\u0027s input.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"     * @param input command to execute","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"     * @return String containing the reply from Duke to the user","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    public String execute(String input, ArrayList\u003cTask\u003e list, Storage storage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"        String firstWord \u003d inputs[0];","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"        if (input.equals(\"list\")) { // list all tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"            output \u003d listTasks(list);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"mark\") || firstWord.equals(\"unmark\")) { // mark/unmark task","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"            output \u003d toggleStatus(list, inputs, firstWord, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"delete\")) { // delete task","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"            output \u003d deleteTask(list, inputs, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"todo\")) { // adds a ToDo Task","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"            output \u003d addToDo(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"deadline\")) { // adds a Deadline Task","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"            output \u003d addDeadline(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"event\")) { // adds an Event Task","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"            output \u003d addEvent(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"find\")) { // find tasks by a keyword","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"jiewei98"},"content":"            output \u003d find(list, inputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"jiewei98"},"content":"        } else if (firstWord.equals(\"update\")) { // updates a Task","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"jiewei98"},"content":"            output \u003d updateTask(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"        } else { // print error message","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"     * List all Tasks.","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"jiewei98"},"content":"     * @return String output of all tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"jiewei98"},"content":"    public String listTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"jiewei98"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"jiewei98"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"jiewei98"},"content":"            output \u003d output + ((i + 1) + \".\" + list.get(i)) + \"\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"jiewei98"},"content":"     * Mark/unmark a specified Task.","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"jiewei98"},"content":"     * @param firstWord First word from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"jiewei98"},"content":"     * @return String output of whether a task is marked/unmarked","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"jiewei98"},"content":"    public String toggleStatus(ArrayList\u003cTask\u003e list, String[] inputs, String firstWord, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"jiewei98"},"content":"        String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"jiewei98"},"content":"        int index \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"jiewei98"},"content":"        Task targetTask \u003d list.get((index - 1));","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"jiewei98"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"jiewei98"},"content":"        if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"jiewei98"},"content":"            output \u003d targetTask.mark();","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"jiewei98"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"jiewei98"},"content":"            output \u003d targetTask.unmark();","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"jiewei98"},"content":"        storage.store(list);","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"jiewei98"},"content":"     * Deletes specified Task from list.","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"jiewei98"},"content":"     * @return String output stating that a Task has been deleted","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"jiewei98"},"content":"    public String deleteTask(ArrayList\u003cTask\u003e list, String[] inputs, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"jiewei98"},"content":"        String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"jiewei98"},"content":"        int index \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"jiewei98"},"content":"        Task targetTask \u003d list.get((index - 1));","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"jiewei98"},"content":"        list \u003d targetTask.delete(list, (index - 1));","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"jiewei98"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task: \\n\" + targetTask + \"\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"jiewei98"},"content":"                + \"Now you have \" + list.size() + \" tasks in your list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"jiewei98"},"content":"        storage.store(list);","lastModifiedDate":"2022-02-05"},{"lineNumber":112,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"jiewei98"},"content":"     * Adds a new Task as a ToDo.","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"jiewei98"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":121,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":122,"author":{"gitId":"jiewei98"},"content":"     * @return String output of ToDo successfully added","lastModifiedDate":"2022-02-10"},{"lineNumber":123,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"jiewei98"},"content":"    public String addToDo(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"jiewei98"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"jiewei98"},"content":"            return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":127,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":128,"author":{"gitId":"jiewei98"},"content":"        ToDo toDo \u003d new ToDo(input.substring((5)));","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"jiewei98"},"content":"        list.add(toDo);","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"jiewei98"},"content":"        storage.store(list);","lastModifiedDate":"2022-02-05"},{"lineNumber":131,"author":{"gitId":"jiewei98"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + toDo + \"\\nNow you have \" + list.size() + \" tasks in your list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":132,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":133,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":134,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":135,"author":{"gitId":"jiewei98"},"content":"     * Adds a new Task as a Deadline.","lastModifiedDate":"2022-02-10"},{"lineNumber":136,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":137,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":138,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":139,"author":{"gitId":"jiewei98"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":140,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":141,"author":{"gitId":"jiewei98"},"content":"     * @return String output of Deadline successfully added","lastModifiedDate":"2022-02-10"},{"lineNumber":142,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":143,"author":{"gitId":"jiewei98"},"content":"    public String addDeadline(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":144,"author":{"gitId":"jiewei98"},"content":"        String output;","lastModifiedDate":"2022-02-10"},{"lineNumber":145,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":146,"author":{"gitId":"jiewei98"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":147,"author":{"gitId":"jiewei98"},"content":"            return \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":148,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":149,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":150,"author":{"gitId":"jiewei98"},"content":"        int start \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"jiewei98"},"content":"        if (start \u003d\u003d -1) { // if / char cannot be found","lastModifiedDate":"2022-02-05"},{"lineNumber":152,"author":{"gitId":"jiewei98"},"content":"            return \"Please enter a valid date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":153,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":154,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":155,"author":{"gitId":"jiewei98"},"content":"        String date \u003d input.substring(start + 4);","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"jiewei98"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-05"},{"lineNumber":158,"author":{"gitId":"jiewei98"},"content":"            Date formattedDate \u003d dateFormatter.parse(date);","lastModifiedDate":"2022-02-05"},{"lineNumber":159,"author":{"gitId":"jiewei98"},"content":"            String dateToString \u003d new SimpleDateFormat(\"MMM-dd-yyyy HHmm\").format(formattedDate);","lastModifiedDate":"2022-02-05"},{"lineNumber":160,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":161,"author":{"gitId":"jiewei98"},"content":"            Deadline deadline \u003d new Deadline(input.substring(9, start - 1), dateToString);","lastModifiedDate":"2022-02-05"},{"lineNumber":162,"author":{"gitId":"jiewei98"},"content":"            list.add(deadline);","lastModifiedDate":"2022-02-05"},{"lineNumber":163,"author":{"gitId":"jiewei98"},"content":"            storage.store(list);","lastModifiedDate":"2022-02-05"},{"lineNumber":164,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Got it. I\u0027ve added this task:\\n\" + deadline + \"\\nNow you have \" + list.size() +","lastModifiedDate":"2022-02-10"},{"lineNumber":165,"author":{"gitId":"jiewei98"},"content":"                    \" tasks in your list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":166,"author":{"gitId":"jiewei98"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":167,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Please enter a valid date!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":168,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":169,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":170,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":171,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":172,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":173,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":174,"author":{"gitId":"jiewei98"},"content":"     * Adds a new Task as an Event.","lastModifiedDate":"2022-02-10"},{"lineNumber":175,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":176,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":177,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":178,"author":{"gitId":"jiewei98"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":179,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":180,"author":{"gitId":"jiewei98"},"content":"     * @return String output of Event successfully added","lastModifiedDate":"2022-02-10"},{"lineNumber":181,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":182,"author":{"gitId":"jiewei98"},"content":"    public String addEvent(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":183,"author":{"gitId":"jiewei98"},"content":"        String output;","lastModifiedDate":"2022-02-10"},{"lineNumber":184,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":185,"author":{"gitId":"jiewei98"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-05"},{"lineNumber":186,"author":{"gitId":"jiewei98"},"content":"            return \"☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":187,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":188,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":189,"author":{"gitId":"jiewei98"},"content":"        int start \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-02-10"},{"lineNumber":190,"author":{"gitId":"jiewei98"},"content":"        if (start \u003d\u003d -1) { // if / char cannot be found","lastModifiedDate":"2022-02-10"},{"lineNumber":191,"author":{"gitId":"jiewei98"},"content":"            return \"Please enter a valid date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":192,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":193,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":194,"author":{"gitId":"jiewei98"},"content":"        String date \u003d input.substring(start + 4);","lastModifiedDate":"2022-02-10"},{"lineNumber":195,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":196,"author":{"gitId":"jiewei98"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-05"},{"lineNumber":197,"author":{"gitId":"jiewei98"},"content":"            Date formattedDate \u003d dateFormatter.parse(date);","lastModifiedDate":"2022-02-05"},{"lineNumber":198,"author":{"gitId":"jiewei98"},"content":"            String dateToString \u003d new SimpleDateFormat(\"MMM-dd-yyyy HHmm\").format(formattedDate);","lastModifiedDate":"2022-02-05"},{"lineNumber":199,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":200,"author":{"gitId":"jiewei98"},"content":"            Event event \u003d new Event(input.substring(6, start - 1), dateToString);","lastModifiedDate":"2022-02-05"},{"lineNumber":201,"author":{"gitId":"jiewei98"},"content":"            list.add(event);","lastModifiedDate":"2022-02-05"},{"lineNumber":202,"author":{"gitId":"jiewei98"},"content":"            storage.store(list);","lastModifiedDate":"2022-02-05"},{"lineNumber":203,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Got it. I\u0027ve added this task:\\n\" + event + \"\\nNow you have \" + list.size() +","lastModifiedDate":"2022-02-10"},{"lineNumber":204,"author":{"gitId":"jiewei98"},"content":"                    \" tasks in your list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":205,"author":{"gitId":"jiewei98"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":206,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Please enter a valid date!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":207,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":208,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":209,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":210,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":211,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":212,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":213,"author":{"gitId":"jiewei98"},"content":"     * Finds Tasks matching user\u0027s search input.","lastModifiedDate":"2022-02-10"},{"lineNumber":214,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":215,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":216,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":217,"author":{"gitId":"jiewei98"},"content":"     * @return String output of Tasks matching search criteria","lastModifiedDate":"2022-02-10"},{"lineNumber":218,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":219,"author":{"gitId":"jiewei98"},"content":"    public String find(ArrayList\u003cTask\u003e list, String[] inputs){","lastModifiedDate":"2022-02-10"},{"lineNumber":220,"author":{"gitId":"jiewei98"},"content":"        String output;","lastModifiedDate":"2022-02-10"},{"lineNumber":221,"author":{"gitId":"jiewei98"},"content":"        String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-05"},{"lineNumber":222,"author":{"gitId":"jiewei98"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-05"},{"lineNumber":223,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":224,"author":{"gitId":"jiewei98"},"content":"        for(Task task: list) {","lastModifiedDate":"2022-02-05"},{"lineNumber":225,"author":{"gitId":"jiewei98"},"content":"            if (task.toString().contains(secondWord)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":226,"author":{"gitId":"jiewei98"},"content":"                matches.add(task);","lastModifiedDate":"2022-02-05"},{"lineNumber":227,"author":{"gitId":"jiewei98"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":228,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":229,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":230,"author":{"gitId":"jiewei98"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":231,"author":{"gitId":"jiewei98"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":232,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":233,"author":{"gitId":"jiewei98"},"content":"        output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":234,"author":{"gitId":"jiewei98"},"content":"        for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2022-02-05"},{"lineNumber":235,"author":{"gitId":"jiewei98"},"content":"            output \u003d output + ((i + 1) + \".\" + matches.get(i)) + \"\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":236,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":237,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":238,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":239,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":240,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":241,"author":{"gitId":"jiewei98"},"content":"     * Updates specified Task from list.","lastModifiedDate":"2022-02-10"},{"lineNumber":242,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":243,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":244,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":245,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":246,"author":{"gitId":"jiewei98"},"content":"     * @return String output stating that a Task has been updated","lastModifiedDate":"2022-02-10"},{"lineNumber":247,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":248,"author":{"gitId":"jiewei98"},"content":"    public String updateTask(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":249,"author":{"gitId":"jiewei98"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":250,"author":{"gitId":"jiewei98"},"content":"        String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-10"},{"lineNumber":251,"author":{"gitId":"jiewei98"},"content":"        int index \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":252,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":253,"author":{"gitId":"jiewei98"},"content":"        Task targetTask \u003d list.get((index - 1));","lastModifiedDate":"2022-02-10"},{"lineNumber":254,"author":{"gitId":"jiewei98"},"content":"        String taskType \u003d targetTask.getTaskType();","lastModifiedDate":"2022-02-10"},{"lineNumber":255,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":256,"author":{"gitId":"jiewei98"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":257,"author":{"gitId":"jiewei98"},"content":"            output \u003d updateToDo(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":258,"author":{"gitId":"jiewei98"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":259,"author":{"gitId":"jiewei98"},"content":"            output \u003d updateDeadline(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":260,"author":{"gitId":"jiewei98"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":261,"author":{"gitId":"jiewei98"},"content":"            output \u003d updateEvent(list, inputs, input, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":262,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":263,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":264,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":265,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":266,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":267,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":268,"author":{"gitId":"jiewei98"},"content":"     * Updates specified ToDo Task from list.","lastModifiedDate":"2022-02-10"},{"lineNumber":269,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":270,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":271,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":272,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":273,"author":{"gitId":"jiewei98"},"content":"     * @return String output based on whether Task update was successful","lastModifiedDate":"2022-02-10"},{"lineNumber":274,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":275,"author":{"gitId":"jiewei98"},"content":"    public String updateToDo(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":276,"author":{"gitId":"jiewei98"},"content":"        if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":277,"author":{"gitId":"jiewei98"},"content":"            return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":278,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":279,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":280,"author":{"gitId":"jiewei98"},"content":"        String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-10"},{"lineNumber":281,"author":{"gitId":"jiewei98"},"content":"        int secondWordLength \u003d secondWord.length();","lastModifiedDate":"2022-02-10"},{"lineNumber":282,"author":{"gitId":"jiewei98"},"content":"        int index \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":283,"author":{"gitId":"jiewei98"},"content":"        int indexPosition \u003d input.indexOf(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":284,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":285,"author":{"gitId":"jiewei98"},"content":"        ToDo toDo \u003d new ToDo(input.substring(indexPosition + secondWordLength));","lastModifiedDate":"2022-02-10"},{"lineNumber":286,"author":{"gitId":"jiewei98"},"content":"        list.set((index - 1), toDo);","lastModifiedDate":"2022-02-10"},{"lineNumber":287,"author":{"gitId":"jiewei98"},"content":"        storage.store(list);","lastModifiedDate":"2022-02-10"},{"lineNumber":288,"author":{"gitId":"jiewei98"},"content":"        return \"Noted. I\u0027ve updated this task: \\n\" + toDo;","lastModifiedDate":"2022-02-10"},{"lineNumber":289,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":290,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":291,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":292,"author":{"gitId":"jiewei98"},"content":"     * Updates specified Deadline Task from list.","lastModifiedDate":"2022-02-10"},{"lineNumber":293,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":294,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":295,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":297,"author":{"gitId":"jiewei98"},"content":"     * @return String output based on whether Task update was successful","lastModifiedDate":"2022-02-10"},{"lineNumber":298,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":299,"author":{"gitId":"jiewei98"},"content":"    public String updateDeadline(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":300,"author":{"gitId":"jiewei98"},"content":"        String output;","lastModifiedDate":"2022-02-10"},{"lineNumber":301,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":302,"author":{"gitId":"jiewei98"},"content":"        if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":303,"author":{"gitId":"jiewei98"},"content":"            return \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":304,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":305,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":306,"author":{"gitId":"jiewei98"},"content":"        int start \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-02-10"},{"lineNumber":307,"author":{"gitId":"jiewei98"},"content":"        if (start \u003d\u003d -1) { // if / char cannot be found","lastModifiedDate":"2022-02-10"},{"lineNumber":308,"author":{"gitId":"jiewei98"},"content":"            return \"Please enter a valid date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":309,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":310,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":311,"author":{"gitId":"jiewei98"},"content":"        String date \u003d input.substring(start + 4);","lastModifiedDate":"2022-02-10"},{"lineNumber":312,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":313,"author":{"gitId":"jiewei98"},"content":"            String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-10"},{"lineNumber":314,"author":{"gitId":"jiewei98"},"content":"            int secondWordLength \u003d secondWord.length();","lastModifiedDate":"2022-02-10"},{"lineNumber":315,"author":{"gitId":"jiewei98"},"content":"            int index \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":316,"author":{"gitId":"jiewei98"},"content":"            int indexPosition \u003d input.indexOf(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":317,"author":{"gitId":"jiewei98"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-10"},{"lineNumber":318,"author":{"gitId":"jiewei98"},"content":"            Date formattedDate \u003d dateFormatter.parse(date);","lastModifiedDate":"2022-02-10"},{"lineNumber":319,"author":{"gitId":"jiewei98"},"content":"            String dateToString \u003d new SimpleDateFormat(\"MMM-dd-yyyy HHmm\").format(formattedDate);","lastModifiedDate":"2022-02-10"},{"lineNumber":320,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":321,"author":{"gitId":"jiewei98"},"content":"            Deadline deadline \u003d new Deadline(input.substring(indexPosition + secondWordLength, start - 1),","lastModifiedDate":"2022-02-10"},{"lineNumber":322,"author":{"gitId":"jiewei98"},"content":"                    dateToString);","lastModifiedDate":"2022-02-10"},{"lineNumber":323,"author":{"gitId":"jiewei98"},"content":"            list.set((index - 1), deadline);","lastModifiedDate":"2022-02-10"},{"lineNumber":324,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Noted. I\u0027ve updated this task: \\n\" + deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":325,"author":{"gitId":"jiewei98"},"content":"            storage.store(list);","lastModifiedDate":"2022-02-10"},{"lineNumber":326,"author":{"gitId":"jiewei98"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":327,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Please enter a valid date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":328,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":329,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":330,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":331,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":332,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":333,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":334,"author":{"gitId":"jiewei98"},"content":"     * Updates specified Event Task from list.","lastModifiedDate":"2022-02-10"},{"lineNumber":335,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":336,"author":{"gitId":"jiewei98"},"content":"     * @param list Arraylist of Tasks to manipulate","lastModifiedDate":"2022-02-10"},{"lineNumber":337,"author":{"gitId":"jiewei98"},"content":"     * @param inputs Array of String from user\u0027s input","lastModifiedDate":"2022-02-10"},{"lineNumber":338,"author":{"gitId":"jiewei98"},"content":"     * @param storage Storage object to load/store list of Tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":339,"author":{"gitId":"jiewei98"},"content":"     * @return String output based on whether Task update was successful","lastModifiedDate":"2022-02-10"},{"lineNumber":340,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":341,"author":{"gitId":"jiewei98"},"content":"    public String updateEvent(ArrayList\u003cTask\u003e list, String[] inputs, String input, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":342,"author":{"gitId":"jiewei98"},"content":"        String output;","lastModifiedDate":"2022-02-10"},{"lineNumber":343,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":344,"author":{"gitId":"jiewei98"},"content":"        if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":345,"author":{"gitId":"jiewei98"},"content":"            return \"☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":346,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":347,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":348,"author":{"gitId":"jiewei98"},"content":"        int start \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-02-10"},{"lineNumber":349,"author":{"gitId":"jiewei98"},"content":"        if (start \u003d\u003d -1) { // if / char cannot be found","lastModifiedDate":"2022-02-10"},{"lineNumber":350,"author":{"gitId":"jiewei98"},"content":"            return \"Please enter a valid date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":351,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":352,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":353,"author":{"gitId":"jiewei98"},"content":"        String date \u003d input.substring(start + 4);","lastModifiedDate":"2022-02-10"},{"lineNumber":354,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":355,"author":{"gitId":"jiewei98"},"content":"            String secondWord \u003d inputs[1];","lastModifiedDate":"2022-02-10"},{"lineNumber":356,"author":{"gitId":"jiewei98"},"content":"            int secondWordLength \u003d secondWord.length();","lastModifiedDate":"2022-02-10"},{"lineNumber":357,"author":{"gitId":"jiewei98"},"content":"            int index \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":358,"author":{"gitId":"jiewei98"},"content":"            int indexPosition \u003d input.indexOf(secondWord);","lastModifiedDate":"2022-02-10"},{"lineNumber":359,"author":{"gitId":"jiewei98"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-10"},{"lineNumber":360,"author":{"gitId":"jiewei98"},"content":"            Date formattedDate \u003d dateFormatter.parse(date);","lastModifiedDate":"2022-02-10"},{"lineNumber":361,"author":{"gitId":"jiewei98"},"content":"            String dateToString \u003d new SimpleDateFormat(\"MMM-dd-yyyy HHmm\").format(formattedDate);","lastModifiedDate":"2022-02-10"},{"lineNumber":362,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":363,"author":{"gitId":"jiewei98"},"content":"            Event event \u003d new Event(input.substring(indexPosition + secondWordLength, start - 1),","lastModifiedDate":"2022-02-10"},{"lineNumber":364,"author":{"gitId":"jiewei98"},"content":"                    dateToString);","lastModifiedDate":"2022-02-10"},{"lineNumber":365,"author":{"gitId":"jiewei98"},"content":"            list.set((index - 1), event);","lastModifiedDate":"2022-02-10"},{"lineNumber":366,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Noted. I\u0027ve updated this task: \\n\" + event;","lastModifiedDate":"2022-02-10"},{"lineNumber":367,"author":{"gitId":"jiewei98"},"content":"            storage.store(list);","lastModifiedDate":"2022-02-10"},{"lineNumber":368,"author":{"gitId":"jiewei98"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":369,"author":{"gitId":"jiewei98"},"content":"            output \u003d \"Please enter a valid date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":370,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":371,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":372,"author":{"gitId":"jiewei98"},"content":"        return output;","lastModifiedDate":"2022-02-05"},{"lineNumber":373,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":374,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":374}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"jiewei98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"jiewei98"},"content":"    private void flip() {","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"jiewei98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"jiewei98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"jiewei98"},"content":"        db.flip();","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"jiewei98"},"content":"        return db;","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":62}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"import task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"    private static ArrayList\u003cTask\u003e list \u003d storage.load();","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"    private static CommandList commandList \u003d new CommandList();","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"     * Main entry point for the GUI.","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"     * @param stage Stage object for the scene to populate","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"jiewei98"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"jiewei98"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"jiewei98"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"        assert scene !\u003d null : \"Unable to load GUI\";","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"jiewei98"},"content":"        stage.show();","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"jiewei98"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"jiewei98"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"jiewei98"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"jiewei98"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"jiewei98"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"jiewei98"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"jiewei98"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"jiewei98"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"jiewei98"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"jiewei98"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"jiewei98"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"jiewei98"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"jiewei98"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"jiewei98"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"jiewei98"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"jiewei98"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"jiewei98"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"jiewei98"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"jiewei98"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"jiewei98"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"jiewei98"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"jiewei98"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"jiewei98"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"jiewei98"},"content":"        });","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"jiewei98"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"jiewei98"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"jiewei98"},"content":"        });","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"jiewei98"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"jiewei98"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"jiewei98"},"content":"     * Method to be called when application is called to stop.","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"jiewei98"},"content":"    public void stop() {","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"jiewei98"},"content":"        System.out.println(\"STOP\");","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"jiewei98"},"content":"        Platform.exit();","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"jiewei98"},"content":"        System.exit(0);","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"jiewei98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"jiewei98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"jiewei98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"jiewei98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"jiewei98"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"jiewei98"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"jiewei98"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"jiewei98"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"jiewei98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"jiewei98"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"jiewei98"},"content":"                DialogBox.getDukeDialog(response, duke)","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"jiewei98"},"content":"        );","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"jiewei98"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"jiewei98"},"content":"     * Gets response from Duke in response to user\u0027s input.","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"jiewei98"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"jiewei98"},"content":"        String response \u003d commandList.execute(input, list, storage);","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"jiewei98"},"content":"        assert response !\u003d \"\" : \"Error in getting response\";","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"jiewei98"},"content":"        return response;","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jiewei98":140,"-":1}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"public class Launcher {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":12}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTestUi(duke);","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"            stage.show();","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"    public void stop() throws IOException, InterruptedException {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"        //System.out.println(\"For debugging: stop() method called!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"        //Gives time for user to see goodbye message","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"        Thread.sleep(10000);","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":39}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"    public void setTestUi(Duke d) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"jiewei98"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"jiewei98"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"jiewei98"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"        );","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":56}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"import task.ToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"import java.io.StringWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"    protected Path filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"     * Default constructor for Storage object.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"    public Storage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"            Path dirToCreate \u003d Paths.get(\"\").resolve(\"output\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"            Path subDir \u003d Files.createDirectories(dirToCreate); // create subdirectory for output list","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"            this.filePath \u003d Paths.get(subDir + \"/\" + \"list.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"            boolean fileExists \u003d Files.exists(this.filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"            if (!fileExists) { // if file does not exist, create the file","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"                Files.createFile(this.filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"jiewei98"},"content":"     * Loads list of tasks saved from previous execution of program.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"jiewei98"},"content":"     * @return a list of Tasks loaded from previous runs","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(); // init arraylist","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"            FileReader fr \u003d new FileReader(this.filePath.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"            StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"            String currLine;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"            while ((currLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"jiewei98"},"content":"                int taskInt \u003d currLine.indexOf(\"[\") + 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"jiewei98"},"content":"                char typeOfTask \u003d currLine.charAt(taskInt);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"jiewei98"},"content":"                int doneInt \u003d taskInt + 3;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"jiewei98"},"content":"                char taskDone \u003d currLine.charAt(doneInt);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"jiewei98"},"content":"                String task \u003d currLine.substring(doneInt + 3);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"jiewei98"},"content":"                if (typeOfTask \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"jiewei98"},"content":"                    ToDo toDo \u003d new ToDo(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"jiewei98"},"content":"                    if (taskDone \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"jiewei98"},"content":"                        toDo.complete();","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"jiewei98"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"jiewei98"},"content":"                    list.add(toDo);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"jiewei98"},"content":"                } else if (typeOfTask \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"jiewei98"},"content":"                    int start \u003d task.indexOf(\":\");","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"jiewei98"},"content":"                    String date \u003d task.substring((start + 2), (task.length() - 1));","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"jiewei98"},"content":"                    Deadline deadline \u003d new Deadline(task.substring(0, start - 4), date);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"jiewei98"},"content":"                    if (taskDone \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"jiewei98"},"content":"                        deadline.complete();","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"jiewei98"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"jiewei98"},"content":"                    list.add(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"jiewei98"},"content":"                } else if (typeOfTask \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"jiewei98"},"content":"                    int start \u003d task.indexOf(\":\");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"jiewei98"},"content":"                    String date \u003d task.substring((start + 2), (task.length() - 1));","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"jiewei98"},"content":"                    Event event \u003d new Event(task.substring(0, start - 4), date);","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"jiewei98"},"content":"                    if (taskDone \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"jiewei98"},"content":"                        event.complete();","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"jiewei98"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"jiewei98"},"content":"                    list.add(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"jiewei98"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"jiewei98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"jiewei98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"jiewei98"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"jiewei98"},"content":"        return list;","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"jiewei98"},"content":"     * Stores current list of tasks for future usage.","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"jiewei98"},"content":"     * @param list list of Tasks to store into local storage","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"jiewei98"},"content":"    public void store(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"jiewei98"},"content":"        StringWriter stringWriter \u003d new StringWriter();","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"jiewei98"},"content":"        PrintWriter writer \u003d new PrintWriter(stringWriter, true);","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"jiewei98"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"jiewei98"},"content":"            writer.println((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"jiewei98"},"content":"        String outputList \u003d stringWriter.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"jiewei98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"jiewei98"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filePath.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"jiewei98"},"content":"            myWriter.write(outputList);","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"jiewei98"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"jiewei98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"jiewei98"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":115}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"    protected String by;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"     * Default constructor for Deadline object.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"     * @param description description of Deadline to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"     * @param by date that Deadline has to be completed by","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"     * Returns type of Task as a String.","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Task\u0027s type","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"        return \"D\";","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"     * Prints Deadline details as a String.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Deadline details","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":39}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import java.util.Date;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"    protected String at;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"     * Default constructor for Event object.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"     * @param description description of Event to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"     * @param at date that Event will occur at","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"     * Returns type of Task as a String.","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Task\u0027s type","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"        return \"E\";","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"     * Prints Event details as a String.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Event details","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":42}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"    protected String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"     * Default constructor for Task object.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"     * @param description description of Task to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"     * Get status of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"     * @return a \"X\" if Task is done and \" \" if otherwise","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"     * Marks a Task as completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"     * @return String message to print on GUI","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"    public String mark() {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"        if (!isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"jiewei98"},"content":"            isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"jiewei98"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"jiewei98"},"content":"                    + toString();","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"jiewei98"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"jiewei98"},"content":"            return \"This task is already done! \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"jiewei98"},"content":"                    + toString();","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"jiewei98"},"content":"     * Unmarks a Task as completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"jiewei98"},"content":"     * @return String message to print on GUI","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"jiewei98"},"content":"    public String unmark() {","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"jiewei98"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"jiewei98"},"content":"            isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"jiewei98"},"content":"            return \"OK, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"jiewei98"},"content":"                    + toString();","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"jiewei98"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"jiewei98"},"content":"            return \"This task has not been completed! \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"jiewei98"},"content":"                    + toString();","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"jiewei98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"jiewei98"},"content":"     * Removes a Task from a list at given index.","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"jiewei98"},"content":"     * @param list list of Tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"jiewei98"},"content":"     * @param index index of the Task to be deleted","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"jiewei98"},"content":"     * @return list of Tasks without deleted task","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"jiewei98"},"content":"    public ArrayList\u003cTask\u003e delete(ArrayList\u003cTask\u003e list, int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"jiewei98"},"content":"        list.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"jiewei98"},"content":"        return list;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"jiewei98"},"content":"     * Sets a Task as isDone.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"jiewei98"},"content":"    public void complete() {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"jiewei98"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"jiewei98"},"content":"     * Returns type of Task as a String.","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Task\u0027s type","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"jiewei98"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"jiewei98"},"content":"        return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"jiewei98"},"content":"     * Prints Task details as a String.","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Task details","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"jiewei98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"jiewei98"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":98}},{"path":"src/main/java/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"     * Default constructor for ToDo object.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"     * @param description description of ToDo to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"     * Returns type of Task as a String.","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"     * @return String form of Task\u0027s type","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"        return \"T\";","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"     * Prints ToDo details as a String.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"     * @return String form of ToDo details","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"jiewei98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"jiewei98"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"jiewei98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"jiewei98"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jiewei98":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"    public void terminateTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"        parser.terminate();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"        assertTrue(parser.isTerminated);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":15}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"package task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jiewei98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"jiewei98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jiewei98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jiewei98"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jiewei98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jiewei98"},"content":"    public void statusIconTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jiewei98"},"content":"        Task task \u003d new Task(\"Read book\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jiewei98"},"content":"        task.complete();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"jiewei98"},"content":"        assertEquals(task.getStatusIcon(), \"X\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"jiewei98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"    public void completeTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"jiewei98"},"content":"        Task task \u003d new Task(\"Read book\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jiewei98"},"content":"        task.complete();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jiewei98"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jiewei98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"jiewei98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"jiewei98"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"jiewei98"},"content":"        Task task \u003d new Task(\"Read book\");","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"jiewei98"},"content":"        assertEquals(task.toString(), \"[ ] Read book\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"jiewei98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jiewei98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jiewei98":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiewei98"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"jiewei98":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jiewei98"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jiewei98":1,"-":20}}]
