[{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"1.[D][ ] Finish watching Gotham on Netflix (by: 15/02/21)","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"2.[T][X] Clean my windows","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"alfredkohhh":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Deadline}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     * Default Constructor for {@code Deadline}","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Deadline Task","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     * @param by String Representation of Due Date.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * Overloaded Constructor for {@code Deadline}","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Deadline Task","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param date LocalDate representation of Due Date.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        // if(Can get time, set this.by to with time)","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        this.by \u003d date.getDayOfMonth() + \" \" + date.getMonth() + \" \" + date.getYear();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"     * Returns String representation of {@code Deadline} Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of task of format {@code StatusIcon + Description}","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":55}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Main driver class for Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor of Duke, creating a new Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     * Setup Ui, Storage and TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     * @param filePath filePath of Storage of TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        tasks \u003d new TaskList(storage.getTaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * Main Driver Method to run program until exit command is called.","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        ui.start();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"            String command \u003d scanner.nextLine().trim(); // Can also convert result to lower-case to handle cases.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"            Parser parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"            parser.parse(command);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"            boolean flag \u003d parser.getExitTrigger();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            if(flag) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"                isExit \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"     * Main method to start Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"     * @param args Command Line Argument not used in this iteration of the program.","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alfredkohhh":48,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Class for Handling {@code Duke} Exceptions.","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Throwable}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that command is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    public void noSuchTaskException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that Description of Task is not found.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public void noDescriptionException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that Deadline Syntax is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    public void invalidDeadlineSyntax() {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! Your syntax for adding deadline task is wrong. \\r\\n Please follow the command: deadline \u003cDescription\u003e /by \u003cdd/mm/yyyy\u003e\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that Event Syntax is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    public void invalidEventSyntax() {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! Your syntax for adding event task is wrong. \\r\\n Please follow the command: event \u003cDescription\u003e /at \u003cDate/Time/DueDate/Place\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that there is no supplied Task number.","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    public void noTaskNumber() {","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! There is no task number provided.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that the Task number supplied is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    public void invalidTaskNumber() {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! The task number provided is not valid. Please use the \u0027list\u0027 command to view all your tasks.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":49}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Event}","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    protected String at;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor for {@code Event}","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Event Task","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     * @param at Location of the Event Task","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"     * Returns String representation of {@code Event} Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of task of format {@code StatusIcon + Description}","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        return super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":40}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":" * A Parser that make sense of user commands.","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        private final Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        private final TaskList taskListObj;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        private final Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        private final DukeException dukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        private final ArrayList\u003cTask\u003e taskListArr;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        private boolean isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor for {@code Parser} object.","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     * Initiate Setup for Parser, which requires Storage, TaskList, and Ui.","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     * @param storage Current Storage","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskListObj Current TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param ui Ui Implementation","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"        public Parser(Storage storage, TaskList taskListObj, Ui ui) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"            this.taskListObj \u003d taskListObj;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"            this.taskListArr \u003d taskListObj.getTaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"            dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"            this.ui \u003d ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            this.isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     * Parse User Input, routing input to the correct action.","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"     * @param command String Value of User Input","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        public void parse(String command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"            command \u003d command.trim().strip();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"                ui.displayBye();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"                storage.saveToTaskList(taskListArr);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                isExit \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                ui.displayTasks(taskListArr);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"                int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"                taskListObj.mark(value);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"                int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                taskListObj.unmark(value);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                    Todo todoTask \u003d new Todo(command.substring(5));","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"                    taskListObj.addTask(todoTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(todoTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Now you have \" + taskListObj.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"                } catch (StringIndexOutOfBoundsException noDescription) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.noDescriptionException();","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"                command \u003d command.replace(\"deadline\", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"                String[] taskText \u003d command.split(\" /by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); // Not working","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"                    // Create a formatter with the formats","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter parser \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format1)","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format2)","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format3)","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                            .toFormatter();","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"                    LocalDate parsedDate \u003d LocalDate.parse(taskText[1].strip(),parser);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), parsedDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                    taskListObj.addTask(deadlineTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"                } catch(ArrayIndexOutOfBoundsException invalidDeadlineSyntax) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.invalidDeadlineSyntax();","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                } catch(DateTimeParseException wrongDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"                    // This means that there is no date to be parsed, or incorrect format, so treat it as normal string","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                    taskListObj.addTask(deadlineTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                    command \u003d command.replace(\"event\", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d command.split(\" /at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"                    Event eventTask \u003d new Event(taskText[0].strip(), taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"                    taskListObj.addTask(eventTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"                } catch(ArrayIndexOutOfBoundsException invalidEventSyntax) {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.invalidEventSyntax();","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"                int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"                taskListObj.delete(value);","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"                dukeException.noSuchTaskException();","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"     * Method to check if exitTrigger is triggered.","lastModifiedDate":"2022-02-05"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"     * @return Exit Trigger as a boolean","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"        public boolean getExitTrigger() {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"            return isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":118}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Storage} for storing task into TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     * Overloaded Constructor with filepath","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * @param filePath filePath to File for storing","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        loadTask(taskList, filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     * Return all task stored within File.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     * @return ArrayList of current stored Task","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"     * Method to load all task from File, by supplied filePath.","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList Current session\u0027s TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * @param filePath FilePath for where File is stored.","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public void loadTask(ArrayList\u003cTask\u003e taskList, String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        String path \u003d \"src\\\\main\\\\java\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        path \u003d path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"            Scanner reader \u003d new Scanner(taskFile);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                if(data.contains(\"(by:\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d data.split(\"\\\\(by:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"                    StringBuilder sb \u003d new StringBuilder(taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"                    sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), sb.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"                    if(data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"                        deadlineTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"                } else if(data.contains(\"(at: \")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d data.split(\"\\\\(at:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                    StringBuilder sb \u003d new StringBuilder(taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                    sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                    Event eventTask \u003d new Event(taskText[0].strip(),sb.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"                    if(data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"                        eventTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"                    Todo todoTask \u003d new Todo(data);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"                    if(data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"                        todoTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException fileInvalid) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"     * Method to save all Task in given ArrayList of Tasks to File.","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of current session\u0027s Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"    // Reusable code for writing into duke.txt task list","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"    public void saveToTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"        String path \u003d \"src\\\\main\\\\java\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        path \u003d path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"            // Remove current file tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"            PrintWriter pw \u003d new PrintWriter(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"            pw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"            FileWriter myWriter \u003d new FileWriter(taskFile,true);","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"                myWriter.write((i + 1) + \".\" + taskList.get(i).toString() + \"\\r\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException | IOException fileInvalid) {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":113}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Represent Task with description","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     * Creates a new Task with description","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Description of task","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"     * @return String Description of task","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        return description;","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * Set current task status to done","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"     * Set current task status to not done","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"     * Returns String representation of {@code Task}.","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of task of format {@code StatusIcon + Description}","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":62}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * An ArrayList container for {@code Task} object","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    private static Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    private final DukeException dukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     * Default Constructor for {@code TaskList}","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * This constructor will be used when there is no previous TaskList to load from.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * Default Constructor for {@code TaskList}","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     * This constructor will be used when there is an existing taskList to load from.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"        dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"     * Returns ArrayList of current tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     * @return An ArrayList of task","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"        return taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"     * Get the size of current {@code taskList}","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"     * @return Integer value of {@code taskList} size.","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"     * Add task to taskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be added to the taskList","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"        ui.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        ui.displayTaskAmount(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, Set Task to done, and marks the Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"    public void mark(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"            Task selectedTask \u003d taskList.get(index-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"            selectedTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"            ui.markTask(selectedTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"Task is invalid, please select a valid task number.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, Set Task to not done, and unchecks the Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"    public void unmark(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"            Task selectedTask \u003d taskList.get(index-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"            selectedTask.setUndone();","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"            ui.markTask(selectedTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"Task is invalid, please select a valid task number.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, Delete the specific Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"            Task removedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"            ui.deleteTask(removedTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"            ui.displayTaskAmount(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"        } catch (NumberFormatException noTaskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"            dukeException.noTaskNumber();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IndexOutOfBoundsException invalidTaskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"            dukeException.invalidTaskNumber();","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":110}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Todo}","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor for {@code Todo}","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Todo Task","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Ui}, Implementation of User Interface for Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     * Method to print Duke\u0027s initial UI.","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    public void start() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"            String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"Hello! I\u0027m Duke\\r\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     * Method to print a goodbye message to users.","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    public void displayBye() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     * Prints All current tasks in supplied TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of Current Task","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    public void displayTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"     * Prints message with the size of supplied TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of Current Task","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    public void displayTaskAmount(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"     * Prints String Representation of Task added.","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be added to TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"     * Prints String Representation of marked Task","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task needed to be marked","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(task.getStatusIcon() + \" \" + task.getDescription());","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"     * Prints message to indicate that supplied Task has been deleted.","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be deleted","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"//    public void showLoadingError() {","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"//        System.out.println(\"There was an error loading the file!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"//    }","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"//","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"//    public void readCommand() {","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"//","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"//    }","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"    // Can display all commands","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"//    public void displayCommands() {","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"//        System.out.println(\"DISPLAY LIST OF COMMANDS\");","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"//    }","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":92}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"import duke.*;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    Parser parserTest \u003d new Parser(storage, taskList, ui);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    public void dateConversionTest() {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"        parserTest.parse(\"deadline Repair the windows /by 08/08/2020\");","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        String expected \u003d (\"[D][ ] Repair the windows (by: 8 AUGUST 2020)\");","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(expected,taskList.getTaskList().get(0).toString());","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"alfredkohhh":18}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"import duke.Todo;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"public class TodoTest {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    public void getTodoDescription() {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"        Todo todoTask \u003d new Todo(\"Wash the dishes\");","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(\"Wash the dishes\", todoTask.getDescription());","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public void checkTaskStatus() {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        Todo todoTask1 \u003d new Todo(\"Watch Gotham latest Season on Netflix\");","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        Todo todoTask2 \u003d new Todo(\"Start reading up on NFTs\");","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        todoTask1.setDone();","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        todoTask2.setDone();","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        todoTask2.setUndone();","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(\"[T][X]\", todoTask1.getStatusIcon());","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(\"[T][ ]\", todoTask2.getStatusIcon());","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"alfredkohhh":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"todo read book","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"todo join sports club","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"mark 4","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"todo borrow book","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":8}}]
