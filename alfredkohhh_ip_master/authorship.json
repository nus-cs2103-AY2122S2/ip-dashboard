[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.2\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.2\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alfredkohhh":17,"-":44}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"1.[D][ ] Finish watching Gotham on Netflix (by: 15/02/21)","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"2.[T][ ] Clean my windows","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":2}},{"path":"src/main/java/data/tagList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"1.[#hello, #goodbye]","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"2.[#forced, #dirty]","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"alfredkohhh":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Deadline}","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     * Default Constructor for {@code Deadline}","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Deadline Task","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"     * @param by String Representation of Due Date.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     * Overloaded Constructor for {@code Deadline}","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Deadline Task","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     * @param date LocalDate representation of Due Date.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        this.by \u003d date.getDayOfMonth() + \" \" + date.getMonth() + \" \" + date.getYear();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"     * Returns String representation of {@code Deadline} Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of task of format {@code StatusIcon + Description}","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":55}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"    private void flip() {","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        db.flip();","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        return db;","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":66}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Main driver class for Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor of Duke, creating a new Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     * Setup Ui, Storage and TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * @param filePath filePath of Storage of TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        tasks \u003d new TaskList(storage.getTaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"        parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     * Method to get response from User input","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     * @param input Input for parser","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     * @return Response to user input","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        String result \u003d parser.parse(input);","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        assert !result.isEmpty() : \"Input cannot be empty!!\";","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        return parser.parse(input);","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     * Main method to start Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     * @param args Command Line Argument not used in this iteration of the program.","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alfredkohhh":44,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Class for Handling {@code Duke} Exceptions.","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Throwable}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that command is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user to indicate command is invalid","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public String noSuchCommandException() {","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that Description of Task is not found.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user to indicate that description of @code{todo} task cannot be empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    public String noDescriptionException() {","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        return \"The description of a todo cannot be empty.\";","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that Deadline Syntax is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user to indicate that description of deadline task does not follow syntax.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    public String invalidDeadlineSyntax() {","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        return \"Your syntax for adding deadline task is wrong. \\r\\n \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"                \"Please follow the command: deadline \u003cDescription\u003e /by \u003cdd/mm/yyyy\u003e\";","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that Event Syntax is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user to indicate that description of Event task does not follow syntax.","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    public String invalidEventSyntax() {","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"        return \"Your syntax for adding event task is wrong. \\r\\n \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"                \"Please follow the command: event \u003cDescription\u003e /at \u003cDate/Time/DueDate/Place\u003e\";","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that there is no supplied Task number.","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user indicating that no task number is supplied for deleting","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    public String noTaskNumber() {","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"        return \"There is no task number provided.\";","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that the Task number supplied is invalid.","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user indicating that task number is not within the list","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"    public String invalidTaskNumber() {","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        return \"The task number provided is not valid. \\r\\n \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                \"Please use the \u0027list\u0027 command to view all your tasks.\";","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that the supplied Tag Syntax is incorrect","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user indicating that tag syntax is invalid","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"    public String invalidTagSyntax() {","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"        return \"The tag syntax is not valid \\r\\n \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"                \"Tag Syntax: tag \u003cTask Number\u003e \u003cDescription of Tag\u003e\";","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that the Task number supplied is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user indicating that task number is not within the list","lastModifiedDate":"2022-02-22"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"    public String invalidDeleteSyntax() {","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"        return \"The delete syntax is not valid. \\r\\n \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"                \"Delete Syntax: delete \u003cTask Number\u003e\";","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"     * Method to indicate to User that the Task number supplied is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user indicating that task number is not within the list","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"    public String invalidDeleteTagSyntax() {","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"        return \"The remove tag syntax is not valid. \\r\\n \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                \"Remove Tag Syntax: \\r\\n removeTag \u003cTask Number\u003e \u003cTag Number\u003e \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                \"You can use [list allTags] command to view all tags\";","lastModifiedDate":"2022-02-22"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":97}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Event}","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    protected String dueAt;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor for {@code Event}","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Event Task","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     * @param dueAt Location of the Event Task","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    public Event(String description, String dueAt) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        this.dueAt \u003d dueAt;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"     * Returns String representation of {@code Event} Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of task of format {@code StatusIcon + Description}","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        return super.toString() + \" (at: \" + dueAt + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":40}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class Launcher {","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    private Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * Start the UI layout for GUI","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"     * @param stage UI Stage that will be referenced","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"            stage.show();","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":38}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"        );","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":" * A Parser that make sense of user commands.","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        private final Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        private final TaskList taskListObj;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        private final Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        private final DukeException dukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        private final ArrayList\u003cTask\u003e taskListArr;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        private boolean isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor for {@code Parser} object.","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * Initiate Setup for Parser, which requires Storage, TaskList, and Ui.","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     * @param storage Current Storage","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskListObj Current TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     * @param ui Ui Implementation","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        public Parser(Storage storage, TaskList taskListObj, Ui ui) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"            this.taskListObj \u003d taskListObj;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"            this.taskListArr \u003d taskListObj.getTaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"            dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            this.ui \u003d ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"            this.isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"     * Parse User Input, routing input to the correct action.","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"     * @param command String Value of User Input","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"     * @return String Message once command is executed.","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        public String parse(String command) {","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"            command \u003d command.trim().strip();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                storage.saveToTaskList(taskListArr);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"                isExit \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                return ui.displayBye();","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"list\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"                if(command.contains(\"allTags\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"                    return ui.displayTags(taskListArr);","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"                } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"                    return ui.displayTasks(taskListArr);","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"                int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                return taskListObj.mark(value);","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                return taskListObj.unmark(value);","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"                    Todo todoTask \u003d new Todo(command.substring(5));","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.addTask(todoTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"                } catch (StringIndexOutOfBoundsException noDescription) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"                    assert command.substring(5).isEmpty(): \"Description empty!\";","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"                    return dukeException.noDescriptionException();","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"                command \u003d command.replace(\"deadline\", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"                String[] taskText \u003d command.split(\" /by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); // Not working","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"                    // Create a formatter with the formats","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter parser \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format1)","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format2)","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format3)","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"                            .toFormatter();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                    LocalDate parsedDate \u003d LocalDate.parse(taskText[1].strip(),parser);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), parsedDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.addTask(deadlineTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"                } catch(ArrayIndexOutOfBoundsException invalidDeadlineSyntax) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                    return dukeException.invalidDeadlineSyntax();","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                } catch(DateTimeParseException wrongDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"                    // This means that there is no date to be parsed, or incorrect format,","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                    // so treat it as normal string","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.addTask(deadlineTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"                    command \u003d command.replace(\"event\", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d command.split(\" /at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"                    Event eventTask \u003d new Event(taskText[0].strip(), taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.addTask(eventTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"                } catch(ArrayIndexOutOfBoundsException invalidEventSyntax) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"                    return dukeException.invalidEventSyntax();","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"                    int index \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.delete(index);","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"                } catch(NumberFormatException invalidSyntax) {","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"                    return dukeException.invalidDeleteSyntax();","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"                String filteredCommand \u003d command.replace(\"find\", \"\").strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"                return taskListObj.find(filteredCommand);","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"addTag\")){","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-02-22"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"                    String filteredCommand \u003d command.replace(\"addTag\", \"\");","lastModifiedDate":"2022-02-22"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"                    String[] splitCommand \u003d filteredCommand.split(\" \");","lastModifiedDate":"2022-02-22"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"                    String tagDescription \u003d \"\";","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"                    if(splitCommand[1].isEmpty()) {","lastModifiedDate":"2022-02-22"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"                        return dukeException.invalidTagSyntax();","lastModifiedDate":"2022-02-22"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"                    } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"                        tagDescription \u003d splitCommand[2].trim().strip();","lastModifiedDate":"2022-02-22"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-02-22"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"                    int index \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-02-22"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.tag(index, tagDescription);","lastModifiedDate":"2022-02-22"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"                } catch(NumberFormatException | ArrayIndexOutOfBoundsException invalidSyntax) {","lastModifiedDate":"2022-02-22"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"                    return dukeException.invalidTagSyntax();","lastModifiedDate":"2022-02-22"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"removeTag\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"                    String filteredCommand \u003d command.replace(\"removeTag\", \"\");","lastModifiedDate":"2022-02-22"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"                    String[] splitCommand \u003d filteredCommand.split(\" \");","lastModifiedDate":"2022-02-22"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"                    int taskIndex \u003d Integer.parseInt(splitCommand[1]);","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"                    int tagIndex \u003d Integer.parseInt(splitCommand[1]);","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"                    return taskListObj.removeTag(taskIndex,tagIndex);","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"                } catch(NumberFormatException | ArrayIndexOutOfBoundsException invalidSyntax) {","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"                    return dukeException.invalidDeleteTagSyntax();","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"                return dukeException.noSuchCommandException();","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"     * Method to check if exitTrigger is triggered.","lastModifiedDate":"2022-02-05"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"     * @return Exit Trigger as a boolean","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"        public boolean isExitTrigger() {","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"            return isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":155}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Storage} for storing task into TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     * Overloaded Constructor with filepath","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * @param filePath filePath to File for storing","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        loadTask(taskList, filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"        loadTags(taskList);","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     * Method to load all tags from File","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList Current session\u0027s TaskList","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    public void loadTags(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        String path \u003d \"src\\\\main\\\\java\\\\data\\\\tagList.txt\";","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"        path \u003d path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(path);","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"            Scanner reader \u003d new Scanner(taskFile);","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"                int index \u003d Integer.parseInt(data.substring(0,1));","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"                Task currentTask \u003d taskList.get(index-1);","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"                data \u003d data.substring(3,data.length()-1);","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"                if(!data.isEmpty()) {","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"                    String[] tags \u003d data.split(\",\");","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"                    for (String tag : tags) {","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"                        String tagDescription \u003d tag.strip();","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"                        currentTask.addTag(tagDescription);","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException fileInvalid) {","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"     * Return all task stored within File.","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"     * @return ArrayList of current stored Task","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"     * Method to load all task from File, by supplied filePath.","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList Current session\u0027s TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"     * @param filePath FilePath for where File is stored.","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"    public void loadTask(ArrayList\u003cTask\u003e taskList, String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"        String path \u003d \"src\\\\main\\\\java\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        path \u003d path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"            Scanner reader \u003d new Scanner(taskFile);","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"                if (data.contains(\"(by:\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d data.split(\"\\\\(by:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"                    StringBuilder sb \u003d new StringBuilder(taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                    sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), sb.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                    if (data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                        deadlineTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                } else if (data.contains(\"(at: \")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d data.split(\"\\\\(at:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                    StringBuilder sb \u003d new StringBuilder(taskText[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                    sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"                    Event eventTask \u003d new Event(taskText[0].strip(),sb.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"                    if (data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"                        eventTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"                    Todo todoTask \u003d new Todo(data);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"                    if (data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"                        todoTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException fileInvalid) {","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"     * Method to save all Task in given ArrayList of Tasks to File.","lastModifiedDate":"2022-02-05"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of current session\u0027s Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"    // Reusable code for writing into duke.txt task list","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"    public void saveToTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"        String tasksPath \u003d \"src\\\\main\\\\java\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-02-22"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"        tasksPath \u003d tasksPath.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-02-22"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"        String tagsPath \u003d \"src\\\\main\\\\java\\\\data\\\\tagList.txt\";","lastModifiedDate":"2022-02-22"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"        tagsPath \u003d tagsPath.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-02-22"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"            // Remove current file tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"            PrintWriter pw \u003d new PrintWriter(tasksPath);","lastModifiedDate":"2022-02-22"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"            pw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(tasksPath);","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"            FileWriter myWriter \u003d new FileWriter(taskFile,true);","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"                myWriter.write((i + 1) + \".\" + taskList.get(i).toString() + \"\\r\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException | IOException fileInvalid) {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"            PrintWriter pw \u003d new PrintWriter(tagsPath);","lastModifiedDate":"2022-02-22"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"            pw.close();","lastModifiedDate":"2022-02-22"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"            File tagFile \u003d new File(tagsPath);","lastModifiedDate":"2022-02-22"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"            FileWriter myWriter \u003d new FileWriter(tagFile,true);","lastModifiedDate":"2022-02-22"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-22"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"                myWriter.write((i + 1) + \".\" + taskList.get(i).getTags() + \"\\r\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"            myWriter.close();","lastModifiedDate":"2022-02-22"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException | IOException fileInvalid) {","lastModifiedDate":"2022-02-22"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":156,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":160}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * Represent Task with description","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    protected ArrayList\u003cString\u003e tagList;","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     * Creates a new Task with description","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        this.tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Description of task","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"     * @return String Description of task","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"        return description;","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"     * Set current task status to done","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"     * Set current task status to not done","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"     * Method to add a tag to task","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"        if(tag.startsWith(\"#\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"            tagList.add(tag);","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"            tagList.add(\"#\" + tag);","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"     * Method to remove a tag from task","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"     * @param tagIndex index of tag to be removed","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"     * @return String of removed tag","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"    public String removeTag(int tagIndex) {","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        return tagList.remove(tagIndex-1);","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"     * Getter method to get tag ArrayList","lastModifiedDate":"2022-02-22"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cString\u003e getTags() {","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"        return tagList;","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"     * Returns String representation of {@code Task}.","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of task of format {@code StatusIcon + Description}","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":95}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * An ArrayList container for {@code Task} object","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    private static Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    private final DukeException dukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"     * Default Constructor for {@code TaskList}","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"     * This constructor will be used when there is no previous TaskList to load from.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"     * Default Constructor for {@code TaskList}","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"     * This constructor will be used when there is an existing taskList to load from.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"        dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"     * Returns ArrayList of current tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     * @return An ArrayList of task","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"        return taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"     * Get the size of current {@code taskList}","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"     * @return Integer value of {@code taskList} size.","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"     * Add task to taskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be added to the taskList","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when adding task into taskList","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"        result.append(ui.addTask(task));","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        result.append(ui.displayTaskAmount(taskList));","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"        return result.toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, Set Task to done, and marks the Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when task is marked, or if selected index is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"    public String mark(int index) {","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"            Task selectedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"            selectedTask.setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"            return ui.markTask(selectedTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"            return \"Task is invalid, please select a valid task number.\";","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, Set Task to not done, and unchecks the Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when task is unmarked, or if selected index is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"    public String unmark(int index) {","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"            Task selectedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"            selectedTask.setUndone();","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"            return ui.unmarkTask(selectedTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"            return \"Task is invalid, please select a valid task number.\";","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, Delete the specific Task.","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user that specific task has been removed, otherwise throw DukeException handler.","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"    public String delete(int index) {","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"            Task removedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"            result.append(ui.deleteTask(removedTask)).append(\"\\r\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"            result.append(ui.displayTaskAmount(taskList));","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"            return result.toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"        } catch (NumberFormatException noTaskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"            return dukeException.noTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IndexOutOfBoundsException invalidTaskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"            return dukeException.invalidTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, and  Delete the specific Task.","lastModifiedDate":"2022-02-22"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-22"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"     * @param tagDescription String input of what the task should be tagged with","lastModifiedDate":"2022-02-22"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user that specific task has been tagged accordingly, otherwise throw DukeException handler.","lastModifiedDate":"2022-02-22"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"    public String tag(int index, String tagDescription) {","lastModifiedDate":"2022-02-22"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-02-22"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"            Task selectedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-02-22"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"            selectedTask.addTag(tagDescription);","lastModifiedDate":"2022-02-22"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"            return \"Successfully added tag \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"                    tagDescription +","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"                    \" to:\\r\\n\" +","lastModifiedDate":"2022-02-22"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"                    selectedTask;","lastModifiedDate":"2022-02-22"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"        } catch (NumberFormatException noTaskNumber) {","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"            return dukeException.noTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IndexOutOfBoundsException invalidTaskNumber) {","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"            return dukeException.invalidTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"     * Given a Task Index, and  Delete the specific Task.","lastModifiedDate":"2022-02-22"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"     * @param index Index of Task","lastModifiedDate":"2022-02-22"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"     * @param tagIndex String input of what the task should be tagged with","lastModifiedDate":"2022-02-22"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message to user that specific task has been tagged accordingly, otherwise throw DukeException handler.","lastModifiedDate":"2022-02-22"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"    public String removeTag(int index, int tagIndex) {","lastModifiedDate":"2022-02-22"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-02-22"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"            Task selectedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-02-22"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"            String removedTag \u003d selectedTask.removeTag(tagIndex);","lastModifiedDate":"2022-02-22"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"            return \"Successfully removed tag \" + removedTag + \" from:\\r\\n\" + selectedTask;","lastModifiedDate":"2022-02-22"},{"lineNumber":156,"author":{"gitId":"alfredkohhh"},"content":"        } catch (NumberFormatException noTaskNumber) {","lastModifiedDate":"2022-02-22"},{"lineNumber":157,"author":{"gitId":"alfredkohhh"},"content":"            return dukeException.noTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":158,"author":{"gitId":"alfredkohhh"},"content":"        } catch (IndexOutOfBoundsException invalidTaskNumber) {","lastModifiedDate":"2022-02-22"},{"lineNumber":159,"author":{"gitId":"alfredkohhh"},"content":"            return dukeException.invalidTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":160,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":161,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":162,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"alfredkohhh"},"content":"     * Method is used to scan through current TaskList, searching by supplied keyword.","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"alfredkohhh"},"content":"     * @param matchingDescription Description of Task that User is finding","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"alfredkohhh"},"content":"     * @return List of tasks found with matching description","lastModifiedDate":"2022-02-22"},{"lineNumber":168,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"alfredkohhh"},"content":"    public String find(String matchingDescription) {","lastModifiedDate":"2022-02-22"},{"lineNumber":170,"author":{"gitId":"alfredkohhh"},"content":"        if(matchingDescription.startsWith(\"#\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":171,"author":{"gitId":"alfredkohhh"},"content":"            String tagDescription \u003d matchingDescription.replace(\"#\", \"\");","lastModifiedDate":"2022-02-22"},{"lineNumber":172,"author":{"gitId":"alfredkohhh"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-22"},{"lineNumber":173,"author":{"gitId":"alfredkohhh"},"content":"            ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-22"},{"lineNumber":174,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-22"},{"lineNumber":175,"author":{"gitId":"alfredkohhh"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-02-22"},{"lineNumber":176,"author":{"gitId":"alfredkohhh"},"content":"                ArrayList\u003cString\u003e tagList \u003d currentTask.getTags();","lastModifiedDate":"2022-02-22"},{"lineNumber":177,"author":{"gitId":"alfredkohhh"},"content":"                if (tagList.contains(tagDescription)) {","lastModifiedDate":"2022-02-22"},{"lineNumber":178,"author":{"gitId":"alfredkohhh"},"content":"                    indexList.add(i+1);","lastModifiedDate":"2022-02-22"},{"lineNumber":179,"author":{"gitId":"alfredkohhh"},"content":"                    matchingTasks.add(currentTask);","lastModifiedDate":"2022-02-22"},{"lineNumber":180,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":181,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":182,"author":{"gitId":"alfredkohhh"},"content":"            return \"Here are your task with \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":183,"author":{"gitId":"alfredkohhh"},"content":"                    matchingDescription +","lastModifiedDate":"2022-02-22"},{"lineNumber":184,"author":{"gitId":"alfredkohhh"},"content":"                    ui.displayFoundTasks(matchingTasks,indexList);","lastModifiedDate":"2022-02-22"},{"lineNumber":185,"author":{"gitId":"alfredkohhh"},"content":"        } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":186,"author":{"gitId":"alfredkohhh"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"alfredkohhh"},"content":"            ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"alfredkohhh"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"alfredkohhh"},"content":"                String currentDescription \u003d currentTask.getDescription().toLowerCase();","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"alfredkohhh"},"content":"                matchingDescription \u003d matchingDescription.toLowerCase();","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"alfredkohhh"},"content":"                if (currentDescription.contains(matchingDescription)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"alfredkohhh"},"content":"                    matchingTasks.add(currentTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"alfredkohhh"},"content":"                    indexList.add(i+1);","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"alfredkohhh"},"content":"            return ui.displayFoundTasks(matchingTasks, indexList);","lastModifiedDate":"2022-02-22"},{"lineNumber":198,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"alfredkohhh":200}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Todo}","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":" * Extends {@code Task}","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"     * Constructor for {@code Todo}","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     * @param description Description of the Todo Task","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"     * Returns Status Icon of current task as a String representation","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of current task status icon","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":" * Class {@code Ui}, Implementation of User Interface for Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"     * Method to print Duke\u0027s initial UI.","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    public String start() {","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"        result.append(\"Hello from\\n\" + logo).append(\"Hello! I\u0027m Duke\\r\\nWhat can I do for you?\");","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"        return result.toString();","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"     * Method to print a goodbye message to users.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"     * @return Goodbye message","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"    public String displayBye() {","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"     * Prints All current tasks in supplied TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of Current Task","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"     * @return String representation of all tasks in ArrayList","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"    public String displayTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"            list.append(\"The current task list is empty!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"                list.append(i + 1)","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                        .append(\".\")","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"                        .append(taskList.get(i).toString())","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                        .append(\"\\r\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"        return list.toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"     * Prints All found tasks in supplied TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of Current Tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"     * @param indexList ArrayList of Task indexes found by find function.","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"     * @return List of task found by index list.","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"    public String displayFoundTasks(ArrayList\u003cTask\u003e taskList, ArrayList\u003cInteger\u003e indexList) {","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"            return \"No task found by your given keyword\";","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c indexList.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"               int taskIndex \u003d indexList.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"               Task taskFound \u003d taskList.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"               result.append(taskIndex + \".\" + taskFound).append(\"\\r\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"            return result.toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"     * Prints message with the size of supplied TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"     * @param taskList ArrayList of Current Task","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message with amount of tasks in tasklist","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"    public String displayTaskAmount(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"        return \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"     * Prints String Representation of Task added.","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be added to TaskList","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when user adds a task","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"        return \"Got it. I\u0027ve added this task: \\r\\n\" + task;","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"     * Prints String Representation of marked Task","lastModifiedDate":"2022-02-05"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task needed to be marked","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when task is successfully marked.","lastModifiedDate":"2022-02-22"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"    public String markTask(Task task) {","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-02-22"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"        result.append(\"Nice! I\u0027ve marked this task as done: \\r\\n\")","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"                .append(task.getStatusIcon())","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"                .append(\" \")","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"                .append(task.getDescription())","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"                .append(\"\\r\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"        return result.toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"     * Prints String Representation of marked Task","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task needed to be marked","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when task is successfully marked.","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"    public String unmarkTask(Task task) {","lastModifiedDate":"2022-02-22"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"        return \"Nice! I\u0027ve marked this task as not done: \\n\" +","lastModifiedDate":"2022-02-22"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"                task.getStatusIcon() +","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"                \" \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"                task.getDescription();","lastModifiedDate":"2022-02-22"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"     * Prints message to indicate that supplied Task has been deleted.","lastModifiedDate":"2022-02-05"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"     * @param task Task to be deleted","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message when deleting task","lastModifiedDate":"2022-02-22"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"    public String deleteTask(Task task) {","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"        return \" Noted. I\u0027ve removed this task: \\r\\n\" + task;","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"     * Prints all task tags","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"     * @return Message that displays all tags for all tasks","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"    public String displayTags(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"            result.append(i+1)","lastModifiedDate":"2022-02-22"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"                    .append(\". \");","lastModifiedDate":"2022-02-22"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"            ArrayList\u003cString\u003e tagList \u003d taskList.get(i).getTags();","lastModifiedDate":"2022-02-22"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"            for(int j \u003d 0; j \u003c tagList.size(); j++) {","lastModifiedDate":"2022-02-22"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"                result.append(tagList.get(j)).append(\" \");","lastModifiedDate":"2022-02-22"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"            result.append(\"\\r\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"        return result.toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"alfredkohhh":154}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"alfredkohhh":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import duke.Parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    Parser parserTest \u003d new Parser(storage, taskList, ui);","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    public void dateConversionTest() {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        parserTest.parse(\"deadline Repair the windows /by 08/08/2020\");","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        String expected \u003d (\"[D][ ] Repair the windows (by: 8 AUGUST 2020)\");","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(expected,taskList.getTaskList().get(0).toString());","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"alfredkohhh":21}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"import duke.Todo;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"public class TodoTest {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    public void getTodoDescription() {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"        Todo todoTask \u003d new Todo(\"Wash the dishes\");","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(\"Wash the dishes\", todoTask.getDescription());","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public void checkTaskStatus() {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        Todo todoTask1 \u003d new Todo(\"Watch Gotham latest Season on Netflix\");","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        Todo todoTask2 \u003d new Todo(\"Start reading up on NFTs\");","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"        todoTask1.setDone();","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        todoTask2.setDone();","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        todoTask2.setUndone();","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(\"[T][X]\", todoTask1.getStatusIcon());","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        assertEquals(\"[T][ ]\", todoTask2.getStatusIcon());","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"alfredkohhh":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"todo read book","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"todo join sports club","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"mark 4","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"todo borrow book","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":8}}]
