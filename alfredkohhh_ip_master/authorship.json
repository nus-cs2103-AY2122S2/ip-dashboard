[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        // if(Can get time, set this.by to with time)","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        this.by \u003d date.getDayOfMonth() + \" \" + date.getMonth() + \" \" + date.getYear();","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"import java.io.*;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"import java.util.*;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\r\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(); // init arraylist outside infinite loop.","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"        DukeException dukeException \u003d new DukeException();","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"        loadTask(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"        while (true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"            String command \u003d scanner.nextLine().trim(); // Can also convert result to lower-case to handle cases.","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"                    writeToTaskList(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"alfredkohhh"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"alfredkohhh"},"content":"                for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"alfredkohhh"},"content":"                    int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"alfredkohhh"},"content":"                    Task currentTask \u003d taskList.get(value-1);","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"alfredkohhh"},"content":"                    currentTask.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(currentTask.getStatusIcon() + \" \" + currentTask.getDescription());","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"alfredkohhh"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Task is invalid, please select a valid task number.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"alfredkohhh"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"alfredkohhh"},"content":"                    int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"alfredkohhh"},"content":"                    Task currentTask \u003d taskList.get(value - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"alfredkohhh"},"content":"                    currentTask.setUndone();","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(currentTask.getStatusIcon() + \" \" + currentTask.getDescription());","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"alfredkohhh"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Task is invalid, please select a valid task number.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"alfredkohhh"},"content":"                    Todo todoTask \u003d new Todo(command.substring(5));","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(todoTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"alfredkohhh"},"content":"                } catch (StringIndexOutOfBoundsException noDescription) {","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.noDescriptionException();","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"alfredkohhh"},"content":"                command \u003d command.replace(\"deadline\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"alfredkohhh"},"content":"                String[] taskText \u003d command.split(\" /by\");","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); // Not working","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"alfredkohhh"},"content":"                    // Create a formatter with the formats","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"alfredkohhh"},"content":"                    DateTimeFormatter parser \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format1)","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format2)","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"alfredkohhh"},"content":"                            .appendOptional(format3)","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"alfredkohhh"},"content":"                            .toFormatter();","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"alfredkohhh"},"content":"                    LocalDate parsedDate \u003d LocalDate.parse(taskText[1].strip(),parser);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), parsedDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"alfredkohhh"},"content":"                    createDeadlineTask(deadlineTask, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"alfredkohhh"},"content":"                } catch(ArrayIndexOutOfBoundsException invalidDeadlineSyntax) {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.invalidDeadlineSyntax();","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"alfredkohhh"},"content":"                } catch(DateTimeParseException wrongDate) {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"alfredkohhh"},"content":"                    // This means that there is no date to be parsed, or incorrect format, so treat it as normal string","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), taskText[1].strip());","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"alfredkohhh"},"content":"                    createDeadlineTask(deadlineTask, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"event\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"alfredkohhh"},"content":"                    command \u003d command.replace(\"event\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d command.split(\" /at\");","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"alfredkohhh"},"content":"                    Event eventTask \u003d new Event(taskText[0].strip(), taskText[1].strip());","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(eventTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"alfredkohhh"},"content":"                } catch(ArrayIndexOutOfBoundsException invalidEventSyntax) {","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.invalidEventSyntax();","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"alfredkohhh"},"content":"            } else if(command.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"alfredkohhh"},"content":"                try {","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"alfredkohhh"},"content":"                    int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"alfredkohhh"},"content":"                    Task removedTask \u003d taskList.remove(value - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\" Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(removedTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"alfredkohhh"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"alfredkohhh"},"content":"                } catch (NumberFormatException noTaskNumber) {","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.noTaskNumber();","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"alfredkohhh"},"content":"                } catch (IndexOutOfBoundsException invalidTaskNumber) {","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"alfredkohhh"},"content":"                    dukeException.invalidTaskNumber();","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":114,"author":{"gitId":"alfredkohhh"},"content":"             } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"alfredkohhh"},"content":"                dukeException.noSuchTaskException();","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"alfredkohhh"},"content":"    // Reusable code for loading task into arrayList","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"alfredkohhh"},"content":"    public static void loadTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"alfredkohhh"},"content":"        String path \u003d \"src\\\\main\\\\java\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"alfredkohhh"},"content":"        path \u003d path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(path);","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"alfredkohhh"},"content":"            Scanner reader \u003d new Scanner(taskFile);","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"alfredkohhh"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"alfredkohhh"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"alfredkohhh"},"content":"                if(data.contains(\"(by:\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d data.split(\"\\\\(by:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"alfredkohhh"},"content":"                    StringBuilder sb \u003d new StringBuilder(taskText[1].strip());","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"alfredkohhh"},"content":"                    sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"alfredkohhh"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskText[0].strip(), sb.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"alfredkohhh"},"content":"                      if(data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"alfredkohhh"},"content":"                          deadlineTask.setDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"alfredkohhh"},"content":"                      }","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"alfredkohhh"},"content":"                } else if(data.contains(\"(at: \")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"alfredkohhh"},"content":"                    String[] taskText \u003d data.split(\"\\\\(at:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"alfredkohhh"},"content":"                    StringBuilder sb \u003d new StringBuilder(taskText[1].strip());","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"alfredkohhh"},"content":"                    sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"alfredkohhh"},"content":"                    Event eventTask \u003d new Event(taskText[0].strip(),sb.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"alfredkohhh"},"content":"                    if(data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"alfredkohhh"},"content":"                        eventTask.setDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"alfredkohhh"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"alfredkohhh"},"content":"                    data \u003d data.substring(9);","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"alfredkohhh"},"content":"                    Todo todoTask \u003d new Todo(data);","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"alfredkohhh"},"content":"                    if(data.contains(\"[X]\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"alfredkohhh"},"content":"                        todoTask.setDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"alfredkohhh"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"alfredkohhh"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"alfredkohhh"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException fileInvalid) {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"alfredkohhh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"alfredkohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"alfredkohhh"},"content":"    // Reusable code for writing into duke.txt task list","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"alfredkohhh"},"content":"    public static void writeToTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"alfredkohhh"},"content":"        String path \u003d \"src\\\\main\\\\java\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"alfredkohhh"},"content":"        path \u003d path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"alfredkohhh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"alfredkohhh"},"content":"            // Remove current file tasks","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"alfredkohhh"},"content":"            PrintWriter pw \u003d new PrintWriter(path);","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"alfredkohhh"},"content":"            pw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"alfredkohhh"},"content":"            File taskFile \u003d new File(path);","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"alfredkohhh"},"content":"            FileWriter myWriter \u003d new FileWriter(taskFile,true);","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"alfredkohhh"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"alfredkohhh"},"content":"                myWriter.write((i + 1) + \".\" + taskList.get(i).toString() + \"\\r\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"alfredkohhh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"alfredkohhh"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"alfredkohhh"},"content":"        } catch(NullPointerException | IOException fileInvalid) {","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"alfredkohhh"},"content":"            System.out.println(\"File is Invalid!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"alfredkohhh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"alfredkohhh"},"content":"    public static void createDeadlineTask(Deadline task, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"alfredkohhh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alfredkohhh":181,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"public class DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"    public void noSuchTaskException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"    public void noDescriptionException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    public void invalidDeadlineSyntax() {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! Your syntax for adding deadline task is wrong. \\r\\n Please follow the command: deadline \u003cDescription\u003e /by \u003cdd/mm/yyyy\u003e\");","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"    public void invalidEventSyntax() {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! Your syntax for adding event task is wrong. \\r\\n Please follow the command: event \u003cDescription\u003e /at \u003cDate/Time/DueDate/Place\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public void noTaskNumber() {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! There is no task number provided.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    public void invalidTaskNumber() {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"        System.out.println(\"☹ OOPS!!! The task number provided is not valid. Please use the \u0027list\u0027 command to view all your tasks.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":20}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"    protected String at;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"        this.at \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"        return super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"alfredkohhh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"alfredkohhh"},"content":"        return description;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"alfredkohhh"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"alfredkohhh"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"alfredkohhh"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"alfredkohhh"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"alfredkohhh"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"alfredkohhh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"alfredkohhh"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"alfredkohhh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"alfredkohhh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"alfredkohhh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":11}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"1.[D][ ] return book (by: 2 DECEMBER 2019)","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"2.[D][ ] return book (by: 20 DECEMBER 2019)","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"3.[E][ ] borrow book (at: library)","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"alfredkohhh":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfredkohhh"},"content":"todo read book","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"alfredkohhh"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"alfredkohhh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"alfredkohhh"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"alfredkohhh"},"content":"todo join sports club","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"alfredkohhh"},"content":"mark 4","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"alfredkohhh"},"content":"todo borrow book","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"alfredkohhh"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"alfredkohhh":8}}]
