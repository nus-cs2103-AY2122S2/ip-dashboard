[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"flairekq":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"T,1,read book","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"D,1,return book,2019-10-15","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"E,0,project meeting,Aug 6th 2-4pm","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"T,1,join sports club","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"E,0,reunion dinner,31 jan 6pm","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"D,0,assignment 1,2019-10-15","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":6}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import task.Todo;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":" * The AddCommand class is a type of Command that is used to add new task.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    public AddCommand(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        super(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * Executes the add command and adds the new task to the TaskList and stores it in the Storage as well.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If Storage is unable to save the new task successfully.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        Task t \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        switch (this.tokenizedCommand[0]) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"            t \u003d new Todo(this.command.substring(5));","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"            int indexOfBy \u003d command.indexOf(\"/by\");","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"            desc \u003d command.substring(9, indexOfBy - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"            String by \u003d command.substring(indexOfBy + 4);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"            t \u003d new Deadline(desc, by);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        case \"event\":","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"            int indexOfAt \u003d command.indexOf(\"/at\");","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"            desc \u003d command.substring(6, indexOfAt - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"            String at \u003d command.substring(indexOfAt + 4);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            t \u003d new Event(desc, at);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        tasks.addTask(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"        storage.updateSavedTasks(\"\", t.getSaveFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"        ui.printMsg(\"Got it. I\u0027ve added this task:\\n  \" + t + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":52}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":" * The Command class is an abstract class to represent an actual command by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    protected String command;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    protected String[] tokenizedCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    protected boolean isRun;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    public Command(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"        this.tokenizedCommand \u003d tokenizedCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"        this.isRun \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     * Executes the current command.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"    public boolean isRunProgram() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        return this.isRun;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":34}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":" * The DeleteCommand class is a type of Command that is used to delete a particular task.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    public DeleteCommand(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"        super(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * Executes the delete command and deletes the specified task from the TaskList and removes it in the Storage as well.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If Storage is unable to save the removal the task successfully.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        int index \u003d Integer.parseInt(this.tokenizedCommand[1]) - 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        Task t \u003d tasks.getTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        tasks.removeTask(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        storage.updateSavedTasks(t.getSaveFormat(), \"\");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        ui.printMsg(\"Noted. I\u0027ve removed this task:\\n  \" + t + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":32}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" * The ExitCommand class is a type of Command that is used to stop running the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    public ExitCommand(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        super(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     * Executes the exit command, displays the goodbye and stops running the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)  {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        this.isRun \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":26}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":" * The FindCommand class is a type of Command that is used to find the matching tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    public FindCommand(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"        super(command, tokenizedCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * Executes the find command and displays the list of tasks that matches the keyword.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        ArrayList\u003cTask\u003e tasksToBeFound \u003d tasks.findTasks(command.substring(5));","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        ui.printMsg(tasks.displayTasks(\"Here are the matching tasks in your list: \", tasksToBeFound, true));","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"flairekq":29}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" * The ListCommand class is a type of Command that is used to list the tasks saved.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    public ListCommand(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        super(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     * Executes the list command and displays the list of tasks saved.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        ui.printMsg(tasks.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":25}},{"path":"src/main/java/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":" * The UpdateCommand class is a type of Command that is used to update a particular task.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    public UpdateCommand(String command, String[] tokenizedCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"        super(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * Executes the update command and updates the specified task from the TaskList and updates it in the Storage as well.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * @param tasks TaskList that stores the current list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * @param ui Ui of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * @param storage Storage to store the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If Storage is unable to save the updated task successfully.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        int index \u003d Integer.parseInt(this.tokenizedCommand[1]) - 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        Task t \u003d tasks.getTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        String oldDetails \u003d t.getSaveFormat();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        String outputMsg \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        switch (this.tokenizedCommand[0]) {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"            t.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"            outputMsg \u003d \"Good job! I\u0027ve marked this task as done:\\n\" + t;","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"            t.markAsNotDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"            outputMsg \u003d \"Okay, I\u0027ve marked this task as not done yet:\\n\" + t;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        storage.updateSavedTasks(oldDetails, t.getSaveFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        ui.printMsg(outputMsg);","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" * The Duke class deals with running the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"            this.ui.showError(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"     * Runs the bot application until the user inputs the exit command.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    public void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"        boolean isRun \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        while (isRun) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"                String command \u003d this.ui.readCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"                Command c \u003d Parser.parse(command, this.tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"                isRun \u003d c.isRunProgram();","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"                this.ui.showError(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"flairekq":43,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":" * The DukeException class deals with identifying and throwing Exceptions unique to Duke.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    public DukeException() {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * Validates the inputs based on the command the user input and throws an error if there is invalid input","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * @param command             The command that the user inputs.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * @param commandSplitBySpace The user command separated by space.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * @param tasks               ArrayList of Tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If the inputs are not valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    public void validateInputs(String command, String[] commandSplitBySpace, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        switch (commandSplitBySpace[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        case \"find\":","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"            if (commandSplitBySpace.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"                throw new DukeException(\"☹ OOPS!!! The keyword to be searched cannot be empty.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"            if (commandSplitBySpace.length \u003e 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"                if (!tasks.hasTask(Integer.parseInt(commandSplitBySpace[1]) - 1)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"                    throw new DukeException(\"☹ OOPS!!! The task to be \" + commandSplitBySpace[0] + \"ed does not exist.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"                throw new DukeException(\"☹ OOPS!!! The task to be \" + commandSplitBySpace[0] + \"ed has to be indicated.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"            if (commandSplitBySpace.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"            if (commandSplitBySpace.length \u003e 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"                int indexOfBy \u003d command.indexOf(\"/by\");","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"                if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"                    throw new DukeException(\"☹ OOPS!!! The by of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"            if (commandSplitBySpace.length \u003e 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"                int indexOfAt \u003d command.indexOf(\"/at\");","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"                if (indexOfAt \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"                    throw new DukeException(\"☹ OOPS!!! The at of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"flairekq":75}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import command.AddCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import command.DeleteCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import command.ExitCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import command.FindCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import command.ListCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import command.UpdateCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" * The Parser class deals with making sense of the user command.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    public Parser() {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * Returns the user command categorized by the type of command.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     * @param command The user command that was input.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * @param tasks The TaskList containing the list of tasks saved.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * @return A type of Command based on the user input command.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If there are invalid inputs.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public static Command parse(String command, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        String[] tokenizedCommand \u003d command.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        new DukeException().validateInputs(command, tokenizedCommand, tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        Command c \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        switch (tokenizedCommand[0]) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"            c \u003d new ExitCommand(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        case \"list\":","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"            c \u003d new ListCommand(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"        case \"find\":","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"            c \u003d new FindCommand(command, tokenizedCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"            c \u003d new UpdateCommand(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        case \"event\":","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"            c \u003d new AddCommand(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"            c \u003d new DeleteCommand(command, tokenizedCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"        return c;","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":59}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":" * The Storage class deals with the loading and saving of tasks in the data file.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    private String filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    private ArrayList\u003cString\u003e content;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        this.content \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     * Loads the tasks saved in the data file.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     * @return An ArrayList of Task containing the saved tasks or an empty list if there are no tasks saved.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If there are issues accessing the data file.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"            this.content \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"                this.content.add(s.nextLine());","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"                String[] command \u003d this.content.get(this.content.size() - 1).split(\",\");","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"                Task t;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"                switch (command[0]) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"                case \"T\":","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"                    t \u003d new Todo(command[2]);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"                case \"D\":","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"                    t \u003d new Deadline(command[2], command[3]);","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"                case \"E\":","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"                    t \u003d new Event(command[2], command[3]);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"                default:","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"                    t \u003d new Task(\"placeholder task\");","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"                if (command[1].equals(\"1\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"                    t.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"                tasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"                File parentDir \u003d new File(\"./data\");","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"                parentDir.mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"                String fileName \u003d \"duke.txt\";","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"                File file \u003d new File(parentDir, fileName);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"                throw new DukeException(\"Something went wrong with creating a file to save the tasks\");","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        return tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"     * Updates the list of tasks saved in the data file.","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"     * @param oldDetails The current save format of the task to be updated.","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"     * @param updatedDetails The new save format of the task to be updated.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"     * @throws DukeException If there are issues accessing or writing to the data file .","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"    public void updateSavedTasks(String oldDetails, String updatedDetails) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"            FileWriter fw;","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"            if (oldDetails.isEmpty()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"                this.content.add(updatedDetails);","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"flairekq"},"content":"                fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"                fw.write(updatedDetails);","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"                fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"flairekq"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"flairekq"},"content":"                if (updatedDetails.isEmpty()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"                    int indexToRemoveAt \u003d 0;","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"flairekq"},"content":"                    for (int i \u003d 0; i \u003c this.content.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"flairekq"},"content":"                        if (!this.content.get(i).equals(oldDetails)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"                            sb.append(this.content.get(i) + System.lineSeparator());","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"flairekq"},"content":"                        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"flairekq"},"content":"                            indexToRemoveAt \u003d i;","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"flairekq"},"content":"                        }","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"                    this.content.remove(indexToRemoveAt);","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"                } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"                    for (int i \u003d 0; i \u003c this.content.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"flairekq"},"content":"                        if (this.content.get(i).equals(oldDetails)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"                            this.content.set(i, updatedDetails);","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"flairekq"},"content":"                        }","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"flairekq"},"content":"                        sb.append(this.content.get(i) + System.lineSeparator());","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"flairekq"},"content":"                fw.write(sb.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"            throw new DukeException(\"Something went wrong with saving the tasks\");","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":116}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":" * The Ui class deals with the interactions with the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    private Scanner sc;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * Displays the error message of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * @param errorMsg the error message to be displayed.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"        printMsg(errorMsg);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"     * Displays the welcome message of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        String welcome \u003d \"Hi! I\u0027m Ruby, How can I help you?\";","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        printMsg(welcome);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"     * Displays the goodbye message of the bot application.","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        this.sc.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        printMsg(\"Okay, bye! Hope to see you again :)\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"     * Prints the message that is parsed into this method with dividers.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"     * @param msg a String containing the message to be printed.","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    public void printMsg(String msg) {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"        String divider \u003d \"---------------------------------------------------------\";","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        System.out.println(msg);","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":56}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" * The Deadline class is a type of Task which is used to represent a task that has a deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * Returns the string representation of this deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * @return the string representation of this deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     * Returns the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"     * @return A String representing the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"        return \"D,\" + ((isDone ? \"1\" : \"0\")) + \",\" + super.getSaveFormat() + \",\" + this.by.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"flairekq":36}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":" * The Event class is a type of Task which is used to represent an event that happens at a certain date/time.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    protected String at;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"     * Returns the string representation of this event.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     * @return the string representation of this event.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * Returns the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     * @return A String representing the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        return \"E,\" + ((isDone ? \"1\" : \"0\")) + \",\" + super.getSaveFormat() + \",\" + this.at;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"flairekq":33}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":" *  The Task class represents an actual task to be completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     * Returns the status icon of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * @return \"X\" if this task is done, else returns \" \".","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"        // mark done task with X","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"     * Marks this task as not done.","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"     * Returns the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"     * @return A String representing the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"flairekq":57}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":" * The TaskList class is used to contain a list of tasks and methods to manipulate the tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    public boolean hasTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"        if (!(this.tasks.size() !\u003d 0 \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index - 1 \u003c tasks.size())) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    public void removeTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        this.tasks.remove(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    public ArrayList\u003cTask\u003e findTasks(String search) {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            if (this.getTask(i).description.contains(search)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"                found.add(this.getTask(i));","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"        return found;","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"    public String displayTasks(String startMsg, ArrayList\u003cTask\u003e tasks, boolean isFind) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"            StringBuilder sb \u003d new StringBuilder(startMsg + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"                if (i \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"                    sb.append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"                sb.append((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"            return sb.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"            if (isFind) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"                return \"There are no matching tasks.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"                return \"Your task list is empty.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"        return displayTasks(\"Here are the tasks in your list: \", this.tasks, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":76}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":" * The Todo class is a type of Task which is used to represent todo.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"     * Returns the string representation of this todo.","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"     * @return the string representation of this todo.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * Returns the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * @return A String representing the save format of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        return \"T,\" + ((isDone ? \"1\" : \"0\")) + \",\" + super.getSaveFormat();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"flairekq":30}},{"path":"test/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"class DeadlineTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"        Deadline d \u003d new Deadline(\"assignment 1\", \"2022-02-07\");","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        assertEquals(\"[D][ ] assignment 1 (by: Feb 07 2022)\", d.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    void getSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        Deadline d \u003d new Deadline(\"assignment 1\", \"2022-02-07\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"        assertEquals(\"D,0,assignment 1,2022-02-07\", d.getSaveFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":20}},{"path":"test/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"class EventTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"        Event e \u003d new Event(\"project meeting\", \"Sat 2pm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        assertEquals(\"[E][ ] project meeting (at: Sat 2pm)\", e.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    void getSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        Event e \u003d new Event(\"project meeting\", \"Sat 2pm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"        assertEquals(\"E,0,project meeting,Sat 2pm\", e.getSaveFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":20}},{"path":"test/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"class TodoTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"        Todo t \u003d new Todo(\"eat\");","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"        assertEquals(\"[T][ ] eat\", t.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    void getSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        Todo t \u003d new Todo(\"eat\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"        assertEquals(\"T,0,eat\", t.getSaveFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"flairekq":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"todo read book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"todo join sports club","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"flairekq":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"flairekq":1,"-":20}}]
