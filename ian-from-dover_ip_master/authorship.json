[{"path":"exception ideas.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":" * Need to create many kinds of LilyExceptions as children","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":" * LilyNoDescException - didn\u0027t type description kind","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":" * LilyNoDateException - didn\u0027t type /by and /at kind","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":" * LilyInvalidInputException - dont understand your input kind (doesn\u0027t match","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":" * enums)","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":" * LilyMissingTaskException - (un)marking (operating on) an uncreated task","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":" * LilyRedundantOpException - marking a marked task, unmarking an unmarked task","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":" * (you already marked this, silly!)","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":" * ask on forum what is the best way to do this","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":" * https://nus-cs2030s.github.io/2021-s2/19-exception.html","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":12}},{"path":"personality.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"// Characterisation from: https://www.springhole.net/writing/writing-lovable-jerks.htm","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"        // and from https://www.springhole.net/writing/ways-to-fill-out-and-humanize-your-character.htm","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"        // and quality control from https://www.springhole.net/writing/character-playability-test.htm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"        /**","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"         * Lily\u0027s reason for being here: her part time job. school sucks but not as bad as home or here.","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"         * oh, hold on a sec, someone else is asking me for a coffee or soemthing","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"         *","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"         * tension with parents - holes up in room when she gets back. has to hold back what she wants to say in order","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"         * cuz she doesn\u0027t think they care about her, or want to know her.","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"         * ignores about being the most attractive person","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"         * doesn\u0027t really want to help you, i can\u0027t be doing all the heavy lifting, right?","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"         * have irritating users. and some who are just mean or spiteful","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"         *","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"         * make her a hero: personal sacrifice to help you, or take risk and prevail","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"         * she won\u0027t take social initiative","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"         * one good thing lily helped someone else with","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"         * one thing lily feels good about herself","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"         * embarrassing thing lily did in the past","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"         * someone intro her to fun adventures but she doesn\u0027t want to go, went anyway","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"         *","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"         * would never intro her father to her friends, cuz he\u0027d say something insensitive","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"         * put real, strenuous and even frustrating effort into getting the important stuff done. setbacks and snags along the way","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"         * looked unkempt and mussed up for boring reasons","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"         * character\u0027s emotions","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"         *","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"         * attached to a personal object","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"         */","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ian-from-dover":27}},{"path":"src/main/java/lily/Lily.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.LilyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":" * Main class which runs an interactive CLI-based chatbot which manages your todos","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"public class Lily {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"    public Lily(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"            } finally {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"                ui.showLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ian-from-dover"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ian-from-dover"},"content":"        new Lily(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ian-from-dover"},"content":"    private static final String indent \u003d \"    \";","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e list;","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"ian-from-dover"},"content":"    private enum Cmd {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"ian-from-dover"},"content":"        EXIT, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, REMOVE, INVALID","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e load(String filePath) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"ian-from-dover"},"content":"        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"ian-from-dover"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"ian-from-dover"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"ian-from-dover"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"ian-from-dover"},"content":"            LinkedList\u003cTask\u003e read \u003d (LinkedList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"ian-from-dover"},"content":"            ois.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"ian-from-dover"},"content":"            fis.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"ian-from-dover"},"content":"            result \u003d read;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"ian-from-dover"},"content":"        } catch (ClassNotFoundException c) {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"ian-from-dover"},"content":"           System.out.println(\"Class not found\");","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"ian-from-dover"},"content":"            c.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"ian-from-dover"},"content":"        } ","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"ian-from-dover"},"content":"        return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"ian-from-dover"},"content":"    private static void save(String filePath, LinkedList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"ian-from-dover"},"content":"        FileOutputStream fos \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"ian-from-dover"},"content":"        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"ian-from-dover"},"content":"        oos.writeObject(list);","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"ian-from-dover"},"content":"        oos.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"ian-from-dover"},"content":"        fos.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"ian-from-dover"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"ian-from-dover"},"content":"        String saveFilePath \u003d \"data/list.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"ian-from-dover"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"ian-from-dover"},"content":"        // welcome message","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"ian-from-dover"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██╗     ██╗██╗     ██╗   ██╗\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║     ╚██╗ ██╔╝\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║      ╚████╔╝ \\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║       ╚██╔╝  \\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"ian-from-dover"},"content":"                \"    ███████╗██║███████╗   ██║   \\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"ian-from-dover"},"content":"                \"    ╚══════╝╚═╝╚══════╝   ╚═╝   \\n\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"ian-from-dover"},"content":"        String welcomeMessage \u003d logo;","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"ian-from-dover"},"content":"        // load saved state if any","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"ian-from-dover"},"content":"            // import saved data to list","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d load(saveFilePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"ian-from-dover"},"content":"            // welcome user back","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"sup, welcome back\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"here\u0027s your list from the last time\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"ian-from-dover"},"content":"                    + printList();","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"ian-from-dover"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"ian-from-dover"},"content":"            File dataFolder \u003d new File(\"/data\");","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"ian-from-dover"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"ian-from-dover"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"ian-from-dover"},"content":"            // welcome new user message","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"ian-from-dover"},"content":"            errorPretty(indent + \"oh bother, another new one\");","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"hey.\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"i don\u0027t really wanna track your tasks,\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"but i guess i have no choice (っ◞‸◟c)\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"need help with something?\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"Things you can type\\n\" + listCommands();","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"ian-from-dover"},"content":"        } finally {","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"ian-from-dover"},"content":"            prettyPrint(welcomeMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":131,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"ian-from-dover"},"content":"        // Lily accepts inputs from user","lastModifiedDate":"2022-01-21"},{"lineNumber":135,"author":{"gitId":"ian-from-dover"},"content":"        userInteracting: while (true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"ian-from-dover"},"content":"            String sentence \u003d userInput.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"ian-from-dover"},"content":"            String[] parsedSentence \u003d sentence.split(\" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"ian-from-dover"},"content":"            String command \u003d parsedSentence[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"ian-from-dover"},"content":"            Cmd action; ","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"ian-from-dover"},"content":"            switch (command) {","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"ian-from-dover"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EXIT;","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"ian-from-dover"},"content":"            case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.LIST;","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"ian-from-dover"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.MARK;","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"ian-from-dover"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.UNMARK;","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"ian-from-dover"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.TODO;","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"ian-from-dover"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.DEADLINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"ian-from-dover"},"content":"            case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EVENT;","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"ian-from-dover"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"ian-from-dover"},"content":"            case \"remove\":","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.REMOVE;","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.INVALID;","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"ian-from-dover"},"content":"            switch (action) {","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"ian-from-dover"},"content":"            case EXIT:","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"ian-from-dover"},"content":"                String exitMsg \u003d \"finally. what took you so long? (´-ω-`)\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"ian-from-dover"},"content":"                    if (!list.isEmpty()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"ian-from-dover"},"content":"                        save(saveFilePath, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"ian-from-dover"},"content":"                        exitMsg +\u003d indent + \"oh, i\u0027ve saved your list as well\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"ian-from-dover"},"content":"                                + indent + \"i\u0027ll bring it up for you next time. bye\";","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"ian-from-dover"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"ian-from-dover"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(exitMsg);","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"ian-from-dover"},"content":"                break userInteracting;","lastModifiedDate":"2022-01-20"},{"lineNumber":184,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":185,"author":{"gitId":"ian-from-dover"},"content":"            case LIST:","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"ian-from-dover"},"content":"                if (list.isEmpty()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"there\u0027s nothing in the list bro\");","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"ian-from-dover"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"you told me you had to\\n\" + printList());","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":192,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":193,"author":{"gitId":"ian-from-dover"},"content":"            case MARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"ian-from-dover"},"content":"                int addIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-21"},{"lineNumber":196,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you cant mark something that isn\u0027t there\");","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (already marked)","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you\u0027ve already finished this","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-21"},{"lineNumber":202,"author":{"gitId":"ian-from-dover"},"content":"                list.get(addIdx).mark();","lastModifiedDate":"2022-01-21"},{"lineNumber":203,"author":{"gitId":"ian-from-dover"},"content":"                String markMsg \u003d \"oh. you\u0027ve finished it. okay\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":204,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (addIdx + 1) + \".\"","lastModifiedDate":"2022-01-21"},{"lineNumber":205,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(addIdx).toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":206,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(markMsg);","lastModifiedDate":"2022-01-21"},{"lineNumber":207,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":208,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":209,"author":{"gitId":"ian-from-dover"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"ian-from-dover"},"content":"                int delIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":211,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-21"},{"lineNumber":212,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-23"},{"lineNumber":213,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you can\u0027t unmark something thaj isn\u0027t there\");","lastModifiedDate":"2022-01-23"},{"lineNumber":214,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (not marked yet)","lastModifiedDate":"2022-01-23"},{"lineNumber":215,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you havent done this","lastModifiedDate":"2022-01-23"},{"lineNumber":216,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-26"},{"lineNumber":217,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-21"},{"lineNumber":218,"author":{"gitId":"ian-from-dover"},"content":"                list.get(delIdx).unmark();","lastModifiedDate":"2022-01-21"},{"lineNumber":219,"author":{"gitId":"ian-from-dover"},"content":"                String unmarkMsg \u003d \"hey, you gotta get it done later, okay?\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":220,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (delIdx + 1) + \".\"","lastModifiedDate":"2022-01-21"},{"lineNumber":221,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(delIdx).toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":222,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(unmarkMsg);","lastModifiedDate":"2022-01-21"},{"lineNumber":223,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":224,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":225,"author":{"gitId":"ian-from-dover"},"content":"            case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":227,"author":{"gitId":"ian-from-dover"},"content":"                    Todo t \u003d new Todo(findTodoDescStart(sentence));","lastModifiedDate":"2022-01-26"},{"lineNumber":228,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(t);","lastModifiedDate":"2022-01-23"},{"lineNumber":229,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(t);","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) {","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Todo description cannot be empty!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":234,"author":{"gitId":"ian-from-dover"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-26"},{"lineNumber":236,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/by\" (byIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /by bro, try again\"","lastModifiedDate":"2022-01-26"},{"lineNumber":238,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"ian-from-dover"},"content":"                        throw new error you didnt type a description man, try again","lastModifiedDate":"2022-01-26"},{"lineNumber":240,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-26"},{"lineNumber":241,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":242,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedDeadline \u003d findDeadlineDescStart(sentence);","lastModifiedDate":"2022-01-26"},{"lineNumber":243,"author":{"gitId":"ian-from-dover"},"content":"                    Deadline d \u003d new Deadline(parsedDeadline[0], parsedDeadline[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":244,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(d);","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(d);","lastModifiedDate":"2022-01-23"},{"lineNumber":246,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/by\" error","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Deadline description cannot be empty!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":250,"author":{"gitId":"ian-from-dover"},"content":"            // broken, can\u0027t detect /at","lastModifiedDate":"2022-01-26"},{"lineNumber":251,"author":{"gitId":"ian-from-dover"},"content":"            case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-26"},{"lineNumber":253,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/at\" (atIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-26"},{"lineNumber":254,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /at bro, try again\"","lastModifiedDate":"2022-01-26"},{"lineNumber":255,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-26"},{"lineNumber":256,"author":{"gitId":"ian-from-dover"},"content":"                        throew new error you didnt type a description man, try again","lastModifiedDate":"2022-01-26"},{"lineNumber":257,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-26"},{"lineNumber":258,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":259,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedEvent \u003d findEventDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":260,"author":{"gitId":"ian-from-dover"},"content":"                    Event e \u003d new Event(parsedEvent[0], parsedEvent[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":261,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(e);","lastModifiedDate":"2022-01-23"},{"lineNumber":262,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(e);","lastModifiedDate":"2022-01-23"},{"lineNumber":263,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/at\" error","lastModifiedDate":"2022-01-23"},{"lineNumber":264,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Event description cannot be empty!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":265,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":266,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":267,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":268,"author":{"gitId":"ian-from-dover"},"content":"            case REMOVE:","lastModifiedDate":"2022-01-23"},{"lineNumber":269,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":270,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"hmph. then why did you make me track your\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":271,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + list.remove(Integer.parseInt(parsedSentence[1]) - 1)","lastModifiedDate":"2022-01-23"},{"lineNumber":272,"author":{"gitId":"ian-from-dover"},"content":"                            + \"\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":273,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + \"anyway, now you\u0027re left with\\n\" + printList());","lastModifiedDate":"2022-01-23"},{"lineNumber":274,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IndexOutOfBoundsException e) { // new error: catch no int input also","lastModifiedDate":"2022-01-23"},{"lineNumber":275,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"eh bro your list is shorter than that\");","lastModifiedDate":"2022-01-23"},{"lineNumber":276,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":277,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":278,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":280,"author":{"gitId":"ian-from-dover"},"content":"                errorPretty(\"sorry i don\u0027t understand what you meant by\\n\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":281,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + sentence + \"\\n\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":282,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + \"you can try these instead:\\n\" + listCommands());","lastModifiedDate":"2022-01-23"},{"lineNumber":283,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":284,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":285,"author":{"gitId":"ian-from-dover"},"content":"        userInput.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":286,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":287,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":288,"author":{"gitId":"ian-from-dover"},"content":"    private static String findTodoDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-26"},{"lineNumber":289,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":290,"author":{"gitId":"ian-from-dover"},"content":"            return s.substring(5); // \"todo \" is 5 char long","lastModifiedDate":"2022-01-26"},{"lineNumber":291,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":292,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":293,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":294,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":295,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":296,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findDeadlineDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-26"},{"lineNumber":297,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-26"},{"lineNumber":298,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":299,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(9, s.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":300,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-26"},{"lineNumber":301,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":302,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":303,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":304,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":305,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":306,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":307,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findEventDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-26"},{"lineNumber":308,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-26"},{"lineNumber":309,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":310,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(6, s.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":311,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/at\") + 4); // different exception is thrown if indexOf cant find /at","lastModifiedDate":"2022-01-26"},{"lineNumber":312,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-26"},{"lineNumber":313,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":314,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":315,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":316,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":317,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-21"},{"lineNumber":318,"author":{"gitId":"ian-from-dover"},"content":"    protected static String printList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":319,"author":{"gitId":"ian-from-dover"},"content":"        String listMsg \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":320,"author":{"gitId":"ian-from-dover"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":321,"author":{"gitId":"ian-from-dover"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":322,"author":{"gitId":"ian-from-dover"},"content":"            listMsg +\u003d indent + i + \".\"","lastModifiedDate":"2022-01-23"},{"lineNumber":323,"author":{"gitId":"ian-from-dover"},"content":"                    + t.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":324,"author":{"gitId":"ian-from-dover"},"content":"                    + (i \u003d\u003d list.size() ? \"\" : \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":325,"author":{"gitId":"ian-from-dover"},"content":"            i++;","lastModifiedDate":"2022-01-23"},{"lineNumber":326,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":327,"author":{"gitId":"ian-from-dover"},"content":"        return listMsg;","lastModifiedDate":"2022-01-23"},{"lineNumber":328,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":329,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":330,"author":{"gitId":"ian-from-dover"},"content":"    protected static String listCommands() {","lastModifiedDate":"2022-01-23"},{"lineNumber":331,"author":{"gitId":"ian-from-dover"},"content":"        return indent + \"\u003e todo: record a task which has no date\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":332,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e event: note an event with its date after /at\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":333,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e deadline: note something with its date after /by\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":334,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e list: show what you have to do\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":335,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e mark: indicate which numbered task you completed\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":336,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e unmark: indicate which task you havent completed\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":337,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e bye: stop talking with Lily\";","lastModifiedDate":"2022-01-23"},{"lineNumber":338,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":339,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":340,"author":{"gitId":"ian-from-dover"},"content":"    protected static void taskAddedMsg(Task t) {","lastModifiedDate":"2022-01-23"},{"lineNumber":341,"author":{"gitId":"ian-from-dover"},"content":"        String no \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2022-01-23"},{"lineNumber":342,"author":{"gitId":"ian-from-dover"},"content":"        prettyPrint(\"i\u0027ve dumped this into your list:\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":343,"author":{"gitId":"ian-from-dover"},"content":"                + indent + t.toString() + \"\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":344,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"so now you have \" + list.size() + no + \"happening. hope you\u0027re happy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":345,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":346,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":347,"author":{"gitId":"ian-from-dover"},"content":"    protected static void prettyPrint(String s) {","lastModifiedDate":"2022-01-23"},{"lineNumber":348,"author":{"gitId":"ian-from-dover"},"content":"        System.out.println(\"\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":349,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":350,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":351,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":352,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":353,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":354,"author":{"gitId":"ian-from-dover"},"content":"    protected static void errorPretty(String s) {","lastModifiedDate":"2022-01-23"},{"lineNumber":355,"author":{"gitId":"ian-from-dover"},"content":"        System.err.println(\"\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":356,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":357,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":358,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":359,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":360,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ian-from-dover":360}},{"path":"src/main/java/lily/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.LilyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":" * Makes sense of commands input by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"    private static final String indent \u003d \"    \";","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e list;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"    private enum Cmd {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"        EXIT, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, REMOVE, INVALID","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e load(String filePath) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"            LinkedList\u003cTask\u003e read \u003d (LinkedList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"            ois.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"            fis.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"            result \u003d read;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"        } catch (ClassNotFoundException c) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"           System.out.println(\"Class not found\");","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"            c.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"        } ","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ian-from-dover"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ian-from-dover"},"content":"    private static void save(String filePath, LinkedList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ian-from-dover"},"content":"        FileOutputStream fos \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ian-from-dover"},"content":"        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ian-from-dover"},"content":"        oos.writeObject(list);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ian-from-dover"},"content":"        oos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ian-from-dover"},"content":"        fos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ian-from-dover"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ian-from-dover"},"content":"        String saveFilePath \u003d \"data/list.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ian-from-dover"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ian-from-dover"},"content":"        // welcome message","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ian-from-dover"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██╗     ██╗██╗     ██╗   ██╗\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║     ╚██╗ ██╔╝\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║      ╚████╔╝ \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║       ╚██╔╝  \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ian-from-dover"},"content":"                \"    ███████╗██║███████╗   ██║   \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ian-from-dover"},"content":"                \"    ╚══════╝╚═╝╚══════╝   ╚═╝   \\n\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ian-from-dover"},"content":"        String welcomeMessage \u003d logo;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ian-from-dover"},"content":"        // load saved state if any","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ian-from-dover"},"content":"            // import saved data to list","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d load(saveFilePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ian-from-dover"},"content":"            // welcome user back","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"sup, welcome back\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"here\u0027s your list from the last time\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"ian-from-dover"},"content":"                    + printList();","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"ian-from-dover"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"ian-from-dover"},"content":"            File dataFolder \u003d new File(\"/data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"ian-from-dover"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"ian-from-dover"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"ian-from-dover"},"content":"            // welcome new user message","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"ian-from-dover"},"content":"            errorPretty(indent + \"oh bother, another new one\");","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"hey.\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"i don\u0027t really wanna track your tasks,\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"but i guess i have no choice (っ◞‸◟c)\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"need help with something?\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"Things you can type\\n\" + listCommands();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"ian-from-dover"},"content":"        } finally {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"ian-from-dover"},"content":"            prettyPrint(welcomeMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"ian-from-dover"},"content":"        // Lily accepts inputs from user","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"ian-from-dover"},"content":"        userInteracting: while (true) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"ian-from-dover"},"content":"            String sentence \u003d userInput.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"ian-from-dover"},"content":"            String[] parsedSentence \u003d sentence.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"ian-from-dover"},"content":"            String command \u003d parsedSentence[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"ian-from-dover"},"content":"            Cmd action; ","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"ian-from-dover"},"content":"            switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"ian-from-dover"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EXIT;","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"ian-from-dover"},"content":"            case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"ian-from-dover"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"ian-from-dover"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"ian-from-dover"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"ian-from-dover"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"ian-from-dover"},"content":"            case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"ian-from-dover"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"ian-from-dover"},"content":"            case \"remove\":","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.REMOVE;","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.INVALID;","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"ian-from-dover"},"content":"            switch (action) {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"ian-from-dover"},"content":"            case EXIT:","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"ian-from-dover"},"content":"                String exitMsg \u003d \"finally. what took you so long? (´-ω-`)\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"ian-from-dover"},"content":"                    if (!list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"ian-from-dover"},"content":"                        save(saveFilePath, list);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"ian-from-dover"},"content":"                        exitMsg +\u003d indent + \"oh, i\u0027ve saved your list as well\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"ian-from-dover"},"content":"                                + indent + \"i\u0027ll bring it up for you next time. bye\";","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"ian-from-dover"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"ian-from-dover"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(exitMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"ian-from-dover"},"content":"                break userInteracting;","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"ian-from-dover"},"content":"            case LIST:","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"ian-from-dover"},"content":"                if (list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"there\u0027s nothing in the list bro\");","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"ian-from-dover"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"you told me you had to\\n\" + printList());","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"ian-from-dover"},"content":"            case MARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"ian-from-dover"},"content":"                int addIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you cant mark something that isn\u0027t there\");","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (already marked)","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you\u0027ve already finished this","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"ian-from-dover"},"content":"                list.get(addIdx).mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"ian-from-dover"},"content":"                String markMsg \u003d \"oh. you\u0027ve finished it. okay\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (addIdx + 1) + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(addIdx).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(markMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"ian-from-dover"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"ian-from-dover"},"content":"                int delIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you can\u0027t unmark something thaj isn\u0027t there\");","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (not marked yet)","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you havent done this","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"ian-from-dover"},"content":"                list.get(delIdx).unmark();","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"ian-from-dover"},"content":"                String unmarkMsg \u003d \"hey, you gotta get it done later, okay?\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (delIdx + 1) + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(delIdx).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(unmarkMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"ian-from-dover"},"content":"            case TODO:","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"ian-from-dover"},"content":"                    Todo t \u003d new Todo(findTodoDescStart(sentence));","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) {","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Todo description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"ian-from-dover"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/by\" (byIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /by bro, try again\"","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"ian-from-dover"},"content":"                        throw new error you didnt type a description man, try again","lastModifiedDate":"2022-01-27"},{"lineNumber":209,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedDeadline \u003d findDeadlineDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"ian-from-dover"},"content":"                    Deadline d \u003d new Deadline(parsedDeadline[0], parsedDeadline[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(d);","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(d);","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/by\" error","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Deadline description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":219,"author":{"gitId":"ian-from-dover"},"content":"            // broken, can\u0027t detect /at","lastModifiedDate":"2022-01-27"},{"lineNumber":220,"author":{"gitId":"ian-from-dover"},"content":"            case EVENT:","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/at\" (atIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-27"},{"lineNumber":223,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /at bro, try again\"","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"ian-from-dover"},"content":"                        throew new error you didnt type a description man, try again","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedEvent \u003d findEventDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":229,"author":{"gitId":"ian-from-dover"},"content":"                    Event e \u003d new Event(parsedEvent[0], parsedEvent[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":232,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/at\" error","lastModifiedDate":"2022-01-27"},{"lineNumber":233,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Event description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":234,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":235,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":236,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":237,"author":{"gitId":"ian-from-dover"},"content":"            case REMOVE:","lastModifiedDate":"2022-01-27"},{"lineNumber":238,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":239,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"hmph. then why did you make me track your\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":240,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + list.remove(Integer.parseInt(parsedSentence[1]) - 1)","lastModifiedDate":"2022-01-27"},{"lineNumber":241,"author":{"gitId":"ian-from-dover"},"content":"                            + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":242,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + \"anyway, now you\u0027re left with\\n\" + printList());","lastModifiedDate":"2022-01-27"},{"lineNumber":243,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IndexOutOfBoundsException e) { // new error: catch no int input also","lastModifiedDate":"2022-01-27"},{"lineNumber":244,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"eh bro your list is shorter than that\");","lastModifiedDate":"2022-01-27"},{"lineNumber":245,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":246,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":247,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":248,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":249,"author":{"gitId":"ian-from-dover"},"content":"                errorPretty(\"sorry i don\u0027t understand what you meant by\\n\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":250,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + sentence + \"\\n\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":251,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + \"you can try these instead:\\n\" + listCommands());","lastModifiedDate":"2022-01-27"},{"lineNumber":252,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":253,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":254,"author":{"gitId":"ian-from-dover"},"content":"        userInput.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":255,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":256,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":257,"author":{"gitId":"ian-from-dover"},"content":"    private static String findTodoDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":258,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":259,"author":{"gitId":"ian-from-dover"},"content":"            return s.substring(5); // \"todo \" is 5 char long","lastModifiedDate":"2022-01-27"},{"lineNumber":260,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":261,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":262,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":263,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":264,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":265,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findDeadlineDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":266,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":267,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":268,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(9, s.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":269,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":270,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":271,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":272,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":273,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":274,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":275,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":276,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findEventDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":277,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":278,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":279,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(6, s.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":280,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/at\") + 4); // different exception is thrown if indexOf cant find /at","lastModifiedDate":"2022-01-27"},{"lineNumber":281,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":282,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":283,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":284,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":285,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":286,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":287,"author":{"gitId":"ian-from-dover"},"content":"    protected static String printList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":288,"author":{"gitId":"ian-from-dover"},"content":"        String listMsg \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":289,"author":{"gitId":"ian-from-dover"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":290,"author":{"gitId":"ian-from-dover"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":291,"author":{"gitId":"ian-from-dover"},"content":"            listMsg +\u003d indent + i + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":292,"author":{"gitId":"ian-from-dover"},"content":"                    + t.toString()","lastModifiedDate":"2022-01-27"},{"lineNumber":293,"author":{"gitId":"ian-from-dover"},"content":"                    + (i \u003d\u003d list.size() ? \"\" : \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":294,"author":{"gitId":"ian-from-dover"},"content":"            i++;","lastModifiedDate":"2022-01-27"},{"lineNumber":295,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":296,"author":{"gitId":"ian-from-dover"},"content":"        return listMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":297,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":298,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":299,"author":{"gitId":"ian-from-dover"},"content":"    protected static String listCommands() {","lastModifiedDate":"2022-01-27"},{"lineNumber":300,"author":{"gitId":"ian-from-dover"},"content":"        return indent + \"\u003e todo: record a task which has no date\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":301,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e event: note an event with its date after /at\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":302,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e deadline: note something with its date after /by\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":303,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e list: show what you have to do\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":304,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e mark: indicate which numbered task you completed\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":305,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e unmark: indicate which task you havent completed\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":306,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e bye: stop talking with Lily\";","lastModifiedDate":"2022-01-27"},{"lineNumber":307,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":308,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":309,"author":{"gitId":"ian-from-dover"},"content":"    protected static void taskAddedMsg(Task t) {","lastModifiedDate":"2022-01-27"},{"lineNumber":310,"author":{"gitId":"ian-from-dover"},"content":"        String no \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2022-01-27"},{"lineNumber":311,"author":{"gitId":"ian-from-dover"},"content":"        prettyPrint(\"i\u0027ve dumped this into your list:\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":312,"author":{"gitId":"ian-from-dover"},"content":"                + indent + t.toString() + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":313,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"so now you have \" + list.size() + no + \"happening. hope you\u0027re happy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":314,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":315,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":316,"author":{"gitId":"ian-from-dover"},"content":"    protected static void prettyPrint(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":317,"author":{"gitId":"ian-from-dover"},"content":"        System.out.println(\"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":318,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":319,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":320,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":321,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":322,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":323,"author":{"gitId":"ian-from-dover"},"content":"    protected static void errorPretty(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":324,"author":{"gitId":"ian-from-dover"},"content":"        System.err.println(\"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":325,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":326,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":327,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":328,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":329,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":329}},{"path":"src/main/java/lily/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":" * Loads and Saves the Task list from the savefile.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"    private String filePath \u003d \"data/list.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"     * Create a new Storage manager.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"     * @param fp The filepath to load from and save to","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"    public Storage(String fp) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"        filePath \u003d fp;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"     * Returns a LinkedList from reading the savefile.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"     * @return Saved tasks in the savefile.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"     * @throws IOException If there is no savefile or a problem arose.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"    public LinkedList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"            LinkedList\u003cTask\u003e read \u003d (LinkedList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"            ois.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"            fis.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"            result \u003d read;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"        } catch (ClassNotFoundException c) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ian-from-dover"},"content":"           System.out.println(\"Class not found\");","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ian-from-dover"},"content":"            c.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ian-from-dover"},"content":"        } ","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ian-from-dover"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ian-from-dover"},"content":"     * Writes the Tasklist to a file.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ian-from-dover"},"content":"     * @param list The Tasklist to be exported.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ian-from-dover"},"content":"     * @throws IOException If a problem arose.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ian-from-dover"},"content":"    public void save(LinkedList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ian-from-dover"},"content":"        if (!list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ian-from-dover"},"content":"            File dataFolder \u003d new File(\"/data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ian-from-dover"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ian-from-dover"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ian-from-dover"},"content":"            FileOutputStream fos \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ian-from-dover"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ian-from-dover"},"content":"            oos.writeObject(list);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ian-from-dover"},"content":"            oos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ian-from-dover"},"content":"            fos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":72}},{"path":"src/main/java/lily/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.LilyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":" * Contains the list of Tasks and all the operations on them.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":" * Can list, mark and unmark, add, and remove tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e list;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"     * Creates a new TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"    public TaskList() throws LilyException { // why throw?","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"        list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"     * Creates a new TaskList from the data in the savefile.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"     * @param loadedData The TaskList from the savefile.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"     * @throws LilyException idk why who","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"    public TaskList(LinkedList\u003cTask\u003e loadedData) throws LilyException { // why throw?","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"        list \u003d loadedData;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"    // add all the functions which interact with tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e load(String filePath) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ian-from-dover"},"content":"        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ian-from-dover"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ian-from-dover"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ian-from-dover"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ian-from-dover"},"content":"            LinkedList\u003cTask\u003e read \u003d (LinkedList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ian-from-dover"},"content":"            ois.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ian-from-dover"},"content":"            fis.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ian-from-dover"},"content":"            result \u003d read;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ian-from-dover"},"content":"        } catch (ClassNotFoundException c) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ian-from-dover"},"content":"           System.out.println(\"Class not found\");","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ian-from-dover"},"content":"            c.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ian-from-dover"},"content":"        } ","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ian-from-dover"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ian-from-dover"},"content":"    private static void save(String filePath, LinkedList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ian-from-dover"},"content":"        FileOutputStream fos \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ian-from-dover"},"content":"        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ian-from-dover"},"content":"        oos.writeObject(list);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ian-from-dover"},"content":"        oos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ian-from-dover"},"content":"        fos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ian-from-dover"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ian-from-dover"},"content":"        String saveFilePath \u003d \"data/list.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ian-from-dover"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ian-from-dover"},"content":"        // welcome message","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ian-from-dover"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██╗     ██╗██╗     ██╗   ██╗\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║     ╚██╗ ██╔╝\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║      ╚████╔╝ \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║       ╚██╔╝  \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"ian-from-dover"},"content":"                \"    ███████╗██║███████╗   ██║   \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"ian-from-dover"},"content":"                \"    ╚══════╝╚═╝╚══════╝   ╚═╝   \\n\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"ian-from-dover"},"content":"        String welcomeMessage \u003d logo;","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"ian-from-dover"},"content":"        // load saved state if any","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"ian-from-dover"},"content":"            // import saved data to list","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d load(saveFilePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"ian-from-dover"},"content":"            // welcome user back","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"sup, welcome back\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"here\u0027s your list from the last time\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"ian-from-dover"},"content":"                    + printList();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"ian-from-dover"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"ian-from-dover"},"content":"            File dataFolder \u003d new File(\"/data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"ian-from-dover"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"ian-from-dover"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"ian-from-dover"},"content":"            // welcome new user message","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"ian-from-dover"},"content":"            errorPretty(indent + \"oh bother, another new one\");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"hey.\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"i don\u0027t really wanna track your tasks,\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"but i guess i have no choice (っ◞‸◟c)\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"need help with something?\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"Things you can type\\n\" + listCommands();","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"ian-from-dover"},"content":"        } finally {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"ian-from-dover"},"content":"            prettyPrint(welcomeMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"ian-from-dover"},"content":"        // Lily accepts inputs from user","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"ian-from-dover"},"content":"        userInteracting: while (true) {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"ian-from-dover"},"content":"            String sentence \u003d userInput.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"ian-from-dover"},"content":"            String[] parsedSentence \u003d sentence.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"ian-from-dover"},"content":"            String command \u003d parsedSentence[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"ian-from-dover"},"content":"            Cmd action; ","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"ian-from-dover"},"content":"            switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"ian-from-dover"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EXIT;","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"ian-from-dover"},"content":"            case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"ian-from-dover"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ian-from-dover"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"ian-from-dover"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"ian-from-dover"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"ian-from-dover"},"content":"            case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"ian-from-dover"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"ian-from-dover"},"content":"            case \"remove\":","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.REMOVE;","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.INVALID;","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"ian-from-dover"},"content":"            switch (action) {","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"ian-from-dover"},"content":"            case EXIT:","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"ian-from-dover"},"content":"                String exitMsg \u003d \"finally. what took you so long? (´-ω-`)\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"ian-from-dover"},"content":"                    if (!list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"ian-from-dover"},"content":"                        save(saveFilePath, list);","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"ian-from-dover"},"content":"                        exitMsg +\u003d indent + \"oh, i\u0027ve saved your list as well\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"ian-from-dover"},"content":"                                + indent + \"i\u0027ll bring it up for you next time. bye\";","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"ian-from-dover"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"ian-from-dover"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(exitMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"ian-from-dover"},"content":"                break userInteracting;","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"ian-from-dover"},"content":"            case LIST:","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"ian-from-dover"},"content":"                if (list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"there\u0027s nothing in the list bro\");","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"ian-from-dover"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"you told me you had to\\n\" + printList());","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"ian-from-dover"},"content":"            case MARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"ian-from-dover"},"content":"                int addIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you cant mark something that isn\u0027t there\");","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (already marked)","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you\u0027ve already finished this","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"ian-from-dover"},"content":"                list.get(addIdx).mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"ian-from-dover"},"content":"                String markMsg \u003d \"oh. you\u0027ve finished it. okay\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (addIdx + 1) + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(addIdx).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(markMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"ian-from-dover"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"ian-from-dover"},"content":"                int delIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you can\u0027t unmark something thaj isn\u0027t there\");","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (not marked yet)","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you havent done this","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"ian-from-dover"},"content":"                list.get(delIdx).unmark();","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"ian-from-dover"},"content":"                String unmarkMsg \u003d \"hey, you gotta get it done later, okay?\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (delIdx + 1) + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(delIdx).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(unmarkMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":209,"author":{"gitId":"ian-from-dover"},"content":"            case TODO:","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"ian-from-dover"},"content":"                    Todo t \u003d new Todo(findTodoDescStart(sentence));","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) {","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Todo description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"ian-from-dover"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":219,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":220,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/by\" (byIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /by bro, try again\"","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-27"},{"lineNumber":223,"author":{"gitId":"ian-from-dover"},"content":"                        throw new error you didnt type a description man, try again","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedDeadline \u003d findDeadlineDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"ian-from-dover"},"content":"                    Deadline d \u003d new Deadline(parsedDeadline[0], parsedDeadline[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(d);","lastModifiedDate":"2022-01-27"},{"lineNumber":229,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(d);","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/by\" error","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Deadline description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":232,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":233,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":234,"author":{"gitId":"ian-from-dover"},"content":"            // broken, can\u0027t detect /at","lastModifiedDate":"2022-01-27"},{"lineNumber":235,"author":{"gitId":"ian-from-dover"},"content":"            case EVENT:","lastModifiedDate":"2022-01-27"},{"lineNumber":236,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":237,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/at\" (atIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-27"},{"lineNumber":238,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /at bro, try again\"","lastModifiedDate":"2022-01-27"},{"lineNumber":239,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-27"},{"lineNumber":240,"author":{"gitId":"ian-from-dover"},"content":"                        throew new error you didnt type a description man, try again","lastModifiedDate":"2022-01-27"},{"lineNumber":241,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-27"},{"lineNumber":242,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":243,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedEvent \u003d findEventDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":244,"author":{"gitId":"ian-from-dover"},"content":"                    Event e \u003d new Event(parsedEvent[0], parsedEvent[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":245,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":246,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":247,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/at\" error","lastModifiedDate":"2022-01-27"},{"lineNumber":248,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Event description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":249,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":250,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":251,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":252,"author":{"gitId":"ian-from-dover"},"content":"            case REMOVE:","lastModifiedDate":"2022-01-27"},{"lineNumber":253,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":254,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"hmph. then why did you make me track your\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":255,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + list.remove(Integer.parseInt(parsedSentence[1]) - 1)","lastModifiedDate":"2022-01-27"},{"lineNumber":256,"author":{"gitId":"ian-from-dover"},"content":"                            + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":257,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + \"anyway, now you\u0027re left with\\n\" + printList());","lastModifiedDate":"2022-01-27"},{"lineNumber":258,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IndexOutOfBoundsException e) { // new error: catch no int input also","lastModifiedDate":"2022-01-27"},{"lineNumber":259,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"eh bro your list is shorter than that\");","lastModifiedDate":"2022-01-27"},{"lineNumber":260,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":261,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":262,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":263,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":264,"author":{"gitId":"ian-from-dover"},"content":"                errorPretty(\"sorry i don\u0027t understand what you meant by\\n\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":265,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + sentence + \"\\n\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":266,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + \"you can try these instead:\\n\" + listCommands());","lastModifiedDate":"2022-01-27"},{"lineNumber":267,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":268,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":269,"author":{"gitId":"ian-from-dover"},"content":"        userInput.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":270,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":271,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":272,"author":{"gitId":"ian-from-dover"},"content":"    private static String findTodoDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":273,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":274,"author":{"gitId":"ian-from-dover"},"content":"            return s.substring(5); // \"todo \" is 5 char long","lastModifiedDate":"2022-01-27"},{"lineNumber":275,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":276,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":277,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":278,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":279,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":280,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findDeadlineDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":281,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":282,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":283,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(9, s.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":284,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":285,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":286,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":287,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":288,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":289,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":290,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":291,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findEventDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":292,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":293,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":294,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(6, s.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":295,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/at\") + 4); // different exception is thrown if indexOf cant find /at","lastModifiedDate":"2022-01-27"},{"lineNumber":296,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":297,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":298,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":299,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":300,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":301,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":302,"author":{"gitId":"ian-from-dover"},"content":"    protected static String printList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":303,"author":{"gitId":"ian-from-dover"},"content":"        String listMsg \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":304,"author":{"gitId":"ian-from-dover"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":305,"author":{"gitId":"ian-from-dover"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":306,"author":{"gitId":"ian-from-dover"},"content":"            listMsg +\u003d indent + i + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":307,"author":{"gitId":"ian-from-dover"},"content":"                    + t.toString()","lastModifiedDate":"2022-01-27"},{"lineNumber":308,"author":{"gitId":"ian-from-dover"},"content":"                    + (i \u003d\u003d list.size() ? \"\" : \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":309,"author":{"gitId":"ian-from-dover"},"content":"            i++;","lastModifiedDate":"2022-01-27"},{"lineNumber":310,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":311,"author":{"gitId":"ian-from-dover"},"content":"        return listMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":312,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":313,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":314,"author":{"gitId":"ian-from-dover"},"content":"    protected static String listCommands() {","lastModifiedDate":"2022-01-27"},{"lineNumber":315,"author":{"gitId":"ian-from-dover"},"content":"        return indent + \"\u003e todo: record a task which has no date\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":316,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e event: note an event with its date after /at\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":317,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e deadline: note something with its date after /by\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":318,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e list: show what you have to do\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":319,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e mark: indicate which numbered task you completed\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":320,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e unmark: indicate which task you havent completed\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":321,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e bye: stop talking with Lily\";","lastModifiedDate":"2022-01-27"},{"lineNumber":322,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":323,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":324,"author":{"gitId":"ian-from-dover"},"content":"    protected static void taskAddedMsg(Task t) {","lastModifiedDate":"2022-01-27"},{"lineNumber":325,"author":{"gitId":"ian-from-dover"},"content":"        String no \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2022-01-27"},{"lineNumber":326,"author":{"gitId":"ian-from-dover"},"content":"        prettyPrint(\"i\u0027ve dumped this into your list:\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":327,"author":{"gitId":"ian-from-dover"},"content":"                + indent + t.toString() + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":328,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"so now you have \" + list.size() + no + \"happening. hope you\u0027re happy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":329,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":330,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":331,"author":{"gitId":"ian-from-dover"},"content":"    protected static void prettyPrint(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":332,"author":{"gitId":"ian-from-dover"},"content":"        System.out.println(\"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":333,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":334,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":335,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":336,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":337,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":338,"author":{"gitId":"ian-from-dover"},"content":"    protected static void errorPretty(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":339,"author":{"gitId":"ian-from-dover"},"content":"        System.err.println(\"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":340,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":341,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":342,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":343,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":344,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":344}},{"path":"src/main/java/lily/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.LilyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"import lily.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":" * Deals with all the interactions with the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"    private static final String indent \u003d \"    \";","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e list;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"    private enum Cmd {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"        EXIT, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, REMOVE, INVALID","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"    private static LinkedList\u003cTask\u003e load(String filePath) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"            LinkedList\u003cTask\u003e read \u003d (LinkedList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"            ois.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"            fis.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"            result \u003d read;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"        } catch (ClassNotFoundException c) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"           System.out.println(\"Class not found\");","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"            c.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"        } ","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ian-from-dover"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ian-from-dover"},"content":"    private static void save(String filePath, LinkedList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ian-from-dover"},"content":"        FileOutputStream fos \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ian-from-dover"},"content":"        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ian-from-dover"},"content":"        oos.writeObject(list);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ian-from-dover"},"content":"        oos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ian-from-dover"},"content":"        fos.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ian-from-dover"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ian-from-dover"},"content":"        String saveFilePath \u003d \"data/list.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ian-from-dover"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ian-from-dover"},"content":"        // welcome message","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ian-from-dover"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██╗     ██╗██╗     ██╗   ██╗\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║     ╚██╗ ██╔╝\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║      ╚████╔╝ \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ian-from-dover"},"content":"                \"    ██║     ██║██║       ╚██╔╝  \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ian-from-dover"},"content":"                \"    ███████╗██║███████╗   ██║   \\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ian-from-dover"},"content":"                \"    ╚══════╝╚═╝╚══════╝   ╚═╝   \\n\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ian-from-dover"},"content":"        String welcomeMessage \u003d logo;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ian-from-dover"},"content":"        // load saved state if any","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ian-from-dover"},"content":"            // import saved data to list","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d load(saveFilePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ian-from-dover"},"content":"            // welcome user back","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"sup, welcome back\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"here\u0027s your list from the last time\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"ian-from-dover"},"content":"                    + printList();","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"ian-from-dover"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"ian-from-dover"},"content":"            File dataFolder \u003d new File(\"/data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"ian-from-dover"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"ian-from-dover"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"ian-from-dover"},"content":"            list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"ian-from-dover"},"content":"            // welcome new user message","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"ian-from-dover"},"content":"            errorPretty(indent + \"oh bother, another new one\");","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"ian-from-dover"},"content":"            welcomeMessage +\u003d indent + \"hey.\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"i don\u0027t really wanna track your tasks,\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"but i guess i have no choice (っ◞‸◟c)\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"need help with something?\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"ian-from-dover"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"ian-from-dover"},"content":"                    + indent + \"Things you can type\\n\" + listCommands();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"ian-from-dover"},"content":"        } finally {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"ian-from-dover"},"content":"            prettyPrint(welcomeMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"ian-from-dover"},"content":"        // Lily accepts inputs from user","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"ian-from-dover"},"content":"        userInteracting: while (true) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"ian-from-dover"},"content":"            String sentence \u003d userInput.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"ian-from-dover"},"content":"            String[] parsedSentence \u003d sentence.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"ian-from-dover"},"content":"            String command \u003d parsedSentence[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"ian-from-dover"},"content":"            Cmd action; ","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"ian-from-dover"},"content":"            switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"ian-from-dover"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EXIT;","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"ian-from-dover"},"content":"            case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"ian-from-dover"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"ian-from-dover"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"ian-from-dover"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"ian-from-dover"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"ian-from-dover"},"content":"            case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"ian-from-dover"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"ian-from-dover"},"content":"            case \"remove\":","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.REMOVE;","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"ian-from-dover"},"content":"                action \u003d Cmd.INVALID;","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"ian-from-dover"},"content":"            switch (action) {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"ian-from-dover"},"content":"            case EXIT:","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"ian-from-dover"},"content":"                String exitMsg \u003d \"finally. what took you so long? (´-ω-`)\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"ian-from-dover"},"content":"                    if (!list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"ian-from-dover"},"content":"                        save(saveFilePath, list);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"ian-from-dover"},"content":"                        exitMsg +\u003d indent + \"oh, i\u0027ve saved your list as well\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"ian-from-dover"},"content":"                                + indent + \"i\u0027ll bring it up for you next time. bye\";","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"ian-from-dover"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"ian-from-dover"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(exitMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"ian-from-dover"},"content":"                break userInteracting;","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"ian-from-dover"},"content":"            case LIST:","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"ian-from-dover"},"content":"                if (list.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"there\u0027s nothing in the list bro\");","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"ian-from-dover"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"you told me you had to\\n\" + printList());","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"ian-from-dover"},"content":"            case MARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"ian-from-dover"},"content":"                int addIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you cant mark something that isn\u0027t there\");","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (already marked)","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you\u0027ve already finished this","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"ian-from-dover"},"content":"                list.get(addIdx).mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"ian-from-dover"},"content":"                String markMsg \u003d \"oh. you\u0027ve finished it. okay\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (addIdx + 1) + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(addIdx).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(markMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"ian-from-dover"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"ian-from-dover"},"content":"                int delIdx \u003d Integer.parseInt(parsedSentence[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"ian-from-dover"},"content":"                    * if (list.isEmpty())","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new Error(\"you can\u0027t unmark something thaj isn\u0027t there\");","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"ian-from-dover"},"content":"                    * else if (not marked yet)","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"ian-from-dover"},"content":"                    * throw new error you havent done this","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"ian-from-dover"},"content":"                    * if input doesn\u0027t have an int, ask which number you want to mark also.","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"ian-from-dover"},"content":"                    */","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"ian-from-dover"},"content":"                list.get(delIdx).unmark();","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"ian-from-dover"},"content":"                String unmarkMsg \u003d \"hey, you gotta get it done later, okay?\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + (delIdx + 1) + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"ian-from-dover"},"content":"                        + list.get(delIdx).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"ian-from-dover"},"content":"                prettyPrint(unmarkMsg);","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"ian-from-dover"},"content":"            case TODO:","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"ian-from-dover"},"content":"                    Todo t \u003d new Todo(findTodoDescStart(sentence));","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) {","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Todo description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"ian-from-dover"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/by\" (byIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /by bro, try again\"","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"ian-from-dover"},"content":"                        throw new error you didnt type a description man, try again","lastModifiedDate":"2022-01-27"},{"lineNumber":209,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedDeadline \u003d findDeadlineDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"ian-from-dover"},"content":"                    Deadline d \u003d new Deadline(parsedDeadline[0], parsedDeadline[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(d);","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(d);","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/by\" error","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Deadline description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":219,"author":{"gitId":"ian-from-dover"},"content":"            // broken, can\u0027t detect /at","lastModifiedDate":"2022-01-27"},{"lineNumber":220,"author":{"gitId":"ian-from-dover"},"content":"            case EVENT:","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"ian-from-dover"},"content":"                /*","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"ian-from-dover"},"content":"                    if user didn\u0027t type \"/at\" (atIdx \u003d\u003d -1)","lastModifiedDate":"2022-01-27"},{"lineNumber":223,"author":{"gitId":"ian-from-dover"},"content":"                        throw new Error \"you didnt\u0027 type /at bro, try again\"","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"ian-from-dover"},"content":"                    if user didnt\u0027 type a desc","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"ian-from-dover"},"content":"                        throew new error you didnt type a description man, try again","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"ian-from-dover"},"content":"                */","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"ian-from-dover"},"content":"                    String[] parsedEvent \u003d findEventDescStart(sentence);","lastModifiedDate":"2022-01-27"},{"lineNumber":229,"author":{"gitId":"ian-from-dover"},"content":"                    Event e \u003d new Event(parsedEvent[0], parsedEvent[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"ian-from-dover"},"content":"                    list.add(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"ian-from-dover"},"content":"                    taskAddedMsg(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":232,"author":{"gitId":"ian-from-dover"},"content":"                } catch (LilyException le) { // need catch \"no-/at\" error","lastModifiedDate":"2022-01-27"},{"lineNumber":233,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"Event description cannot be empty!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":234,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":235,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":236,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":237,"author":{"gitId":"ian-from-dover"},"content":"            case REMOVE:","lastModifiedDate":"2022-01-27"},{"lineNumber":238,"author":{"gitId":"ian-from-dover"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":239,"author":{"gitId":"ian-from-dover"},"content":"                    prettyPrint(\"hmph. then why did you make me track your\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":240,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + list.remove(Integer.parseInt(parsedSentence[1]) - 1)","lastModifiedDate":"2022-01-27"},{"lineNumber":241,"author":{"gitId":"ian-from-dover"},"content":"                            + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":242,"author":{"gitId":"ian-from-dover"},"content":"                            + indent + \"anyway, now you\u0027re left with\\n\" + printList());","lastModifiedDate":"2022-01-27"},{"lineNumber":243,"author":{"gitId":"ian-from-dover"},"content":"                } catch (IndexOutOfBoundsException e) { // new error: catch no int input also","lastModifiedDate":"2022-01-27"},{"lineNumber":244,"author":{"gitId":"ian-from-dover"},"content":"                    errorPretty(\"eh bro your list is shorter than that\");","lastModifiedDate":"2022-01-27"},{"lineNumber":245,"author":{"gitId":"ian-from-dover"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":246,"author":{"gitId":"ian-from-dover"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":247,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":248,"author":{"gitId":"ian-from-dover"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":249,"author":{"gitId":"ian-from-dover"},"content":"                errorPretty(\"sorry i don\u0027t understand what you meant by\\n\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":250,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + sentence + \"\\n\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":251,"author":{"gitId":"ian-from-dover"},"content":"                        + indent + \"you can try these instead:\\n\" + listCommands());","lastModifiedDate":"2022-01-27"},{"lineNumber":252,"author":{"gitId":"ian-from-dover"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":253,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":254,"author":{"gitId":"ian-from-dover"},"content":"        userInput.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":255,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":256,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":257,"author":{"gitId":"ian-from-dover"},"content":"    private static String findTodoDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":258,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":259,"author":{"gitId":"ian-from-dover"},"content":"            return s.substring(5); // \"todo \" is 5 char long","lastModifiedDate":"2022-01-27"},{"lineNumber":260,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":261,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":262,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":263,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":264,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":265,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findDeadlineDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":266,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":267,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":268,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(9, s.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":269,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":270,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":271,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":272,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":273,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":274,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":275,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":276,"author":{"gitId":"ian-from-dover"},"content":"    private static String[] findEventDescStart(String s) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":277,"author":{"gitId":"ian-from-dover"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":278,"author":{"gitId":"ian-from-dover"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":279,"author":{"gitId":"ian-from-dover"},"content":"            result[0] \u003d s.substring(6, s.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":280,"author":{"gitId":"ian-from-dover"},"content":"            result[1] \u003d s.substring(s.indexOf(\"/at\") + 4); // different exception is thrown if indexOf cant find /at","lastModifiedDate":"2022-01-27"},{"lineNumber":281,"author":{"gitId":"ian-from-dover"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":282,"author":{"gitId":"ian-from-dover"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":283,"author":{"gitId":"ian-from-dover"},"content":"            throw new LilyException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":284,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":285,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":286,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":287,"author":{"gitId":"ian-from-dover"},"content":"    protected static String printList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":288,"author":{"gitId":"ian-from-dover"},"content":"        String listMsg \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":289,"author":{"gitId":"ian-from-dover"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":290,"author":{"gitId":"ian-from-dover"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":291,"author":{"gitId":"ian-from-dover"},"content":"            listMsg +\u003d indent + i + \".\"","lastModifiedDate":"2022-01-27"},{"lineNumber":292,"author":{"gitId":"ian-from-dover"},"content":"                    + t.toString()","lastModifiedDate":"2022-01-27"},{"lineNumber":293,"author":{"gitId":"ian-from-dover"},"content":"                    + (i \u003d\u003d list.size() ? \"\" : \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":294,"author":{"gitId":"ian-from-dover"},"content":"            i++;","lastModifiedDate":"2022-01-27"},{"lineNumber":295,"author":{"gitId":"ian-from-dover"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":296,"author":{"gitId":"ian-from-dover"},"content":"        return listMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":297,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":298,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":299,"author":{"gitId":"ian-from-dover"},"content":"    protected static String listCommands() {","lastModifiedDate":"2022-01-27"},{"lineNumber":300,"author":{"gitId":"ian-from-dover"},"content":"        return indent + \"\u003e todo: record a task which has no date\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":301,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e event: note an event with its date after /at\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":302,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e deadline: note something with its date after /by\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":303,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e list: show what you have to do\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":304,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e mark: indicate which numbered task you completed\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":305,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e unmark: indicate which task you havent completed\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":306,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"\u003e bye: stop talking with Lily\";","lastModifiedDate":"2022-01-27"},{"lineNumber":307,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":308,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":309,"author":{"gitId":"ian-from-dover"},"content":"    protected static void taskAddedMsg(Task t) {","lastModifiedDate":"2022-01-27"},{"lineNumber":310,"author":{"gitId":"ian-from-dover"},"content":"        String no \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2022-01-27"},{"lineNumber":311,"author":{"gitId":"ian-from-dover"},"content":"        prettyPrint(\"i\u0027ve dumped this into your list:\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":312,"author":{"gitId":"ian-from-dover"},"content":"                + indent + t.toString() + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":313,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"so now you have \" + list.size() + no + \"happening. hope you\u0027re happy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":314,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":315,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":316,"author":{"gitId":"ian-from-dover"},"content":"    protected static void prettyPrint(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":317,"author":{"gitId":"ian-from-dover"},"content":"        System.out.println(\"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":318,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":319,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":320,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":321,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":322,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":323,"author":{"gitId":"ian-from-dover"},"content":"    protected static void errorPretty(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":324,"author":{"gitId":"ian-from-dover"},"content":"        System.err.println(\"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":325,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":326,"author":{"gitId":"ian-from-dover"},"content":"                + indent + s + \"\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":327,"author":{"gitId":"ian-from-dover"},"content":"                + indent + \"▼＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝▼\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":328,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":329,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":329}},{"path":"src/main/java/lily/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":" * A Task which records the time when it is due as a LocalDate","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"     * Create a Deadline object.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"     * @param s The description of what is due","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"     * @param by When the task is due, in the format of \"yyyy-mm-dd\"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"    public Deadline(String s, String by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"     * Returns the Deadline as a String ","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"     * @return Deadline in the form of \"[D][ ] Description (by: due)\"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"} ","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":33}},{"path":"src/main/java/lily/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":" * A Task which records the time of the event","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"    protected String at;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"     * Create a Event object.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"     * @param s The description of what is happening","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"     * @param at When the event is happening","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"    public Event(String s, String at) throws LilyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"     * Returns the Event as a String ","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"     * @return Deadline in the form of \"[E][ ] Description (at: due)\"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"} ","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":31}},{"path":"src/main/java/lily/task/LilyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":" * Exceptions thrown by Lily-related functions","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":" * Author: Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":" * Last Updated: Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"public class LilyException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"    public LilyException(String msg) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"        super(msg);","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"        return \"error message bro\";","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":18}},{"path":"src/main/java/lily/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":" * A parent class which Todo, Events and Deadlines derive from","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"public class Task implements Serializable{","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"    protected String desc;    ","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"    protected boolean isDone;    ","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"     * Create a Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"     * @param desc What the Task is about.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"    public Task(String desc) {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"     * Mark the task as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"    public void mark() {","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"     * Mark the task as undone.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \";","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"     * Returns the Task\u0027s description and whether it is done","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"     * @return Task in the form of \"[ ] Description\"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"        return this.getStatusIcon() + this.desc;","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"ian-from-dover"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"ian-from-dover":49}},{"path":"src/main/java/lily/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"package lily.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":" * A simple Task which only contains a description","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":" * ","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":" * @author Hong Yi En, Ian","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":" * @version Jan 2022 (AY21/22 Sem 2)","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"     * Create a Todo object.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"     * @param s The description of what is due","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"    public Todo(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"     * Returns the Todo as a String ","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"     * @return Todo in the form of \"[T][ ] Description\"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"} ","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ian-from-dover":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"todo Work on Level-5","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"deadline Work on Level-6 /by Mon 2pm","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"event CS4240 group meeting /at Wed 4pm","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"mark 2","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"mark 1","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"unmark 2","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"bye","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"ian-from-dover":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/lily/*.java","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"java -classpath ../bin Lily \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ian-from-dover":2,"-":36}}]
