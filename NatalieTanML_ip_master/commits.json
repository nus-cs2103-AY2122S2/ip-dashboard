{"authorDailyContributionsMap":{"NatalieTanML":[{"date":"2022-01-15","commitResults":[{"hash":"fadbc64dc37a3bf2a2ef9780def3f0731f1f5fbc","messageTitle":"Implemented Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":6}}},{"hash":"0ad5ea53632e9621e95118bea4498d1faadfee53","messageTitle":"Implemented Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":8}}}]},{"date":"2022-01-16","commitResults":[{"hash":"5b912a9f60dd0e1f5e7a6ace214b71afa6569423","messageTitle":"Added Task class","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"cca220b55c7a80da3ae5e7e4cee2cd38f6ae6e70","messageTitle":"Implemented marking tasks as done/undone","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":35}}},{"hash":"78d4607643888f80911e510ab848c415ae885a94","messageTitle":"Abstracted code out of switch into methods","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":19}}},{"hash":"d6fbd587bd5fc0d8d29f936d852286dfc12d7a82","messageTitle":"Added inheritence to support multiple task types","messageBody":"Implemented Todo, Deadline and Event classes\n\nUpdated Task to be abstract\n","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":1}}},{"hash":"2ce2576da20d69ba6ee10b90f7202e585daa0ec8","messageTitle":"Implemented support for tracking diff. task types","messageBody":"Implemented Todos, Deadlines and Events in Duke\n\nFormatted/cleaned up code\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":23}}},{"hash":"7e77a60579fcfea0c7c5d490da34f59d68f2b655","messageTitle":"Implemented automated Text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"java":{"insertions":6,"deletions":6},"bat":{"insertions":0,"deletions":0},"sh":{"insertions":0,"deletions":0}}},{"hash":"364bcb6963273ef998dae51dab4ffe91558d7007","messageTitle":"Added DukeException class","messageBody":"Moved Task-related classes into task package\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"1477c91698b1098206df3a07e01da9db0a376c63","messageTitle":"Import task packages","messageBody":"Set packages\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":2}}},{"hash":"c12cf3f4de9fb8d98881a0e6539e1b7985a75e13","messageTitle":"Implemented error handling","messageBody":"","tags":["Level-5","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":136,"deletions":57}}},{"hash":"44bc6673974a3c542d5c7510d34753842751fa7c","messageTitle":"Implemented support for deleting tasks","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":12}}}]},{"date":"2022-01-20","commitResults":[{"hash":"00cdd4a905ff0fddddbf5cd343ab3044d2d2dd33","messageTitle":"Added input command enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":28}}}]},{"date":"2022-01-24","commitResults":[{"hash":"35527feee76df5b5ef75a09adf3c058c725ad0b4","messageTitle":"Update indentation for switch cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":28}}},{"hash":"0c4b4b5cf456da28eacd473836dd8edcdd267810","messageTitle":"Implement local data saving and retrieval","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":17}}},{"hash":"644f6dac29af02195c387d9b7b0c0904ddb78358","messageTitle":"Implement datetime parsing of deadlines and events","messageBody":"Currently, Jarvis does not do any validation for the dates in\ndeadline and event tasks. This allows users to enter non-date inputs\nas the date for such tasks.\n\nBy providing datetime parsing, this allows Jarvis to do validation on\nthe input and could be extended into other features in the future.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":9}}}]},{"date":"2022-01-25","commitResults":[{"hash":"c0cc166e7ab3004e4ef9a757f200454a705df30e","messageTitle":"Rename program to Jarvis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":46},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}}]},{"date":"2022-01-26","commitResults":[{"hash":"d13ae07b87d311d8543c3160774f39ecdc2f6427","messageTitle":"Abstract UI functionality into Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":37}}},{"hash":"745df8579e61d8b643eab16a78daa9274aa7268b","messageTitle":"Abstract Task related methods into TaskList class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":4},"java":{"insertions":195,"deletions":179},"sh":{"insertions":1,"deletions":1}}},{"hash":"d6b099d8f5061158b4bf0b7acd256506f1311bbc","messageTitle":"Abstract data storage handling into Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":58}}},{"hash":"c91a28e47b2912c15dd9ffc5d8dabc9334d578a2","messageTitle":"Abstract input parsing functions into Parser class","messageBody":"","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":126}}},{"hash":"ae04e5325f3e18191f62a416f22d78f813037ce0","messageTitle":"Implement JUnit tests for Parser","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":0}}}]},{"date":"2022-01-27","commitResults":[{"hash":"9b886056706b714e0cf2f3f3286effe346f90eba","messageTitle":"Add JavaDocs to methods and classes","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":3}}},{"hash":"cd28af871a8a82423762ec53c1be0311b176deaa","messageTitle":"Implement find command that allows task searching","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":4}}},{"hash":"acbc9773f49516bfa92d8b306d616883b4950e62","messageTitle":"Clean up code to comply with coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}}]},{"date":"2022-01-31","commitResults":[{"hash":"3f7efe124d13ace2bc3e31674b5ea408979fa315","messageTitle":"Add gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":3}}},{"hash":"3c024ccbfd10170a655ff3bf72330e7b28b09667","messageTitle":"Refactor code to adhere to checkstyle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":49,"deletions":34},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"3d210b6999af32e5f97d5724e0f5e10744328ab9","messageTitle":"Implement first iteration of GUI for Jarvis","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":167,"deletions":15}}}]},{"date":"2022-02-01","commitResults":[{"hash":"afb6e0f96460237d0aa7936ebd6b8e3299b0107c","messageTitle":"Implement working GUI with Jarvis","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":67}}},{"hash":"424d8a0fd78609c632c562ee0270aad9a11b2453","messageTitle":"Edit code to adhere to checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}}]},{"date":"2022-02-08","commitResults":[{"hash":"1d9508bb4fc2ddcb89595e78f7501ffb7de8500b","messageTitle":"Add assertions to DialogBox, MainWindow, Storage","messageBody":"Some of these methods use variables (either private or local) that are\nassumed to be not null.\n\nCurrently, there are no additional checks done to ensure that these variables\nare valid apart from general try-catch clauses.\n\nUsing assert statements ensure that the code will not run into exceptions\nduring runtime.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":16}}},{"hash":"2b3aeb6c6689b37e21b958a7eb1cc2b3be8368f2","messageTitle":"Improve code quality and add comments","messageBody":"Certain variable names such as `processNext` and `tasks` were not\ncompliant with the recommended coding standard. Some methods and classes\ndid not have the proper Javadoc header comments as well.\n\nBy renaming those variables to `hasNext` and `taskList`, it follows the\nJava coding standard more closely. Adding comments to the Enum class and\nother methods gives other users/readers a better understanding on what\nthe code does as well.\n","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":43}}},{"hash":"6ba4313bbdb37c157f862d24b97c565649f692fd","messageTitle":"Implement snooze command for deadlines and events","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":21}}}]},{"date":"2022-02-13","commitResults":[{"hash":"d3898c40a3ee52ae95926f7e2fc157d8ffdca7ff","messageTitle":"Implement rounded images and proper shutdown","messageBody":"","tags":["A-Release","A-BetterGui"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"48eed7b7a93e25639528778f1c5ccc4791589ea1","messageTitle":"Implement user guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":96,"deletions":13}}},{"hash":"724e507b8fc48f9a13c2dc6ac07601be738e6ff4","messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"NatalieTanML":{"java":1035,"md":88,"fxml":35,"sh":1,"bat":1,"gradle":17,"txt":14}},"authorContributionVariance":{"NatalieTanML":42240.844},"authorDisplayNameMap":{"NatalieTanML":"CS2103T-T13-3 TAN ..ALIE"}}
