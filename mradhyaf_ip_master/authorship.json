[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"    mainClassName \u003d \"kenobi.Launcher\"","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"    archiveBaseName \u003d \"kenobi\"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mradhyaf":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"# Kenobi User Guide","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"Kenobi is a chatbot to manage tasks written in Java and JavaFX.","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"- Quick Start","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"- Features","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"  - Adding Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"  - Reading Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"  - Marking Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"  - Deleting Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"  - Saving Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"## Quick Start","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"1. Download Kenobi jar file","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"2. Make sure you have Java 11 installed","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"3. Run Kenobi jar file","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"### Adding Tasks ","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"There are three types of tasks that kenobi recognizes: `todo`, `deadline`, and `event`","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"`todo` is a task that can be marked as done","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"syntax: `todo [taskname]`","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"`deadline` is a task that can be marked as done and have a `/by` date","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"syntax: `deadline [taskname] /by [date]`","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"`event` is a task that can be marked as done and have an `/at` date","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"syntax: `event [taskname] /at [date]`","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"Accepted `[date]` formats:","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"- `[YYYY]-[MM]-[DD]` (e.g. `2022-02-01` means 1 February 2022)","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"- `next [day of the week]` (e.g. `next monday` means the next monday)","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"#### Usage examples","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"Adding a todo named \"Implement clickable Task\":","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"```todo Implement clickable Task```","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"Adding a deadline named \"CS2103T 2nd milestone\" which is due next friday:","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"```deadline CS2103T 2nd milestone /by next friday```","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"Adding an event named \"Google internship interview\" at 5th March 2022:","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"```event Google internship interview /at 2022-03-05```","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"### Reading Tasks ","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"There are currently 2 commands to read tasks: `list` and `find` ","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"`list` lists all of your tasks known by Kenobi","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"syntax: `list`","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"`find` finds all of the tasks in the list containing a given term","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"syntax: `find [term]`","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"#### Usage examples","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"Listing all of my tasks:","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"```list```","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"Finding my tasks that contains the word \"Google interview\":","lastModifiedDate":"2022-02-21"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"```find Google interview```","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"### Marking Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"To mark a task as done, use `mark` and use `unmark` to undo it.","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"`mark` marks a selected task as done","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"syntax: `mark [index]`","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"`unmark` removes the mark of a task","lastModifiedDate":"2022-02-21"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"syntax: `unmark [index]`","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"`[index]` follows the task number shown by `list`","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"#### Usage examples","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"Marking my first todo as done:","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"```mark 1```","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"mradhyaf"},"content":"Removes the mark of my first todo:","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"mradhyaf"},"content":"```unmark 1```","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"mradhyaf"},"content":"### Deleting Tasks `delete`","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"mradhyaf"},"content":"To delete a task, use `delete`.","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"mradhyaf"},"content":"`delete` deletes a selected task","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"mradhyaf"},"content":"syntax: `delete [index]`","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"mradhyaf"},"content":"#### Example usage","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"mradhyaf"},"content":"Deleting my first task:","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"mradhyaf"},"content":"```delete 1```","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"mradhyaf"},"content":"### Saving Tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":90,"author":{"gitId":"mradhyaf"},"content":"Kenobi saves the user\u0027s task on exit either on closing application or using the command `bye`","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"mradhyaf"},"content":"`bye` Saves the user tasks and exits the application","lastModifiedDate":"2022-02-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"mradhyaf"},"content":"#### Example usage","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"mradhyaf"},"content":"Saving and exiting Kenobi:","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"mradhyaf"},"content":"```bye```","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"mradhyaf":70,"-":26}},{"path":"src/main/java/kenobi/Kenobi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.Command;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.ExitCommand;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import kenobi.parser.ParseException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import kenobi.parser.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import kenobi.storage.LoadStorageException;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"import kenobi.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"/**ip [run]","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":" * The Kenobi program implements a chatbot that manages a list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"public class Kenobi {","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    private static final String GREETING_MSG \u003d \"Hello there, my name is Kenobi. How may I serve you?\";","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    private String response;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    private boolean isTerminated;","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"     * Constructs an instance of Kenobi with the specified save path for storage.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"     * @param savePath The path that directs to the storage that Kenobi uses.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"    public Kenobi(String savePath) {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"        storage \u003d new Storage(savePath);","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"     * Initializes the instance of Kenobi.","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"    public void init() {","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"            response \u003d GREETING_MSG;","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"        } catch (LoadStorageException e) {","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"    public String greet() {","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"        return GREETING_MSG;","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"     * Executes the command input.","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"     * The commands will first be parsed by Parser then executed.","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"    public void executeCommand(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"            Command cmd \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"            cmd.setData(tasks, storage);","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"            response \u003d cmd.execute();","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"            if (cmd instanceof ExitCommand) {","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"                isTerminated \u003d true;","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"    public String getResponse() {","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"        return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"mradhyaf"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"mradhyaf"},"content":"        return isTerminated;","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"mradhyaf":78}},{"path":"src/main/java/kenobi/KenobiApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"import kenobi.ui.MainWindow;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"public class KenobiApp extends Application {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    private Kenobi kenobi \u003d new Kenobi(\"./data/tasks.txt\");","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setKenobi(kenobi);","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"            stage.show();","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"    public void stop() throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"        kenobi.executeCommand(\"bye\");","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"        super.stop();","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"mradhyaf":37}},{"path":"src/main/java/kenobi/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"public class Launcher {","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"        Application.launch(KenobiApp.class, args);","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"mradhyaf":9}},{"path":"src/main/java/kenobi/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.TaskException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.ToDo;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":" * The AddCommand class encapsulates the command to add a Task to a given TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    private final Task.Type taskType;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    private final LocalDate taskDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"     * Constructs an AddCommand with the given name for the new task.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     * @param name The name of the Task to be added.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    public AddCommand(String name) {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"        taskType \u003d Task.Type.TODO;","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"        taskName \u003d name;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        taskDate \u003d null;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"     * Constructs an AddCommand with the given name, date, and type of task for the new task.","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"     * @param type The type of Task to be added.","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"     * @param name The name of Task to be added.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"     * @param date The date attached to the Task to be added.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"    public AddCommand(Task.Type type, String name, LocalDate date) {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"        taskType \u003d type;","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"        taskName \u003d name;","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"        taskDate \u003d date;","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"     * Executes the addition of a Task into the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"        Task toAdd;","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"            switch (taskType) {","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"                toAdd \u003d new Deadline(taskName, taskDate);","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"            case EVENT:","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"                toAdd \u003d new Event(taskName, taskDate);","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"            default:","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"            case TODO:","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"                toAdd \u003d new ToDo(taskName);","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"        return \"I added the following task to the archives:\\n\" + toAdd;","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":73}},{"path":"src/main/java/kenobi/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":" * The Command class encapsulates the commands that can be done by Kenobi.","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"    protected Storage storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"     * @return A string containing the feedback of the execution.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    public abstract String execute();","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     * Sets the data required for commands to execute.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     * @param taskList The TaskList to which the command is to be executed.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    public void setData(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"        tasks \u003d taskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":29}},{"path":"src/main/java/kenobi/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":" * The DeleteCommand class encapsulates the command to delete a Task from a given TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    private int toDeleteIndex;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a DeleteCommand with the index of the task to be deleted.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     * @param index","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        toDeleteIndex \u003d index - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"        assert toDeleteIndex \u003e\u003d 0 : \"DeleteCommand: negative index\";","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     * Executes the deletion of a Task into the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"            Task deletedTask \u003d tasks.remove(toDeleteIndex);","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"            return \"I removed the following task:\\n\" + deletedTask;","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"            return \"The task you are trying to delete is not in the archives.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":34}},{"path":"src/main/java/kenobi/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":" * The ExitCommand class encapsulates the command to exit the Kenobi program.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"     * Executes the termination of the Kenobi program.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        return \"Goodbye, old friend\";","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":18}},{"path":"src/main/java/kenobi/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":" * The FindCommand class encapsulates the command to find a Task to a given TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    final String searchTerm;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a FindCommand with the given search term to find the desired Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"     * @param searchTerm The term to be searched in the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     * Executes the search of a Task in the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        TaskList found \u003d tasks.search(searchTerm);","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"        if (found.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"            return \"Nothing in the archives matches your search term\";","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"        return \"Here\u0027s what I found from the archives:\\n\" + found;","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"mradhyaf":35}},{"path":"src/main/java/kenobi/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":" * The ListCommand class encapsulates the command to list a given TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    private static final String EMPTY_TASK_LIST_MSG \u003d \"You have no tasks in the archives!\";","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"     * Executes the listing of the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"            return EMPTY_TASK_LIST_MSG;","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"        return \"Here are all of your tasks in the archives\\n\" + tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":22}},{"path":"src/main/java/kenobi/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":" * The MarkCommand class encapsulates the command to mark a Task in a given TaskList as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    private int toMarkIndex;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a MarkCommand with the given index.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     * @param index The base-1 index of the task to be marked.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"        toMarkIndex \u003d index - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        assert toMarkIndex \u003e\u003d 0 : \"MarkCommand: negative index\";","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"     * Executes the marking of the desired task.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"            return \"Here you go:\\n\" + tasks.markTaskAsDone(toMarkIndex);","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"            return \"The archives contain no such task\";","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":32}},{"path":"src/main/java/kenobi/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":" * The UnmarkCommand class encapsulates the command to mark a Task in a given TaskList as undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    private int toUnmarkIndex;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"     * Constructs an UnmarkCommand with the given index.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     * @param index The base-1 index of the task to be unmarked.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"        toUnmarkIndex \u003d index - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        assert toUnmarkIndex \u003e\u003d 0 : \"UnmarkCommand: negative index\";","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"     * Executes the unmarking of the desired task.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     * @return a feedback from the execution of the command.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    public String execute() {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"            return \"I guess you weren\u0027t done with this one:\\n\" + tasks.markTaskAsUndone(toUnmarkIndex);","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"            return \"The archives contain no such task\";","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":33}},{"path":"src/main/java/kenobi/parser/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"public class ParseException extends Exception {","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"    public ParseException(String msg) {","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"        super(\"There were problems in the archives! \" + msg);","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"mradhyaf":7}},{"path":"src/main/java/kenobi/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.AddCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.DeleteCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.ExitCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.FindCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.ListCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.MarkCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"import kenobi.command.UnmarkCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Deadline;","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Event;","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Task;","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.TaskException;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.ToDo;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"import java.time.temporal.TemporalAdjuster;","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":" * The parser class encapsulates the parse functionality of Kenobi.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"public class Parser {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"     * Parses the given command to a Command object.","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"     * @param str The received command.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"     * @return a Command object encapsulating the parsed command.","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"     * @throws ParseException if the Parser could not parse the command","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"    public static Command parseCommand(String str) throws ParseException {","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"        String[] cmd \u003d str.split(\"\\\\s\", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"        String[] fields;","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"        switch (cmd[0]) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"        case \"list\":","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"        case \"find\":","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"                return new FindCommand(cmd[1]);","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"                return new MarkCommand(parseInt(cmd[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"                return new UnmarkCommand(parseInt(cmd[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"                return new DeleteCommand(parseInt(cmd[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"mradhyaf"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"mradhyaf"},"content":"                return new AddCommand(cmd[1]);","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"mradhyaf"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"mradhyaf"},"content":"                fields \u003d cmd[1].split(\" /by \");","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"mradhyaf"},"content":"                return new AddCommand(Task.Type.DEADLINE, fields[0], parseDate(fields[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"mradhyaf"},"content":"        case \"event\":","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"mradhyaf"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"mradhyaf"},"content":"                fields \u003d cmd[1].split(\" /at \");","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"mradhyaf"},"content":"                return new AddCommand(Task.Type.EVENT, fields[0], parseDate(fields[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"mradhyaf"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"mradhyaf"},"content":"                throw new ParseException(\"the command seems to be incomplete\");","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"mradhyaf"},"content":"        default:","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"mradhyaf"},"content":"            throw new ParseException(\"Your command is invalid\");","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"mradhyaf"},"content":"     * Parses a string representing a date into a LocalDate object.","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":106,"author":{"gitId":"mradhyaf"},"content":"     * @param str The date string to be parsed.","lastModifiedDate":"2022-02-01"},{"lineNumber":107,"author":{"gitId":"mradhyaf"},"content":"     * @return a LocalDate object representing the parsed date string.","lastModifiedDate":"2022-02-01"},{"lineNumber":108,"author":{"gitId":"mradhyaf"},"content":"     * @throws ParseException if the date string could not be parsed.","lastModifiedDate":"2022-02-01"},{"lineNumber":109,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":110,"author":{"gitId":"mradhyaf"},"content":"    private static LocalDate parseDate(String str) throws ParseException {","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"mradhyaf"},"content":"        String[] dateComponents \u003d str.split(\"\\\\s\", 2);","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"mradhyaf"},"content":"        if (dateComponents[0].equals(\"next\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"mradhyaf"},"content":"            return nextDayOfTheWeek(dateComponents[1]);","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":116,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":117,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"mradhyaf"},"content":"            return LocalDate.parse(str);","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"mradhyaf"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"mradhyaf"},"content":"            throw new ParseException(\"I don\u0027t understand that date\");","lastModifiedDate":"2022-02-01"},{"lineNumber":121,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":124,"author":{"gitId":"mradhyaf"},"content":"    private static LocalDate nextDayOfTheWeek(String str) {","lastModifiedDate":"2022-02-21"},{"lineNumber":125,"author":{"gitId":"mradhyaf"},"content":"        LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2022-02-21"},{"lineNumber":126,"author":{"gitId":"mradhyaf"},"content":"        TemporalAdjuster adjuster \u003d TemporalAdjusters.next(DayOfWeek.valueOf(str.toUpperCase()));","lastModifiedDate":"2022-02-21"},{"lineNumber":127,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":128,"author":{"gitId":"mradhyaf"},"content":"        return currDate.with(adjuster);","lastModifiedDate":"2022-02-21"},{"lineNumber":129,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":131,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":132,"author":{"gitId":"mradhyaf"},"content":"     * Parses a string representing a task into a Task object.","lastModifiedDate":"2022-02-21"},{"lineNumber":133,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":134,"author":{"gitId":"mradhyaf"},"content":"     * @param taskString The string representing a task.","lastModifiedDate":"2022-02-21"},{"lineNumber":135,"author":{"gitId":"mradhyaf"},"content":"     * @return the parsed Task object.","lastModifiedDate":"2022-02-21"},{"lineNumber":136,"author":{"gitId":"mradhyaf"},"content":"     * @throws ParseException if the task string could not be parsed.","lastModifiedDate":"2022-02-21"},{"lineNumber":137,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":138,"author":{"gitId":"mradhyaf"},"content":"    public static Task parseTask(String taskString) throws ParseException, TaskException {","lastModifiedDate":"2022-02-21"},{"lineNumber":139,"author":{"gitId":"mradhyaf"},"content":"        String[] taskComponents \u003d taskString.split(\",.,\");","lastModifiedDate":"2022-02-21"},{"lineNumber":140,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":141,"author":{"gitId":"mradhyaf"},"content":"        Task t;","lastModifiedDate":"2022-02-21"},{"lineNumber":142,"author":{"gitId":"mradhyaf"},"content":"        switch (taskComponents[0]) {","lastModifiedDate":"2022-02-21"},{"lineNumber":143,"author":{"gitId":"mradhyaf"},"content":"        case \"T\":","lastModifiedDate":"2022-02-21"},{"lineNumber":144,"author":{"gitId":"mradhyaf"},"content":"            t \u003d new ToDo(taskComponents[2]);","lastModifiedDate":"2022-02-21"},{"lineNumber":145,"author":{"gitId":"mradhyaf"},"content":"            break;","lastModifiedDate":"2022-02-21"},{"lineNumber":146,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":147,"author":{"gitId":"mradhyaf"},"content":"        case \"D\":","lastModifiedDate":"2022-02-21"},{"lineNumber":148,"author":{"gitId":"mradhyaf"},"content":"            t \u003d new Deadline(taskComponents[2], LocalDate.parse(taskComponents[3]));","lastModifiedDate":"2022-02-21"},{"lineNumber":149,"author":{"gitId":"mradhyaf"},"content":"            break;","lastModifiedDate":"2022-02-21"},{"lineNumber":150,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":151,"author":{"gitId":"mradhyaf"},"content":"        case \"E\":","lastModifiedDate":"2022-02-21"},{"lineNumber":152,"author":{"gitId":"mradhyaf"},"content":"            t \u003d new Event(taskComponents[2], LocalDate.parse(taskComponents[3]));","lastModifiedDate":"2022-02-21"},{"lineNumber":153,"author":{"gitId":"mradhyaf"},"content":"            break;","lastModifiedDate":"2022-02-21"},{"lineNumber":154,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":155,"author":{"gitId":"mradhyaf"},"content":"        default:","lastModifiedDate":"2022-02-21"},{"lineNumber":156,"author":{"gitId":"mradhyaf"},"content":"            throw new ParseException(\"Invalid Task type in the save file\");","lastModifiedDate":"2022-02-21"},{"lineNumber":157,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":158,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":159,"author":{"gitId":"mradhyaf"},"content":"        if (taskComponents[1].equals(\"1\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":160,"author":{"gitId":"mradhyaf"},"content":"            t.markAsDone();","lastModifiedDate":"2022-02-21"},{"lineNumber":161,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":162,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":163,"author":{"gitId":"mradhyaf"},"content":"        return t;","lastModifiedDate":"2022-02-21"},{"lineNumber":164,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":165,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"mradhyaf":165}},{"path":"src/main/java/kenobi/storage/LoadStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"public class LoadStorageException extends StorageException {","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"    public LoadStorageException(String msg) {","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"        super(\" :fail to load save files\" + msg);","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"mradhyaf":7}},{"path":"src/main/java/kenobi/storage/SaveStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"public class SaveStorageException extends StorageException {","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"    public SaveStorageException(String msg) {","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"        super(\" :fail to save tasks\" + msg);","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"mradhyaf":7}},{"path":"src/main/java/kenobi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import kenobi.parser.Parser;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import kenobi.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":" * The Storage class encapsulates the storage functionality of Kenobi.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"public class Storage {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    private boolean isDirty;","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    private Path savePath;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    private String loadMsg;","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a new Storage with the specified save path.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"     * @param savePath The path that directs to the storage that Kenobi uses.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    public Storage(String savePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        this.savePath \u003d Path.of(savePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"        isDirty \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"     * Loads existing tasks in savePath if exists.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"     * @return a TaskList containing the tasks from savePath or an empty TaskList if savePath doesn\u0027t exist.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"    public TaskList load() throws LoadStorageException {","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"        if (!Files.exists(savePath)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"            return tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"            Scanner fileScanner \u003d new Scanner(savePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"                Task nextTask \u003d Parser.parseTask(fileScanner.nextLine());","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"                tasks.add(nextTask);","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"            throw new LoadStorageException(e.getMessage());","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"        return tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"     * Saves the given TaskList to savePath.","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"     * @param tasks The TaskList to be saved.","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"            Files.createDirectories(savePath.getParent());","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"            BufferedWriter out \u003d Files.newBufferedWriter(savePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":"                out.append(task.toSave());","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"            out.close();","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"            System.out.println(\"Kenobi could not save the tasks\");","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":75}},{"path":"src/main/java/kenobi/storage/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"public class StorageException extends Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"    public StorageException(String msg) {","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"        super(\"There was a problem with the storage\" + msg);","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"mradhyaf":7}},{"path":"src/main/java/kenobi/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":" * The Deadline class encapsulates a Task with a deadline.","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    private LocalDate by;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a Deadline with the specified name and date.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"     * @param name The name of the Deadline.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"     * @param by   The deadline of the Deadline.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"     * @throws TaskException if the Deadline name is empty.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    public Deadline(String name, LocalDate by) throws TaskException {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"        super(name);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"     * Returns the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"     * @return the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    public Type type() {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"        return Type.DEADLINE;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"     * Returns a save-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"     * @return a \",.,\" delimited string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"        int doneBit \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"        return String.format(\"D,.,%d,.,%s,.,%s\\n\", doneBit, name, by);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"     * Returns a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"     * @return a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, d MMMM yyyy\");","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(formatter));","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"mradhyaf":57}},{"path":"src/main/java/kenobi/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":" * The Event class encapsulates a Task that happens at a given time.","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    private LocalDate at;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     * Constructs an Event with the specified name and date.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"     * @param name The name of the Event.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"     * @param at   The time of the Event.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"     * @throws TaskException if the Event name is empty.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    public Event(String name, LocalDate at) throws TaskException {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"        super(name);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"     * Returns the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"     * @return the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    public Type type() {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"        return Type.EVENT;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"     * Returns a save-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"     * @return a \",.,\" delimited string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"        int doneBit \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"        return String.format(\"E,.,%d,.,%s,.,%s\\n\", doneBit, name, at);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"     * Returns a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"     * @return a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, d MMMM yyyy\");","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at.format(formatter));","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"mradhyaf":57}},{"path":"src/main/java/kenobi/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":" * The Task class encapsulates a task with a name and an isDone boolean.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    protected final String name;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    public enum Type {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"        DEADLINE,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"        EVENT,","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"        TODO,","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a Task with the given name.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"     * @throws TaskException if task name is empty.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    public Task(String name) throws TaskException {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"        if (name.matches(\"[\\\\s]*\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"            throw new TaskException(\"Task name cannot be blank\");","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"     * Sets the task as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"     * @return the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"    public Task markAsDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"        return this;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"     * Sets the task as undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"     * @return the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"    public Task markAsUndone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"        return this;","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"     * Returns true if the task name contains the specified term.","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"     * @param term The term with which the task name will be checked.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"     * @return true if the task name contains the specified term.","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"    public boolean hasWord(String term) {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"        return name.contains(term);","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"     * Returns the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"     * @return the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":"    public abstract Type type();","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"     * Returns a save-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"     * @return a \",.,\" delimited string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"mradhyaf"},"content":"    public abstract String toSave();","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"mradhyaf"},"content":"     * Returns a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"mradhyaf"},"content":"     * @return a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"mradhyaf"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"mradhyaf"},"content":"        String check \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"mradhyaf"},"content":"        return String.format(\"[%s] %s\", check, this.name);","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"mradhyaf":88}},{"path":"src/main/java/kenobi/task/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"    public TaskException (String field) {","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"        super(field);","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"mradhyaf":7}},{"path":"src/main/java/kenobi/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":" * The TaskList encapsulates a list of Task objects.","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"     * Marks the task in the specified index as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"     * @return The task marked as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"     * @throws IndexOutOfBoundsException if the specified index is out of bounds.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    public Task markTaskAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"        return get(index).markAsDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"     * Marks the task in the specified index as undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"     * @return The task marked as undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"     * @throws IndexOutOfBoundsException if the specified index is out of bounds.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"    public Task markTaskAsUndone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"        return get(index).markAsUndone();","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"     * Searches tasks by filtering out the tasks that do not contain the search term in their name.","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"      * @param searchTerm The term that will be used to filter the tasks in the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"     * @return a filtered shallow copy of the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"    public TaskList search(String searchTerm) {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"        TaskList tasks \u003d (TaskList) clone();","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"        tasks.removeIf(e -\u003e !e.hasWord(searchTerm));","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"        return tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"     * Returns a base-1 numbered list of the Tasks in this list.","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"     * @return a string of the numbered list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"        for (int i \u003d 0; i \u003c super.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"            str.append(String.format(\"%d. %s\\n\", i + 1, super.get(i)));","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"        return str.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"mradhyaf":60}},{"path":"src/main/java/kenobi/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":" * The ToDo class encapsulates a todo Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"     * Constructs a ToDo with the given name.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"     * @param name The name of the todo.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"     * @throws TaskException if the ToDo name is empty.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"    public ToDo(String name) throws TaskException {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"        super(name);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"     * Returns the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"     * @return the type enum corresponding to the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    public Type type() {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"        return Type.TODO;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"     * Returns a save-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"     * @return a \",.,\" delimited string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"        int doneBit \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"        return String.format(\"T,.,%d,.,%s\\n\", doneBit, name);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"     * Returns a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"     * @return a ui-friendly string representing the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"mradhyaf":47}},{"path":"src/main/java/kenobi/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    enum Alignment {","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"        RIGHT, LEFT","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    private Text dialog;","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"    private DialogBox(String text, Image img, Alignment alignment) {","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"        if (alignment.equals(Alignment.RIGHT)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"            dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"            setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"        } else if (alignment.equals(Alignment.LEFT)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"            ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"            Collections.reverse(tmp);","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"            getChildren().setAll(tmp);","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"            setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-21"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"        return new DialogBox(text, img, Alignment.RIGHT);","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"    public static DialogBox getKenobiDialog(String text, Image img) {","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"        var db \u003d new DialogBox(text, img, Alignment.LEFT);","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"        return db;","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"mradhyaf":65}},{"path":"src/main/java/kenobi/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"import kenobi.Kenobi;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    private Image kenobiImage \u003d new Image(getClass().getResourceAsStream(\"/images/kenobi.png\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    private Kenobi kenobi;","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"    public void setKenobi(Kenobi k) {","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"        kenobi \u003d k;","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"        assert kenobi !\u003d null : \"Kenobi instance is null\";","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"        kenobi.init();","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"                DialogBox.getKenobiDialog(kenobi.greet(), kenobiImage)","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"        );","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"     * Adds a dialog box to the scroll pane.","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"    private void addDialog(DialogBox db) {","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"        dialogContainer.getChildren().add(db);","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"        String inputString \u003d userInput.getText();","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"        addDialog(DialogBox.getUserDialog(inputString, userImage));","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"        kenobi.executeCommand(inputString);","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"        addDialog(DialogBox.getKenobiDialog(kenobi.getResponse(), kenobiImage));","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"        if (kenobi.isTerminated()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"mradhyaf":70}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"        \u003cText fx:id\u003d\"dialog\" fill\u003d\"WHITE\" text\u003d\"Text\" wrappingWidth\u003d\"250.0\" /\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"      \u003cPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"80.0\" prefWidth\u003d\"80.0\" style\u003d\"-fx-border-radius: 40; -fx-border-color: white; -fx-border-width: 2;\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"      \u003c/Pane\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"mradhyaf":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../styles/MainWindow.css\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"kenobi.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" scaleShape\u003d\"false\" style\u003d\"-fx-background-color: #2e3440;\" /\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"mradhyaf":19}},{"path":"src/test/java/kenobi/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.parser;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    public void dateFormatException_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"            assertEquals(0, Parser.parseCommand(\"deadline homework /by 123123123\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"            fail();","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"            assertEquals(\"There were problems in the archives! I don\u0027t understand that date\", e.getMessage());","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    public void incompleteCommand_oneStringCommand_exceptionThrown() {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"            assertEquals(0, Parser.parseCommand(\"event\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"            fail();","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"            assertEquals(\"There were problems in the archives! the command seems to be incomplete\", e.getMessage());","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"mradhyaf":28}},{"path":"src/test/java/kenobi/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"package kenobi.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"public class ToDoTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    public void taskException_emptyTaskName_exceptionThrown() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"            new ToDo(\"\");","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"            fail();","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"            assertEquals(\"Task name cannot be blank\", e.getMessage());","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"mradhyaf":18}}]
