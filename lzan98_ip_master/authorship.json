[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzan98":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzan98":16,"-":45}},{"path":"src/main/java/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        dialog.setMinHeight(USE_PREF_SIZE);","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"    private void flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        db.flip();","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"        return db;","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":62}},{"path":"src/main/java/controller/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"public class Launcher {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":9}},{"path":"src/main/java/controller/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            stage.show();","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":32}},{"path":"src/main/java/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.util.Timer;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":" * Controller for controller.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dog.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        String response \u003d duke.handleCommand(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        );","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"            Timer tmr \u003d new Timer();","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"            tmr.schedule(new TimerTask() {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"                @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"                public void run() {","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"                    Platform.exit();","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"                    System.exit(0);","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"            }, 2000);","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import tasks.Event;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import tasks.ToDo;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    public Duke() {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        storage \u003d new Storage(\"Data/tasks.txt\");","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList(storage, storage.load());","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        } finally {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"            tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            parser \u003d new Parser(taskList);","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    };","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * Initialises duke.Duke the chat-bot along with its necessary classes and files.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     * @param filePath Path directory of the saved file containing the list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList(storage, storage.load());","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"     * Performs an action depending on user\u0027s input.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     * @param str User\u0027s input after parsing.","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"     * @return A string describing the action taken.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    public String handleCommand(String str) {","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"            String command \u003d parser.parse(str);","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"                return ui.getByeMessage();","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"                return taskList.printList();","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"            } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"                String[] temp \u003d str.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"                String firstWord \u003d temp[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"                switch (firstWord) {","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"                case \"mark\":","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"                    return markCommand(command);","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"                case \"unmark\":","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"                    return unmarkCommand(command);","lastModifiedDate":"2022-02-08"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"                case \"delete\":","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"                    return deleteCommand(command);","lastModifiedDate":"2022-02-08"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"                case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"                    return addTaskCommand(command);","lastModifiedDate":"2022-02-08"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"                case \"find\":","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"                    return taskList.find(str.substring(5));","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"                case \"schedule\":","lastModifiedDate":"2022-02-08"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"                    return taskList.printSchedule(str.substring(9));","lastModifiedDate":"2022-02-08"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"                default:","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"                    assert false : firstWord;","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"        return str;","lastModifiedDate":"2022-02-08"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"     * Executes the command to mark a task as done.","lastModifiedDate":"2022-02-08"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"     * @param command Input from user containing a specific task number to be marked.","lastModifiedDate":"2022-02-08"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being marked as done.","lastModifiedDate":"2022-02-08"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"    public String markCommand(String command) throws IOException {","lastModifiedDate":"2022-02-08"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"        String[] temp \u003d command.split(\" \");","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"        int taskNumber \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"        return taskList.mark(taskNumber);","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"     * Executes the command to mark a task as not done.","lastModifiedDate":"2022-02-08"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"     * @param command Input from user containing a specific task number to be marked as not done.","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being marked as not done.","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"    public String unmarkCommand(String command) throws IOException {","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"        String[] temp \u003d command.split(\" \");","lastModifiedDate":"2022-02-08"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"        int taskNumber \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"        return taskList.unmark(taskNumber);","lastModifiedDate":"2022-02-08"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2022-02-08"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"     * @param command Input from user containing a specific task number to be deleted.","lastModifiedDate":"2022-02-08"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being deleted.","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"    public String deleteCommand(String command) throws IOException {","lastModifiedDate":"2022-02-08"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"        String[] temp \u003d command.split(\" \");","lastModifiedDate":"2022-02-08"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"        int taskNumber \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2022-02-08"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"        return taskList.delete(taskNumber);","lastModifiedDate":"2022-02-08"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"     * Performs the command to add a task to the list of tasks.","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"     * @param command Input from user containing the type and description of task to be added.","lastModifiedDate":"2022-02-08"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being added to list of tasks.","lastModifiedDate":"2022-02-08"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"    public String addTaskCommand(String command) throws IOException, DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"        String[] temp \u003d command.split(\" \");","lastModifiedDate":"2022-02-08"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"        String firstWord \u003d temp[0];","lastModifiedDate":"2022-02-08"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-02-08"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-08"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"            ToDo todo \u003d new ToDo(command.substring(5));","lastModifiedDate":"2022-02-08"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"            return taskList.addTask(todo);","lastModifiedDate":"2022-02-08"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"        case \"event\":","lastModifiedDate":"2022-02-08"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"            Event event \u003d new Event(command.substring(6));","lastModifiedDate":"2022-02-08"},{"lineNumber":144,"author":{"gitId":"lzan98"},"content":"            return taskList.addTask(event);","lastModifiedDate":"2022-02-08"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"lzan98"},"content":"            Deadline deadline \u003d new Deadline(command.substring(9));","lastModifiedDate":"2022-02-08"},{"lineNumber":147,"author":{"gitId":"lzan98"},"content":"            return taskList.addTask(deadline);","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"lzan98"},"content":"        default:","lastModifiedDate":"2022-02-08"},{"lineNumber":149,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-08"},{"lineNumber":150,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":152,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"lzan98":153,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"     * An exception to indicate that the user has entered an invalid input.","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    public DukeException() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        super(\"Invalid command!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lzan98":10}},{"path":"src/main/java/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"        super(\"Invalid task number!\");","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lzan98":7}},{"path":"src/main/java/duke/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class MissingDescriptionException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"     * An exception to indicate that the user has not input all information required for a command.","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    public MissingDescriptionException() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        super(\"Missing description!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lzan98":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    public Parser(TaskList tList) {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"        taskList \u003d tList;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    };","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     * Parses the input from user and checks if there are any invalid commands or format.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @param str Input from User.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     * @return String of the original user input if no violations are found.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"     * @throws MissingDescriptionException If a command is missing required information.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the command or format is invalid.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    public String parse(String str) throws MissingDescriptionException, DukeException, InvalidTaskException {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"        String[] strArr \u003d str.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        String firstWord \u003d strArr[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        if (firstWord.equals(\"deadline\") || firstWord.equals(\"event\") || firstWord.equals(\"todo\")","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"                || firstWord.equals(\"list\") || firstWord.equals(\"delete\") || firstWord.equals(\"unmark\")","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"                || firstWord.equals(\"mark\") || firstWord.equals(\"find\") || firstWord.equals(\"bye\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            if ((firstWord.equals(\"deadline\") || firstWord.equals(\"event\") || firstWord.equals(\"todo\"))","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"                    \u0026\u0026 strArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"                throw new MissingDescriptionException();","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"            if (firstWord.equals(\"unmark\") || firstWord.equals(\"mark\") || firstWord.equals(\"delete\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"                if (strArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"                    throw new DukeException();","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"                    try {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"                        int index \u003d Integer.parseInt(strArr[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"                        if (taskList.getTasks().size() \u003c index) {","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"                            throw new InvalidTaskException();","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"                        }","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        } else if (firstWord.equals(\"schedule\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"            try {","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"                LocalDate date \u003d LocalDate.parse(strArr[1]);","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        return str;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":58}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"public class Storage implements StorageInterface {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    private File f;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * Constructor for Storage class","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @param filePath Path of file containing the tasks stored in hard disk.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        if (!f.exists()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            f \u003d new File(\"Data\");","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            f.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            f \u003d new File(\"Data/tasks.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"     * Loads the saved file of tasks list from directory.","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"     * @return File of saved tasks list.","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    public File load() {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"        return f;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * Writes data to file.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     * @param filePath The directory path containing the file.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"     * @param textToAdd Text to be added to the file.","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"     * @throws IOException If the file could not be written.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    public void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"     * Saves the current list of tasks to the hard disk before chat-bot exits.","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     * @throws IOException If the file could not be written.","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"            Files.delete(Path.of(\"Data/tasks.txt\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"            File f \u003d new File(\"Data\");","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"            boolean isDirectoryCreated \u003d f.mkdirs();","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"            assert isDirectoryCreated;","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"        } finally {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"            for (Task t: taskList.getTasks()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"                writeToFile(\"Data/tasks.txt\", t.getSaveFormat() + \",\" + t.getStatus() + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"lzan98":69}},{"path":"src/main/java/duke/StorageInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public interface StorageInterface {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    void writeToFile(String filePath, String textToAdd) throws IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    File load();","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    void save(TaskList taskList) throws IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":12}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    private String welcomeMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"    private String reminders;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    private String byeMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        welcomeMessage \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"                \"       __  \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"                        + \"(____()\u0027`; \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"                        + \"/,    /` \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"                        + \"\\\\\\\\\\\"--\\\\\\\\\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"                        + \"Woof, I am (supposed to look like) a dog bot.\\n\"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"                        + \"What do you want from me?\";","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        byeMessage \u003d \"Bye! Hope not to see you again :)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    };","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"     * Prints a message informing user an error with loading of file.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        System.out.println(\"Error loading file! A new list will be created.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"     * Prints a welcome message to user.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        return welcomeMessage;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * Prints a message to signal the termination of program.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    public String getByeMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"        return byeMessage;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":41}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    private String[] dateAndTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    private String time;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"     * Creates a Deadline task and sets its date and time accordingly from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * @param description Description of the deadline task generated from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the input format is not followed or there are missing information.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\"/by \");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            dateAndTime \u003d strArr[1].split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            date \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            time \u003d dateAndTime[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d \"D,\" + this.description + \",\" + date + \",\" + time;","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     * Creates a Deadline task from previously saved list of tasks during initialisation of chat-bot.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * @param saveFormat Data saved in tasks list file.","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @param isSaved A Boolean value set to True to differentiate the creation of task from saved list and user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    public Deadline(String saveFormat, boolean isSaved) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        super(saveFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        String[] strArr \u003d description.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        assert strArr.length \u003d\u003d 5;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        this.description \u003d strArr[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        date \u003d LocalDate.parse(strArr[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        time \u003d strArr[3];","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        if (Boolean.parseBoolean(strArr[4])) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"            super.setDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        super.saveFormat \u003d strArr[0] + \",\" + strArr[1] + \",\" + strArr[2] + \",\" + strArr[3];","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"     * @return A description of the task including its type, status, date and time.","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"        return \"D | \" + super.toString() + \"BY: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"))","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"                + \" \" + time;","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":63}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    private String[] dateAndTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    private String time;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"     * Creates a Deadline task and sets its date and time accordingly from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * @param description Description of the event task generated from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the input format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\"/at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            dateAndTime \u003d strArr[1].split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            date \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            time \u003d dateAndTime[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d \"E,\" + this.description + \",\" + date + \",\" + time;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     * Creates an Event task from previously saved list of tasks during initialisation of chat-bot.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * @param saveFormat Data saved in tasks list file.","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @param isSaved A Boolean value set to True to differentiate the creation of task from saved list and user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    public Event(String saveFormat, boolean isSaved) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        super(saveFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        String[] strArr \u003d description.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        assert strArr.length \u003d\u003d 5;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        this.description \u003d strArr[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        date \u003d LocalDate.parse(strArr[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        time \u003d strArr[3];","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        if (Boolean.parseBoolean(strArr[4])) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"            super.setDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        super.saveFormat \u003d strArr[0] + \",\" + strArr[1] + \",\" + strArr[2] + \",\" + strArr[3];","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     * Returns the date of the event.","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     * @return A LocalDate of the date of the event.","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        return this.date;","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"     * @return a description of the task including its type, status, date and time.","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"        return \"E | \" + super.toString() + \"AT: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"))","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"                + \" \" + time;","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":72}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    protected String saveFormat;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"    protected String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"     * @param description A string to describe the details of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        return saveFormat;","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        return isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     * @return A description of the task including its type, status, date and time.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":46}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     * @param file The file to load the saved lists of tasks from.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public TaskList(Storage storage, File file) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"                String[] strings \u003d str.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"                Task task \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"                String typeOfTask \u003d strings[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"                switch (typeOfTask) {","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"                case \"E\" :","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"                    task \u003d new Event(str, true);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"                case \"D\" :","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"                    task \u003d new Deadline(str, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"                case \"T\" :","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"                    task \u003d new ToDo(str, true);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"                default:","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"                    assert false : typeOfTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"                if (str.charAt(5) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"                    task.setDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"            s.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"            tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"     * Constructor for TaskList when saved file has a loading error or does not exist.","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"     * Returns the user\u0027s current list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"     * Adds a task to the current list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"    public String addTask(Task task) throws IOException {","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"        storage.save(this);","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"        return \"Added: \" + task;","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"    public String printList() {","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"            list \u003d list + task + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"        return list;","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"     * @param taskNumber The taskNumber of the task to be marked.","lastModifiedDate":"2022-02-08"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being marked as done.","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"    public String mark(int taskNumber) throws IOException {","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"        Task currTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"        currTask.setDone();","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"        storage.save(this);","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + \"  \" + currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"     * Marks the specified task as not done.","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"     * @param taskNumber The taskNumber of the task to be marked.","lastModifiedDate":"2022-02-08"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being marked as not done.","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"    public String unmark(int taskNumber) throws IOException {","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"        Task currTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"        currTask.setNotDone();","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"        storage.save(this);","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:: \\n\" + \"  \" + currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-02-08"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"     * @param taskNumber The taskNumber of the task to be deleted.","lastModifiedDate":"2022-02-08"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"     * @return A string detailing the task being deleted.","lastModifiedDate":"2022-02-08"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-08"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"    public String delete(int taskNumber) throws IOException {","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"        Task currTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"        storage.save(this);","lastModifiedDate":"2022-02-07"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"        return \"Okay, I have deleted \" + currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"     * Prints the schedule of events on a specific date.","lastModifiedDate":"2022-02-08"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"     * @param date Date of schedule specified by user input.","lastModifiedDate":"2022-02-08"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"     * @return A String containing the schedule of events happening on the date.","lastModifiedDate":"2022-02-08"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"    public String printSchedule(String date) {","lastModifiedDate":"2022-02-08"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-02-08"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"        String schedule \u003d \"Here are the list of events happening on \" + date + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":144,"author":{"gitId":"lzan98"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-02-08"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"            if (t instanceof Event) {","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"lzan98"},"content":"                if (((Event) t).getDate().equals(localDate)) {","lastModifiedDate":"2022-02-08"},{"lineNumber":147,"author":{"gitId":"lzan98"},"content":"                    schedule \u003d schedule + t;","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-02-08"},{"lineNumber":149,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":150,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"        return schedule;","lastModifiedDate":"2022-02-08"},{"lineNumber":152,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"lzan98"},"content":"     * Finds all the tasks containing the keyword(s) from user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"lzan98"},"content":"     * @param str User input","lastModifiedDate":"2022-02-01"},{"lineNumber":157,"author":{"gitId":"lzan98"},"content":"     * @return A string that lists all the tasks containing the keyword(s).","lastModifiedDate":"2022-02-01"},{"lineNumber":158,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":159,"author":{"gitId":"lzan98"},"content":"    public String find(String str) {","lastModifiedDate":"2022-02-01"},{"lineNumber":160,"author":{"gitId":"lzan98"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":161,"author":{"gitId":"lzan98"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-02-01"},{"lineNumber":162,"author":{"gitId":"lzan98"},"content":"            if (t.toString().contains(str.substring(5))) {","lastModifiedDate":"2022-02-01"},{"lineNumber":163,"author":{"gitId":"lzan98"},"content":"                list \u003d list + t;","lastModifiedDate":"2022-02-01"},{"lineNumber":164,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":165,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":166,"author":{"gitId":"lzan98"},"content":"        return list;","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":168,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"lzan98":168}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"     * Creates a ToDo task from user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"     * @param description Description of the ToDo task generated from user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        super.saveFormat \u003d \"T,\" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * Creates a ToDo task from previously saved list of tasks during initialisation of chat-bot.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     * @param saveFormat Data saved in tasks list file.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"     * @param blean A Boolean value set to True to differentiate the creation of task from saved list and user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    public ToDo(String saveFormat, boolean blean) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"        super(saveFormat);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\",\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            if (Boolean.parseBoolean(strArr[2])) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"                super.setDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d strArr[0] + \",\" + strArr[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @return a description of the task including its type and status.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        return \"T \" + \"| \" + super.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controller.MainWindow\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public void initialisationTest(){","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        try{","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"            Duke d \u003d new Duke(\"Test/test.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"            fail(\"No exception expected\");","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    public void loadTest() throws MissingDescriptionException, InvalidTaskException {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"            Assertions.assertEquals(\"Invalid command!\", new Parser(new TaskList()).parse(\"mark paper\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"            assertEquals(\"Invalid command!\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":16}},{"path":"src/test/java/duke/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class StorageStub implements StorageInterface {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    public File load() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"        return new File(\"Test/test.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":24}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    public void fileNotFoundTest() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"        TaskList tList \u003d new TaskList(new Storage(\"Test\"), new StorageStub().load());","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        assertEquals(0, tList.getTasks().size());","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lzan98":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzan98":1,"-":20}}]
