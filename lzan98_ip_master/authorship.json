[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzan98":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzan98":15,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"ret\u003d0","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    fi","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"done","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"exit $ret","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lzan98":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"awk \u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    BEGIN {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        ret \u003d 1","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    END {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"        exit ret","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"\u0027","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lzan98":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"awk \u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    BEGIN {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"            ret \u003d 1","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    END {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        exit ret","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"\u0027","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lzan98":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    fi","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"done","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"exit $ret","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lzan98":11}},{"path":"src/main/java/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    private void flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        db.flip();","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        return db;","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":61}},{"path":"src/main/java/controller/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"public class Launcher {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":9}},{"path":"src/main/java/controller/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            stage.show();","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":32}},{"path":"src/main/java/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package controller;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.util.Timer;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":" * Controller for controller.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        String response \u003d duke.handleCommand(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        );","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"            Timer tmr \u003d new Timer();","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"            tmr.schedule(new TimerTask() {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"                @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"                public void run() {","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"                    Platform.exit();","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"                    System.exit(0);","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"            }, 2000);","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import tasks.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import tasks.Todo;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    public Duke() {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        storage \u003d new Storage(\"Data/tasks.txt\");","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        } finally {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"            tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"            parser \u003d new Parser(taskList);","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    };","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     * Initialises duke.Duke the chat-bot along with its necessary classes and files.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"     * @param filePath Path directory of the saved file containing the list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"     * Performs an action depending on user\u0027s input.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"     * @param command User\u0027s input after parsing.","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"     * @return A string describing the action taken.","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    public String handleCommand(String command) {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"            String str \u003d parser.parse(command);","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"            switch (str) {","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"                return ui.getByeMessage();","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"            case \"list\":","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"                return taskList.printList();","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"            default:","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"                String[] temp \u003d str.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"                if (temp[0].equals(\"unmark\") || temp[0].equals(\"mark\") || temp[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"                    int taskNumber \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"                    switch (temp[0]) {","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"                    case \"mark\":","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"                        Task currTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"                        currTask.setDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"                        storage.save(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"                        return \"Nice! I\u0027ve marked this task as done: \\n\" + \"  \" + currTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"                    case \"unmark\":","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"                        t.setNotDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"                        storage.save(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"                        return \"OK, I\u0027ve marked this task as not done yet:: \\n\" + \"  \" + t;","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"                    case \"delete\":","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"                        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"                        tasks.remove(taskNumber - 1);","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"                        storage.save(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"                        return \"Okay, I have deleted \" + task;","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"                    default:","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"                        return \"Invallid command!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"                } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"                    switch (temp[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"                    case \"todo\":","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"                        Todo todo \u003d new Todo(str.substring(5));","lastModifiedDate":"2022-01-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"                        taskList.addTask(todo);","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"                        storage.save(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"                        return \"Added: \" + todo;","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"                    case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"                        Event event \u003d new Event(str.substring(6));","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"                        taskList.addTask(event);","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"                        storage.save(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"                        return \"Added: \" + event;","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"                    case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"                        Deadline deadline \u003d new Deadline(str.substring(9));","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"                        taskList.addTask(deadline);","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"                        storage.save(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"                        return \"Added: \" + deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"                    case \"find\":","lastModifiedDate":"2022-02-01"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"                        return taskList.find(str.substring(5));","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"                    default:","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"                    }","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"        return command;","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"lzan98":121,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"     * An exception to indicate that the user has entered an invalid input.","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    public DukeException() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        super(\"Invalid command!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lzan98":10}},{"path":"src/main/java/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"        super(\"Invalid task number!\");","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lzan98":7}},{"path":"src/main/java/duke/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class MissingDescriptionException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"     * An exception to indicate that the user has not input all information required for a command.","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    public MissingDescriptionException() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        super(\"Missing description!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lzan98":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    public Parser(TaskList tList) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        taskList \u003d tList;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    };","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"     * Parses the input from user and checks if there are any invalid commands or format.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"     * @param str Input from User.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     * @return String of the original user input if no violations are found.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * @throws MissingDescriptionException If a command is missing required information.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the command or format is invalid.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public String parse(String str) throws MissingDescriptionException, DukeException, InvalidTaskException {","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        String[] strArr \u003d str.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        String firstWord \u003d strArr[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"        if (firstWord.equals(\"deadline\") || firstWord.equals(\"event\") || firstWord.equals(\"todo\")","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"                || firstWord.equals(\"list\") || firstWord.equals(\"delete\") || firstWord.equals(\"unmark\")","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"                || firstWord.equals(\"mark\") || firstWord.equals(\"find\") || firstWord.equals(\"bye\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            if ((firstWord.equals(\"deadline\") || firstWord.equals(\"event\") || firstWord.equals(\"todo\"))","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"                    \u0026\u0026 strArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"                throw new MissingDescriptionException();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"            if (firstWord.equals(\"unmark\") || firstWord.equals(\"mark\") || firstWord.equals(\"delete\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"                if (strArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"                    throw new DukeException();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"                    try {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"                        int index \u003d Integer.parseInt(strArr[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"                        if (taskList.getTasks().size() \u003c index) {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"                            throw new InvalidTaskException();","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"                        }","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"                        throw e;","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        return str;","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":49}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"public class Storage implements StorageInterface {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    private File f;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     * Constructor for Storage class","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"     * @param filePath Path of file containing the tasks stored in hard disk.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"        if (!f.exists()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            f \u003d new File(\"Data\");","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            f.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            f \u003d new File(\"Data/tasks.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"     * Loads the saved file of tasks list from directory.","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"     * @return File of saved tasks list.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    public File load() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        return f;","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     * Writes data to file.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"     * @param filePath The directory path containing the file.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"     * @param textToAdd Text to be added to the file.","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     * @throws IOException If the file could not be written.","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"    public void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"     * Saves the current list of tasks to the hard disk before chat-bot exits.","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"     * @throws IOException If the file could not be written.","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"            Files.delete(Path.of(\"Data/tasks.txt\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"        } catch (NoSuchFileException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"            File f \u003d new File(\"Data\");","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"            f.mkdirs();","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        } finally {","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"            for (Task t: taskList.getTasks()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"                    writeToFile(\"Data/tasks.txt\", t.getSaveFormat() + \",\" + t.getStatus() + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"                    File f \u003d new File(\"Data\");","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"                    f.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"                    writeToFile(\"Data/tasks.txt\", t.getSaveFormat() + \",\" + t.getStatus() + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"lzan98":76}},{"path":"src/main/java/duke/StorageInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public interface StorageInterface {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    void writeToFile(String filePath, String textToAdd) throws IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    File load();","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    void save(TaskList taskList) throws IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":12}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    private String welcomeMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"    private String byeMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"        welcomeMessage \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"                \"       __  \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"                        + \"(____()\u0027`; \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"                        + \"/,    /` \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"                        + \"\\\\\\\\\\\"--\\\\\\\\\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"                        + \"Woof, I am (supposed to look like) a dog bot.\\nWhat do you want from me?\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"        byeMessage \u003d \"Bye! Hope not to see you again :)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    };","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"     * Prints a message informing user an error with loading of file.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        System.out.println(\"Error loading file! A new list will be created.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"     * Prints a welcome message to user.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        return welcomeMessage;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     * Prints a message to signal the termination of program.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    public String getByeMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"        return byeMessage;","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":39}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    private String[] dateAndTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    private String time;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"     * Creates a Deadline task and sets its date and time accordingly from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * @param description Description of the deadline task generated from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the input format is not followed or there are missing information.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\"/by \");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            dateAndTime \u003d strArr[1].split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            date \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            time \u003d dateAndTime[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d \"D,\" + this.description + \",\" + date + \",\" + time + \",\" + super.isDone;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     * Creates a Deadline task from previously saved list of tasks during initialisation of chat-bot.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * @param saveFormat Data saved in tasks list file.","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @param isSaved A Boolean value set to True to differentiate the creation of task from saved list and user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    public Deadline(String saveFormat, boolean isSaved) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        super(saveFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"            date \u003d LocalDate.parse(strArr[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"            time \u003d strArr[3];","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"            if (Boolean.parseBoolean(strArr[4])) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"                super.setDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d strArr[0] + \",\" + strArr[1] + \",\" + strArr[2] + \",\" + strArr[3];","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"     * @return A description of the task including its type, status, date and time.","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"        return \"D | \" + super.toString() + \"BY: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"))","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"                + \" \" + time;","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":66}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    private String[] dateAndTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    private String time;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"     * Creates a Deadline task and sets its date and time accordingly from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * @param description Description of the event task generated from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the input format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\"/at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            dateAndTime \u003d strArr[1].split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            date \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            time \u003d dateAndTime[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d \"E,\" + this.description + \",\" + date + \",\" + time;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     * Creates an Event task from previously saved list of tasks during initialisation of chat-bot.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * @param saveFormat Data saved in tasks list file.","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @param isSaved A Boolean value set to True to differentiate the creation of task from saved list and user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    public Event(String saveFormat, boolean isSaved) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        super(saveFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"            date \u003d LocalDate.parse(strArr[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"            time \u003d strArr[3];","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"            if (Boolean.parseBoolean(strArr[4])) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"                super.setDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d strArr[0] + \",\" + strArr[1] + \",\" + strArr[2] + \",\" + strArr[3];","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"     * @return a description of the task including its type, status, date and time.","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"        return \"E | \" + super.toString() + \"AT: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"))","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"                + \" \" + time;","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":67}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    protected String saveFormat;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"    protected String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"     * @param description A string to describe the details of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        return saveFormat;","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        return isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     * @return A description of the task including its type, status, date and time.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":46}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * @param f The file to load the saved lists of tasks from.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public TaskList(File f) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"                String[] strings \u003d str.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"                Task task \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"                switch (strings[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"                case \"E\" :","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"                    task \u003d new Event(str, true);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"                case \"D\" :","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"                    task \u003d new Deadline(str, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"                case \"T\" :","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"                    task \u003d new Todo(str, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"                default:","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"                if (str.charAt(5) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"                    assert task !\u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"                    task.setDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"            s.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"            tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     * Constructor for TaskList when saved file has a loading error or does not exist.","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"     * Returns the user\u0027s current list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"     * Adds a task to the current list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"     * @param t The task to be added.","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"    public String printList() {","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"            list \u003d list + task + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"        return list;","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"     * Finds all the tasks containing the keyword(s) from user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"     * @param str User input","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"     * @return A string that lists all the tasks containing the keyword(s).","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"    public String find(String str) {","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-02-01"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"            if (t.toString().contains(str.substring(5))) {","lastModifiedDate":"2022-02-01"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"                list \u003d list + t;","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"        return list;","lastModifiedDate":"2022-02-01"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"lzan98":104}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"     * Creates a Todo task from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"     * @param description Description of the Todo task generated from user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        super.saveFormat \u003d \"T,\" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"     * Creates a Todo task from previously saved list of tasks during initialisation of chat-bot.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     * @param saveFormat Data saved in tasks list file.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"     * @param blean A Boolean value set to True to differentiate the creation of task from saved list and user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     * @throws DukeException If the format is not followed or there are missing information.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    public Todo(String saveFormat, boolean blean) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"        super(saveFormat);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            String[] strArr \u003d description.split(\",\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            this.description \u003d strArr[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            if (Boolean.parseBoolean(strArr[2])) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"                super.setDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"            super.saveFormat \u003d strArr[0] + \",\" + strArr[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"            throw new DukeException();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @return a description of the task including its type and status.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        return \"T \" + \"| \" + super.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controller.MainWindow\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lzan98":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public void initialisationTest(){","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        try{","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"            Duke d \u003d new Duke(\"Test/test.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"            fail(\"No exception expected\");","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    public void loadTest() throws MissingDescriptionException, InvalidTaskException {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"            Assertions.assertEquals(\"Invalid command!\", new Parser(new TaskList()).parse(\"mark paper\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"            assertEquals(\"Invalid command!\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":16}},{"path":"src/test/java/duke/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"public class StorageStub implements StorageInterface {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    public File load() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"        return new File(\"Test/test.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzan98":24}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"    public void fileNotFoundTest() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"        TaskList tList \u003d new TaskList(new StorageStub().load());","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"        assertEquals(0, tList.getTasks().size());","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lzan98":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"lzan98":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzan98":1,"-":20}}]
