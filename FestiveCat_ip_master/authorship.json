[{"path":"src/main/java/Fluffers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"import Tasks.*;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates the chatbot Fluffers for CS2103T\u0027s Individual Project.","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * ASCII art credit: All ASCII art was found on https://www.asciiart.eu/animals/cats .","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":" * @author Ong Han Yang","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"public class Fluffers\u003cT\u003e {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    private enum AsciiArt {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"        /** ASCII art for when Fluffers just wakes up*/","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"        AWAKE(","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"                \"    /\\\\_____/\\\\\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"                \"   /  o   o  \\\\\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"                \"  ( \u003d\u003d  ^  \u003d\u003d )\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"                \"   )         (\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"                \"  (           )\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"                \" ( (  )   (  ) )\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"                \"(__(__)___(__)__)\"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        ),","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        /** ASCII art for when Fluffers goes back to sleep*/","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        ASLEEP(","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"                \"      |\\\\      _,,,---,,_\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"                \"ZZZzz /,`.-\u0027`\u0027    -.  ;-;;,_\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"                \"     |,4-  ) )-,_. ,\\\\ (  `\u0027-\u0027\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"                \"    \u0027---\u0027\u0027(_/--\u0027  `-\u0027\\\\_)\"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        ),","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        /** ASCII art for when Fluffers is displaying a list */","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        LIST_TOP(","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"                \"    |\\\\__/,|   (`\\\\\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"                \"  _.|o o  |_   ) )\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"                \"-(((---(((--------\"","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        );","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        private final String art;","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        private AsciiArt(String art) {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"            this.art \u003d art;","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    /** The private task list that each Fluffers object will keep. */","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    private boolean isAwake;","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"     * Constructor to initialise Fluffers.","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    public Fluffers() {","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        isAwake \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"     * Asks Fluffers to speak with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"     * @param input the text that Fluffers is asked to speak.","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"     * @return the formatted String that Fluffers is asked to speak.","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"    private String speak(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"Meow! (%s)\\n\", input);","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"     * Overloaded speak method to include a isQuestion prompt, to ask Fluffers","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"     * to speak with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"     * @param input the text that Fluffers is asked to speak.","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"     * @param isQuestion whether the text is meant to be a question or not.","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"     * @return the formatted String that Fluffers is asked to speak.","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"    private String speak(String input, boolean isQuestion) {","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"Meow%s (%s)\\n\", isQuestion ? \"?\" : \"!\", input);","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"     * Initial greeting from Fluffers, with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of the greeting.","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"    private String greet() {","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        return \"Activating Cat Translator 2000...\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"                \"Waking Fluffers up...\\n\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"                \"Meow! (Hello!)\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"                AsciiArt.AWAKE.art;","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"     * Farewell from Fluffers, with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of the Farewell.","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"    private String farewell() {","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"        return \"Meooow~ (Bye bye! See you again next time!)\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"                AsciiArt.ASLEEP.art;","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"     * Method/Getter to check if Fluffers is awake.","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"     * @return whether Fluffers is awake.","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"    public boolean isAwake() {","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        return this.isAwake;","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"     * Asks Fluffers to keep track of a Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"     * @param toStore the item to be tracked.","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"FestiveCat"},"content":"    private void store(Task toStore) {","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"        tasks.add(toStore);","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"FestiveCat"},"content":"     * Asks Fluffers to stop keeping track of a Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"FestiveCat"},"content":"     * @param taskNum the task number to stop keeping track of.","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"     * @return the task that was removed.","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"    private Task removeTask(int taskNum) throws NoSuchTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"        return this.tasks.delete(taskNum - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"     * Asks Fluffers to display what they have kept track of.","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"     * @return the String representation of the tasks, with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"    private String listTasks() {","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"%s\\n%s\\n------------------\", AsciiArt.LIST_TOP.art, tasks.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"FestiveCat"},"content":"     * Method to count the number of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"     * @return an integer representing the number of tasks.","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"FestiveCat"},"content":"    public int countTasks() {","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"        return tasks.length();","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"FestiveCat"},"content":"     * Marks a task as done or undone.","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"FestiveCat"},"content":"     * @param taskNum the task number to be marked (starts from 1).","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"FestiveCat"},"content":"     * @param isDone whether the task is done or not.","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"FestiveCat"},"content":"     * @throws NoSuchTaskException when there is no such task with number taskNum","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"FestiveCat"},"content":"    private void markTask(int taskNum, boolean isDone) throws NoSuchTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":156,"author":{"gitId":"FestiveCat"},"content":"        this.tasks.markTask(taskNum - 1, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":157,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":158,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":160,"author":{"gitId":"FestiveCat"},"content":"     * Displays a task as a String.","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"FestiveCat"},"content":"     * @param taskNum which task to be displayed (starts from 1).","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"FestiveCat"},"content":"     * @return the String representation of the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":164,"author":{"gitId":"FestiveCat"},"content":"     * @throws NoSuchTaskException when there is no such task with number taskNum","lastModifiedDate":"2022-01-18"},{"lineNumber":165,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":166,"author":{"gitId":"FestiveCat"},"content":"    private String displayTask(int taskNum) throws NoSuchTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":167,"author":{"gitId":"FestiveCat"},"content":"        return this.tasks.displayTask(taskNum - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":168,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":169,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":170,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":171,"author":{"gitId":"FestiveCat"},"content":"     * Method for Fluffers to reply and describe an invalid action that they are asked to do.","lastModifiedDate":"2022-01-18"},{"lineNumber":172,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":173,"author":{"gitId":"FestiveCat"},"content":"     * This is used in place of an exception as there\u0027s no point if an exception is thrown","lastModifiedDate":"2022-01-18"},{"lineNumber":174,"author":{"gitId":"FestiveCat"},"content":"     * and then caught immediately.","lastModifiedDate":"2022-01-18"},{"lineNumber":175,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":176,"author":{"gitId":"FestiveCat"},"content":"     * @param message the sentence to be included in the reply. Include a fullstop.","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"FestiveCat"},"content":"     * @return a String representing the invalid action reply.","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"FestiveCat"},"content":"    public String invalidActionReply(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"FestiveCat"},"content":"        String invalidMsg \u003d String.format(","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"FestiveCat"},"content":"                \"I can\u0027t do that! %s\", message);","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"FestiveCat"},"content":"        return this.speak(invalidMsg);","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":184,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":185,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":186,"author":{"gitId":"FestiveCat"},"content":"     * Method to store the task and give a reply with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":187,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":188,"author":{"gitId":"FestiveCat"},"content":"     * @param task the given task","lastModifiedDate":"2022-01-18"},{"lineNumber":189,"author":{"gitId":"FestiveCat"},"content":"     * @return the reply with fancy formatting.","lastModifiedDate":"2022-01-18"},{"lineNumber":190,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":191,"author":{"gitId":"FestiveCat"},"content":"    public String storeTaskAndReply(Task task) {","lastModifiedDate":"2022-01-18"},{"lineNumber":192,"author":{"gitId":"FestiveCat"},"content":"        this.store(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":193,"author":{"gitId":"FestiveCat"},"content":"        String reply \u003d String.format(\"Added: %s.\\nYou now have %d task(s)!\", task, this.countTasks());","lastModifiedDate":"2022-01-18"},{"lineNumber":194,"author":{"gitId":"FestiveCat"},"content":"        return this.speak(reply);","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":196,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":197,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"FestiveCat"},"content":"     * Overall Method for Fluffers to accept input and give responses.","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":200,"author":{"gitId":"FestiveCat"},"content":"     * @param input the input String or command to be given to Fluffers.","lastModifiedDate":"2022-01-18"},{"lineNumber":201,"author":{"gitId":"FestiveCat"},"content":"     * @return the response given with respect to the given input.","lastModifiedDate":"2022-01-18"},{"lineNumber":202,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":203,"author":{"gitId":"FestiveCat"},"content":"    public String feedCommandAndReply(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":204,"author":{"gitId":"FestiveCat"},"content":"        if (!isAwake) {","lastModifiedDate":"2022-01-18"},{"lineNumber":205,"author":{"gitId":"FestiveCat"},"content":"            return AsciiArt.ASLEEP.art;","lastModifiedDate":"2022-01-18"},{"lineNumber":206,"author":{"gitId":"FestiveCat"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":207,"author":{"gitId":"FestiveCat"},"content":"            if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":208,"author":{"gitId":"FestiveCat"},"content":"                isAwake \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":209,"author":{"gitId":"FestiveCat"},"content":"                return this.farewell();","lastModifiedDate":"2022-01-18"},{"lineNumber":210,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":211,"author":{"gitId":"FestiveCat"},"content":"            } else if (Objects.equals(input, \"list\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":212,"author":{"gitId":"FestiveCat"},"content":"                return this.listTasks();","lastModifiedDate":"2022-01-18"},{"lineNumber":213,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":214,"author":{"gitId":"FestiveCat"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":215,"author":{"gitId":"FestiveCat"},"content":"                int taskNum \u003d -1;","lastModifiedDate":"2022-01-18"},{"lineNumber":216,"author":{"gitId":"FestiveCat"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":217,"author":{"gitId":"FestiveCat"},"content":"                    taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":218,"author":{"gitId":"FestiveCat"},"content":"                    this.markTask(taskNum, true);","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"FestiveCat"},"content":"                    return this.speak(\"Okay! I\u0027ve marked this task as done! \" + this.displayTask(taskNum));","lastModifiedDate":"2022-01-18"},{"lineNumber":220,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":221,"author":{"gitId":"FestiveCat"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":222,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(\"Please provide the task number to mark!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":223,"author":{"gitId":"FestiveCat"},"content":"                } catch (NoSuchTaskException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":224,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(String.format(\"There\u0027s no task %d to mark.\", taskNum));","lastModifiedDate":"2022-01-18"},{"lineNumber":225,"author":{"gitId":"FestiveCat"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":226,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":227,"author":{"gitId":"FestiveCat"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":228,"author":{"gitId":"FestiveCat"},"content":"                int taskNum \u003d -1;","lastModifiedDate":"2022-01-18"},{"lineNumber":229,"author":{"gitId":"FestiveCat"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":230,"author":{"gitId":"FestiveCat"},"content":"                    taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":231,"author":{"gitId":"FestiveCat"},"content":"                    this.markTask(taskNum, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":232,"author":{"gitId":"FestiveCat"},"content":"                    return this.speak(\"This task now needs to be done! \" + this.displayTask(taskNum));","lastModifiedDate":"2022-01-18"},{"lineNumber":233,"author":{"gitId":"FestiveCat"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":234,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(\"Please provide the task number to unmark!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":235,"author":{"gitId":"FestiveCat"},"content":"                } catch (NoSuchTaskException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":236,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(String.format(\"There\u0027s no task %d to unmark.\", taskNum));","lastModifiedDate":"2022-01-18"},{"lineNumber":237,"author":{"gitId":"FestiveCat"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":238,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":239,"author":{"gitId":"FestiveCat"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":240,"author":{"gitId":"FestiveCat"},"content":"                int taskNum \u003d -1;","lastModifiedDate":"2022-01-18"},{"lineNumber":241,"author":{"gitId":"FestiveCat"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":242,"author":{"gitId":"FestiveCat"},"content":"                    taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":243,"author":{"gitId":"FestiveCat"},"content":"                    Task removed \u003d this.removeTask(taskNum);","lastModifiedDate":"2022-01-18"},{"lineNumber":244,"author":{"gitId":"FestiveCat"},"content":"                    return this.speak(\"Okie dokie! I\u0027ve removed this task! \" + removed.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":245,"author":{"gitId":"FestiveCat"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":246,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(\"Please provide a task number to delete!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":247,"author":{"gitId":"FestiveCat"},"content":"                } catch (NoSuchTaskException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":248,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(String.format(\"There\u0027s no task %d to remove.\", taskNum));","lastModifiedDate":"2022-01-18"},{"lineNumber":249,"author":{"gitId":"FestiveCat"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":250,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":251,"author":{"gitId":"FestiveCat"},"content":"            } else if (input.startsWith(\"todo\")){","lastModifiedDate":"2022-01-18"},{"lineNumber":252,"author":{"gitId":"FestiveCat"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":253,"author":{"gitId":"FestiveCat"},"content":"                    ToDoTask task \u003d ToDoTask.parseInput(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":254,"author":{"gitId":"FestiveCat"},"content":"                    return this.storeTaskAndReply(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":255,"author":{"gitId":"FestiveCat"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":256,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":257,"author":{"gitId":"FestiveCat"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":258,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":259,"author":{"gitId":"FestiveCat"},"content":"            } else if (input.startsWith(\"deadline\")){","lastModifiedDate":"2022-01-18"},{"lineNumber":260,"author":{"gitId":"FestiveCat"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":261,"author":{"gitId":"FestiveCat"},"content":"                    DeadlineTask task \u003d DeadlineTask.parseInput(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":262,"author":{"gitId":"FestiveCat"},"content":"                    return this.storeTaskAndReply(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":263,"author":{"gitId":"FestiveCat"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":264,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":265,"author":{"gitId":"FestiveCat"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":266,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":267,"author":{"gitId":"FestiveCat"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":268,"author":{"gitId":"FestiveCat"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":269,"author":{"gitId":"FestiveCat"},"content":"                    EventTask task \u003d EventTask.parseInput(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":270,"author":{"gitId":"FestiveCat"},"content":"                    return this.storeTaskAndReply(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":271,"author":{"gitId":"FestiveCat"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":272,"author":{"gitId":"FestiveCat"},"content":"                    return this.invalidActionReply(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":273,"author":{"gitId":"FestiveCat"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":274,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":275,"author":{"gitId":"FestiveCat"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":276,"author":{"gitId":"FestiveCat"},"content":"                return this.invalidActionReply(\"I don\u0027t understand what you said.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":277,"author":{"gitId":"FestiveCat"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":278,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":279,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":280,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":281,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":282,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":283,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":284,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":285,"author":{"gitId":"FestiveCat"},"content":"     * The main method to start the program/wake Fluffers up","lastModifiedDate":"2022-01-18"},{"lineNumber":286,"author":{"gitId":"FestiveCat"},"content":"     * @param args input CLI arguments.","lastModifiedDate":"2022-01-18"},{"lineNumber":287,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":288,"author":{"gitId":"FestiveCat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":289,"author":{"gitId":"FestiveCat"},"content":"        Fluffers\u003cTask\u003e f \u003d new Fluffers\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":290,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":291,"author":{"gitId":"FestiveCat"},"content":"        System.out.println(f.greet());","lastModifiedDate":"2022-01-18"},{"lineNumber":292,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":293,"author":{"gitId":"FestiveCat"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":294,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":295,"author":{"gitId":"FestiveCat"},"content":"        while (f.isAwake()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":296,"author":{"gitId":"FestiveCat"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":297,"author":{"gitId":"FestiveCat"},"content":"            System.out.println(f.feedCommandAndReply(input));","lastModifiedDate":"2022-01-18"},{"lineNumber":298,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":299,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":300,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":300}},{"path":"src/main/java/Tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates a Deadline Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * A Deadline task has a specific time that it has to be done by.","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" * @author Ong Han Yang","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"public class DeadlineTask extends Task{","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    /** The deadline for the task, temporarily in String format,*/","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    private String deadline;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     * @param desc the description for the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"     * @param deadline the deadline for the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    public DeadlineTask(String desc, String deadline) {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"        super(desc);","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"     * Overridden toString method to represent the deadline task as a string.","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     * Method to parse a String to obtain an Deadline Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * Expected format: deadline \u003cdesc\u003e /by \u003ctime\u003e","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     * @param input the String command used to build the Task from.","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"     * @return the DeadlineTask obtained.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"     * @throws InvalidInputException when no description is given or no timing is given.","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    public static DeadlineTask parseInput(String input) throws InvalidInputException {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        String desc \u003d input.substring(8);","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        if (desc.length() \u003c\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description and timing is provided for the Deadline Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        desc \u003d desc.substring(1);","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        int indexOfSplit \u003d desc.indexOf(\" /by \");","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        if (indexOfSplit \u003d\u003d -1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No \\\" /by \\\" found in the input!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        String[] params \u003d desc.split(\" /by \");","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        if (params.length \u003d\u003d 0) { // happens when input is like \"deadline  \\at \"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description and timing is provided for the Deadline Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        if (params.length \u003d\u003d 1) { // happens when input is like \"deadline a \\at \"","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No timing is provided for the Deadline Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        if (params[0].length() \u003d\u003d 0) { // happens when input is like \"deadline  \\at a\"","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description is provided for the Deadline Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        return new DeadlineTask(params[0], params[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":68}},{"path":"src/main/java/Tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates an Event Task that occurs at a specific time frame.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" * It has a start and end time.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * @author Ong Han Yang","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    /** start/end time of the event, temporarily as a String */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    private String startEndTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"     * Constructor for an Event Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * @param desc description for the task","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     * @param startEndTime the start/end time of the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    public EventTask(String desc, String startEndTime) {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"        super(desc);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        this.startEndTime \u003d startEndTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"     * Overridden toString method to represent the EventTask as a String.","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"     * @return the String representation of an EventTask.","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), startEndTime);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"     * Method to parse a String to obtain an Event Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * Expected format: event \u003cdesc\u003e /at \u003ctime\u003e","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     * @param input the String command used to build the Task from.","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * @return the EventTask obtained.","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     * @throws InvalidInputException when no description is given or no timing is given.","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    public static EventTask parseInput(String input) throws InvalidInputException {","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        String desc \u003d input.substring(5);","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        if (desc.length() \u003c\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description and timing is provided for the Event Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        desc \u003d desc.substring(1);","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        int indexOfSplit \u003d desc.indexOf(\" /at \");","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        if (indexOfSplit \u003d\u003d -1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No \\\" /at \\\" found in the input!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        String[] params \u003d desc.split(\" /at \");","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        if (params.length \u003d\u003d 0) { // happens when input is like \"event  \\at \"","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description and timing is provided for the Event Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        if (params.length \u003d\u003d 1) { // happens when input is like \"event a \\at \"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No timing is provided for the Event Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        if (params[0].length() \u003d\u003d 0) { // happens when input is like \"event  \\at a\"","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description is provided for the Event Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        return new EventTask(params[0], params[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":65}},{"path":"src/main/java/Tasks/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates an invalid input exception, thrown when some parts of an input is expected","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" * but not obtained.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"     * Constructor for the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"     * @param message the message to be carried.","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":15}},{"path":"src/main/java/Tasks/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates a \"No Such tasks.Task\" exception, that occurs when trying to","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" * access a task that is not in a tasks.TaskList.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"public class NoSuchTaskException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"     * Constructor.","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"     * @param message the message to be included in the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public NoSuchTaskException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":15}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates a tasks.Task, which contains a String and a checkbox to indicate if it is done.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" * @author Ong Han Yang","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"    /** The description of the task.*/","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"    private String desc;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    /** Whether the task is done or not.*/","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    /** The Cross symbol used to show that a class is marked as done. Original: ✓ or \\u2713*/","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    private static String TICK \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     * Constructor to create a task.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     * Abstract class Task so this should not be used normally.","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"     * @param desc the description of the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    protected Task(String desc) {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"     * Marks the task as done/undone.","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     * @param isDone whether the task is done or not.","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    public void markAs(boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     * Overridden toString method to represent the task as a String.","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"[%s] %s\", isDone ? Task.TICK : \" \", desc);","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":44}},{"path":"src/main/java/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates a tasks.TaskList, that contains up to 100 tasks.","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * @author Ong Han Yang","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    /** The container for the items, implemented as an ArrayList*/","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * Constructor for a tasks.TaskList.","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"     * Method to add an item into the tasks.Task List","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"     * @param item the item to be added.","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    public void add(Task item) {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        this.list.add(item);","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"     * Overloaded method to add multiple items at a time.","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     * @param items all the items to be added.","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    public void add(Task... items) {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        this.list.addAll(List.of(items));","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * Method to remove an item from the list of tasks.","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     * @param taskIndex the index of the item to remove","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"     * @return the removed task.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    public Task delete(int taskIndex) throws NoSuchTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        if (taskIndex \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"            throw new NoSuchTaskException(\"There is no task with index \" + taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        return this.list.remove(taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"     * Method to return the length of the task list.","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"     * @return an integer representing the length of the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"    public int length() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        return this.list.size();","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"     * Method to mark a task as done or undone.","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"     * @param taskIndex the index of the task to be marked.","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"     * @param isDone whether the task is to be done or not.","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"     * @throws NoSuchTaskException when there is no such task with the index taskNum.","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"    public void markTask(int taskIndex, boolean isDone) throws NoSuchTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        if (taskIndex \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"            throw new NoSuchTaskException(\"There is no task with index \" + taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        this.list.get(taskIndex).markAs(isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"     * Method to display a stored task as a String.","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"     * @param taskIndex the index of the task to be displayed.","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"     * @throws NoSuchTaskException when there is no such task with the index taskNum.","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"    public String displayTask(int taskIndex) throws NoSuchTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"        if (taskIndex \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"            throw new NoSuchTaskException(\"There is no task with index \" + taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        return this.list.get(taskIndex).toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"     * Overridden toString method to display the tasks.TaskList as a String.","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of the tasks.TaskList.","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"            if (i \u003d\u003d list.size() - 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"                // For the last item, don\u0027t append a newline character.","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"                sb.append(String.format(\"%d. %s\", i + 1, list.get(i).toString()));","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"                sb.append(String.format(\"%d. %s\\n\", i + 1, list.get(i).toString()));","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":106}},{"path":"src/main/java/Tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package Tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * This class encapsulates a To-Do Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" * This is the most generic task.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * @author Ong Han Yang","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"public class ToDoTask extends Task{","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"     * Constructor for a To Do task.","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"     * @param desc the description of the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    public ToDoTask(String desc) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"        super(desc);","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     * Overridden toString method to display the TO-DO task as a String.","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"     * @return String representation of a TO-DO task.","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"     * Method to parse a String to obtain an To-Do Task.","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     * Expected format: todo \u003cdesc\u003e","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"     * @param input the String command used to build the Task from.","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     * @return the ToDoTask obtained.","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * @throws InvalidInputException when no description is given.","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    public static ToDoTask parseInput(String input) throws InvalidInputException {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        String desc \u003d input.substring(4);","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        if (desc.length() \u003c\u003d 1) { //happens when input is like \"todo \" or \"todo\"","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"            throw new InvalidInputException(\"No description is provided for the ToDo Task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"            return new ToDoTask(desc.substring(1));","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"hi","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"delete 3","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"todo ","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"todo sample task","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"deadline ","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"deadline no by here","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"deadline  /by ","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"deadline a /by ","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"deadline  /by a","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"deadline task /by end of year","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"event ","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"event no at here","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"event  /at ","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"event a /at ","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"event  /at a","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"event event /at 9 Aug","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"unmark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"delete 2","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Tasks\\*.java","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    pause \u003enul","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"java -classpath ..\\bin Fluffers \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"pause \u003enul","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"FestiveCat":5,"-":20}}]
