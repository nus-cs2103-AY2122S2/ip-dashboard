[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicollegann":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicollegann":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"Duke is a personal assistant chatbot that helps you to keep track of your daily tasks and schedules.","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"## Quick Start","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"2. Download the latest Duke.jar","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"3. Copy the file to the folder you want to use as the home folder for your application.","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"4. Open a command window in that folder.","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"5. Run the command `java -jar Duke.jar`. A folder named \u0027data\u0027 containing a file \u0027duke.txt\u0027 will be created in the same ","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"folder to store data from the application.","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"### Adding Task: `todo`","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"Adds a to-do task to a list.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"Example of usage: `todo return book`","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    [T][] return book","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"There is 1 task in the list now.    ","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"### Adding Task: `deadline`","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"Adds a task that needs to be done by a specific date and time to a list.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"Format: `deadline DESCRIPTION /by DATE TIME`","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"- Date Format: `yyyy-mm-dd`","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"- Time Format: `HH:mm`","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"Example of usage: `deadline submit assignment /by 2022-02-19 13:00`","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    [D][] submit assignment (by: 19 Feb 2022, 1:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"There are 2 tasks in the list now.    ","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"### Adding Task: `event`","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"Adds a task that takes place at a specific date and time to a list.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"Format: `event DESCRIPTION /at DATE TIME`","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"- Date Format: `yyyy-mm-dd`","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"- Time Format: `HH:mm`","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"Example of usage: `event interview /at 2022-02-21 10:00`","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"    [E][] interview (at: 21 Feb 2022, 10:00 AM)","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"There are 3 tasks in the list now.    ","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"### Listing Tasks: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"Displays list of all added tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"Format: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"Example of usage: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"    1. [T][] return book","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"    2. [D][] submit assignment (by: 19 Feb 2022, 1:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"    3. [E][] interview (at: 21 Feb 2022, 10:00 AM)","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"### Deleting Task: `delete`","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"Deletes the specified task from the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"- `INDEX` refers to the index number in the task list","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"Example of usage: `delete 2`","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"Okay, I\u0027ve deleted this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"    [D][] submit assignment (by: 19 Feb 2022, 1:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"There are 2 tasks in the list now.    ","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"### Marking Task: `mark`","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"Marks a specified task as complete.","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"- `INDEX` refers to the index number in the task list","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"nicollegann"},"content":"Nice! You\u0027ve completed this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"nicollegann"},"content":"    [T][X] return book        ","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"nicollegann"},"content":"### Unmarking Task: `unmark`","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"nicollegann"},"content":"Marks a specified task as complete.","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"nicollegann"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"nicollegann"},"content":"- `INDEX` refers to the index number in the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"nicollegann"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"nicollegann"},"content":"Okay, I\u0027ve marked this task as undone:","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"nicollegann"},"content":"    [T][] return book        ","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"nicollegann"},"content":"### Finding Task: `find`","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"nicollegann"},"content":"Find tasks which descriptions contain the specified keyword.","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":138,"author":{"gitId":"nicollegann"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"nicollegann"},"content":"- `KEYWORD` is case-sensitive","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"nicollegann"},"content":"- Tasks with words partially matching keyword will also be returned ","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"nicollegann"},"content":"(e.g. proj will match project)","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"nicollegann"},"content":"Example of usage: `find assignment`","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":147,"author":{"gitId":"nicollegann"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"nicollegann"},"content":"    1. [D][] submit assignment (by: 19 Feb 2022, 1:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"nicollegann"},"content":"### Updating Task: `update`","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"nicollegann"},"content":"Updates a task with a given new description.","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"nicollegann"},"content":"Format: ","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"nicollegann"},"content":"- For todo task: `update INDEX DESCRIPTION`","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"nicollegann"},"content":"- For deadline task: `update INDEX DESCRIPTION /by DATE TIME`","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"nicollegann"},"content":"- For event task: `update INDEX DESCRIPTION /at DATE TIME`","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"nicollegann"},"content":"Example of usage: `update 2 interview /at 2022-02-21 12:00`","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"nicollegann"},"content":"Done! This is the updated task:","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"nicollegann"},"content":"    [E][] interview (at: 21 Feb 2022, 12:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"nicollegann"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":170,"author":{"gitId":"nicollegann"},"content":"### Exiting Application: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":171,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":172,"author":{"gitId":"nicollegann"},"content":"Closes the app after goodbye message.","lastModifiedDate":"2022-02-16"},{"lineNumber":173,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":174,"author":{"gitId":"nicollegann"},"content":"Format: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":175,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":176,"author":{"gitId":"nicollegann"},"content":"Example of usage: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":178,"author":{"gitId":"nicollegann"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":180,"author":{"gitId":"nicollegann"},"content":"\"Bye! Hope to see you again soon!\"","lastModifiedDate":"2022-02-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":182,"author":{"gitId":"nicollegann"},"content":"                                                                                                                   |","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"nicollegann":150,"-":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" * Duke is a Personal Assistant Chatbot that helps a user to keep track of various things.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"     * Constructor class.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    public Duke() {","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     * Returns the welcome greeting to be shown upon start up.","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     * @return Welcome greeting.","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    public static String getGreeting() {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        return Ui.showWelcome();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     * Generates response based on user input.","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     * @param input Input from user.","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * @return Response message from Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"            return ui.showResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":56,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the add command to add a task to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final Task task;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the add command, prints confirmation message and saves the updated task list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        taskList.add(this.task);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        assert taskList.getTotalTasks() \u003e 0 : \"Task list should have at least one task.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        ui.setResponse(\"Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"                + Ui.showIndent() + this.task + \"\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"                + taskList.getListStatus());","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":51}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" * Represents the command given by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"nicollegann":14}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents a delete command to delete a task from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the delete command, prints confirmation message and saves the updated task list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"            Task taskDeleted \u003d taskList.delete(this.taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            ui.setResponse(\"Okay, I\u0027ve deleted this task:\\n\" + Ui.showIndent()","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"                    + taskDeleted + \"\\n\" + taskList.getListStatus());","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":53}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents the exit command to end the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Prints goodbye message.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        ui.setResponse(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @return True.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" * Represents the find command to find a task by searching for a keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    private String keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword used to find tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * Executes the find command to find tasks containing the keyword and prints them.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"        String result \u003d taskList.getTasksWithKeyword(this.keyword);","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"        ui.setResponse(result);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nicollegann":43}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents an invalid command.","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Executes the invalid command and prints error message.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        ui.setResponse(\"Oh no! I don\u0027t understand what that means...\");","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"nicollegann":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents a list command to output all tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Executes the list command and prints out list.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        String listToPrint \u003d taskList.getList();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        ui.setResponse(listToPrint);","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the mark command to mark a task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the mark command, prints confirmation message and saves updated list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"            Task taskMarked \u003d taskList.mark(this.taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            ui.setResponse(\"Nice! You\u0027ve completed this task:\\n\" + Ui.showIndent() + taskMarked);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":51}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the unmark command to mark a task as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the unmark command, prints confirmation message and saves updated list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"            Task taskUnmarked \u003d taskList.unmark(this.taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            ui.setResponse(\"Okay, I\u0027ve marked this task as undone:\\n\" + Ui.showIndent() + taskUnmarked);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":51}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the update command to update a task\u0027s description.","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    private final String updatedDescription;","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * Class constructor","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"     * @param updatedDescription The new description of the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    public UpdateCommand(int taskNum, String updatedDescription) {","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"        this.updatedDescription \u003d updatedDescription;","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * Executes the update command, prints confirmation message and saves updated list to file.","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"            Task updatedTask \u003d taskList.update(this.taskNum, this.updatedDescription);","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            ui.setResponse(\"Done! This is the updated task:\\n\" + Ui.showIndent() + updatedTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" tasks in the list.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"nicollegann":54}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":" * DialogBox is a custom control that consists of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * @param text Text in Label.","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @param img Image to be shown along with text.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"        final Circle clip \u003d new Circle(35, 30, 30);","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"    private void flip() {","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"     * Creates DialogBox for user.","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"     * @param text Text to be shown.","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"     * @param img Image to accompany text.","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"     * @return DialogBox for user.","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     * Creates DialogBox for Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"     * @param text Text to be shown.","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"     * @param img Image to accompany text.","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"     * @return DialogBox for Duke.","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"        db.flip();","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"        return db;","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"nicollegann":83}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"public class Launcher {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"nicollegann":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"            stage.show();","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"nicollegann":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bear.jpg\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dog.jpg\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     * Initialises scrollPane and shows welcome message.","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        this.showWelcomeOnStart();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     * Creates dialog box to show welcome message on start up.","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    private void showWelcomeOnStart() {","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        String greeting \u003d Duke.getGreeting();","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        );","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"        );","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"        if (response.equals(\"Bye! Hope to see you again soon!\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"            delay.play();","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"nicollegann":77}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents a deadline, with a specific date and time.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    protected String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * @param by The date and time of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the status, description and datetime of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        String formattedDateTime \u003d by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDateTime + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     * @return \"D\", which is the short notation of a deadline type.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    public String getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     * Returns the description and datetime of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the deadline of format: description | datetime","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"        return this.description + \" | \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"     * Sets datetime of the deadline.","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"     * @param newBy The new datetime to be set for the deadline.","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"    public void setDateTime(LocalDateTime newBy) {","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"        this.by \u003d newBy;","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     * Updates the deadline task with the given description.","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     * @param description The description to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"     * @return The updated task.","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If given description is invalid.","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    public Task updateTask(String description) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"        String[] descrArr \u003d Parser.splitDescriptionByKeyword(description, \"/by\", \"deadline\");","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"        String newDescription \u003d descrArr[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"        LocalDateTime newDateTime \u003d Parser.parseDateTime(descrArr[1]);","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"        setDescription(newDescription);","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"        setDateTime(newDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":85}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents an event, with a specific date and time.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    protected String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * @param at the date and time of the event","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the status, description and datetime of event.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        String formattedDateTime \u003d at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDateTime + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     * @return \"E\", which is the short notation of an event type.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    public String getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     * Returns the description and datetime of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the event of format: description | datetime","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"        return this.description + \" | \" + at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"     * Sets datetime of event.","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"     * @param newAt The new datetime to be set for the event.","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"    public void setDateTime(LocalDateTime newAt) {","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"        this.at \u003d newAt;","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     * Updates the event task with the given description.","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     * @param description The description to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"     * @return The updated task.","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If given description is invalid.","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    public Task updateTask(String description) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"        String[] descrArr \u003d Parser.splitDescriptionByKeyword(description, \"/at\", \"event\");","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"        String newDescription \u003d descrArr[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"        LocalDateTime newDateTime \u003d Parser.parseDateTime(descrArr[1]);","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"        setDescription(newDescription);","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"        setDateTime(newDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":85}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":" * Represents a task to be completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"    protected String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Class Constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * @return The type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    public abstract String getType();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * Updates task with the given description.","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @param description The description to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * @return The updated task.","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If description given is invalid and task cannot be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"    public abstract Task updateTask(String description) throws DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of the status and description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"     * @return Description of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"     * Returns the status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"     * @return True if task is completed, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"     * Returns whether task description contains given keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword used to search for tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"     * @return True if the task description contains keyword, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"     * Sets task description to the given description.","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"     * @param newDescription The new description to replace the current one.","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":97}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":" * Represents a task (with no date/time) to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    protected String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"     * Class Constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * @param description The description of a todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of a todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of the status and description of todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * @return \"T\", which is a short notation of a todo type.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"    public String getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     * Updates the todo task with the given description.","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     * @param description The description to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * @return The updated task.","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"    public Task updateTask(String description) {","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        setDescription(description);","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":52}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":" * Represents the exception specific to Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"     * @param message The error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"        super(message);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"nicollegann":16}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"import duke.command.UpdateCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":" * Represents the parse function of the program. Deals with parsing user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * Returns the Command parsed from the user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @param fullInput User input.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * @return Command to execute further operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    public static Command parse(String fullInput) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        String[] inputArr \u003d fullInput.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        String command \u003d inputArr[0].toLowerCase();","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        Command parsedCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        switch(command) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new ListCommand();","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"            int taskNum \u003d getTaskNumber(inputArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new DeleteCommand(taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"            taskNum \u003d getTaskNumber(inputArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new MarkCommand(taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"            taskNum \u003d getTaskNumber(inputArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new UnmarkCommand(taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"            String description \u003d getDescription(inputArr, fullInput, command);","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"            Task task \u003d new Todo(description);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new AddCommand(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"            description \u003d getDescription(inputArr, fullInput, command);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"            String[] descrArr \u003d splitDescriptionByKeyword(description, \"/by\", command);","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"            task \u003d new Deadline(descrArr[0], parseDateTime(descrArr[1]));","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new AddCommand(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"        case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"            description \u003d getDescription(inputArr, fullInput, command);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"            descrArr \u003d splitDescriptionByKeyword(description, \"/at\", command);","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"            task \u003d new Event(descrArr[0], parseDateTime(descrArr[1]));","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new AddCommand(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"        case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"            String keyword \u003d getKeyword(inputArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new FindCommand(keyword);","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"        case \"update\":","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"            taskNum \u003d getTaskNumber(inputArr);","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"            description \u003d getNewDescription(inputArr, fullInput);","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new UpdateCommand(taskNum, description);","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new ExitCommand();","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"        default:","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"            parsedCommand \u003d new InvalidCommand();","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"        return parsedCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"     * Returns the task number in user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"     * @param inputArr The user input split by white spaces.","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"     * @return Task number.","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If task number is not provided.","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"    public static int getTaskNumber(String[] inputArr) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Please specify a task number!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"        return Integer.parseInt(inputArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"nicollegann"},"content":"     * Returns the String description provided in the user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"     * @param inputArr The user input split by white spaces.","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"nicollegann"},"content":"     * @param fullInput The entire string given in user input.","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"     * @param command The command that the description belongs to.","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"     * @return String description.","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If the description is not provided.","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"nicollegann"},"content":"    public static String getDescription(String[] inputArr, String fullInput, String command) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"nicollegann"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Oops, \" + (command.equals(\"event\") ? \"an \" : \"a \") + command","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"nicollegann"},"content":"                    + \" description cannot be left empty!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"nicollegann"},"content":"        return fullInput.replace(command + \" \", \"\");","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":122,"author":{"gitId":"nicollegann"},"content":"     * Returns the new String description provided in the user input.","lastModifiedDate":"2022-02-13"},{"lineNumber":123,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"nicollegann"},"content":"     * @param inputArr The user input split by white spaces.","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"nicollegann"},"content":"     * @param fullInput The entire string given in user input.","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"nicollegann"},"content":"     * @return String description to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If the description is not provided.","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"nicollegann"},"content":"    public static String getNewDescription(String[] inputArr, String fullInput) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"nicollegann"},"content":"        if (inputArr.length \u003d\u003d 2) {","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Oops, please provide a new description!\");","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":133,"author":{"gitId":"nicollegann"},"content":"        return fullInput.substring(9);","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":135,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":136,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"nicollegann"},"content":"     * Returns the String keyword in the user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"nicollegann"},"content":"     * @param inputArr The user input split by white spaces.","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"nicollegann"},"content":"     * @return String keyword.","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If a keyword is not provided or if more than one keyword is provided.","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"nicollegann"},"content":"    public static String getKeyword(String[] inputArr) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"nicollegann"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Please specify a keyword!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"nicollegann"},"content":"        } else if (inputArr.length \u003e 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Please specify only one keyword!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"nicollegann"},"content":"        return inputArr[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"nicollegann"},"content":"     * Splits a String description by a given keyword.","lastModifiedDate":"2022-02-09"},{"lineNumber":154,"author":{"gitId":"nicollegann"},"content":"     * Returns a String[] where the first String is the task description and the second String is the date time.","lastModifiedDate":"2022-02-09"},{"lineNumber":155,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"nicollegann"},"content":"     * @param description The task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":157,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword to be found in the description to check if a date/time is specified.","lastModifiedDate":"2022-02-09"},{"lineNumber":158,"author":{"gitId":"nicollegann"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2022-02-09"},{"lineNumber":159,"author":{"gitId":"nicollegann"},"content":"     * @return String[] containing task description and datetime.","lastModifiedDate":"2022-02-09"},{"lineNumber":160,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If keyword is not given in description.","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"nicollegann"},"content":"    public static String[] splitDescriptionByKeyword(String description, String keyword, String taskType)","lastModifiedDate":"2022-02-09"},{"lineNumber":163,"author":{"gitId":"nicollegann"},"content":"            throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":164,"author":{"gitId":"nicollegann"},"content":"        if (!description.contains(keyword)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":165,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Oops, please use \" + keyword","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"nicollegann"},"content":"                    + \" to set a date and time for this \" + taskType + \"!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"nicollegann"},"content":"        String[] descrArr \u003d description.split(\" \" + keyword + \" \");","lastModifiedDate":"2022-02-13"},{"lineNumber":169,"author":{"gitId":"nicollegann"},"content":"        if (descrArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-13"},{"lineNumber":170,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Oops, please provide description in this format:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":171,"author":{"gitId":"nicollegann"},"content":"                + \"\u003cdescription\u003e \" + keyword + \" \u003cdate as yyyy-mm-dd\u003e \u003ctime as HH:mm\u003e\");","lastModifiedDate":"2022-02-15"},{"lineNumber":172,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":173,"author":{"gitId":"nicollegann"},"content":"        return descrArr;","lastModifiedDate":"2022-02-13"},{"lineNumber":174,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":175,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":176,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"nicollegann"},"content":"     * Returns LocalDateTime object.","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"nicollegann"},"content":"     * @param dt The string of format yyyy-MM-dd HH:mm","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"nicollegann"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"nicollegann"},"content":"     * @throws DateTimeParseException If given string is not in the specified format.","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"nicollegann"},"content":"    public static LocalDateTime parseDateTime(String dt) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":184,"author":{"gitId":"nicollegann"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"nicollegann"},"content":"            dateTime \u003d LocalDateTime.parse(dt, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"nicollegann"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid date/time format.\\n    \"","lastModifiedDate":"2022-02-09"},{"lineNumber":189,"author":{"gitId":"nicollegann"},"content":"                    + \"Please use the following format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2022-02-09"},{"lineNumber":190,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":191,"author":{"gitId":"nicollegann"},"content":"        return dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":193,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":193}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":" * Represents the storage function of the program. Deals with loading and saving tasks to a file.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     * Creates a new file if it does not already exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * @param filePath The filepath to the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"        createFileAndFolderIfDoesNotExist();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * Creates the text file and folder if they do not already exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    public void createFileAndFolderIfDoesNotExist() {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"            System.out.println(\"Unable to create file to save tasks.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     * Returns the TaskList stored in the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If the tasks cannot be loaded.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Error loading tasks. File does not exist.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"                String[] taskComponents \u003d task.split(\" [|] \"); // [type, status, description, time(if any)]","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"                String taskType \u003d taskComponents[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"                String status \u003d taskComponents[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"                String description \u003d taskComponents[2];","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"                Task t;","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"                switch (taskType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"                case \"D\":","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"                    String datetime \u003d taskComponents[3];","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"                    t \u003d new Deadline(description, Parser.parseDateTime(datetime));","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"                case \"E\":","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"                    datetime \u003d taskComponents[3];","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"                    t \u003d new Event(description, Parser.parseDateTime(datetime));","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"                case \"T\":","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"                    t \u003d new Todo(description);","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"                default:","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"                    throw new DukeException(\"Error loading tasks. Data saved in file has incorrect format.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"                currentTasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"                boolean isCompleted \u003d status.equals(\"1\");","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"                if (isCompleted) {","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"                    t.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Unable to load saved tasks.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"        return currentTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"     * Saves the changes to TaskList to the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The new TaskList to be stored.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If changes cannot be saved to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"nicollegann"},"content":"    public void saveToHardDisk(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"            String formattedTaskList \u003d taskList.formatListForSaving();","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"nicollegann"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"            fw.write(formattedTaskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Unable to save changes to hard disk :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":115}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents the list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    private int totalTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * Class constructor specifying list of tasks to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param currentTasks The ArrayList of current tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public TaskList(ArrayList\u003cTask\u003e currentTasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        this.tasks \u003d currentTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.totalTasks \u003d tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        this.totalTasks \u003d 0;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * Returns the current status of the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     * @return String stating the number of tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    public String getListStatus() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        if (this.totalTasks \u003e 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            return \"There are \" + totalTasks + \" tasks in the list now.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            return \"There is \" + totalTasks + \" task in the list now.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the entire list.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of every task in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    public String getList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"        if (totalTasks \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"            list +\u003d \"There are no tasks in your list.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"            list +\u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"            int index \u003d 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"            for (int n \u003d 0; n \u003c totalTasks; n++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"                Task t \u003d tasks.get(n);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"                list +\u003d \"\\n\" + Ui.showIndent() + index + \".\" + t.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"                index++;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"        return list;","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the list to be stored in hard disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of every task in the list with format: type | isDone | description.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"    public String formatListForSaving() {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"            list \u003d list + t.getType() + \" | \" + (t.getIsDone() ? \"1\" : \"0\") + \" | \" + t.getDescription() + \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"        return list;","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"        return this.totalTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"        totalTasks++;","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"     * Returns the task deleted from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task in the list before deletion.","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"nicollegann"},"content":"        Task taskToDelete \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"        tasks.remove(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"        totalTasks--;","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"nicollegann"},"content":"        return taskToDelete;","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"nicollegann"},"content":"     * Returns the task to be marked as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be marked in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"nicollegann"},"content":"     * @return The marked task.","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"nicollegann"},"content":"    public Task mark(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"nicollegann"},"content":"        Task taskToMark \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"nicollegann"},"content":"        taskToMark.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"nicollegann"},"content":"        return taskToMark;","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"nicollegann"},"content":"     * Returns the task to be marked as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be marked in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"nicollegann"},"content":"     * @return The unmarked task.","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"nicollegann"},"content":"    public Task unmark(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"nicollegann"},"content":"        Task taskToUnmark \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":131,"author":{"gitId":"nicollegann"},"content":"        taskToUnmark.markAsUndone();","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"nicollegann"},"content":"        return taskToUnmark;","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of tasks that matches keyword.","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"nicollegann"},"content":"     * If no task matches keyword, return not found message.","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword used to search for tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of matching tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If there are no matching tasks in list.","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"nicollegann"},"content":"    public String getTasksWithKeyword(String keyword) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"nicollegann"},"content":"        String list \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"nicollegann"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"nicollegann"},"content":"        for (int n \u003d 0; n \u003c totalTasks; n++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"nicollegann"},"content":"            Task task \u003d tasks.get(n);","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"nicollegann"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"nicollegann"},"content":"                count++;","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"nicollegann"},"content":"                list +\u003d \"\\n\" + Ui.showIndent() + count + \".\" + task;","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"nicollegann"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"nicollegann"},"content":"            return list;","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Sorry, there are no tasks that match keyword.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":159,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":162,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":163,"author":{"gitId":"nicollegann"},"content":"     * Returns the task with the updated description.","lastModifiedDate":"2022-02-13"},{"lineNumber":164,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":165,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be updated.","lastModifiedDate":"2022-02-13"},{"lineNumber":166,"author":{"gitId":"nicollegann"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":167,"author":{"gitId":"nicollegann"},"content":"     * @return The updated task.","lastModifiedDate":"2022-02-13"},{"lineNumber":168,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":169,"author":{"gitId":"nicollegann"},"content":"    public Task update(int taskNum, String description) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":170,"author":{"gitId":"nicollegann"},"content":"        Task taskToUpdate \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":171,"author":{"gitId":"nicollegann"},"content":"        taskToUpdate.updateTask(description);","lastModifiedDate":"2022-02-13"},{"lineNumber":172,"author":{"gitId":"nicollegann"},"content":"        return taskToUpdate;","lastModifiedDate":"2022-02-13"},{"lineNumber":173,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":174,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":174}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":" * Represents the user interaction function of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    private static final String intro \u003d \"Hello! I\u0027m Duke! What can I do for you?\";","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"    private static final String indent \u003d \"    \";","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    private String response;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Returns the default indentation of output.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @return Indentation of four spaces.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    public static String showIndent() {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"        return indent;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     * Returns the welcome message when user first runs program.","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    public static String showWelcome() {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"        return Ui.intro;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * Returns error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * @param message The error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    public String showError(String message) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        return message;","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     * Sets the current response generated by Duke based on user input.","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"     * @param message The output to be shown.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    public void setResponse(String message) {","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        response \u003d message;","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     * Returns the latest response generated by Duke based on user input.","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     * @return Response message.","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"    public String showResponse() {","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"        \u003cHBox maxHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #f7f3dc; -fx-background-radius: 15;\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"                \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#2c2c2c\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"                        \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"        \u003cHBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"                \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"nicollegann":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #f0e2d3;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #e3e7e8;\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Enter input here...\"/\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" pannable\u003d\"true\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #f7f3dc;\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #f0e2d3;\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"nicollegann":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    public void testStringConversion() throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"[D][ ] submit assignment (by: 29 Jan 2022, 2:00 PM)\",","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"                new Deadline(\"submit assignment\", Parser.parseDateTime(\"2022-01-29 14:00\")).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    public void getType() throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"D\",","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"                new Deadline(\"submit assignment\", Parser.parseDateTime(\"2022-01-29 14:00\")).getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":22}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class EventTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    public void testStringConversion() throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"[E][ ] project meeting (at: 25 Jan 2022, 10:30 AM)\",","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"                new Event(\"project meeting\", Parser.parseDateTime(\"2022-01-25 10:30\")).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    public void getType() throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"E\",","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"                new Event(\"project meeting\", Parser.parseDateTime(\"2022-01-25 10:30\")).getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":22}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"[T][ ] buy lunch\", new Todo(\"buy lunch\").toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    public void getType() {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"T\", new Todo(\"buy lunch\").getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":17}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    public void parseDelete_withTaskSpecified_success() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"        assertFalse(Parser.parse(\"delete 1\").isExit());","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    public void parseDelete_noTaskSpecified_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"            assertEquals(0, Parser.parse(\"delete\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"            assertEquals(\"Please specify a task number!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public void parseTodo_withDescription_success() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        assertFalse(Parser.parse(\"todo homework\").isExit());","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    public void parseTodo_descriptionBlank_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"            assertEquals(0, Parser.parse(\"todo\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            assertEquals(\"Oops, a todo description cannot be left empty!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    public void parseDeadline_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"            assertEquals(0, Parser.parse(\"deadline send email /by 01/01/2022 1400\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"            assertEquals(\"Invalid date/time format.\\n    \" + \"Please use the following format: yyyy-mm-dd HH:mm\",","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"todo buy lunch","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"deadline submit assignment /by 2022-01-29 14:00","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"event project meeting /at 2022-01-25 10:30","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"unmark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"mark","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"delete","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"delete 2","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"delete 4","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"deadline send email /by 2022/01/29 14:00","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"event tutorial /at 2022-01-25, 2pm","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"find lunch","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"find meeting","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"nicollegann":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicollegann":2,"-":19}}]
