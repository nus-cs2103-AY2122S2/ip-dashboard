[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicollegann":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicollegann":1,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":" * Duke is a Personal Assistant Chatbot that helps a user to keep track of various things.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * Constructor class.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * @param filePath The filepath to the text file to save tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * @param fileName The name of the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"        storage \u003d new Storage(filePath, fileName);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     * Starts the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    public void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"                String fullCommand \u003d ui.readInput();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"                ui.showLine(); // show the divider line (\"―――――\")","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"        new Duke(\"data/\", \"duke.txt\").run();","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":58,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the add command to add a task to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final Task task;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the add command, prints confirmation message and saves the updated task list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        taskList.add(this.task);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        ui.printOutput(\"Got it! I\u0027ve added this task:\\n  \"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"                + ui.showIndent() + this.task + \"\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"                + ui.showIndent() + taskList.getListStatus());","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" * Represents the command given by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"nicollegann":14}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents a delete command to delete a task from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the delete command, prints confirmation message and saves the updated task list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"            Task taskDeleted \u003d taskList.delete(this.taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            ui.printOutput(\"Okay, I\u0027ve deleted this task:\\n  \" + ui.showIndent()","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"                    + taskDeleted + \"\\n\" + ui.showIndent() + taskList.getListStatus());","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" in the list.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":52}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents the exit command to end the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Prints goodbye message.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        ui.printOutput(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @return True.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents the find command to find a task by searching for a keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    private String keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword used to find tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * Executes the find command to find tasks containing the keyword and prints them.","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        String result \u003d taskList.findTasksWithKeyword(this.keyword);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"        ui.printOutput(result);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nicollegann":42}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents an invalid command.","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Executes the invalid command and prints error message.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        ui.showError(\"This is an invalid command!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"nicollegann":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents a list command to output all tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * Executes the list command and prints out list.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        String listToPrint \u003d taskList.getList();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        ui.printOutput(listToPrint);","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the mark command to mark a task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the mark command, prints confirmation message and saves updated list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"            Task taskMarked \u003d taskList.mark(this.taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            ui.printOutput(\"Nice! You\u0027ve completed this task:\\n      \" + taskMarked);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" in the list.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":52}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import duke.util.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Represents the unmark command to mark a task as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private final int taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Executes the unmark command, prints confirmation message and saves updated list to file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * @param ui The ui of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @param storage The storage of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If updated task list cannot be saved to file, or if the task number given is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        int currentTotalTasks \u003d taskList.getTotalTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        if (taskNum \u003c\u003d currentTotalTasks \u0026\u0026 taskNum \u003e 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"            Task taskUnmarked \u003d taskList.unmark(this.taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            ui.printOutput(\"Okay, I\u0027ve marked this task as undone:\\n      \" + taskUnmarked);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            storage.saveToHardDisk(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid task number. There are \" + currentTotalTasks + \" in the list.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * Returns true if command is an ExitCommand, else returns false.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * @return False.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":51}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":" * Represents a deadline, with a specific date and time.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    protected String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param by The date and time of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the status, description and datetime of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        String formattedDateTime \u003d by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDateTime + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"     * @return \"D\", which is the short notation of a deadline type.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    public String getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     * Returns the description and datetime of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the deadline of format: description | datetime","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        return this.description + \" | \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":" * Represents an event, with a specific date and time.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    protected String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     * @param at the date and time of the event","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the status, description and datetime of event.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        String formattedDateTime \u003d at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDateTime + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"     * @return \"E\", which is the short notation of an event type.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    public String getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     * Returns the description and datetime of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     * @return The string representation of the event of format: description | datetime","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        return this.description + \" | \" + at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":56}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":" * Represents a task to be completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"    protected String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"     * Class Constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * @return The type of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    public abstract String getType();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of the status and description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"     * @return Description of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"     * Returns the status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     * @return True if task is completed, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"     * Returns whether task description contains given keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword used to search for tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     * @return True if the task description contains keyword, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":77}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":" * Represents a task (with no date/time) to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    protected String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"     * Class Constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * @param description The description of a todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of a todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of the status and description of todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * Returns the type of the todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * @return \"T\", which is a short notation of a todo type.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"    public String getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nicollegann":40}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":" * Represents the exception specific to Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"     * @param message The error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"        super(message);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"nicollegann":16}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":" * Represents the parse function of the program. Deals with parsing user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public Parser() {}","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * Returns the Command parsed from the user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * @param fullInput User input.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     * @return Command to execute further operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    public static Command parse(String fullInput) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        String[] inputArr \u003d fullInput.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        String command \u003d inputArr[0].toLowerCase();","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        String description \u003d fullInput.replace(command + \" \", \"\");","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            switch(command) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"            case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"                return new ListCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Please specify a task number!\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"                    int taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"                    return new DeleteCommand(taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Please specify a task number!\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"                    int taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"                    return new MarkCommand(taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Please specify a task number!\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"                    int taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"                    return new UnmarkCommand(taskNum);","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Oops, a todo description cannot be left empty!\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"                    Task task \u003d new Todo(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Oops, a deadline description cannot be left empty!\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"                    String[] descrArr \u003d description.split(\" /by \");","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"                    if (keywordExists(descrArr, \"/by\", \"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"                        LocalDateTime dateTime \u003d parseDateTime(descrArr[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"                        Task task \u003d new Deadline(descrArr[0], dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"                        return new AddCommand(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"            case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Oops, an event description cannot be left empty!\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"                    String[] descrArr \u003d description.split(\" /at \");","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"                    if (keywordExists(descrArr, \"/at\", \"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"                        LocalDateTime dateTime \u003d parseDateTime(descrArr[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"                        Task task \u003d new Event(descrArr[0], dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"                        return new AddCommand(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"            case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"                if (descriptionExists(inputArr, \"Please specify a keyword!\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"                    if (inputArr.length \u003e 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"                        throw new DukeException(\"Please specify only one keyword!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"                    } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"                        return new FindCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"            default:","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"                throw new DukeException(\"Oh no! I don\u0027t understand what that means...\");","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Invalid date/time format.\\n    \"","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"                    + \"Please use the following format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"        return new InvalidCommand();","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"     * Returns a boolean indicating whether there is a task description provided in the user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"nicollegann"},"content":"     * @param inputArr The user input split by spaces.","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"nicollegann"},"content":"     * @param errorMessage The error message to be printed if description does not exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"nicollegann"},"content":"     * @return True if there is a description, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If the description is not provided.","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"nicollegann"},"content":"    public static boolean descriptionExists(String[] inputArr, String errorMessage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"nicollegann"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"nicollegann"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"nicollegann"},"content":"     * Returns a boolean indicating whether there is a given keyword provided in the task description.","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"nicollegann"},"content":"     * @param descrArr The description split by the keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword to be found in the description.","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"nicollegann"},"content":"     * @param taskType The type of the task (e.g. deadline, event)","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"nicollegann"},"content":"     * @return True if keyword can be found, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If keyword is not found in description.","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"nicollegann"},"content":"    public static boolean keywordExists(String[] descrArr, String keyword, String taskType) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"nicollegann"},"content":"        if (descrArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Oops, please use \" + keyword","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"nicollegann"},"content":"                    + \" to set a date and time for this \" + taskType + \"!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"nicollegann"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"nicollegann"},"content":"     * Returns LocalDateTime.","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"nicollegann"},"content":"     * @param dt The string of format yyyy-MM-dd HH:mm","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"nicollegann"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"nicollegann"},"content":"     * @throws DateTimeParseException If given string is not in the specified format.","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"nicollegann"},"content":"    public static LocalDateTime parseDateTime(String dt) throws DateTimeParseException {","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"nicollegann"},"content":"        return LocalDateTime.parse(dt,","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"nicollegann"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":154}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":" * Represents the storage function of the program. Deals with loading and saving tasks to a file.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    private final String fileName;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     * Creates a new file if it does not already exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * @param filePath The filepath to the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     * @param fileName The name of the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    public Storage(String filePath, String fileName) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"        createFileAndFolderIfDoesNotExist();","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     * Creates the text file and folder if they do not already exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    public void createFileAndFolderIfDoesNotExist() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        File folder \u003d new File(filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"                folder.mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"                File file \u003d new File(filePath + fileName);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"            System.out.println(\"Unable to create file to save tasks.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"     * Returns the TaskList stored in the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If the tasks cannot be loaded.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"        File file \u003d new File(filePath + fileName); // create a File for the given file path","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"        ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"                Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"                    String task \u003d s.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"                    String[] taskComponents \u003d task.split(\" [|] \"); // [type, status, description, time(if any)]","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"                    Task t;","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"                    switch (taskComponents[0]) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"                        t \u003d new Deadline(taskComponents[2], Parser.parseDateTime(taskComponents[3]));","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"                        break;","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"                        t \u003d new Event(taskComponents[2], Parser.parseDateTime(taskComponents[3]));","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"                        break;","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"                    default:","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"                        t \u003d new Todo(taskComponents[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"                        break;","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"                    currentTasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"                    if (taskComponents[1].equals(\"1\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"                        t.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"                throw new DukeException(\"Unable to load saved tasks.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"        return currentTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"     * Saves the changes to TaskList to the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"     * @param taskList The new TaskList to be stored.","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"     * @throws DukeException If changes cannot be saved to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"    public void saveToHardDisk(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"            String formattedTaskList \u003d taskList.formatListForSaving();","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"            FileWriter fw \u003d new FileWriter(filePath + fileName);","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"            fw.write(formattedTaskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"nicollegann"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"            throw new DukeException(\"Unable to save changes to hard disk :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":110}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents the list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    private int totalTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"     * Class constructor specifying list of tasks to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"     * @param currentTasks The ArrayList of current tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public TaskList(ArrayList\u003cTask\u003e currentTasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        this.tasks \u003d currentTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        this.totalTasks \u003d tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"        this.totalTasks \u003d 0;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"     * Returns the current status of the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     * @return String stating the number of tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"    public String getListStatus() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        if (this.totalTasks \u003e 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"            return \"There are \" + totalTasks + \" tasks in the list now.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            return \"There is \" + totalTasks + \" task in the list now.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the entire list.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of every task in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    public String getList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"        if (totalTasks \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"            list +\u003d \"There are no tasks in your list.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"            list +\u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"            int index \u003d 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"            for (int n \u003d 0; n \u003c totalTasks; n++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"                Task t \u003d tasks.get(n);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"                list +\u003d \"\\n    \" + index + \".\" + t.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"                index++;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"        return list;","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"     * Returns the string representation of the list to be stored in hard disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of every task in the list with format: type | isDone | description.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"    public String formatListForSaving() {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"            list \u003d list + t.getType() + \" | \" + (t.getIsDone() ? \"1\" : \"0\") + \" | \" + t.getDescription() + \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"        return list;","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"        return this.totalTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"        totalTasks++;","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"     * Returns the task deleted from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task in the list before deletion.","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"nicollegann"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"nicollegann"},"content":"        Task taskToDelete \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"nicollegann"},"content":"        tasks.remove(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"nicollegann"},"content":"        totalTasks--;","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"nicollegann"},"content":"        return taskToDelete;","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"nicollegann"},"content":"     * Returns the task to be marked as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be marked in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"nicollegann"},"content":"     * @return The marked task.","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"nicollegann"},"content":"    public Task mark(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"nicollegann"},"content":"        Task taskToMark \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"nicollegann"},"content":"        taskToMark.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"nicollegann"},"content":"        return taskToMark;","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"nicollegann"},"content":"     * Returns the task to be marked as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"nicollegann"},"content":"     * @param taskNum The index of the task to be marked in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"nicollegann"},"content":"     * @return The unmarked task.","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"nicollegann"},"content":"    public Task unmark(int taskNum) {","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"nicollegann"},"content":"        Task taskToUnmark \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":131,"author":{"gitId":"nicollegann"},"content":"        taskToUnmark.markAsUndone();","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"nicollegann"},"content":"        return taskToUnmark;","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"nicollegann"},"content":"     * Returns the list of matching tasks. If no task matches keyword, return not found message.","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"nicollegann"},"content":"     * @param keyword The keyword used to search for tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"nicollegann"},"content":"     * @return String representation of matching tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"nicollegann"},"content":"    public String findTasksWithKeyword(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"nicollegann"},"content":"        String list \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"nicollegann"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"nicollegann"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"nicollegann"},"content":"        for (int n \u003d 0; n \u003c totalTasks; n++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"nicollegann"},"content":"            Task task \u003d tasks.get(n);","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"nicollegann"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"nicollegann"},"content":"                count++;","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"nicollegann"},"content":"                list +\u003d \"\\n    \" + count + \".\" + task;","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"nicollegann"},"content":"            index++;","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"nicollegann"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"nicollegann"},"content":"            return list;","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"nicollegann"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"nicollegann"},"content":"            return \"Sorry, there are no tasks that match keyword.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":161}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Represents the user interaction function of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    // Divider and indentation for design purpose","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"    private static final String curlyLine \u003d \"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private static final String dashLine \u003d \"    -------------------------------------------------------------\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    private static final String indent \u003d \"    \";","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    private static final String logo \u003d \"     ____        _\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"            + \"    |  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"            + \"    | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"            + \"    | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    private static final String intro \u003d indent + \"Hello! I\u0027m Duke!\\n\" + indent + \"What can I do for you?\";","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    private BufferedReader br;","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"        this.br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"     * Returns the user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     * @return String input by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"     * @throws IOException If input cannot be read.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"    public String readInput() throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        return br.readLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     * Returns the divider line.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"     * @return Line of style ~~~.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"    public String showLine() {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        return curlyLine;","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"     * Returns the default indentation of output.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"     * @return Indentation of four spaces.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"    public String showIndent() {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"        return indent;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     * Prints the greeting message when user first runs program.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"        System.out.print(logo + \"\\n\" + intro + \"\\n\" + dashLine);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"     * Prints the error message with indentation and lines.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"     * @param message The error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"        System.out.print(curlyLine + indent + message + \"\\n\" + curlyLine);","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"     * Prints the output as a result of a user command with indentaion and lines.","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"     * @param message The output to be shown.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"    public void printOutput(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"        System.out.print(curlyLine + indent + message + \"\\n\" + curlyLine);","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"nicollegann":85}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"[D][ ] submit assignment (by: 29 Jan 2022, 2:00 PM)\",","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"                new Deadline(\"submit assignment\", Parser.parseDateTime(\"2022-01-29 14:00\")).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    public void getType() {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"D\",","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"                new Deadline(\"submit assignment\", Parser.parseDateTime(\"2022-01-29 14:00\")).getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":21}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"public class EventTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"[E][ ] project meeting (at: 25 Jan 2022, 10:30 AM)\",","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"                new Event(\"project meeting\", Parser.parseDateTime(\"2022-01-25 10:30\")).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    public void getType() {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"E\",","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"                new Event(\"project meeting\", Parser.parseDateTime(\"2022-01-25 10:30\")).getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":21}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"[T][ ] buy lunch\", new Todo(\"buy lunch\").toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    public void getType() {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"        assertEquals(\"T\", new Todo(\"buy lunch\").getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":17}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package duke.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    public void parseDelete_withTaskSpecified_success() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"        assertFalse(Parser.parse(\"delete 1\").isExit());","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"    public void parseDelete_noTaskSpecified_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"            assertEquals(0, Parser.parse(\"delete\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"            assertEquals(\"Please specify a task number!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public void parseTodo_withDescription_success() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        assertFalse(Parser.parse(\"todo homework\").isExit());","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    public void parseTodo_descriptionBlank_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"            assertEquals(0, Parser.parse(\"todo\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            assertEquals(\"Oops, a todo description cannot be left empty!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    public void parseDeadline_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"            assertEquals(0, Parser.parse(\"deadline send email /by 01/01/2022 1400\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"            assertEquals(\"Invalid date/time format.\\n    \" + \"Please use the following format: yyyy-mm-dd HH:mm\",","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"nicollegann":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"todo buy lunch","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"deadline submit assignment /by 2022-01-29 14:00","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"event project meeting /at 2022-01-25 10:30","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"unmark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"mark","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"delete","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"delete 2","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"delete 4","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"deadline send email /by 2022/01/29 14:00","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"event tutorial /at 2022-01-25, 2pm","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"find lunch","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"find meeting","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"nicollegann":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicollegann":2,"-":19}}]
