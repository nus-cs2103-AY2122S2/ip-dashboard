[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pnutzz-0207":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"pnutzz-0207":17}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"ret\u003d0","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"    fi","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"done","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"exit $ret","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"awk \u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"    BEGIN {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"    {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"        ret \u003d 1","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"    END {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        exit ret","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"\u0027","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"awk \u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"    BEGIN {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"    {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"            ret \u003d 1","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"    END {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"        exit ret","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"\u0027","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"    fi","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"done","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"exit $ret","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":11}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"T | 0 | yay","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"pnutzz-0207":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":" * The bot that responses to commands and collects tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Duke","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"     * @param filePath filePath of the tasklist","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"        new Duke(\"src/main/data/duke.txt\");","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns sona\u0027s response as string","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"     * @param input user input","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"     * @return sona\u0027s response","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"        try {","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.goodbyeMessage();","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"            String[] command \u003d new Parser().processMessage(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"            storage.executeCommand(command);","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"            return tasks.executeCommand(command);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.dateTimeErrorMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pnutzz-0207":58,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"public class Launcher {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    private final Duke duke \u003d new Duke(\"src/main/data/duke.txt\");","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"            stage.show();","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":37}},{"path":"src/main/java/duke/sonautil/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.sonautil;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":" * Represents the exception thrown when user\u0027s command is invalid","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"        super(s);","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"pnutzz-0207":10}},{"path":"src/main/java/duke/sonautil/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.sonautil;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":" * Deals with making sense of the user\u0027s command","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns a String array (arr) of the user\u0027s command.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"     * arr[0]: keyword of command, \"unknown\" if command invalid/does not exist","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"     * arr[1]: string representation of Duke.task index (if applicable, null otherwise)","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"     * arr[2] : string representation of time (if applicable, null otherwise)","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"     * arr[3]: \"true\" if time is entered by user, \"false\" if not entered; null if not applicable","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage the command entered by user","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"     * @return details of user\u0027s command","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException If command is invalid / not understood","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DateTimeParseException If date/time entered is invalid","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"    public String[] processMessage(String userMessage) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"        String[] split \u003d userMessage.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.equals(\"list\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"            command[0] \u003d \"list\";","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"mark\") \u0026\u0026 split[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processMarkCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"unmark\") \u0026\u0026 split[0].equals(\"unmark\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processUnmarkCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"todo\") \u0026\u0026 split[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processTodoCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"deadline\") \u0026\u0026 split[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processDeadlineCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"event\") \u0026\u0026 split[0].equals(\"event\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processEventCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"delete\") \u0026\u0026 split[0].equals(\"delete\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processDeleteCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"schedule\") \u0026\u0026 split[0].equals(\"schedule\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processScheduleCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"find\") \u0026\u0026 split[0].equals(\"find\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"            command \u003d processFindCommand(userMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (userMessage.startsWith(\"update\") \u0026\u0026 split[0].equals(\"update\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"            String[] updateCommand \u003d processUpdateCommand(userMessage);","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"            return updateCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"            command[0] \u003d \"unknown\";","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.userUnknownInputMessage(userMessage));","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027mark\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processMarkCommand(String userMessage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.replaceAll(\" \", \"\").equals(\"mark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.markNoNumberMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"        //invalid number","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"        boolean isMarkCommand \u003d userMessage.toLowerCase().matches(\"^mark \\\\d+|^mark -\\\\d+\");","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"        if (!isMarkCommand) {","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.userUnknownInputMessage(userMessage));","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"        String clean \u003d userMessage.substring(4).replaceAll(\" \", \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"        //empty message after mark","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"pnutzz-0207"},"content":"        if (clean.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.markNoNumberMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(clean) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"mark\";","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d String.valueOf(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027unmark\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processUnmarkCommand(String userMessage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.replaceAll(\" \", \"\").equals(\"unmark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.unmarkNoNumberMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"pnutzz-0207"},"content":"        //invalid number","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"pnutzz-0207"},"content":"        boolean isUnmarkCommand \u003d userMessage.toLowerCase().matches(\"^unmark \\\\d+|^unmark -\\\\d+\");","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"pnutzz-0207"},"content":"        if (!isUnmarkCommand) {","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.userUnknownInputMessage(userMessage));","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"pnutzz-0207"},"content":"        String clean \u003d userMessage.substring(6).replaceAll(\" \", \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"pnutzz-0207"},"content":"        //empty message after mark","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"pnutzz-0207"},"content":"        if (clean.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.unmarkNoNumberMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(clean) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"unmark\";","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d String.valueOf(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027todo\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processTodoCommand(String userMessage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.substring(4).replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.emptyTaskMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"pnutzz-0207"},"content":"            String task \u003d userMessage.substring(5);","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"pnutzz-0207"},"content":"            command[0] \u003d \"todo\";","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"pnutzz-0207"},"content":"            command[1] \u003d task;","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027deadline\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DateTimeParseException if date is invalid","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processDeadlineCommand(String userMessage) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"pnutzz-0207"},"content":"        //empty body","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.substring(8).replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.emptyTaskMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"pnutzz-0207"},"content":"        //no slash","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"pnutzz-0207"},"content":"        if (!userMessage.contains(\"/\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.deadlineNoSlashMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"pnutzz-0207"},"content":"        String[] taskDetails \u003d userMessage.substring(9).split(\"/\", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"pnutzz-0207"},"content":"        //deadline is empty","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskDetails[1].replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.deadlineDateEmptyMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"pnutzz-0207"},"content":"        //processing date \u0026 time","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"pnutzz-0207"},"content":"        String dateTime \u003d taskDetails[1].replaceAll(\" \", \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"pnutzz-0207"},"content":"        LocalDateTime dateTimeComplete;","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"pnutzz-0207"},"content":"        String timeEntered \u003d \"false\";","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"pnutzz-0207"},"content":"        if (dateTime.length() \u003d\u003d 14) { //date \u0026 time","lastModifiedDate":"2022-01-23"},{"lineNumber":185,"author":{"gitId":"pnutzz-0207"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime.substring(0, 10));","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"pnutzz-0207"},"content":"            int hour \u003d Integer.parseInt(dateTime.substring(10, 12));","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"pnutzz-0207"},"content":"            int min \u003d Integer.parseInt(dateTime.substring(12));","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"pnutzz-0207"},"content":"            dateTimeComplete \u003d date.atTime(hour, min);","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"pnutzz-0207"},"content":"            timeEntered \u003d \"true\";","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (dateTime.length() \u003d\u003d 10) { //date only","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"pnutzz-0207"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime.substring(0, 10));","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"pnutzz-0207"},"content":"            dateTimeComplete \u003d date.atTime(23, 59);","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"pnutzz-0207"},"content":"            //date \u0026 time invalid","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.dateTimeErrorMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"deadline\";","lastModifiedDate":"2022-01-23"},{"lineNumber":201,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d taskDetails[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"pnutzz-0207"},"content":"        command[2] \u003d dateTimeComplete.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"pnutzz-0207"},"content":"        command[3] \u003d timeEntered;","lastModifiedDate":"2022-01-23"},{"lineNumber":204,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":205,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027event\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DateTimeParseException if date is invalid","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processEventCommand(String userMessage) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-02-06"},{"lineNumber":216,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":217,"author":{"gitId":"pnutzz-0207"},"content":"        //empty body","lastModifiedDate":"2022-01-23"},{"lineNumber":218,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.substring(5).replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":219,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.emptyTaskMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":220,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":221,"author":{"gitId":"pnutzz-0207"},"content":"        //no slash","lastModifiedDate":"2022-01-23"},{"lineNumber":222,"author":{"gitId":"pnutzz-0207"},"content":"        if (!userMessage.contains(\"/\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":223,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.eventNoSlashMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":224,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":225,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"pnutzz-0207"},"content":"        String[] taskDetails \u003d userMessage.substring(6).split(\"/\", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":227,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":228,"author":{"gitId":"pnutzz-0207"},"content":"        //event date is empty","lastModifiedDate":"2022-01-23"},{"lineNumber":229,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskDetails[1].replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.eventDateEmptyMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"pnutzz-0207"},"content":"        //processing date \u0026 time","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"pnutzz-0207"},"content":"        String dateTime \u003d taskDetails[1].replaceAll(\" \", \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"pnutzz-0207"},"content":"        LocalDateTime dateTimeComplete;","lastModifiedDate":"2022-01-23"},{"lineNumber":236,"author":{"gitId":"pnutzz-0207"},"content":"        String timeEntered \u003d \"false\";","lastModifiedDate":"2022-01-23"},{"lineNumber":237,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":238,"author":{"gitId":"pnutzz-0207"},"content":"        if (dateTime.length() \u003d\u003d 14) { //date \u0026 time","lastModifiedDate":"2022-01-23"},{"lineNumber":239,"author":{"gitId":"pnutzz-0207"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime.substring(0, 10));","lastModifiedDate":"2022-01-23"},{"lineNumber":240,"author":{"gitId":"pnutzz-0207"},"content":"            int hour \u003d Integer.parseInt(dateTime.substring(10, 12));","lastModifiedDate":"2022-01-23"},{"lineNumber":241,"author":{"gitId":"pnutzz-0207"},"content":"            int min \u003d Integer.parseInt(dateTime.substring(12));","lastModifiedDate":"2022-01-23"},{"lineNumber":242,"author":{"gitId":"pnutzz-0207"},"content":"            dateTimeComplete \u003d date.atTime(hour, min);","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"pnutzz-0207"},"content":"            timeEntered \u003d \"true\";","lastModifiedDate":"2022-01-23"},{"lineNumber":244,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (dateTime.length() \u003d\u003d 10) { //date only","lastModifiedDate":"2022-01-23"},{"lineNumber":246,"author":{"gitId":"pnutzz-0207"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime.substring(0, 10));","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"pnutzz-0207"},"content":"            dateTimeComplete \u003d date.atTime(0, 0);","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"pnutzz-0207"},"content":"            //date \u0026 time invalid","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":251,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.dateTimeErrorMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":253,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"event\";","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d taskDetails[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":256,"author":{"gitId":"pnutzz-0207"},"content":"        command[2] \u003d dateTimeComplete.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":257,"author":{"gitId":"pnutzz-0207"},"content":"        command[3] \u003d timeEntered;","lastModifiedDate":"2022-01-23"},{"lineNumber":258,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":259,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":260,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":261,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":262,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027delete\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":263,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":264,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":265,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":266,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":267,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":268,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processDeleteCommand(String userMessage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":269,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":270,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.replaceAll(\" \", \"\").equals(\"delete\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":271,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.taskRemoveEmptyMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":272,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":273,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":274,"author":{"gitId":"pnutzz-0207"},"content":"        //invalid number","lastModifiedDate":"2022-01-23"},{"lineNumber":275,"author":{"gitId":"pnutzz-0207"},"content":"        boolean isValidCommand \u003d userMessage.toLowerCase().matches(\"^delete \\\\d+|^delete -\\\\d+\");","lastModifiedDate":"2022-01-25"},{"lineNumber":276,"author":{"gitId":"pnutzz-0207"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2022-01-23"},{"lineNumber":277,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.userUnknownInputMessage(userMessage));","lastModifiedDate":"2022-01-23"},{"lineNumber":278,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":280,"author":{"gitId":"pnutzz-0207"},"content":"        String clean \u003d userMessage.substring(6).replaceAll(\" \", \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":281,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":282,"author":{"gitId":"pnutzz-0207"},"content":"        //empty message after delete","lastModifiedDate":"2022-01-23"},{"lineNumber":283,"author":{"gitId":"pnutzz-0207"},"content":"        if (clean.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":284,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.taskRemoveEmptyMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":285,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":286,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":287,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(clean) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":288,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":289,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"delete\";","lastModifiedDate":"2022-01-23"},{"lineNumber":290,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d String.valueOf(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":291,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":292,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":293,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":294,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":295,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027schedule\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":296,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":297,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":298,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":299,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":300,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DateTimeParseException if date is invalid","lastModifiedDate":"2022-02-06"},{"lineNumber":301,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":302,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processScheduleCommand(String userMessage) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-02-06"},{"lineNumber":303,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":304,"author":{"gitId":"pnutzz-0207"},"content":"        String dateString \u003d userMessage.substring(8).replaceAll(\" \", \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":305,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":306,"author":{"gitId":"pnutzz-0207"},"content":"        //no date given","lastModifiedDate":"2022-01-23"},{"lineNumber":307,"author":{"gitId":"pnutzz-0207"},"content":"        if (dateString.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":308,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.scheduleNoDateErrorMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":309,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":310,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":311,"author":{"gitId":"pnutzz-0207"},"content":"        //date is invalid","lastModifiedDate":"2022-01-23"},{"lineNumber":312,"author":{"gitId":"pnutzz-0207"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-01-23"},{"lineNumber":313,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"schedule\";","lastModifiedDate":"2022-01-23"},{"lineNumber":314,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d date.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":315,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-02-06"},{"lineNumber":316,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":317,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":318,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":319,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027find\u0027 command","lastModifiedDate":"2022-02-06"},{"lineNumber":320,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":321,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-06"},{"lineNumber":322,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-06"},{"lineNumber":323,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":324,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":325,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processFindCommand(String userMessage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":326,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d new String[4];","lastModifiedDate":"2022-02-06"},{"lineNumber":327,"author":{"gitId":"pnutzz-0207"},"content":"        //only \"find\"","lastModifiedDate":"2022-01-25"},{"lineNumber":328,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.length() \u003d\u003d 4) {","lastModifiedDate":"2022-01-25"},{"lineNumber":329,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.findNoKeywordError());","lastModifiedDate":"2022-01-25"},{"lineNumber":330,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":331,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":332,"author":{"gitId":"pnutzz-0207"},"content":"        String keyword \u003d userMessage.substring(5);","lastModifiedDate":"2022-01-25"},{"lineNumber":333,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":334,"author":{"gitId":"pnutzz-0207"},"content":"        //no keyword given","lastModifiedDate":"2022-01-25"},{"lineNumber":335,"author":{"gitId":"pnutzz-0207"},"content":"        if (keyword.replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":336,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.findNoKeywordError());","lastModifiedDate":"2022-01-25"},{"lineNumber":337,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":338,"author":{"gitId":"pnutzz-0207"},"content":"        command[0] \u003d \"find\";","lastModifiedDate":"2022-01-25"},{"lineNumber":339,"author":{"gitId":"pnutzz-0207"},"content":"        command[1] \u003d keyword;","lastModifiedDate":"2022-01-25"},{"lineNumber":340,"author":{"gitId":"pnutzz-0207"},"content":"        return command;","lastModifiedDate":"2022-01-23"},{"lineNumber":341,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":342,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":343,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":344,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027update\u0027 command","lastModifiedDate":"2022-02-10"},{"lineNumber":345,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":346,"author":{"gitId":"pnutzz-0207"},"content":"     * @param userMessage user\u0027s message","lastModifiedDate":"2022-02-10"},{"lineNumber":347,"author":{"gitId":"pnutzz-0207"},"content":"     * @return string array of command information","lastModifiedDate":"2022-02-10"},{"lineNumber":348,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-10"},{"lineNumber":349,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DateTimeParseException if date is invalid","lastModifiedDate":"2022-02-10"},{"lineNumber":350,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":351,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] processUpdateCommand(String userMessage) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-02-10"},{"lineNumber":352,"author":{"gitId":"pnutzz-0207"},"content":"        String[] updateCommand \u003d new String[5];","lastModifiedDate":"2022-02-10"},{"lineNumber":353,"author":{"gitId":"pnutzz-0207"},"content":"        //show update guide","lastModifiedDate":"2022-02-10"},{"lineNumber":354,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.equals(\"update guide\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":355,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.showUpdateCommandGuide());","lastModifiedDate":"2022-02-10"},{"lineNumber":356,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":357,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":358,"author":{"gitId":"pnutzz-0207"},"content":"        //empty message after update","lastModifiedDate":"2022-02-10"},{"lineNumber":359,"author":{"gitId":"pnutzz-0207"},"content":"        if (userMessage.substring(6).replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":360,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateEmptyBodyError());","lastModifiedDate":"2022-02-10"},{"lineNumber":361,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":362,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":363,"author":{"gitId":"pnutzz-0207"},"content":"        //check format","lastModifiedDate":"2022-02-10"},{"lineNumber":364,"author":{"gitId":"pnutzz-0207"},"content":"        String[] cmdSplit \u003d userMessage.substring(7).split(\":\"); //[\"num type\", \"changes\"]","lastModifiedDate":"2022-02-10"},{"lineNumber":365,"author":{"gitId":"pnutzz-0207"},"content":"        String[] cmdFrontPart \u003d cmdSplit[0].split(\" \"); //[\"num\", \"type\"]","lastModifiedDate":"2022-02-10"},{"lineNumber":366,"author":{"gitId":"pnutzz-0207"},"content":"        if (cmdSplit.length !\u003d 2 || cmdFrontPart.length !\u003d 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":367,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateWrongFormat());","lastModifiedDate":"2022-02-10"},{"lineNumber":368,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":369,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":370,"author":{"gitId":"pnutzz-0207"},"content":"        //invalid command","lastModifiedDate":"2022-02-10"},{"lineNumber":371,"author":{"gitId":"pnutzz-0207"},"content":"        boolean isValidNum \u003d cmdFrontPart[0].replaceAll(\" \", \"\").matches(\"\\\\d+|-\\\\d+\");","lastModifiedDate":"2022-02-10"},{"lineNumber":372,"author":{"gitId":"pnutzz-0207"},"content":"        if (!isValidNum) {","lastModifiedDate":"2022-02-10"},{"lineNumber":373,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateWrongFormat());","lastModifiedDate":"2022-02-10"},{"lineNumber":374,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":375,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":376,"author":{"gitId":"pnutzz-0207"},"content":"        String typeRemovedSpaces \u003d cmdFrontPart[1].replaceAll(\" \", \"\").toLowerCase();","lastModifiedDate":"2022-02-10"},{"lineNumber":377,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(cmdFrontPart[0].replaceAll(\" \", \"\")) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":378,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":379,"author":{"gitId":"pnutzz-0207"},"content":"        updateCommand[0] \u003d \"update\";","lastModifiedDate":"2022-02-10"},{"lineNumber":380,"author":{"gitId":"pnutzz-0207"},"content":"        updateCommand[1] \u003d String.valueOf(taskIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":381,"author":{"gitId":"pnutzz-0207"},"content":"        updateCommand[2] \u003d typeRemovedSpaces;","lastModifiedDate":"2022-02-10"},{"lineNumber":382,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":383,"author":{"gitId":"pnutzz-0207"},"content":"        //check if type matches changes","lastModifiedDate":"2022-02-10"},{"lineNumber":384,"author":{"gitId":"pnutzz-0207"},"content":"        switch (typeRemovedSpaces) {","lastModifiedDate":"2022-02-10"},{"lineNumber":385,"author":{"gitId":"pnutzz-0207"},"content":"        case \"type\":","lastModifiedDate":"2022-02-10"},{"lineNumber":386,"author":{"gitId":"pnutzz-0207"},"content":"            String cmdBackPart \u003d cmdSplit[1].replaceAll(\" \", \"\").toLowerCase();","lastModifiedDate":"2022-02-10"},{"lineNumber":387,"author":{"gitId":"pnutzz-0207"},"content":"            if (cmdBackPart.equals(\"todo\") || cmdBackPart.equals(\"deadline\") || cmdBackPart.equals(\"event\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":388,"author":{"gitId":"pnutzz-0207"},"content":"                updateCommand[3] \u003d cmdBackPart;","lastModifiedDate":"2022-02-10"},{"lineNumber":389,"author":{"gitId":"pnutzz-0207"},"content":"                return updateCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":390,"author":{"gitId":"pnutzz-0207"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":391,"author":{"gitId":"pnutzz-0207"},"content":"                throw new DukeException(Ui.updateInvalidTaskType());","lastModifiedDate":"2022-02-10"},{"lineNumber":392,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":393,"author":{"gitId":"pnutzz-0207"},"content":"        case \"name\":","lastModifiedDate":"2022-02-10"},{"lineNumber":394,"author":{"gitId":"pnutzz-0207"},"content":"            updateCommand[3] \u003d cmdSplit[1].substring(1);","lastModifiedDate":"2022-02-10"},{"lineNumber":395,"author":{"gitId":"pnutzz-0207"},"content":"            return updateCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":396,"author":{"gitId":"pnutzz-0207"},"content":"        case \"date\":","lastModifiedDate":"2022-02-10"},{"lineNumber":397,"author":{"gitId":"pnutzz-0207"},"content":"            String dateTime \u003d cmdSplit[1].replaceAll(\" \", \"\");","lastModifiedDate":"2022-02-10"},{"lineNumber":398,"author":{"gitId":"pnutzz-0207"},"content":"            LocalDateTime dateTimeComplete;","lastModifiedDate":"2022-02-10"},{"lineNumber":399,"author":{"gitId":"pnutzz-0207"},"content":"            String timeEntered \u003d \"false\";","lastModifiedDate":"2022-02-10"},{"lineNumber":400,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":401,"author":{"gitId":"pnutzz-0207"},"content":"            if (dateTime.length() \u003d\u003d 14) { //date \u0026 time","lastModifiedDate":"2022-02-10"},{"lineNumber":402,"author":{"gitId":"pnutzz-0207"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime.substring(0, 10));","lastModifiedDate":"2022-02-10"},{"lineNumber":403,"author":{"gitId":"pnutzz-0207"},"content":"                int hour \u003d Integer.parseInt(dateTime.substring(10, 12));","lastModifiedDate":"2022-02-10"},{"lineNumber":404,"author":{"gitId":"pnutzz-0207"},"content":"                int min \u003d Integer.parseInt(dateTime.substring(12));","lastModifiedDate":"2022-02-10"},{"lineNumber":405,"author":{"gitId":"pnutzz-0207"},"content":"                dateTimeComplete \u003d date.atTime(hour, min);","lastModifiedDate":"2022-02-10"},{"lineNumber":406,"author":{"gitId":"pnutzz-0207"},"content":"                timeEntered \u003d \"true\";","lastModifiedDate":"2022-02-10"},{"lineNumber":407,"author":{"gitId":"pnutzz-0207"},"content":"                updateCommand[3] \u003d dateTimeComplete.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":408,"author":{"gitId":"pnutzz-0207"},"content":"                updateCommand[4] \u003d timeEntered;","lastModifiedDate":"2022-02-10"},{"lineNumber":409,"author":{"gitId":"pnutzz-0207"},"content":"                return updateCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":410,"author":{"gitId":"pnutzz-0207"},"content":"            } else if (dateTime.length() \u003d\u003d 10) { //date only","lastModifiedDate":"2022-02-10"},{"lineNumber":411,"author":{"gitId":"pnutzz-0207"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime.substring(0, 10));","lastModifiedDate":"2022-02-10"},{"lineNumber":412,"author":{"gitId":"pnutzz-0207"},"content":"                dateTimeComplete \u003d date.atTime(23, 59);","lastModifiedDate":"2022-02-10"},{"lineNumber":413,"author":{"gitId":"pnutzz-0207"},"content":"                updateCommand[3] \u003d dateTimeComplete.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":414,"author":{"gitId":"pnutzz-0207"},"content":"                updateCommand[4] \u003d timeEntered;","lastModifiedDate":"2022-02-10"},{"lineNumber":415,"author":{"gitId":"pnutzz-0207"},"content":"                return updateCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":416,"author":{"gitId":"pnutzz-0207"},"content":"                //date \u0026 time invalid","lastModifiedDate":"2022-02-10"},{"lineNumber":417,"author":{"gitId":"pnutzz-0207"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":418,"author":{"gitId":"pnutzz-0207"},"content":"                throw new DukeException(Ui.dateTimeErrorMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":419,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":420,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":421,"author":{"gitId":"pnutzz-0207"},"content":"        default:","lastModifiedDate":"2022-02-10"},{"lineNumber":422,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateWrongFormat());","lastModifiedDate":"2022-02-10"},{"lineNumber":423,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":424,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":425,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":426,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-02-10"},{"lineNumber":427,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"pnutzz-0207":427}},{"path":"src/main/java/duke/sonautil/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.sonautil;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":" * Works on loading, changing and maintaining the contents in the hard disk file","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"    private final String path;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"     * Converts the command into hard disk file for record.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command details of command retrieved from Parser","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws IOException if writeToFile/changeMarking fails","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"    public void executeCommand(String[] command) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"        String keyword \u003d command[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"        switch (keyword) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"            writeToFile(\"T | 0 | \" + command[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"            writeToFile(\"E | 0 | \" + command[1] + \" | \" + command[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"            writeToFile(\"D | 0 | \" + command[1] + \" | \" + command[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"            deleteFromFile(Integer.parseInt(command[1]));","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"            changeMarking(\"0\", \"1\", Integer.parseInt(command[1]));","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"            changeMarking(\"1\", \"0\", Integer.parseInt(command[1]));","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"        case \"update\":","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"            editTask(Integer.parseInt(command[1]), command[2], command[3]);","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"     * Deletes the task from local file by creating a temp file","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"     * and copy every task except the one to be deleted","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"     * @param taskToDelete the index of task to delete","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"    public void deleteFromFile(int taskToDelete) {","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"        String oldFileName \u003d \"src/main/data/duke.txt\";","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"        String tempFileName \u003d \"src/main/data/tempDuke.txt\";","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"        File tempFile \u003d new File(tempFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"        int indexAccessed \u003d 0;","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(oldFileName));","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"             BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile))) {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"            String line;","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"            boolean first \u003d true;","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"                if (indexAccessed !\u003d taskToDelete \u0026\u0026 first) {","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line);","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"                    first \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"                } else if (indexAccessed !\u003d taskToDelete) {","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(\"\\n\" + line);","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"pnutzz-0207"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"pnutzz-0207"},"content":"                indexAccessed++;","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"pnutzz-0207"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"pnutzz-0207"},"content":"        File oldFile \u003d new File(oldFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"pnutzz-0207"},"content":"        oldFile.delete();","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"pnutzz-0207"},"content":"        File newFile \u003d new File(tempFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"pnutzz-0207"},"content":"        newFile.renameTo(oldFile);","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"pnutzz-0207"},"content":"     * Appends the string representation Duke.task into the local file","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"pnutzz-0207"},"content":"     * @param taskToAdd string to be added into the local file","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"pnutzz-0207"},"content":"    public void writeToFile(String taskToAdd) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"pnutzz-0207"},"content":"        FileWriter fw \u003d new FileWriter(path, true);","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"pnutzz-0207"},"content":"        long line \u003d Files.lines(Path.of(path)).count();","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"pnutzz-0207"},"content":"        if (line \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"pnutzz-0207"},"content":"            fw.write(taskToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"pnutzz-0207"},"content":"            fw.write(System.lineSeparator() + taskToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"pnutzz-0207"},"content":"        fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"pnutzz-0207"},"content":"     * loads Duke.task from local file","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"pnutzz-0207"},"content":"     * @return Arraylist of tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws IOException if create new file fails","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"pnutzz-0207"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"pnutzz-0207"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"pnutzz-0207"},"content":"            return fileContentProcess();","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"pnutzz-0207"},"content":"            createNewFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"pnutzz-0207"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"pnutzz-0207"},"content":"     * process the string in local file and converts to tasks in arraylist","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"pnutzz-0207"},"content":"     * @return Arraylist of tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws FileNotFoundException if file is not found","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"pnutzz-0207"},"content":"    public ArrayList\u003cTask\u003e fileContentProcess() throws FileNotFoundException {","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"pnutzz-0207"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"pnutzz-0207"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"pnutzz-0207"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"pnutzz-0207"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"pnutzz-0207"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"pnutzz-0207"},"content":"            String[] taskDetail \u003d task.split(\" \\\\| \");","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"pnutzz-0207"},"content":"            switch (taskDetail[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"pnutzz-0207"},"content":"            case \"T\":","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"pnutzz-0207"},"content":"                tasks.add(new Todo(taskDetail[2], Integer.parseInt(taskDetail[1])));","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"pnutzz-0207"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"pnutzz-0207"},"content":"            case \"D\":","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"pnutzz-0207"},"content":"                tasks.add(new Deadline(taskDetail[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"pnutzz-0207"},"content":"                        Integer.parseInt(taskDetail[1]), LocalDateTime.parse(taskDetail[3])));","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"pnutzz-0207"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"pnutzz-0207"},"content":"            case \"E\":","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"pnutzz-0207"},"content":"                tasks.add(new Event(taskDetail[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"pnutzz-0207"},"content":"                        Integer.parseInt(taskDetail[1]), LocalDateTime.parse(taskDetail[3])));","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"pnutzz-0207"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"pnutzz-0207"},"content":"            default:","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"pnutzz-0207"},"content":"        return tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"pnutzz-0207"},"content":"     * creates a new local file for Duke.Duke to work","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws IOException if fails to make new directory and create new file","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"pnutzz-0207"},"content":"    public void createNewFile() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"pnutzz-0207"},"content":"        File f \u003d new File(\"src/main/data/duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"pnutzz-0207"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"pnutzz-0207"},"content":"        f.createNewFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"pnutzz-0207"},"content":"     * Changes the marking of 1 single Duke.task in the local file","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"pnutzz-0207"},"content":"     * @param init initial string of the marking (\"1\" for done, \"0\" for not done).","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"pnutzz-0207"},"content":"     * @param goal final string of the marking (\"1\" for mark, \"0\" for unmark).","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"pnutzz-0207"},"content":"     * @param taskToMark the index of Duke.task to be marked or unmarked","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws IOException if fails access local file","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"pnutzz-0207"},"content":"    private void changeMarking(String init, String goal, int taskToMark) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"pnutzz-0207"},"content":"        assert (init.equals(\"0\") || init.equals(\"1\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":191,"author":{"gitId":"pnutzz-0207"},"content":"        assert (goal.equals(\"0\") || goal.equals(\"1\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"pnutzz-0207"},"content":"        String oldFileName \u003d path;","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"pnutzz-0207"},"content":"        String tempFileName \u003d \"src/main/data/tempDuke.txt\";","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"pnutzz-0207"},"content":"        File tempFile \u003d new File(tempFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"pnutzz-0207"},"content":"        long lineCount \u003d Files.lines(Path.of(path)).count();","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"pnutzz-0207"},"content":"        int taskToChange \u003d 0;","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"pnutzz-0207"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(oldFileName));","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"pnutzz-0207"},"content":"             BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile))) {","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":201,"author":{"gitId":"pnutzz-0207"},"content":"            String line;","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"pnutzz-0207"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"pnutzz-0207"},"content":"                if (taskToChange \u003d\u003d lineCount - 1 \u0026\u0026 taskToChange \u003d\u003d taskToMark) { //if it is the last line","lastModifiedDate":"2022-02-06"},{"lineNumber":204,"author":{"gitId":"pnutzz-0207"},"content":"                    line \u003d line.replaceFirst(init, goal);","lastModifiedDate":"2022-01-23"},{"lineNumber":205,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line);","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"pnutzz-0207"},"content":"                } else if (taskToChange \u003d\u003d lineCount - 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line);","lastModifiedDate":"2022-01-23"},{"lineNumber":208,"author":{"gitId":"pnutzz-0207"},"content":"                } else if (taskToChange \u003d\u003d taskToMark) {","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"pnutzz-0207"},"content":"                    line \u003d line.replaceFirst(init, goal);","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":211,"author":{"gitId":"pnutzz-0207"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":212,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":213,"author":{"gitId":"pnutzz-0207"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":214,"author":{"gitId":"pnutzz-0207"},"content":"                taskToChange++;","lastModifiedDate":"2022-01-23"},{"lineNumber":215,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":216,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":217,"author":{"gitId":"pnutzz-0207"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-23"},{"lineNumber":218,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":219,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":220,"author":{"gitId":"pnutzz-0207"},"content":"        File oldFile \u003d new File(oldFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":221,"author":{"gitId":"pnutzz-0207"},"content":"        oldFile.delete();","lastModifiedDate":"2022-01-23"},{"lineNumber":222,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":223,"author":{"gitId":"pnutzz-0207"},"content":"        File newFile \u003d new File(tempFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":224,"author":{"gitId":"pnutzz-0207"},"content":"        newFile.renameTo(oldFile);","lastModifiedDate":"2022-01-23"},{"lineNumber":225,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":227,"author":{"gitId":"pnutzz-0207"},"content":"    //time, type, name","lastModifiedDate":"2022-02-10"},{"lineNumber":228,"author":{"gitId":"pnutzz-0207"},"content":"    private void editTask(int taskIndex, String type, String change) throws IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":229,"author":{"gitId":"pnutzz-0207"},"content":"        String oldFileName \u003d path;","lastModifiedDate":"2022-02-10"},{"lineNumber":230,"author":{"gitId":"pnutzz-0207"},"content":"        String tempFileName \u003d \"src/main/data/tempDuke.txt\";","lastModifiedDate":"2022-02-10"},{"lineNumber":231,"author":{"gitId":"pnutzz-0207"},"content":"        File tempFile \u003d new File(tempFileName);","lastModifiedDate":"2022-02-10"},{"lineNumber":232,"author":{"gitId":"pnutzz-0207"},"content":"        long lineCount \u003d Files.lines(Path.of(path)).count();","lastModifiedDate":"2022-02-10"},{"lineNumber":233,"author":{"gitId":"pnutzz-0207"},"content":"        int taskToChange \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":234,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":235,"author":{"gitId":"pnutzz-0207"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(oldFileName));","lastModifiedDate":"2022-02-10"},{"lineNumber":236,"author":{"gitId":"pnutzz-0207"},"content":"             BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile))) {","lastModifiedDate":"2022-02-10"},{"lineNumber":237,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":238,"author":{"gitId":"pnutzz-0207"},"content":"            String line;","lastModifiedDate":"2022-02-10"},{"lineNumber":239,"author":{"gitId":"pnutzz-0207"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-02-10"},{"lineNumber":240,"author":{"gitId":"pnutzz-0207"},"content":"                if (taskToChange \u003d\u003d lineCount - 1 \u0026\u0026 taskToChange \u003d\u003d taskIndex) { //if it is the last line","lastModifiedDate":"2022-02-10"},{"lineNumber":241,"author":{"gitId":"pnutzz-0207"},"content":"                    if ((line.charAt(0) \u003d\u003d \u0027T\u0027 \u0026\u0026 type.equals(\"date\")) ||","lastModifiedDate":"2022-02-10"},{"lineNumber":242,"author":{"gitId":"pnutzz-0207"},"content":"                            line.charAt(0) \u003d\u003d \u0027T\u0027 \u0026\u0026 type.equals(\"type\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":243,"author":{"gitId":"pnutzz-0207"},"content":"                        break;","lastModifiedDate":"2022-02-10"},{"lineNumber":244,"author":{"gitId":"pnutzz-0207"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":245,"author":{"gitId":"pnutzz-0207"},"content":"                    line \u003d editTaskHelper(line, type, change);","lastModifiedDate":"2022-02-10"},{"lineNumber":246,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line);","lastModifiedDate":"2022-02-10"},{"lineNumber":247,"author":{"gitId":"pnutzz-0207"},"content":"                } else if (taskToChange \u003d\u003d lineCount - 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":248,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line);","lastModifiedDate":"2022-02-10"},{"lineNumber":249,"author":{"gitId":"pnutzz-0207"},"content":"                } else if (taskToChange \u003d\u003d taskIndex) {","lastModifiedDate":"2022-02-10"},{"lineNumber":250,"author":{"gitId":"pnutzz-0207"},"content":"                    if (line.charAt(0) \u003d\u003d \u0027D\u0027 \u0026\u0026 type.equals(\"date\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":251,"author":{"gitId":"pnutzz-0207"},"content":"                        break;","lastModifiedDate":"2022-02-10"},{"lineNumber":252,"author":{"gitId":"pnutzz-0207"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":253,"author":{"gitId":"pnutzz-0207"},"content":"                    line \u003d editTaskHelper(line, type, change);","lastModifiedDate":"2022-02-10"},{"lineNumber":254,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line + \"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":255,"author":{"gitId":"pnutzz-0207"},"content":"                } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":256,"author":{"gitId":"pnutzz-0207"},"content":"                    bw.write(line + \"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":257,"author":{"gitId":"pnutzz-0207"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":258,"author":{"gitId":"pnutzz-0207"},"content":"                taskToChange++;","lastModifiedDate":"2022-02-10"},{"lineNumber":259,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":260,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":261,"author":{"gitId":"pnutzz-0207"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":262,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":263,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":264,"author":{"gitId":"pnutzz-0207"},"content":"        File oldFile \u003d new File(oldFileName);","lastModifiedDate":"2022-02-10"},{"lineNumber":265,"author":{"gitId":"pnutzz-0207"},"content":"        oldFile.delete();","lastModifiedDate":"2022-02-10"},{"lineNumber":266,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":267,"author":{"gitId":"pnutzz-0207"},"content":"        File newFile \u003d new File(tempFileName);","lastModifiedDate":"2022-02-10"},{"lineNumber":268,"author":{"gitId":"pnutzz-0207"},"content":"        newFile.renameTo(oldFile);","lastModifiedDate":"2022-02-10"},{"lineNumber":269,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":270,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":271,"author":{"gitId":"pnutzz-0207"},"content":"    private String editTaskHelper(String line, String type, String change) {","lastModifiedDate":"2022-02-10"},{"lineNumber":272,"author":{"gitId":"pnutzz-0207"},"content":"        assert type.equals(\"type\") || type.equals(\"name\") || type.equals(\"date\");","lastModifiedDate":"2022-02-10"},{"lineNumber":273,"author":{"gitId":"pnutzz-0207"},"content":"        StringBuilder modifiedString \u003d new StringBuilder();","lastModifiedDate":"2022-02-10"},{"lineNumber":274,"author":{"gitId":"pnutzz-0207"},"content":"        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-02-10"},{"lineNumber":275,"author":{"gitId":"pnutzz-0207"},"content":"        if (type.equals(\"type\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":276,"author":{"gitId":"pnutzz-0207"},"content":"            if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-10"},{"lineNumber":277,"author":{"gitId":"pnutzz-0207"},"content":"                return line;","lastModifiedDate":"2022-02-10"},{"lineNumber":278,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":279,"author":{"gitId":"pnutzz-0207"},"content":"            if (change.equals(\"todo\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":280,"author":{"gitId":"pnutzz-0207"},"content":"                split[0] \u003d \"T\";","lastModifiedDate":"2022-02-10"},{"lineNumber":281,"author":{"gitId":"pnutzz-0207"},"content":"                if (split.length \u003d\u003d 4) {","lastModifiedDate":"2022-02-10"},{"lineNumber":282,"author":{"gitId":"pnutzz-0207"},"content":"                    return split[0] + \" | \" + split[1] + \" | \" + split[2];","lastModifiedDate":"2022-02-10"},{"lineNumber":283,"author":{"gitId":"pnutzz-0207"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":284,"author":{"gitId":"pnutzz-0207"},"content":"            } else if (change.equals(\"deadline\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":285,"author":{"gitId":"pnutzz-0207"},"content":"                split[0] \u003d \"D\";","lastModifiedDate":"2022-02-10"},{"lineNumber":286,"author":{"gitId":"pnutzz-0207"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":287,"author":{"gitId":"pnutzz-0207"},"content":"                split[0] \u003d \"E\";","lastModifiedDate":"2022-02-10"},{"lineNumber":288,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":289,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (type.equals(\"name\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":290,"author":{"gitId":"pnutzz-0207"},"content":"            split[2] \u003d change;","lastModifiedDate":"2022-02-10"},{"lineNumber":291,"author":{"gitId":"pnutzz-0207"},"content":"        } else { //type.equals(\"date\")","lastModifiedDate":"2022-02-10"},{"lineNumber":292,"author":{"gitId":"pnutzz-0207"},"content":"            if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-10"},{"lineNumber":293,"author":{"gitId":"pnutzz-0207"},"content":"                return line;","lastModifiedDate":"2022-02-10"},{"lineNumber":294,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":295,"author":{"gitId":"pnutzz-0207"},"content":"            split[3] \u003d change;","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":297,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":298,"author":{"gitId":"pnutzz-0207"},"content":"        for (String s : split) {","lastModifiedDate":"2022-02-10"},{"lineNumber":299,"author":{"gitId":"pnutzz-0207"},"content":"            modifiedString.append(s);","lastModifiedDate":"2022-02-10"},{"lineNumber":300,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":301,"author":{"gitId":"pnutzz-0207"},"content":"        return String.join(\" | \", split);","lastModifiedDate":"2022-02-10"},{"lineNumber":302,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":303,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":304,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":305,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"pnutzz-0207":305}},{"path":"src/main/java/duke/sonautil/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.sonautil;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":" * contains the Duke.task list. Has operations to add/delete tasks in the list","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"    private static int taskAddedIndex;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"     * @param list an arraylist with Task","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"        taskAddedIndex \u003d list.size();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object TaskList","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"        list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"        taskAddedIndex \u003d 0;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"     * Executes the user command on the Duke.task list. Does nothing when keyword is \"unknown\"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command details of command retrieved from Parser","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"    public String executeCommand(String[] command) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        String keyword \u003d command[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"        assert (keyword !\u003d null \u0026\u0026 !keyword.equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"        switch (keyword) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"        case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"            if (taskAddedIndex \u003d\u003d 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.emptyListMessage();","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.showListMessage() +  \"\\n\" + showList();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"        case \"todo\": {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[1] !\u003d null \u0026\u0026 !command[1].equals(\"\")); //description is not empty and not null","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"            Task task \u003d new Todo(command[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"            addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.todoEnteredSuccessMessage(task, taskAddedIndex);","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[1] !\u003d null \u0026\u0026 !command[1].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[2] !\u003d null \u0026\u0026 !command[2].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[3] !\u003d null \u0026\u0026 !command[3].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"            Task task \u003d new Deadline(command[1], LocalDateTime.parse(command[2]));","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"            addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.deadlineEnterSuccessMessage(task, command[3], taskAddedIndex);","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"        case \"event\": {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[1] !\u003d null \u0026\u0026 !command[1].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[2] !\u003d null \u0026\u0026 !command[2].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"            assert (command[3] !\u003d null \u0026\u0026 !command[3].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"            Task task \u003d new Event(command[1], LocalDateTime.parse(command[2]));","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"            addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.eventEnterSuccessMessage(task, command[3], taskAddedIndex);","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"        case \"mark\": {","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"            return executeMarkCommand(command);","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"            return executeUnmarkCommand(command);","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"        case \"delete\": {","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"            return executeDeleteCommand(command);","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"        case \"schedule\":","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"            return executeScheduleCommand(command);","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"        case \"find\":","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"pnutzz-0207"},"content":"            return executeFindCommand(command);","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"pnutzz-0207"},"content":"        case \"update\":","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"pnutzz-0207"},"content":"            return executeUpdateCommand(command);","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"pnutzz-0207"},"content":"        case \"unknown\":","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"pnutzz-0207"},"content":"            //fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"pnutzz-0207"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"pnutzz-0207"},"content":"            return \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027mark\u0027 command on tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command user\u0027s command info","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"pnutzz-0207"},"content":"    private String executeMarkCommand(String[] command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"pnutzz-0207"},"content":"        assert (command[1] !\u003d null \u0026\u0026 !command[1].equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"pnutzz-0207"},"content":"        //user trying to mark a non-existing Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskIndex \u003e\u003d taskAddedIndex || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.taskDontExistMessage(taskIndex));","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"pnutzz-0207"},"content":"        //user trying to mark a done Duke.task as done again","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"pnutzz-0207"},"content":"        if (list.get(taskIndex).isDone()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.markRepeatMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"pnutzz-0207"},"content":"      ","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"pnutzz-0207"},"content":"        list.get(taskIndex).markAsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"pnutzz-0207"},"content":"        return Ui.markSuccessMessage(list.get(taskIndex));","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"pnutzz-0207"},"content":"      ","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027unmark\u0027 command on tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command user\u0027s command info","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"pnutzz-0207"},"content":"    private String executeUnmarkCommand(String[] command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"pnutzz-0207"},"content":"        //user trying to unmark a non-existing Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskIndex \u003e\u003d taskAddedIndex || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.taskDontExistMessage(taskIndex));","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"pnutzz-0207"},"content":"        //user trying to mark a undone Duke.task as undone again","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"pnutzz-0207"},"content":"        if (!list.get(taskIndex).isDone()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.unmarkRepeatMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"pnutzz-0207"},"content":"        list.get(taskIndex).unmark();","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"pnutzz-0207"},"content":"        return Ui.unmarkSuccessMessage(list.get(taskIndex));","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027delete\u0027 command on tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command user\u0027s command info","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"pnutzz-0207"},"content":"    private String executeDeleteCommand(String[] command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"pnutzz-0207"},"content":"        //list is empty","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskAddedIndex \u003d\u003d 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":156,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.listEmptyMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"pnutzz-0207"},"content":"        //user trying to delete a non-existing Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskIndex \u003e\u003d taskAddedIndex || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":161,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.taskDontExistMessage(taskIndex));","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"pnutzz-0207"},"content":"        String str \u003d Ui.taskRemovedMessage(getTask(taskIndex));","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"pnutzz-0207"},"content":"        removeTask(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"pnutzz-0207"},"content":"        return str;","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027schedule\u0027 command on tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command user\u0027s command info","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"pnutzz-0207"},"content":"    private String executeScheduleCommand(String[] command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"pnutzz-0207"},"content":"        //list is empty","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskAddedIndex \u003d\u003d 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":178,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.scheduleEmptyMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"pnutzz-0207"},"content":"        ArrayList\u003cTask\u003e scheduleList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"pnutzz-0207"},"content":"        LocalDate date \u003d LocalDate.parse(command[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"pnutzz-0207"},"content":"        for (int i \u003d 0; i \u003c taskAddedIndex; i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":184,"author":{"gitId":"pnutzz-0207"},"content":"            if (list.get(i) instanceof Event) {","lastModifiedDate":"2022-01-23"},{"lineNumber":185,"author":{"gitId":"pnutzz-0207"},"content":"                Event task \u003d (Event) list.get(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"pnutzz-0207"},"content":"                if (date.isEqual(task.getDate().toLocalDate())) {","lastModifiedDate":"2022-02-10"},{"lineNumber":187,"author":{"gitId":"pnutzz-0207"},"content":"                    scheduleList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"pnutzz-0207"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"pnutzz-0207"},"content":"            if (list.get(i) instanceof Deadline) {","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"pnutzz-0207"},"content":"                Deadline task \u003d (Deadline) list.get(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"pnutzz-0207"},"content":"                if (date.isEqual((task.getDate().toLocalDate()))) {","lastModifiedDate":"2022-02-10"},{"lineNumber":193,"author":{"gitId":"pnutzz-0207"},"content":"                    scheduleList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"pnutzz-0207"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"pnutzz-0207"},"content":"      ","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"pnutzz-0207"},"content":"        if (scheduleList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.scheduleEmptyMessage();","lastModifiedDate":"2022-01-29"},{"lineNumber":200,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":201,"author":{"gitId":"pnutzz-0207"},"content":"            String str \u003d Ui.showSchedule(date.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":202,"author":{"gitId":"pnutzz-0207"},"content":"            for (int i \u003d 0; i \u003c scheduleList.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"pnutzz-0207"},"content":"                str +\u003d (i + 1) + \".\" + scheduleList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":204,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":205,"author":{"gitId":"pnutzz-0207"},"content":"            return str;","lastModifiedDate":"2022-01-29"},{"lineNumber":206,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027find\u0027 command on tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command user\u0027s command info","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"pnutzz-0207"},"content":"    private String executeFindCommand(String[] command) {","lastModifiedDate":"2022-02-06"},{"lineNumber":216,"author":{"gitId":"pnutzz-0207"},"content":"        String findWord \u003d command[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"pnutzz-0207"},"content":"        ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"pnutzz-0207"},"content":"        for (int i \u003d 0; i \u003c taskAddedIndex; i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":220,"author":{"gitId":"pnutzz-0207"},"content":"            String taskDescription \u003d list.get(i).getDescription();","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"pnutzz-0207"},"content":"            if (taskDescription.contains(findWord)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":222,"author":{"gitId":"pnutzz-0207"},"content":"                searchList.add(list.get(i));","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":224,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":225,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":226,"author":{"gitId":"pnutzz-0207"},"content":"        if (searchList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":227,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.findNoMatchError();","lastModifiedDate":"2022-01-29"},{"lineNumber":228,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":229,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":230,"author":{"gitId":"pnutzz-0207"},"content":"            String str \u003d Ui.findShowResult();","lastModifiedDate":"2022-01-29"},{"lineNumber":231,"author":{"gitId":"pnutzz-0207"},"content":"            for (int i \u003d 0; i \u003c searchList.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":232,"author":{"gitId":"pnutzz-0207"},"content":"                str +\u003d (i + 1) + \".\" + searchList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":233,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":234,"author":{"gitId":"pnutzz-0207"},"content":"            return str;","lastModifiedDate":"2022-01-29"},{"lineNumber":235,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":236,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":237,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":238,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":239,"author":{"gitId":"pnutzz-0207"},"content":"     * Processes user\u0027s \u0027update\u0027 command on tasklist","lastModifiedDate":"2022-02-10"},{"lineNumber":240,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":241,"author":{"gitId":"pnutzz-0207"},"content":"     * @param command user\u0027s command info","lastModifiedDate":"2022-02-10"},{"lineNumber":242,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":243,"author":{"gitId":"pnutzz-0207"},"content":"     * @throws DukeException if command is invalid / not understood","lastModifiedDate":"2022-02-10"},{"lineNumber":244,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":245,"author":{"gitId":"pnutzz-0207"},"content":"    private String executeUpdateCommand(String[] command) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":246,"author":{"gitId":"pnutzz-0207"},"content":"        //command: [\"update\", index, \"type\", \"change\", \"timeEntered\"]","lastModifiedDate":"2022-02-10"},{"lineNumber":247,"author":{"gitId":"pnutzz-0207"},"content":"        String changeType \u003d command[2];","lastModifiedDate":"2022-02-10"},{"lineNumber":248,"author":{"gitId":"pnutzz-0207"},"content":"        String change \u003d command[3];","lastModifiedDate":"2022-02-10"},{"lineNumber":249,"author":{"gitId":"pnutzz-0207"},"content":"        String timeEntered \u003d command[4];","lastModifiedDate":"2022-02-10"},{"lineNumber":250,"author":{"gitId":"pnutzz-0207"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-02-10"},{"lineNumber":251,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":252,"author":{"gitId":"pnutzz-0207"},"content":"        //list is empty","lastModifiedDate":"2022-02-10"},{"lineNumber":253,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskAddedIndex \u003d\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":254,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.listEmptyMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":255,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":256,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":257,"author":{"gitId":"pnutzz-0207"},"content":"        //user trying to update a non-existing task","lastModifiedDate":"2022-02-10"},{"lineNumber":258,"author":{"gitId":"pnutzz-0207"},"content":"        if (taskIndex \u003e\u003d taskAddedIndex || taskIndex \u003c 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":259,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.taskDontExistMessage(taskIndex));","lastModifiedDate":"2022-02-10"},{"lineNumber":260,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":261,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":262,"author":{"gitId":"pnutzz-0207"},"content":"        Task oldTask \u003d list.get(taskIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":263,"author":{"gitId":"pnutzz-0207"},"content":"        Task newTask;","lastModifiedDate":"2022-02-10"},{"lineNumber":264,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":265,"author":{"gitId":"pnutzz-0207"},"content":"        //trying to add date to todo","lastModifiedDate":"2022-02-10"},{"lineNumber":266,"author":{"gitId":"pnutzz-0207"},"content":"        if (oldTask instanceof Todo \u0026\u0026 changeType.equals(\"date\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":267,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateTodoDateError());","lastModifiedDate":"2022-02-10"},{"lineNumber":268,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":269,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":270,"author":{"gitId":"pnutzz-0207"},"content":"        boolean isRedundantChange \u003d (change.equals(\"todo\") \u0026\u0026 oldTask instanceof Todo) ||","lastModifiedDate":"2022-02-10"},{"lineNumber":271,"author":{"gitId":"pnutzz-0207"},"content":"                (change.equals(\"deadline\") \u0026\u0026 oldTask instanceof Deadline) ||","lastModifiedDate":"2022-02-10"},{"lineNumber":272,"author":{"gitId":"pnutzz-0207"},"content":"                (change.equals(\"event\") \u0026\u0026 oldTask instanceof Event);","lastModifiedDate":"2022-02-10"},{"lineNumber":273,"author":{"gitId":"pnutzz-0207"},"content":"        if (isRedundantChange) {","lastModifiedDate":"2022-02-10"},{"lineNumber":274,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateSameTypeError(change));","lastModifiedDate":"2022-02-10"},{"lineNumber":275,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":276,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":277,"author":{"gitId":"pnutzz-0207"},"content":"        boolean hasSameDescription \u003d oldTask.getDescription().equals(change) \u0026\u0026 changeType.equals(\"name\");","lastModifiedDate":"2022-02-10"},{"lineNumber":278,"author":{"gitId":"pnutzz-0207"},"content":"        if (hasSameDescription) {","lastModifiedDate":"2022-02-10"},{"lineNumber":279,"author":{"gitId":"pnutzz-0207"},"content":"            throw new DukeException(Ui.updateSameDescriptionError());","lastModifiedDate":"2022-02-10"},{"lineNumber":280,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":281,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":282,"author":{"gitId":"pnutzz-0207"},"content":"        if (changeType.equals(\"type\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":283,"author":{"gitId":"pnutzz-0207"},"content":"            if (change.equals(\"todo\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":284,"author":{"gitId":"pnutzz-0207"},"content":"                newTask \u003d new Todo(oldTask.getDescription(), oldTask.isDone());","lastModifiedDate":"2022-02-10"},{"lineNumber":285,"author":{"gitId":"pnutzz-0207"},"content":"                list.set(taskIndex, newTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":286,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.updateTypeSuccessMessage(newTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":287,"author":{"gitId":"pnutzz-0207"},"content":"            } else if (change.equals(\"deadline\") \u0026\u0026 oldTask instanceof Event) {","lastModifiedDate":"2022-02-10"},{"lineNumber":288,"author":{"gitId":"pnutzz-0207"},"content":"                newTask \u003d new Deadline(oldTask.getDescription(), oldTask.isDone(), ((Event) oldTask).getDate());","lastModifiedDate":"2022-02-10"},{"lineNumber":289,"author":{"gitId":"pnutzz-0207"},"content":"                list.set(taskIndex, newTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":290,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.updateTypeSuccessMessage(newTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":291,"author":{"gitId":"pnutzz-0207"},"content":"            } else if (change.equals(\"event\") \u0026\u0026 oldTask instanceof Deadline) {","lastModifiedDate":"2022-02-10"},{"lineNumber":292,"author":{"gitId":"pnutzz-0207"},"content":"                newTask \u003d new Event(oldTask.getDescription(), oldTask.isDone(), ((Deadline) oldTask).getDate());","lastModifiedDate":"2022-02-10"},{"lineNumber":293,"author":{"gitId":"pnutzz-0207"},"content":"                list.set(taskIndex, newTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":294,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.updateTypeSuccessMessage(newTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":295,"author":{"gitId":"pnutzz-0207"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"pnutzz-0207"},"content":"                return Ui.updateTypeErrorMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":297,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":298,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":299,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (changeType.equals(\"name\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":300,"author":{"gitId":"pnutzz-0207"},"content":"            list.get(taskIndex).updateDescription(change);","lastModifiedDate":"2022-02-10"},{"lineNumber":301,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.updateDescriptionSuccessMessage(list.get(taskIndex));","lastModifiedDate":"2022-02-10"},{"lineNumber":302,"author":{"gitId":"pnutzz-0207"},"content":"        } else { //changeType.equals(\"date\")","lastModifiedDate":"2022-02-10"},{"lineNumber":303,"author":{"gitId":"pnutzz-0207"},"content":"            assert list.get(taskIndex) instanceof Event || list.get(taskIndex) instanceof Deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":304,"author":{"gitId":"pnutzz-0207"},"content":"            if (list.get(taskIndex) instanceof Event) {","lastModifiedDate":"2022-02-10"},{"lineNumber":305,"author":{"gitId":"pnutzz-0207"},"content":"                ((Event) list.get(taskIndex)).changeDate(change);","lastModifiedDate":"2022-02-10"},{"lineNumber":306,"author":{"gitId":"pnutzz-0207"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":307,"author":{"gitId":"pnutzz-0207"},"content":"                ((Deadline) list.get(taskIndex)).changeDate(change);","lastModifiedDate":"2022-02-10"},{"lineNumber":308,"author":{"gitId":"pnutzz-0207"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":309,"author":{"gitId":"pnutzz-0207"},"content":"            return Ui.updateDateSuccessMessage(list.get(taskIndex), timeEntered);","lastModifiedDate":"2022-02-10"},{"lineNumber":310,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":311,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":312,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":313,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":314,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":315,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns the Duke.task of the given index","lastModifiedDate":"2022-01-26"},{"lineNumber":316,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":317,"author":{"gitId":"pnutzz-0207"},"content":"     * @param index index of Duke.task in the list","lastModifiedDate":"2022-01-26"},{"lineNumber":318,"author":{"gitId":"pnutzz-0207"},"content":"     * @return Task of the given index","lastModifiedDate":"2022-01-25"},{"lineNumber":319,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":320,"author":{"gitId":"pnutzz-0207"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":321,"author":{"gitId":"pnutzz-0207"},"content":"        assert (index \u003c\u003d taskAddedIndex \u0026\u0026 index \u003e\u003d 0);","lastModifiedDate":"2022-02-06"},{"lineNumber":322,"author":{"gitId":"pnutzz-0207"},"content":"        return list.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":323,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":324,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":325,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":326,"author":{"gitId":"pnutzz-0207"},"content":"     * returns all tasks in the list in string type","lastModifiedDate":"2022-01-29"},{"lineNumber":327,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":328,"author":{"gitId":"pnutzz-0207"},"content":"     * @return list of tasks in string type","lastModifiedDate":"2022-01-29"},{"lineNumber":329,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":330,"author":{"gitId":"pnutzz-0207"},"content":"    private String showList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":331,"author":{"gitId":"pnutzz-0207"},"content":"        String listStr \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":332,"author":{"gitId":"pnutzz-0207"},"content":"        for (int i \u003d 0; i \u003c taskAddedIndex; i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":333,"author":{"gitId":"pnutzz-0207"},"content":"            listStr \u003d listStr + (i+1) + \".\" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":334,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":335,"author":{"gitId":"pnutzz-0207"},"content":"        return listStr;","lastModifiedDate":"2022-01-29"},{"lineNumber":336,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":337,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":338,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":339,"author":{"gitId":"pnutzz-0207"},"content":"     * Adds Duke.task into the list","lastModifiedDate":"2022-01-26"},{"lineNumber":340,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":341,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be added into the list","lastModifiedDate":"2022-01-26"},{"lineNumber":342,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":343,"author":{"gitId":"pnutzz-0207"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":344,"author":{"gitId":"pnutzz-0207"},"content":"        assert(task instanceof Todo || task instanceof Deadline || task instanceof Event);","lastModifiedDate":"2022-02-06"},{"lineNumber":345,"author":{"gitId":"pnutzz-0207"},"content":"        list.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":346,"author":{"gitId":"pnutzz-0207"},"content":"        taskAddedIndex++;","lastModifiedDate":"2022-01-29"},{"lineNumber":347,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":348,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":349,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":350,"author":{"gitId":"pnutzz-0207"},"content":"     * Removes Duke.task from the list","lastModifiedDate":"2022-01-26"},{"lineNumber":351,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":352,"author":{"gitId":"pnutzz-0207"},"content":"     * @param taskIndex index of the Duke.task to be removed","lastModifiedDate":"2022-01-26"},{"lineNumber":353,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":354,"author":{"gitId":"pnutzz-0207"},"content":"    private void removeTask(int taskIndex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":355,"author":{"gitId":"pnutzz-0207"},"content":"        assert (taskIndex \u003c\u003d taskAddedIndex \u0026\u0026 taskIndex \u003e\u003d 0);","lastModifiedDate":"2022-02-06"},{"lineNumber":356,"author":{"gitId":"pnutzz-0207"},"content":"        list.remove(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":357,"author":{"gitId":"pnutzz-0207"},"content":"        taskAddedIndex--;","lastModifiedDate":"2022-01-29"},{"lineNumber":358,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":359,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":360,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"pnutzz-0207":360}},{"path":"src/main/java/duke/sonautil/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.sonautil;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"public class Ui {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints when the list is empty","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    public static String emptyListMessage() {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oops... your list is empty! :(\";","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when Duke.Duke is list","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"    public static String showListMessage() {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Here is your list!\";","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"     * returns string right after Sona is opened","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Hi! You can call me Sona, your AMAZING task manager \u003e\u003c! How can I help you?\";","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"     *  returns string after user types \"bye\"","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"    public static String goodbyeMessage() {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Bye-bye :\u0027)  Hope to see you soon!\";","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when Duke.task description is not entered by user","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"    public static String emptyTaskMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oh no..did you forget to put what you need to do? :(\";","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when format of date/time is invalid","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"    public static String dateTimeErrorMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oh no... the format or the date/time you entered is wrong! \"","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"                + \"The correct format should be YYYY-MM-DD HHMM\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"                + \"It is not necessary to put in time!\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when user\u0027s command cannot be understood by Sona","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"     * @param s user\u0027s input message","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"    public static String userUnknownInputMessage(String s) {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"        return s + \"? Sorry, I don\u0027t understand what that means.. :(\";","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when the list of a particular day is empty","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"    public static String scheduleEmptyMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"        return \"There is nothing happening on this day! Hooray~\";","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out the list of tasks on a particular date","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"pnutzz-0207"},"content":"     * @param date date that the user wants to check","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"pnutzz-0207"},"content":"    public static String showSchedule(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"pnutzz-0207"},"content":"        assert(date !\u003d null);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"pnutzz-0207"},"content":"        return \"These are the events/deadlines happening on \" + date + \":\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when user did not enter a date to check schedule","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"pnutzz-0207"},"content":"    public static String scheduleNoDateErrorMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Which day would you like to check? Input format: schedule YYYY-MM-DD\";","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when a Duke.task is removed from the list","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be removed","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"pnutzz-0207"},"content":"    public static String taskRemovedMessage(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Done! I\u0027ve removed this task:\\n\" + task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when user did not specify which Duke.task to remove","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"pnutzz-0207"},"content":"    public static String taskRemoveEmptyMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Which task do you want to delete? Add the number in the end to tell me~\";","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when Duke.task list is empty","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"pnutzz-0207"},"content":"    public static String listEmptyMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oops... your list is empty! :(\";","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when an event is entered successfully","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be entered","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"pnutzz-0207"},"content":"     * @param timeEntered inform user that the time is set to 00:00 since the user did not enter a time for the event","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"pnutzz-0207"},"content":"     * @param tasksAddedIndex total number of tasks in the list","lastModifiedDate":"2022-01-29"},{"lineNumber":142,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":143,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"pnutzz-0207"},"content":"    public static String eventEnterSuccessMessage(Task task, String timeEntered, int tasksAddedIndex) {","lastModifiedDate":"2022-01-29"},{"lineNumber":145,"author":{"gitId":"pnutzz-0207"},"content":"        if (timeEntered.equals(\"true\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Wokay! I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"pnutzz-0207"},"content":"                    + task.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"pnutzz-0207"},"content":"                    + \"\\nNow you have \" + (tasksAddedIndex) + \" task(s) in the list\";","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Since you did not enter what time is this event happening, I will help you set it at 00:00!\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"pnutzz-0207"},"content":"                    + task.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"pnutzz-0207"},"content":"                    + \"\\nNow you have \" + (tasksAddedIndex) + \" task(s) in the list\";","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when date of event is not entered","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"pnutzz-0207"},"content":"    public static String eventDateEmptyMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oops! You forgot to add the event date after \u0027/\u0027.. try again? :)\";","lastModifiedDate":"2022-01-29"},{"lineNumber":163,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when \"/\" is not entered in user\u0027s command","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"pnutzz-0207"},"content":"    public static String eventNoSlashMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"pnutzz-0207"},"content":"        return \"When is the event happening? Add \u0027/\u0027 and the date after the event to make me record ;)\";","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when deadline is entered successfully","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be entered","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"pnutzz-0207"},"content":"     * @param timeEntered inform user that the time is set to 23:59 since the user did not enter a time for the event","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"pnutzz-0207"},"content":"     * @param tasksAddedIndex total number of tasks in the list","lastModifiedDate":"2022-01-29"},{"lineNumber":180,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":181,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"pnutzz-0207"},"content":"    public static String deadlineEnterSuccessMessage(Task task, String timeEntered, int tasksAddedIndex) {","lastModifiedDate":"2022-01-29"},{"lineNumber":183,"author":{"gitId":"pnutzz-0207"},"content":"        if (timeEntered.equals(\"true\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Wokay! I\u0027ve added this task:\\n\" + task.toString()","lastModifiedDate":"2022-01-29"},{"lineNumber":185,"author":{"gitId":"pnutzz-0207"},"content":"                    + \"\\nNow you have \" + (tasksAddedIndex) + \" task(s) in the list\";","lastModifiedDate":"2022-01-29"},{"lineNumber":186,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Since you did not enter the due time for this task, \"","lastModifiedDate":"2022-01-29"},{"lineNumber":188,"author":{"gitId":"pnutzz-0207"},"content":"                    + \"I will help you set it at 23:59!\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"pnutzz-0207"},"content":"                    + task.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"pnutzz-0207"},"content":"                    + \"\\nNow you have \" + (tasksAddedIndex) + \" task(s) in the list\";","lastModifiedDate":"2022-01-29"},{"lineNumber":191,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when date of deadline is not entered by user","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"pnutzz-0207"},"content":"    public static String deadlineDateEmptyMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oops! You forgot to add the due date after \u0027/\u0027.. try again? :)\";","lastModifiedDate":"2022-01-29"},{"lineNumber":201,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when \"/\" is not entered in user\u0027s command","lastModifiedDate":"2022-01-25"},{"lineNumber":205,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":208,"author":{"gitId":"pnutzz-0207"},"content":"    public static String deadlineNoSlashMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"pnutzz-0207"},"content":"        return \"When is the deadline? Add \u0027/\u0027 and the date after your task to make me record ;)\";","lastModifiedDate":"2022-01-29"},{"lineNumber":210,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":211,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":212,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":213,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when to-do Duke.task is entered successfully","lastModifiedDate":"2022-01-26"},{"lineNumber":214,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":215,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be added","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"pnutzz-0207"},"content":"     * @param tasksAddedIndex total number of tasks in the list","lastModifiedDate":"2022-01-29"},{"lineNumber":217,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":218,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"pnutzz-0207"},"content":"    public static String todoEnteredSuccessMessage(Task task, int tasksAddedIndex) {","lastModifiedDate":"2022-01-29"},{"lineNumber":220,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Wokay! I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":221,"author":{"gitId":"pnutzz-0207"},"content":"                + task.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":222,"author":{"gitId":"pnutzz-0207"},"content":"                + \"\\nNow you have \" + (tasksAddedIndex) + \" task(s) in the list\";","lastModifiedDate":"2022-01-29"},{"lineNumber":223,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":224,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":225,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":226,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when a Duke.task is successfully unmarked","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":228,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be unmarked","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":230,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":231,"author":{"gitId":"pnutzz-0207"},"content":"    public static String unmarkSuccessMessage(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":232,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Aw man..I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":233,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":236,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when user repeatedly unmark a Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":238,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":239,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":240,"author":{"gitId":"pnutzz-0207"},"content":"    public static String unmarkRepeatMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":241,"author":{"gitId":"pnutzz-0207"},"content":"        return \"You have already unmarked this task!\";","lastModifiedDate":"2022-01-29"},{"lineNumber":242,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":244,"author":{"gitId":"pnutzz-0207"},"content":"    public static String taskDontExistMessage(int taskIndex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"pnutzz-0207"},"content":"        return \"There is no number \" + (taskIndex + 1) + \" in your task list!\";","lastModifiedDate":"2022-01-29"},{"lineNumber":246,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":249,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when no number is entered after \"unmark\"","lastModifiedDate":"2022-01-25"},{"lineNumber":250,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":251,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":252,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":253,"author":{"gitId":"pnutzz-0207"},"content":"    public static String unmarkNoNumberMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Which task do you want to unmark? Add the number in the end to tell me~\";","lastModifiedDate":"2022-01-29"},{"lineNumber":255,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":256,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":257,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":258,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when a Duke.task is successfully marked","lastModifiedDate":"2022-01-26"},{"lineNumber":259,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":260,"author":{"gitId":"pnutzz-0207"},"content":"     * @param task Duke.task to be marked","lastModifiedDate":"2022-01-26"},{"lineNumber":261,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":262,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":263,"author":{"gitId":"pnutzz-0207"},"content":"    public static String markSuccessMessage(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":264,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Yay! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":265,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":266,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":267,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":268,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when user repeatedly mark a Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":269,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":270,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":271,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":272,"author":{"gitId":"pnutzz-0207"},"content":"    public static String markRepeatMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":273,"author":{"gitId":"pnutzz-0207"},"content":"        return \"You have already finished this task! :D\";","lastModifiedDate":"2022-01-29"},{"lineNumber":274,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":275,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":276,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":277,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when no number is entered after \"mark\"","lastModifiedDate":"2022-01-25"},{"lineNumber":278,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":279,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-25"},{"lineNumber":280,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":281,"author":{"gitId":"pnutzz-0207"},"content":"    public static String markNoNumberMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":282,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Which task do you want to mark? Add the number in the end to tell me~\";","lastModifiedDate":"2022-01-29"},{"lineNumber":283,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":284,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":285,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":286,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when keyword is not entered after \"find\"","lastModifiedDate":"2022-01-26"},{"lineNumber":287,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":288,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-26"},{"lineNumber":289,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":290,"author":{"gitId":"pnutzz-0207"},"content":"    public static String findNoKeywordError() {","lastModifiedDate":"2022-01-25"},{"lineNumber":291,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Enter your keyword behind \u0027find\u0027 to let me search for you! :)\";","lastModifiedDate":"2022-01-29"},{"lineNumber":292,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":293,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":294,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":295,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when there is no match to user\u0027s search","lastModifiedDate":"2022-01-26"},{"lineNumber":296,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":297,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":298,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":299,"author":{"gitId":"pnutzz-0207"},"content":"    public static String findNoMatchError() {","lastModifiedDate":"2022-01-29"},{"lineNumber":300,"author":{"gitId":"pnutzz-0207"},"content":"        return \"I couldn\u0027t find any task that matches your search! :(\";","lastModifiedDate":"2022-01-29"},{"lineNumber":301,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":302,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":303,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":304,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when Sona is showing search result to user","lastModifiedDate":"2022-01-26"},{"lineNumber":305,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":306,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-01-29"},{"lineNumber":307,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":308,"author":{"gitId":"pnutzz-0207"},"content":"    public static String findShowResult() {","lastModifiedDate":"2022-01-29"},{"lineNumber":309,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Here are the tasks that match your search:\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":310,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":311,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":312,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":313,"author":{"gitId":"pnutzz-0207"},"content":"     * Prints out when message after \"update\" is empty","lastModifiedDate":"2022-02-10"},{"lineNumber":314,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":315,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":316,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":317,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateEmptyBodyError() {","lastModifiedDate":"2022-02-10"},{"lineNumber":318,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oops! Do you need help with the update feature? Type \u0027update guide\u0027 to check out how to use it :D\";","lastModifiedDate":"2022-02-10"},{"lineNumber":319,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":320,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":321,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":322,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when update command has wrong format","lastModifiedDate":"2022-02-10"},{"lineNumber":323,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":324,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":325,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":326,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateWrongFormat() {","lastModifiedDate":"2022-02-10"},{"lineNumber":327,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Oh no... The format of your update command is wrong :(. \" +","lastModifiedDate":"2022-02-10"},{"lineNumber":328,"author":{"gitId":"pnutzz-0207"},"content":"                \"Type \u0027update guide\u0027 to check out how to use it :D\";","lastModifiedDate":"2022-02-10"},{"lineNumber":329,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":330,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":331,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":332,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user want to change to a invalid task type","lastModifiedDate":"2022-02-10"},{"lineNumber":333,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":334,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":335,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":336,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateInvalidTaskType() {","lastModifiedDate":"2022-02-10"},{"lineNumber":337,"author":{"gitId":"pnutzz-0207"},"content":"        return \"The task types you can change is todo, deadline or event. Try again? :)\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":338,"author":{"gitId":"pnutzz-0207"},"content":"                \"P.S. note that a todo task cannot be changed to a deadline/event\";","lastModifiedDate":"2022-02-10"},{"lineNumber":339,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":340,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":341,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":342,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user want to add date to a todo task","lastModifiedDate":"2022-02-10"},{"lineNumber":343,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":344,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":345,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":346,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateTodoDateError() {","lastModifiedDate":"2022-02-10"},{"lineNumber":347,"author":{"gitId":"pnutzz-0207"},"content":"        return \"You can\u0027t add a date to a Todo Task. Try add a new one! :)\";","lastModifiedDate":"2022-02-10"},{"lineNumber":348,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":349,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":350,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":351,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user want to change a task type to the same type","lastModifiedDate":"2022-02-10"},{"lineNumber":352,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":353,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":354,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":355,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateSameTypeError(String type) {","lastModifiedDate":"2022-02-10"},{"lineNumber":356,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Task already has type \" + type + \"~\";","lastModifiedDate":"2022-02-10"},{"lineNumber":357,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":358,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":359,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":360,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user want to change from todo to a deadline or event","lastModifiedDate":"2022-02-10"},{"lineNumber":361,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":362,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":363,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":364,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateTypeErrorMessage() {","lastModifiedDate":"2022-02-10"},{"lineNumber":365,"author":{"gitId":"pnutzz-0207"},"content":"        return \"You can\u0027t change a Todo task to a Deadline or Event since it needs a date. Try adding a new task! :)\";","lastModifiedDate":"2022-02-10"},{"lineNumber":366,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":367,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":368,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":369,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user want to change a task description to the same description","lastModifiedDate":"2022-02-10"},{"lineNumber":370,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":371,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":372,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":373,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateSameDescriptionError() {","lastModifiedDate":"2022-02-10"},{"lineNumber":374,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Task has same description!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":375,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":376,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":377,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":378,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user successfully changed the type of task","lastModifiedDate":"2022-02-10"},{"lineNumber":379,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":380,"author":{"gitId":"pnutzz-0207"},"content":"     * @param newTask the updated task","lastModifiedDate":"2022-02-10"},{"lineNumber":381,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":382,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":383,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateTypeSuccessMessage(Task newTask) {","lastModifiedDate":"2022-02-10"},{"lineNumber":384,"author":{"gitId":"pnutzz-0207"},"content":"        if (newTask instanceof Todo) {","lastModifiedDate":"2022-02-10"},{"lineNumber":385,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Done! Your task is now modified and updated~ You can\u0027t set date (and time) for a todo task, \" +","lastModifiedDate":"2022-02-10"},{"lineNumber":386,"author":{"gitId":"pnutzz-0207"},"content":"                    \"therefore it is removed: \\n\" + newTask.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":387,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":388,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Done~ Your task is now modified and updated:\\n\" + newTask.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":389,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":390,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":391,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":392,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":393,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user successfully changed the task description","lastModifiedDate":"2022-02-10"},{"lineNumber":394,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":395,"author":{"gitId":"pnutzz-0207"},"content":"     * @param newTask the updated task","lastModifiedDate":"2022-02-10"},{"lineNumber":396,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":397,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":398,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateDateSuccessMessage(Task newTask, String timeEntered) {","lastModifiedDate":"2022-02-10"},{"lineNumber":399,"author":{"gitId":"pnutzz-0207"},"content":"        if (timeEntered.equals(\"false\") \u0026\u0026 newTask instanceof Deadline) {","lastModifiedDate":"2022-02-10"},{"lineNumber":400,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Done~ Your task is now modified and updated!\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":401,"author":{"gitId":"pnutzz-0207"},"content":"                    \"Since you did not enter the due time for this task, I will help you set it at 23:59!\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":402,"author":{"gitId":"pnutzz-0207"},"content":"        } else if (timeEntered.equals(\"false\") \u0026\u0026 newTask instanceof Event) {","lastModifiedDate":"2022-02-10"},{"lineNumber":403,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Done~ Your task is now modified and updated!\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":404,"author":{"gitId":"pnutzz-0207"},"content":"                    \"Since you did not enter the due time for this task, I will help you set it at 00:00!\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":405,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":406,"author":{"gitId":"pnutzz-0207"},"content":"            return \"Done~ Your task is now modified and updated:\\n    \" + newTask.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":407,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":408,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":409,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":410,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":411,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":412,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns message when user want to change a task description to the same description","lastModifiedDate":"2022-02-10"},{"lineNumber":413,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":414,"author":{"gitId":"pnutzz-0207"},"content":"     * @param newTask the updated task","lastModifiedDate":"2022-02-10"},{"lineNumber":415,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":416,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":417,"author":{"gitId":"pnutzz-0207"},"content":"    public static String updateDescriptionSuccessMessage(Task newTask) {","lastModifiedDate":"2022-02-10"},{"lineNumber":418,"author":{"gitId":"pnutzz-0207"},"content":"        return \"Done! Your task is now modified and updated~\\n    \" + newTask.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":419,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":420,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":421,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":422,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":423,"author":{"gitId":"pnutzz-0207"},"content":"     * Shows the guide for update command","lastModifiedDate":"2022-02-10"},{"lineNumber":424,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":425,"author":{"gitId":"pnutzz-0207"},"content":"     * @return message to user","lastModifiedDate":"2022-02-10"},{"lineNumber":426,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":427,"author":{"gitId":"pnutzz-0207"},"content":"    public static String showUpdateCommandGuide() {","lastModifiedDate":"2022-02-10"},{"lineNumber":428,"author":{"gitId":"pnutzz-0207"},"content":"        return \"*~*~*~*~*~*~*~*~*~*~*~*~*\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":429,"author":{"gitId":"pnutzz-0207"},"content":"                \"update [task #] [type/name/date]: [your change]\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":430,"author":{"gitId":"pnutzz-0207"},"content":"                \"*~*~*~*~*~*~*~*~*~*~*~*~* \\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":431,"author":{"gitId":"pnutzz-0207"},"content":"                \"\\n- put \u0027type\u0027 to change the task to another category (i.e. todo, deadline, event)\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":432,"author":{"gitId":"pnutzz-0207"},"content":"                \"- put \u0027name\u0027 to change the description of the task\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":433,"author":{"gitId":"pnutzz-0207"},"content":"                \"- put \u0027date\u0027 to change the date (and time) of the task\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":434,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":435,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"pnutzz-0207":435}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":" * Represents the Duke.task (with deadline) entered by user","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] months \u003d {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"};","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"     * @param by the due date of deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"        super(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"     * @param by due date of deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"    public Deadline(String description, int isDone, LocalDateTime by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Deadline","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"     * @param by due date of deadline","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns the time of deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"     * @return LocalDateTime deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"        return by;","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"     * changes the date (and time) of deadline","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"    public void changeDate(String date) {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"        by \u003d LocalDateTime.parse(date);","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"        int year \u003d by.getYear();","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"        String month \u003d months[by.getMonthValue() - 1];","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"        int day \u003d by.getDayOfMonth();","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"        String hour;","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"        if (by.getHour() \u003c 10) {","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"            hour \u003d \"0\" + by.getHour();","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"            hour \u003d String.valueOf(by.getHour());","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"        String min;","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"        if (by.getMinute() \u003c 10) {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"            min \u003d \"0\" + by.getMinute();","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"            min \u003d String.valueOf(by.getMinute());","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"        return \"[D]\"","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"                + super.toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"                + \"(by: \" + month + \" \" + day + \" \" + year + \" \" + hour + \":\" + min + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"pnutzz-0207":88}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":" * Represents the event (with date) entered by user","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"    private String[] months \u003d {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"};","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Event","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"     * @param at the date of event","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"        super(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Event","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"     * @param at date of event","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"    public Event(String description, int isDone, LocalDateTime at) {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Event","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"     * @param at date of event","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"    public Event(String description, boolean isDone, LocalDateTime at) {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns the time of the event happening","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"     * @return LocalDateTime of the event","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"        return at;","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"     * changes the date (and time) of event","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"    public void changeDate(String date) {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"        at \u003d LocalDateTime.parse(date);","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"        int year \u003d at.getYear();","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"        String month \u003d months[at.getMonthValue() - 1];","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"        int day \u003d at.getDayOfMonth();","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"        String hour;","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"        if (at.getHour() \u003c 10) {","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"            hour \u003d \"0\" + at.getHour();","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"            hour \u003d String.valueOf(at.getHour());","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"        String min;","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"        if (at.getMinute() \u003c 10) {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"            min \u003d \"0\" + at.getMinute();","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"            min \u003d String.valueOf(at.getMinute());","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"        return \"[E]\"","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"                + super.toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"                + \" (at: \" + month + \" \" + day + \" \" + year + \" \" + hour + \":\" + min + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"pnutzz-0207":88}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":" * Represents the tasks entered by users. Divided into 3 types: todo, deadline, event.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"public class Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"    protected String description;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Task","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        assert(description !\u003d null \u0026\u0026 !description.equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Task","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"     * @param isDone whether the date is done or not","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"    public Task(String description, int isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"        assert(description !\u003d null \u0026\u0026 !description.equals(\"\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"        this.isDone \u003d isDone \u003d\u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"     * Constructor for object Task","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"     * @param isDone whether the date is done or not","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"     * @param description description for the task","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"        assert(description !\u003d null \u0026\u0026 !description.equals(\"\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns whether the task is done or not. True for done, false for not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"     * @return boolean value","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"        return isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns status icon of the Duke.task (\"X\" for done, \" \" for not done)","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"     * @return status icon of the Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-14"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"        return (isDone ? \"X\" : \" \"); // mark done Duke.task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"     * Marks the Duke.task as done","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-14"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"     * Marks the Duke.task as not done","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"     * Returns description of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"     * @return description of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"        return description;","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"pnutzz-0207"},"content":"     * changes the description of the task","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"pnutzz-0207"},"content":"    public void updateDescription(String description) {","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"pnutzz-0207"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"pnutzz-0207"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":96,"author":{"gitId":"pnutzz-0207"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":97,"author":{"gitId":"pnutzz-0207"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-14"},{"lineNumber":98,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":99,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"pnutzz-0207":99}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":" * Represents the to-do Duke.task entered by user","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"        super(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"    public Todo(String description, int isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"pnutzz-0207":24}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"    private void flip() {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"        db.flip();","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"        return db;","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":58}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"package duke.ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"    private final Image sona \u003d new Image(this.getClass().getResourceAsStream(\"/images/Sona.png\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"        String welcome \u003d Ui.welcomeMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, sona));","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"    @FXML","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"                DialogBox.getDukeDialog(response, sona)","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"        );","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"        if (command.length \u003e 0 \u0026\u0026 command[0].equals(\"bye\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"            PauseTransition wait \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"            wait.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"            wait.play();","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"360.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"205.0\" style\u003d\"-fx-background-color: #d6c1e3#d6c1e3; -fx-background-radius: 3; -fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"370.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"294.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"294.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"370.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"350.0\" /\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"pnutzz-0207":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"import duke.sonautil.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"    public void testParser() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 1: \"list\"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"list\", null, null, null}, p.processMessage(\"list\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 2: \"mark 1\"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"mark\", \"0\", null, null}, p.processMessage(\"mark 1\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 3: \"unmark 1\"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"unmark\", \"0\", null, null}, p.processMessage(\"unmark 1\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 4: \"todo play\"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"todo\", \"play\", null, null}, p.processMessage(\"todo play\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 5: \"deadline homework /2022-01-01\"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"deadline\", \"homework \", \"2022-01-01T23:59\", \"false\"},","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"                p.processMessage(\"deadline homework /2022-01-01\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 6: \"deadline homework/2022-01-01 1800\"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"deadline\", \"homework \", \"2022-01-01T18:00\", \"true\"},","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"                p.processMessage(\"deadline homework /2022-01-01 1800\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 7: \"event party /2022-01-03\"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"event\", \"party \", \"2022-01-03T00:00\", \"false\"},","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"                p.processMessage(\"event party /2022-01-03\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 8: \"event party /2022-01-03 1930\"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"event\", \"party \", \"2022-01-03T19:30\", \"true\"},","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"pnutzz-0207"},"content":"                p.processMessage(\"event party /2022-01-03 1930\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 9: \"delete 2\"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"delete\", \"1\", null, null},","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"pnutzz-0207"},"content":"                p.processMessage(\"delete 2\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 10: \"schedule 2022-01-02\"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"pnutzz-0207"},"content":"        assertTrue(Arrays.equals(new String[]{\"schedule\", \"2022-01-02\", null, null},","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"pnutzz-0207"},"content":"                p.processMessage(\"schedule 2022-01-02\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"pnutzz-0207"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"pnutzz-0207"},"content":"    public void testTaskList() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"pnutzz-0207"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 1.1: add todo Duke.task","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"pnutzz-0207"},"content":"        list.executeCommand(new String[]{\"todo\", \"play\", null, null});","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"pnutzz-0207"},"content":"        assertEquals(\"[T][ ] play\", list.getTask(0).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 1.2: add deadline","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"pnutzz-0207"},"content":"        list.executeCommand(new String[]{\"deadline\", \"homework \", \"2022-03-01T23:59\", \"false\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"pnutzz-0207"},"content":"        assertEquals(\"[D][ ] homework (by: Mar 1 2022 23:59)\", list.getTask(1).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 1.3: add event","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"pnutzz-0207"},"content":"        list.executeCommand(new String[]{\"event\", \"party\", \"2022-02-02T18:30\", \"true\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"pnutzz-0207"},"content":"        assertEquals(\"[E][ ] party (at: Feb 2 2022 18:30)\", list.getTask(2).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 2: mark","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"pnutzz-0207"},"content":"        list.executeCommand(new String[]{\"mark\", \"1\", null, null});","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"pnutzz-0207"},"content":"        assertEquals(\"[D][X] homework (by: Mar 1 2022 23:59)\", list.getTask(1).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 3: unmark","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"pnutzz-0207"},"content":"        list.executeCommand(new String[]{\"unmark\", \"1\", null, null});","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"pnutzz-0207"},"content":"        assertEquals(\"[D][ ] homework (by: Mar 1 2022 23:59)\", list.getTask(1).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"pnutzz-0207"},"content":"        //test case 4: delete","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"pnutzz-0207"},"content":"        list.executeCommand(new String[]{\"delete\", \"0\", null, null});","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"pnutzz-0207"},"content":"        assertEquals(\"[D][ ] homework (by: Mar 1 2022 23:59)\", list.getTask(0).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"pnutzz-0207"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"pnutzz-0207"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"pnutzz-0207"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"pnutzz-0207":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pnutzz-0207"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"pnutzz-0207"},"content":"list","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"pnutzz-0207"},"content":"todo","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"pnutzz-0207"},"content":"todoread","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"pnutzz-0207"},"content":"todo read","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"pnutzz-0207"},"content":"event","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"pnutzz-0207"},"content":"event play","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"pnutzz-0207"},"content":"event play Monday","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"pnutzz-0207"},"content":"event play/","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"pnutzz-0207"},"content":"event play/Monday","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"pnutzz-0207"},"content":"event play/2022-13-28","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"pnutzz-0207"},"content":"event play/2022-01-28","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"pnutzz-0207"},"content":"event party /2022-01-28 14:00","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"pnutzz-0207"},"content":"event party /2022-01-28 14:80","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"pnutzz-0207"},"content":"event party /2022-01-28 1400","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"pnutzz-0207"},"content":"deadline","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"pnutzz-0207"},"content":"deadlinehomework","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"deadline homework","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"pnutzz-0207"},"content":"deadline homework/Tuesday","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"pnutzz-0207"},"content":"deadline homework / 2022-02-03 1500","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"pnutzz-0207"},"content":"list","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"pnutzz-0207"},"content":"schedule 2022-01-28","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"pnutzz-0207"},"content":"schedule 2022-01-29","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"pnutzz-0207"},"content":"mark","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"pnutzz-0207"},"content":"mark2","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"pnutzz-0207"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"pnutzz-0207"},"content":"mark 0","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"pnutzz-0207"},"content":"mark 4","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"pnutzz-0207"},"content":"mark 5","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"pnutzz-0207"},"content":"schedule 2022-01-28","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"pnutzz-0207"},"content":"unmark2","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"pnutzz-0207"},"content":"unmark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"pnutzz-0207"},"content":"unmark 0","lastModifiedDate":"2022-01-14"},{"lineNumber":34,"author":{"gitId":"pnutzz-0207"},"content":"delete","lastModifiedDate":"2022-01-14"},{"lineNumber":35,"author":{"gitId":"pnutzz-0207"},"content":"delete0","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"pnutzz-0207"},"content":"delete 3","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"pnutzz-0207"},"content":"delete 5","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"pnutzz-0207"},"content":"find","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"pnutzz-0207"},"content":"find blah","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"pnutzz-0207"},"content":"todo play game","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"pnutzz-0207"},"content":"find play","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"pnutzz-0207"},"content":"bye","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"pnutzz-0207":42}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"pnutzz-0207"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"pnutzz-0207":1}}]
