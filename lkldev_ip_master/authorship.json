[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"# Luke project template","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"3. After that, locate the `src/main/java/Luke.java` file, right-click it, and choose `Run Luke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"   Hello! I am","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    _           _        ","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"   | |         | |       ","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"   | |    _   _| | _____","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"   | |   | | | | |/ / _ \\","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"   | |___| |_| |   \u003c  __/","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"   |______\\__,_|_|\\_\\___|","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lkldev":9,"-":16}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    mainClassName \u003d \"luke.Launcher\"","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"    archiveBaseName \u003d \"luke\"","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lkldev":17,"-":43}},{"path":"src/main/java/luke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":12}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import luke.commands.CommandResult;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import luke.commands.Result;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"import luke.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"import luke.storage.StorageFile;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":" * Implements the Luke chat bot.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"public class Luke {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    private StorageFile storageFile;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * Constructs a new Luke chat bot with the specified file path as the data file.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * If unable to read/write file or create a new file at the specified file path,","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * the system will print the error message and exit.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     * @param filePath The specified file path to the data file.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    Luke(String filePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"            storageFile \u003d new StorageFile(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"            assert(storageFile !\u003d null);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"            System.exit(1);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        initializeStorage();","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"     * Initializes the storage with the data found from the data file if it is not empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    private void initializeStorage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"            List\u003cString\u003e data \u003d storageFile.load();","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"            for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"                String str \u003d data.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"                String[] inputs \u003d str.split(\"\\\\|\");","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"                Command cmd \u003d Parser.parse(inputs[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"                assert(taskList !\u003d null);","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"                cmd.execute(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"                taskList.get(i).setDoneStatus(Integer.parseInt(inputs[1].strip()));","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"        } catch (FileNotFoundException | IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"            e.getStackTrace();","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"     * Returns the response from the bot based on the user input.","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"     * @param input The user input to interpret.","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"     * @return The result from the bot.","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"    public Result getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"        Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"        assert(taskList !\u003d null);","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"        CommandResult response \u003d cmd.execute(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"            storageFile.save(taskList);","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"lkldev"},"content":"        return response;","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lkldev":76,"-":1}},{"path":"src/main/java/luke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"import luke.ui.MainWindow;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":" * A GUI for Luke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    private final Luke luke \u003d new Luke(\"data/luke.txt\");","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLuke(luke);","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"            stage.setTitle(\"Luke\");","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":34}},{"path":"src/main/java/luke/commands/ActionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":" * Types of actions that are performed by the commands.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"public enum ActionType {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"    READ,","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"    ADD,","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"    UPDATE,","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    ERROR,","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    NO_ACTION","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lkldev":12}},{"path":"src/main/java/luke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" * Framework for commands that adds into the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    protected static final String DEFAULT_MESSAGE \u003d \"I have added the following task into list: \\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"            + \"\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    private final Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     * Constructs an add command with the specified task.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     * @param task The specified task to be added into the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    AddCommand(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    public Task getTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"        return this.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list, add the task into the task list and returns its command result.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        return new CommandResult(String.format(DEFAULT_MESSAGE, this.task, taskList.size()));","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":40}},{"path":"src/main/java/luke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Represents a command that is executable by running the execute method.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list, execute the command and returns its command result.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    public abstract CommandResult execute(TaskList taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"lkldev":17}},{"path":"src/main/java/luke/commands/CommandAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":" * Types of commands available for the user to issue.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"public enum CommandAction {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"    DEADLINE(ActionType.ADD, \"description,by\"),","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"    TODO(ActionType.ADD, \"description\"),","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"    EVENT(ActionType.ADD, \"description,at\"),","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    RECUR(ActionType.ADD, \"task,every,next\"),","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    MARK(ActionType.UPDATE, \"index\"),","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"    UNMARK(ActionType.UPDATE, \"index\"),","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    DELETE(ActionType.UPDATE, \"index\"),","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    EXIT(ActionType.NO_ACTION),","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    INVALID(ActionType.ERROR),","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    LIST(ActionType.READ),","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    FIND(ActionType.READ, \"keyword\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    private ActionType actionType;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    private String argumentKeys;","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    CommandAction(ActionType actionType) {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"        this(actionType, \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    CommandAction(ActionType actionType, String argumentKeys) {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        this.actionType \u003d actionType;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"        this.argumentKeys \u003d argumentKeys;","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    public String getArgumentKeys() {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        return this.argumentKeys;","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    public ActionType getCommandActionType() {","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        return this.actionType;","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lkldev":38}},{"path":"src/main/java/luke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":" * Represents the result of executing a command.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"public class CommandResult implements Result {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"    private String result;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"    private boolean isExit;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs a command result with the specified result.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param result The specified result for the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    public CommandResult(String result) {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"        this(result, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * Constructs a command result with the specified result and whether the command would result in exit.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * @param result The specified result for the command.","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * @param isExit Whether the command would result in an exit status.","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    CommandResult(String result, boolean isExit) {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"        this.result \u003d result;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    public String getResult() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"        return this.result;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        return isExit;","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":38}},{"path":"src/main/java/luke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the deadline command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs the deadline command with the specified deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param deadline The specified deadline task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"        super(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":18}},{"path":"src/main/java/luke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" * Implements the delete command.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"public class DeleteCommand extends UpdateCommand {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"Forcing it out... Success! I\u0027ve removed the following task:\\n\\t%s\";","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * Constructs the delete command with the specified index.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     * @param index The specified index of the task to be deleted in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"        super(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list, remove the specified index from the task list and returns its command result.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"            Task removedTask \u003d taskList.remove(getIndex() - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"            assert(removedTask !\u003d null);","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(String.format(DEFAULT_MESSAGE, removedTask));","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":38}},{"path":"src/main/java/luke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the event command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs the event command with the specified event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param event The specified event task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"        super(event);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":18}},{"path":"src/main/java/luke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the exit command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"I\u0027ll take my leave... Do you know who is my father?\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"        return new CommandResult(DEFAULT_MESSAGE, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":17}},{"path":"src/main/java/luke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the find command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class FindCommand extends ReadCommand {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    private static final String NO_ITEM_MESSAGE \u003d \"The force is unable to find any task with the keyword...\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"            + \"The keyword parsed is \\\"%s\\\".\";","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"    private static final String START_ITEM_MESSAGE \u003d \"The force found the following matching tasks:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    private String keyword;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     * Constructs the find command with the specified keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     * @param keyword The specified keyword to filter the task list by.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list, filters the task list based on keywords and reads the task list.","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        String emptyMsg \u003d String.format(NO_ITEM_MESSAGE, keyword);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"        taskList.setFiltered(x -\u003e x.getCommandString().toLowerCase().contains(keyword));","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        return readTaskList(taskList, emptyMsg, START_ITEM_MESSAGE, true);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lkldev":36}},{"path":"src/main/java/luke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the invalid command","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    public static final CommandAction COMMAND_ACTION \u003d CommandAction.INVALID;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"Oops, the force does not support this action.\\nPlease try again :(\";","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"    private static final String ERROR_MESSAGE \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    private String error;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    private boolean isError;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     * Constructs the invalid command without triggering the error message.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    public InvalidCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"        isError \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * Constructs the invalid command with the error message, displaying the output as an error.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * @param error The error message.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    public InvalidCommand(String error) {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"        this.error \u003d error;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        isError \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        if (isError) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(String.format(ERROR_MESSAGE, error));","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        return new CommandResult(DEFAULT_MESSAGE);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":40}},{"path":"src/main/java/luke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the list command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class ListCommand extends ReadCommand {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    private static final String NO_ITEM_MESSAGE \u003d \"Yay! You have no task to do!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    private static final String START_ITEM_MESSAGE \u003d \"Currently, you have the following tasks:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list and read task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"        return readTaskList(taskList, NO_ITEM_MESSAGE, START_ITEM_MESSAGE);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":23}},{"path":"src/main/java/luke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the mark command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class MarkCommand extends UpdateCommand {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"Using the force... Great! I have forced this task as done.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * Constructs the mark command with the specified index.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     * @param index The specified index of the task to be mark as done in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"        super(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list, marks the task at the specified index in the task list as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * Returns its command result.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"            taskList.get(getIndex() - 1).markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(DEFAULT_MESSAGE);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":37}},{"path":"src/main/java/luke/commands/ReadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Framework for commands that reads the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public abstract class ReadCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list and returns the appropriate message based on the items in the task.","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to loop through.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * @param emptyMsg The message to print if the task list is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     * @param startMsg The message to prefix the task list with if the task list is not empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     * @return The command result of the items in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"    public CommandResult readTaskList(TaskList taskList, String emptyMsg, String startMsg) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"        return readTaskList(taskList, emptyMsg, startMsg, false);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list and returns the appropriate message based on the items in the task.","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * @param taskList   The task list to loop through.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * @param emptyMsg   The message to print if the task list is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     * @param startMsg   The message to prefix the task list with if the task list is not empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"     * @param isFiltered To toggle whether the method should filter away any task or read all tasks in the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"     * @return The command result of the items in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    public CommandResult readTaskList(TaskList taskList, String emptyMsg, String startMsg, boolean isFiltered) {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        String msg \u003d emptyMsg;","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"        boolean isEmpty \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        //Since task list may be fully filtered but not empty, require this check to see if tasks are filtered","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        if (!taskList.isEmpty()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"            msg \u003d startMsg;","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"                if (!isFiltered || taskList.get(i).isNotFiltered()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"                    msg +\u003d String.format(\"\\t%d. %s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"                    isEmpty \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"            msg \u003d msg.stripTrailing();","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"        msg \u003d isEmpty ? emptyMsg : msg;","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"        return new CommandResult(msg);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lkldev":49}},{"path":"src/main/java/luke/commands/RecurCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.RecurringTask;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the recur command.","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class RecurCommand extends AddCommand {","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs the recur command with the specified recurring task.","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param recurringTask The specified recurring task to be added.","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    public RecurCommand(RecurringTask recurringTask) {","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"        super(recurringTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"lkldev":18}},{"path":"src/main/java/luke/commands/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":" * API of Result component, called by GUI to get result of command and check if program has ended.","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"public interface Result {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"    String getResult();","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    boolean isExit();","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":11}},{"path":"src/main/java/luke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the todo command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs the todo command with the specified todo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param todo The specified todo task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    public TodoCommand(Todo todo) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"        super(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":18}},{"path":"src/main/java/luke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements the unmark command.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class UnmarkCommand extends UpdateCommand {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"Force should be used for greater good!\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"            + \"I\u0027ve forced this task as not done yet...\";","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * Constructs the unmark command with the specified index.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     * @param index The specified index of the task to be mark as not done in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"        super(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * Takes in a task list, marks the task at the specified index in the task list as not done.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * Returns its command result.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * @param taskList The task list to perform the action on.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     * @return The result of this command\u0027s execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"            taskList.get(getIndex() - 1).unmarkAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(DEFAULT_MESSAGE);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"            return new CommandResult(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":38}},{"path":"src/main/java/luke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":" * Framework for commands that updates the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"public abstract class UpdateCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"    protected static final String TASK_NOT_FOUND_MESSAGE \u003d \"The force cannot find the task.\\nPlease try again :(\";","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"    private final int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     * Constructs the update command with the specified index.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * @param index The specified index of the task to be updated in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    UpdateCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    public int getIndex() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"        return index;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":23}},{"path":"src/main/java/luke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import luke.storage.Storable;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":" * Implements a list for storing tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":" * It implements Storable to store the data in a file using StorageFile.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"public class TaskList implements Storable {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * Returns a List of string to be stored in a file.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * This method is called by {@code StorageFile}.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"     * @return The list of tasks formatted as their command equivalent.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    public List\u003cString\u003e getData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"            list.add(String.format(\"%s | %s\", task.getCommandString(), task.isDone() ? \"1\" : \"0\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        return list;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"     * Returns true if the task list is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"     * @return True if the task list is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"     * @return The size of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"    public int size() {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"     * Returns the element at the specified index of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"     * @param index The specified index.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"     * @return The task at the specified index of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"     * Adds the specified task to the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"     * @param task The specified task to add into the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"lkldev"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"lkldev"},"content":"     * Removes and returns the task at the specified index of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"lkldev"},"content":"     * @param index The specified index.","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"lkldev"},"content":"     * @return The task removed at the specified index of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"lkldev"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"lkldev"},"content":"        return taskList.remove(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"lkldev"},"content":"    public void setFiltered(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"lkldev"},"content":"        taskList.stream().forEach(x -\u003e {","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"lkldev"},"content":"            x.clearFilter();","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"lkldev"},"content":"            if (!predicate.test(x)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"lkldev"},"content":"                x.markAsFiltered();","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"lkldev"},"content":"        });","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lkldev":94}},{"path":"src/main/java/luke/data/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.parser.DateTimeParser;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":" * Implements a Deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     * Constructs a deadline task with the specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * @param by          The datetime to indicate by when the task should be completed.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"        this.date \u003d DateTimeParser.toLocalDateTime(by.stripTrailing());","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"     * Constructs a deadline task with the argument map.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"     * @param args The map containing both the arguments required by Deadline class.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"    public Deadline(Map\u003cString, String\u003e args) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        this(args.get(\"description\"), args.get(\"by\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"        return \"[D]\" + super.toString() + \"\\n\\t(by: \" + DateTimeParser.toString(this.date) + \")\";","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        return String.format(\"deadline %s /by %s\", description, DateTimeParser.toCommandString(this.date));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lkldev":47}},{"path":"src/main/java/luke/data/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.parser.DateTimeParser;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":" * Implements an event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     * Constructs an event task with the specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * @param at          The datetime to indicate at which time the event starts.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    public Event(String description, String at) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"        this.date \u003d DateTimeParser.toLocalDateTime(at.stripTrailing());","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"     * Constructs an event task with the argument map.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"     * @param args The map containing both the arguments required by Event class.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"    public Event(Map\u003cString, String\u003e args) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        this(args.get(\"description\"), args.get(\"at\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"        return \"[E]\" + super.toString() + \"\\n\\t(at: \" + DateTimeParser.toString(this.date) + \")\";","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        return String.format(\"event %s /at %s\", description, DateTimeParser.toCommandString(this.date));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lkldev":47}},{"path":"src/main/java/luke/data/tasks/RecurDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.parser.DateTimeParser;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":" * Implements a recurring deadline task.","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"public class RecurDeadline extends RecurringTask {","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring deadline task with the specified description.","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     * @param by          The datetime to indicate by when the task should be completed.","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * @param every       The recurring duration.","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     * @param next        The next date to recur from.","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    public RecurDeadline(String description, String by, String every, String next) throws DateTimeParseException {","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"        super(description, every, next);","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"        this.date \u003d DateTimeParser.toLocalDateTime(by.stripTrailing());","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        updateDate();","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring deadline task with the argument map.","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"     * @param args The map containing both the arguments required by Deadline class.","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    public RecurDeadline(Map\u003cString, String\u003e args) throws DateTimeParseException {","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"        this(args.get(\"description\"), args.get(\"by\"), args.get(\"every\"), args.get(\"next\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"    private void updateDate() {","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"        LocalDateTime oldDate \u003d date;","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"        while (date.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"            date \u003d recurFunction.apply(date);","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        isNew \u003d !oldDate.isEqual(date);","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"        return String.format(super.toString(), \"[D]\", \"\\n\\t(by: \" + DateTimeParser.toString(this.date) + \")\");","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"        String baseFormat \u003d super.getCommandString();","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"        String taskFormat \u003d String.format(\"deadline %s /by %s\", description, DateTimeParser.toCommandString(this.date));","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"        return String.format(baseFormat, taskFormat);","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"lkldev":59}},{"path":"src/main/java/luke/data/tasks/RecurEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.parser.DateTimeParser;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":" * Implements a recurring event task.","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"public class RecurEvent extends RecurringTask {","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring event task with the specified description.","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * @param at          The datetime to indicate at which time the event starts.","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     * @param every       The recurring duration.","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * @param next        The next date to recur from.","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    public RecurEvent(String description, String at, String every, String next) throws DateTimeParseException {","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"        super(description, every, next);","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        this.date \u003d DateTimeParser.toLocalDateTime(at.stripTrailing());","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"        updateDate();","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring event task with the argument map.","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"     * @param args The map containing both the arguments required by Event class.","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the datetime is not one of the format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    public RecurEvent(Map\u003cString, String\u003e args) throws DateTimeParseException {","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        this(args.get(\"description\"), args.get(\"at\"), args.get(\"every\"), args.get(\"next\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    private void updateDate() {","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"        LocalDateTime oldDate \u003d date;","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"        while (date.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"            date \u003d recurFunction.apply(date);","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"        isNew \u003d !oldDate.isEqual(date);","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"        return String.format(super.toString(), \"[E]\", \"\\n\\t(at: \" + DateTimeParser.toString(this.date) + \")\");","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"        String baseFormat \u003d super.getCommandString();","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"        String taskFormat \u003d String.format(\"event %s /at %s\", description, DateTimeParser.toCommandString(this.date));","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"        return String.format(baseFormat, taskFormat);","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"lkldev":60}},{"path":"src/main/java/luke/data/tasks/RecurTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements a recurring Todo task.","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class RecurTodo extends RecurringTask {","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring todo task with the specified description.","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     * @param every       The recurring duration.","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     * @param next        The next date to recur from.","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    public RecurTodo(String description, String every, String next) {","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"        super(description, every, next);","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring todo task with the argument map.","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * @param args The map containing the argument required by Todo class.","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    public RecurTodo(Map\u003cString, String\u003e args) {","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        this(args.get(\"description\"), args.get(\"every\"), args.get(\"next\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        return String.format(super.toString(), \"[T]\", \"\");","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"        String baseFormat \u003d super.getCommandString();","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        String taskFormat \u003d String.format(\"todo %s\", description);","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"        return String.format(baseFormat, taskFormat);","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"lkldev":41}},{"path":"src/main/java/luke/data/tasks/RecurringTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import luke.parser.DateTimeParser;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":" * Implements a Recurring task.","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"public abstract class RecurringTask extends Task {","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    protected String every;","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    protected boolean isNew;","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    protected LocalDateTime recurDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    protected Function\u003cLocalDateTime, LocalDateTime\u003e recurFunction;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * Constructs a recurring task.","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * @param every  The recurring duration.","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * @param next   The next date to recur from.","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * @throws DateTimeParseException If the every argument or datetime is not one of the","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     * format accepted by {@code DateTimeParser}","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"    public RecurringTask(String description, String every, String next) throws DateTimeParseException {","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"        super(description);","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"        this.every \u003d every.stripTrailing();","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        this.recurDate \u003d DateTimeParser.toLocalDateTime(next.stripTrailing());","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"        this.recurFunction \u003d DateTimeParser.getDateTimeIncrementFunction(every.trim());","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        updateRecurDate();","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    private void updateRecurDate() {","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"        LocalDateTime oldDate \u003d recurDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        while (recurDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"            recurDate \u003d recurFunction.apply(recurDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"        isNew \u003d !oldDate.isEqual(recurDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    protected String getDateAsCommandString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        return DateTimeParser.toCommandString(recurDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    public void setDoneStatus(int value) {","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"        if (isNew) {","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"            isNew \u003d false;","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"        } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"            super.setDoneStatus(value);","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"        return \"[R]%s\" + super.toString() + \"%s (every: \" + every + \")\";","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"        return \"recur %s\" + String.format(\" /every %s /next %s\", every, getDateAsCommandString());","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"lkldev":66}},{"path":"src/main/java/luke/data/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":" * Implements a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"    protected String description;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"    protected boolean isFiltered;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * All task by default are set to not done.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"        this.description \u003d description.stripTrailing();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"        this.isFiltered \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * Returns an X if isDone is true, empty space if X is false.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"     * @return An X if isDone is true, empty space if X is false.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"     * Sets this task as not done.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"     * Sets this task as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"     * Sets this task as done based on stored value in file.","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    public void setDoneStatus(int value) {","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"        this.isDone \u003d value \u003d\u003d 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"     * Returns true if this task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"     * @return True if this task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"        return isDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"    public void markAsFiltered() {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"        isFiltered \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"    public void clearFilter() {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"        isFiltered \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"    public boolean isNotFiltered() {","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"        return !isFiltered;","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":75,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":76,"author":{"gitId":"lkldev"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":78,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"lkldev"},"content":"     * Returns the command string (user input) used to create this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"lkldev"},"content":"     * @return The command string (user input) used to create this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"lkldev"},"content":"    public abstract String getCommandString();","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"lkldev":85}},{"path":"src/main/java/luke/data/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.data.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * Implements a Todo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Constructs an todo task with the specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @param description The specified description for the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * Constructs a todo task with the argument map.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     * @param args The map containing the argument required by Todo class.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    public Todo(Map\u003cString, String\u003e args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"        this(args.get(\"description\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"    public String getCommandString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"        return String.format(\"todo %s\", description);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lkldev":37}},{"path":"src/main/java/luke/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":" * DateTime Parser with specific format.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":" * Accepts numerous format as input, but output format only as [MMM dd yyyy HH:mm] for strings","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":" * and [dd/MM/yyyy HH:mm] for storing.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"    private static final String ERROR_MESSAGE \u003d \"\\\"%s\\\" is not a valid argument for every.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    private static Map\u003cString, Function\u003cLocalDateTime, LocalDateTime\u003e\u003e recurFunctionMap \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"            put(\"day\", dt -\u003e dt.plusDays(1));","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"            put(\"week\", dt -\u003e dt.plusWeeks(1));","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"            put(\"month\", dt -\u003e dt.plusMonths(1));","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"            put(\"year\", dt -\u003e dt.plusYears(1));","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"        }};","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"     * Formatter containing all acceptable datetime format that user can pass as string.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    private static DateTimeFormatter fromStringToDateTime \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd.MM.yyyy HH:mm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy.MM.dd HH:mm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd.MM.yyyy HHmm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy.MM.dd HHmm\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"            .toFormatter();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"     * Specific format [MMM dd yyyy HH:mm] to convert all date to string.","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"    private static DateTimeFormatter fromDateTimeToString \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"     * Specific format [dd/MM/yyyy HH:mm] to convert all date to command string.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"    private static DateTimeFormatter fromDateTimeToCommand \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"    public static Function\u003cLocalDateTime, LocalDateTime\u003e getDateTimeIncrementFunction(String every) {","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"        if (!recurFunctionMap.containsKey(every)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"            throw new DateTimeParseException(String.format(ERROR_MESSAGE, every), every, 0);","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"        return recurFunctionMap.get(every);","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"    public static LocalDateTime toLocalDateTime(String date) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"        return LocalDateTime.parse(date, fromStringToDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"    public static String toString(LocalDateTime date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"        return date.format(fromDateTimeToString);","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"    public static String toCommandString(LocalDateTime date) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"        return date.format(fromDateTimeToCommand);","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lkldev":72}},{"path":"src/main/java/luke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import luke.commands.ActionType;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import luke.commands.AddCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"import luke.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"import luke.commands.CommandAction;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"import luke.commands.DeadlineCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"import luke.commands.DeleteCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"import luke.commands.EventCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"import luke.commands.ExitCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"import luke.commands.FindCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"import luke.commands.InvalidCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"import luke.commands.ListCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"import luke.commands.MarkCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"import luke.commands.ReadCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"import luke.commands.RecurCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"import luke.commands.TodoCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"import luke.commands.UnmarkCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"import luke.commands.UpdateCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.RecurDeadline;","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.RecurEvent;","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.RecurTodo;","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.RecurringTask;","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"import luke.data.tasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":" * Implements the parser class which parses user input and returns commands to execute.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    private static final String INVALID_DATE_FORMAT_MESSAGE \u003d \"The force does not comprehend the date:\\n%s\";","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"    private static final String INVALID_NUMBER_FORMAT_MESSAGE \u003d \"The force cannot convert the value to a number.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    private static final String EMPTY_DESCRIPTION_MESSAGE \u003d \"The description of %s cannot be empty.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"    private static final String MISSING_ARGUMENT_MESSAGE \u003d \"%s command requires the %s argument.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    private static final String INVALID_NUMBER_OF_ARGUMENT_MESSAGE \u003d \"%s has invalid number of arguments.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"    private static final String MISSING_KEYWORD_MESSAGE \u003d \"find command requires a keyword argument.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"    private static final String MISSING_INDEX_MESSAGE \u003d \"The index of %s cannot be empty.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"    private static final String COMMAND_NOT_FOUND \u003d \"Command not found.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"    private static final String RECUR_ERROR_MESSAGE \u003d \"recur command encountered an error:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"    private static final String COMMAND_NOT_SUPPORTED \u003d \"Command not supported.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"    /* Map of accepted user commands tied to the respective command action type. */","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"    private static Map\u003cString, CommandAction\u003e commandActionMap \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"            put(\"bye\", CommandAction.EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"            put(\"list\", CommandAction.LIST);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"            put(\"mark\", CommandAction.MARK);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"            put(\"unmark\", CommandAction.UNMARK);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"            put(\"todo\", CommandAction.TODO);","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"            put(\"event\", CommandAction.EVENT);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"            put(\"deadline\", CommandAction.DEADLINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"            put(\"delete\", CommandAction.DELETE);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"            put(\"find\", CommandAction.FIND);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"            put(\"recur\", CommandAction.RECUR);","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"        }};","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"     * Parses the specified input and returns the appropriate command.","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"     * @param input The specified input to parse.","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"     * @return The appropriate command based on the specified input.","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"            CommandAction cmdAction \u003d commandActionMap.getOrDefault(inputs[0], CommandAction.INVALID);","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"            assert(cmdAction !\u003d null);","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"            switch (cmdAction.getCommandActionType()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"lkldev"},"content":"            case NO_ACTION:","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"lkldev"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"lkldev"},"content":"            case READ:","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"lkldev"},"content":"                return prepareReadCommand(cmdAction, inputs);","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"lkldev"},"content":"            case ADD:","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"lkldev"},"content":"                return prepareAddCommand(cmdAction, inputs);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"lkldev"},"content":"            case UPDATE:","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"lkldev"},"content":"                return prepareUpdateCommand(cmdAction, inputs);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"lkldev"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"lkldev"},"content":"                return new InvalidCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"lkldev"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"lkldev"},"content":"            return new InvalidCommand(INVALID_NUMBER_FORMAT_MESSAGE);","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"lkldev"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"lkldev"},"content":"            return new InvalidCommand(String.format(INVALID_DATE_FORMAT_MESSAGE, e.getMessage()));","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"lkldev"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"lkldev"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"lkldev"},"content":"     * Prepares and returns the appropriate read command.","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"lkldev"},"content":"     * @param cmdAction The command action tied to the user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"lkldev"},"content":"     * @param args      The arguments that the user have supplied.","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"lkldev"},"content":"     * @return The appropriate read command based on user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"lkldev"},"content":"     * @throws IllegalArgumentException If the command is not a read command.","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"lkldev"},"content":"    private static ReadCommand prepareReadCommand(CommandAction cmdAction, String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"lkldev"},"content":"        assert(cmdAction.getCommandActionType() \u003d\u003d ActionType.READ);","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"lkldev"},"content":"        switch (cmdAction) {","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"lkldev"},"content":"        case FIND:","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"lkldev"},"content":"            String keyword \u003d parseFindArgument(args);","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"lkldev"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"lkldev"},"content":"        case LIST:","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"lkldev"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"lkldev"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(COMMAND_NOT_FOUND);","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"lkldev"},"content":"     * Prepares and returns the appropriate update command.","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"lkldev"},"content":"     * @param cmdAction The command action tied to the user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"lkldev"},"content":"     * @param args      The arguments that the user have supplied.","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"lkldev"},"content":"     * @return The appropriate update command based on user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"lkldev"},"content":"     * @throws IllegalArgumentException If the command is not a update command.","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"lkldev"},"content":"    private static UpdateCommand prepareUpdateCommand(CommandAction cmdAction, String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"lkldev"},"content":"        assert(cmdAction.getCommandActionType() \u003d\u003d ActionType.UPDATE);","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"lkldev"},"content":"        int index \u003d parseUpdateArguments(args);","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"lkldev"},"content":"        switch (cmdAction) {","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"lkldev"},"content":"        case MARK:","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"lkldev"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"lkldev"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"lkldev"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"lkldev"},"content":"        case DELETE:","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"lkldev"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"lkldev"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(COMMAND_NOT_FOUND);","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"lkldev"},"content":"     * Prepares and returns the appropriate add command.","lastModifiedDate":"2022-02-10"},{"lineNumber":140,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":141,"author":{"gitId":"lkldev"},"content":"     * @param cmdAction The command action tied to the user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":142,"author":{"gitId":"lkldev"},"content":"     * @param args      The arguments that the user have supplied.","lastModifiedDate":"2022-01-31"},{"lineNumber":143,"author":{"gitId":"lkldev"},"content":"     * @return The appropriate add command based on user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"lkldev"},"content":"     * @throws IllegalArgumentException If the command is not an add command.","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":146,"author":{"gitId":"lkldev"},"content":"    private static AddCommand prepareAddCommand(CommandAction cmdAction, String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":147,"author":{"gitId":"lkldev"},"content":"        assert(cmdAction.getCommandActionType() \u003d\u003d ActionType.ADD);","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"lkldev"},"content":"        verifyAddCommand(cmdAction, args);","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"lkldev"},"content":"        if (cmdAction \u003d\u003d CommandAction.RECUR) {","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"lkldev"},"content":"            return prepareRecurCommand(args);","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":153,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":154,"author":{"gitId":"lkldev"},"content":"        Map\u003cString, String\u003e argsMap \u003d parseAddArguments(cmdAction, args);","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"lkldev"},"content":"        switch (cmdAction) {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"lkldev"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"lkldev"},"content":"            return new DeadlineCommand(new Deadline(argsMap));","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"lkldev"},"content":"        case EVENT:","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"lkldev"},"content":"            return new EventCommand(new Event(argsMap));","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"lkldev"},"content":"        case TODO:","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"lkldev"},"content":"            return new TodoCommand(new Todo(argsMap));","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"lkldev"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":163,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(COMMAND_NOT_FOUND);","lastModifiedDate":"2022-02-09"},{"lineNumber":164,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"lkldev"},"content":"    private static AddCommand prepareRecurCommand(String[] args) {","lastModifiedDate":"2022-02-13"},{"lineNumber":168,"author":{"gitId":"lkldev"},"content":"        Map\u003cString, String\u003e argsMap \u003d parseRecurArguments(args);","lastModifiedDate":"2022-02-13"},{"lineNumber":169,"author":{"gitId":"lkldev"},"content":"        String taskCommand \u003d argsMap.get(\"task\");","lastModifiedDate":"2022-02-13"},{"lineNumber":170,"author":{"gitId":"lkldev"},"content":"        String[] taskArgs \u003d taskCommand.split(\" \", 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":171,"author":{"gitId":"lkldev"},"content":"        CommandAction cmdAction \u003d commandActionMap.getOrDefault(taskArgs[0], CommandAction.INVALID);","lastModifiedDate":"2022-02-13"},{"lineNumber":172,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":173,"author":{"gitId":"lkldev"},"content":"            verifyAddCommand(cmdAction, taskArgs);","lastModifiedDate":"2022-02-13"},{"lineNumber":174,"author":{"gitId":"lkldev"},"content":"            argsMap.putAll(parseAddArguments(cmdAction, taskArgs));","lastModifiedDate":"2022-02-13"},{"lineNumber":175,"author":{"gitId":"lkldev"},"content":"            RecurringTask recurringTask;","lastModifiedDate":"2022-02-13"},{"lineNumber":176,"author":{"gitId":"lkldev"},"content":"            switch (cmdAction) {","lastModifiedDate":"2022-02-13"},{"lineNumber":177,"author":{"gitId":"lkldev"},"content":"            case DEADLINE:","lastModifiedDate":"2022-02-13"},{"lineNumber":178,"author":{"gitId":"lkldev"},"content":"                recurringTask \u003d new RecurDeadline(argsMap);","lastModifiedDate":"2022-02-13"},{"lineNumber":179,"author":{"gitId":"lkldev"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":180,"author":{"gitId":"lkldev"},"content":"            case EVENT:","lastModifiedDate":"2022-02-13"},{"lineNumber":181,"author":{"gitId":"lkldev"},"content":"                recurringTask \u003d new RecurEvent(argsMap);","lastModifiedDate":"2022-02-13"},{"lineNumber":182,"author":{"gitId":"lkldev"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":183,"author":{"gitId":"lkldev"},"content":"            case TODO:","lastModifiedDate":"2022-02-13"},{"lineNumber":184,"author":{"gitId":"lkldev"},"content":"                recurringTask \u003d new RecurTodo(argsMap);","lastModifiedDate":"2022-02-13"},{"lineNumber":185,"author":{"gitId":"lkldev"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":186,"author":{"gitId":"lkldev"},"content":"            default:","lastModifiedDate":"2022-02-13"},{"lineNumber":187,"author":{"gitId":"lkldev"},"content":"                throw new IllegalArgumentException(COMMAND_NOT_SUPPORTED);","lastModifiedDate":"2022-02-13"},{"lineNumber":188,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":189,"author":{"gitId":"lkldev"},"content":"            return new RecurCommand(recurringTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":190,"author":{"gitId":"lkldev"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":191,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(RECUR_ERROR_MESSAGE + e.getMessage());","lastModifiedDate":"2022-02-13"},{"lineNumber":192,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":193,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":194,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":195,"author":{"gitId":"lkldev"},"content":"    private static void verifyAddCommand(CommandAction cmdAction, String[] args) {","lastModifiedDate":"2022-02-13"},{"lineNumber":196,"author":{"gitId":"lkldev"},"content":"        if (cmdAction.getCommandActionType() !\u003d ActionType.ADD) {","lastModifiedDate":"2022-02-13"},{"lineNumber":197,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(COMMAND_NOT_SUPPORTED);","lastModifiedDate":"2022-02-13"},{"lineNumber":198,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":199,"author":{"gitId":"lkldev"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-02-13"},{"lineNumber":200,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(String.format(INVALID_NUMBER_OF_ARGUMENT_MESSAGE, args[0]));","lastModifiedDate":"2022-02-13"},{"lineNumber":201,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":202,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":203,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":204,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":205,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":206,"author":{"gitId":"lkldev"},"content":"     * Parses and returns the arguments tied to the add commands.","lastModifiedDate":"2022-02-10"},{"lineNumber":207,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":208,"author":{"gitId":"lkldev"},"content":"     * @param cmdAction The command action tied to the user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":209,"author":{"gitId":"lkldev"},"content":"     * @param args      The arguments that the user have supplied.","lastModifiedDate":"2022-01-31"},{"lineNumber":210,"author":{"gitId":"lkldev"},"content":"     * @return The arguments mapped to the keywords of the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":211,"author":{"gitId":"lkldev"},"content":"     * @throws IllegalArgumentException If the argument does not fit the syntax of the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":212,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":213,"author":{"gitId":"lkldev"},"content":"    private static Map\u003cString, String\u003e parseAddArguments(CommandAction cmdAction, String[] args)","lastModifiedDate":"2022-01-31"},{"lineNumber":214,"author":{"gitId":"lkldev"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2022-01-30"},{"lineNumber":215,"author":{"gitId":"lkldev"},"content":"        assert(args.length \u003d\u003d 2);","lastModifiedDate":"2022-02-10"},{"lineNumber":216,"author":{"gitId":"lkldev"},"content":"        assert(cmdAction.getCommandActionType() \u003d\u003d ActionType.ADD);","lastModifiedDate":"2022-02-13"},{"lineNumber":217,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":218,"author":{"gitId":"lkldev"},"content":"        //add description argument identifier","lastModifiedDate":"2022-02-10"},{"lineNumber":219,"author":{"gitId":"lkldev"},"content":"        args[1] \u003d \"description \" + args[1];","lastModifiedDate":"2022-02-10"},{"lineNumber":220,"author":{"gitId":"lkldev"},"content":"        Map\u003cString, String\u003e argsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"lkldev"},"content":"        String[] actualArgs \u003d args[1].split(\"/(?\u003d[A-Za-z])\");","lastModifiedDate":"2022-02-10"},{"lineNumber":222,"author":{"gitId":"lkldev"},"content":"        String[] expectedArgs \u003d cmdAction.getArgumentKeys().split(\",\");","lastModifiedDate":"2022-02-10"},{"lineNumber":223,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":224,"author":{"gitId":"lkldev"},"content":"        verifyArguments(args[0], actualArgs, expectedArgs);","lastModifiedDate":"2022-02-10"},{"lineNumber":225,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":226,"author":{"gitId":"lkldev"},"content":"        for (int i \u003d 0; i \u003c expectedArgs.length; i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":227,"author":{"gitId":"lkldev"},"content":"            String[] argValuePair \u003d actualArgs[i].split(\" \", 2);","lastModifiedDate":"2022-02-10"},{"lineNumber":228,"author":{"gitId":"lkldev"},"content":"            argsMap.put(argValuePair[0], argValuePair[1]);","lastModifiedDate":"2022-02-10"},{"lineNumber":229,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":231,"author":{"gitId":"lkldev"},"content":"        return argsMap;","lastModifiedDate":"2022-02-10"},{"lineNumber":232,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":234,"author":{"gitId":"lkldev"},"content":"    private static Map\u003cString, String\u003e parseRecurArguments(String[] args) {","lastModifiedDate":"2022-02-13"},{"lineNumber":235,"author":{"gitId":"lkldev"},"content":"        assert(args.length \u003d\u003d 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":236,"author":{"gitId":"lkldev"},"content":"        Map\u003cString, String\u003e argsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-02-13"},{"lineNumber":237,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":238,"author":{"gitId":"lkldev"},"content":"        // Add next argument","lastModifiedDate":"2022-02-13"},{"lineNumber":239,"author":{"gitId":"lkldev"},"content":"        if (!args[1].contains(\"/next\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":240,"author":{"gitId":"lkldev"},"content":"            args[1] +\u003d \" /next \" + DateTimeParser.toCommandString(LocalDateTime.now());","lastModifiedDate":"2022-02-13"},{"lineNumber":241,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":242,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":243,"author":{"gitId":"lkldev"},"content":"        String[] actualArgs \u003d args[1].split(\"/(?\u003devery|next)\");","lastModifiedDate":"2022-02-13"},{"lineNumber":244,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":245,"author":{"gitId":"lkldev"},"content":"        actualArgs[0] \u003d \"task \" + actualArgs[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":246,"author":{"gitId":"lkldev"},"content":"        String[] expectedArgs \u003d CommandAction.RECUR.getArgumentKeys().split(\",\");","lastModifiedDate":"2022-02-13"},{"lineNumber":247,"author":{"gitId":"lkldev"},"content":"        verifyArguments(\"recur\", actualArgs, expectedArgs);","lastModifiedDate":"2022-02-13"},{"lineNumber":248,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":249,"author":{"gitId":"lkldev"},"content":"        for (int i \u003d 0; i \u003c actualArgs.length; i++) {","lastModifiedDate":"2022-02-13"},{"lineNumber":250,"author":{"gitId":"lkldev"},"content":"            String[] argValuePair \u003d actualArgs[i].split(\" \", 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":251,"author":{"gitId":"lkldev"},"content":"            argsMap.put(argValuePair[0], argValuePair[1]);","lastModifiedDate":"2022-02-13"},{"lineNumber":252,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":253,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":254,"author":{"gitId":"lkldev"},"content":"        return argsMap;","lastModifiedDate":"2022-02-13"},{"lineNumber":255,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":256,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":257,"author":{"gitId":"lkldev"},"content":"    private static void verifyArguments(String command, String[] actualArgs, String[] expectedArgs) {","lastModifiedDate":"2022-02-10"},{"lineNumber":258,"author":{"gitId":"lkldev"},"content":"        for (int i \u003d 0; i \u003c expectedArgs.length; i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":259,"author":{"gitId":"lkldev"},"content":"            if (i \u003d\u003d actualArgs.length) {","lastModifiedDate":"2022-02-10"},{"lineNumber":260,"author":{"gitId":"lkldev"},"content":"                throw new IllegalArgumentException(String.format(MISSING_ARGUMENT_MESSAGE, command, expectedArgs[i]));","lastModifiedDate":"2022-02-10"},{"lineNumber":261,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":262,"author":{"gitId":"lkldev"},"content":"            String[] argValuePair \u003d actualArgs[i].split(\" \", 2);","lastModifiedDate":"2022-02-10"},{"lineNumber":263,"author":{"gitId":"lkldev"},"content":"            if (argValuePair.length \u003c 2) {","lastModifiedDate":"2022-02-10"},{"lineNumber":264,"author":{"gitId":"lkldev"},"content":"                throw new IllegalArgumentException(String.format(MISSING_ARGUMENT_MESSAGE, command, expectedArgs[i]));","lastModifiedDate":"2022-02-10"},{"lineNumber":265,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":266,"author":{"gitId":"lkldev"},"content":"            if (argValuePair[1].isBlank()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":267,"author":{"gitId":"lkldev"},"content":"                throw new IllegalArgumentException(String.format(MISSING_ARGUMENT_MESSAGE, command, expectedArgs[i]));","lastModifiedDate":"2022-02-10"},{"lineNumber":268,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":269,"author":{"gitId":"lkldev"},"content":"            if (!argValuePair[0].equalsIgnoreCase(expectedArgs[i])) {","lastModifiedDate":"2022-02-10"},{"lineNumber":270,"author":{"gitId":"lkldev"},"content":"                throw new IllegalArgumentException(String.format(MISSING_ARGUMENT_MESSAGE, command, expectedArgs[i]));","lastModifiedDate":"2022-02-10"},{"lineNumber":271,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":272,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":273,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":274,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":275,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":276,"author":{"gitId":"lkldev"},"content":"     * Parses and returns the arguments tied to the find command","lastModifiedDate":"2022-02-10"},{"lineNumber":277,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":278,"author":{"gitId":"lkldev"},"content":"     * @param args The arguments that the user have supplied.","lastModifiedDate":"2022-01-31"},{"lineNumber":279,"author":{"gitId":"lkldev"},"content":"     * @return The arguments mapped to the keywords of the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":280,"author":{"gitId":"lkldev"},"content":"     * @throws IllegalArgumentException If the argument does not fit the syntax of the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":281,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":282,"author":{"gitId":"lkldev"},"content":"    public static String parseFindArgument(String[] args) throws IllegalArgumentException {","lastModifiedDate":"2022-01-31"},{"lineNumber":283,"author":{"gitId":"lkldev"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-01-30"},{"lineNumber":284,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(String.format(MISSING_KEYWORD_MESSAGE, args[0]));","lastModifiedDate":"2022-02-09"},{"lineNumber":285,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":286,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":287,"author":{"gitId":"lkldev"},"content":"        if (args[1].isBlank()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":288,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(String.format(MISSING_KEYWORD_MESSAGE, args[0]));","lastModifiedDate":"2022-02-09"},{"lineNumber":289,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":290,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":291,"author":{"gitId":"lkldev"},"content":"        return args[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":292,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":293,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":294,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":295,"author":{"gitId":"lkldev"},"content":"     * Parses and returns the arguments tied to the update commands.","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":297,"author":{"gitId":"lkldev"},"content":"     * @param args The arguments that the user have supplied.","lastModifiedDate":"2022-01-31"},{"lineNumber":298,"author":{"gitId":"lkldev"},"content":"     * @return The arguments mapped to the keywords of the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":299,"author":{"gitId":"lkldev"},"content":"     * @throws IllegalArgumentException If the argument does not fit the syntax of the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":300,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":301,"author":{"gitId":"lkldev"},"content":"    private static int parseUpdateArguments(String[] args) throws IllegalArgumentException {","lastModifiedDate":"2022-01-31"},{"lineNumber":302,"author":{"gitId":"lkldev"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":303,"author":{"gitId":"lkldev"},"content":"            throw new IllegalArgumentException(String.format(MISSING_INDEX_MESSAGE, args[0]));","lastModifiedDate":"2022-02-09"},{"lineNumber":304,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":305,"author":{"gitId":"lkldev"},"content":"        return Integer.parseInt(args[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":306,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":307,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":308,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":308}},{"path":"src/main/java/luke/storage/Storable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":" * API of Storable component, called by StorageFile to save data into file.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":" * Implement this if you would like to use StorageFile to save and load data from file.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"public interface Storable {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"     * Method invoked by StorageFile to get the data that needs to be stored into a file.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"     * @return An ArrayList of String containing the data to be stored into a file.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    List\u003cString\u003e getData();","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lkldev":16}},{"path":"src/main/java/luke/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":" * Implements the Storage class that reads from and writes to the filepath provided.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"public class StorageFile {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    private static final String READ_WRITE_FAIL_MESSAGE \u003d \"Unable to read or write to file.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    private final File file;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"     * Constructs a Storage class that is connected to the specified file path.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"     * Throws IOException if unable to read/write to file path or unable to create new file path.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"     * @param filePath The specified file path.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"     * @throws IOException If unable to read/write to file path or unable to create new file path.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    public StorageFile(String filePath) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"        if (this.file.getParentFile() !\u003d null \u0026\u0026 !this.file.getParentFile().exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"            this.file.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"        if (!this.file.canRead() \u0026\u0026 !this.file.canWrite()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"            throw new IOException(READ_WRITE_FAIL_MESSAGE);","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"     * Saves the data in the storable class to the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"     * @param storable The data to store into file.","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"     * @throws IOException If unable to write to file.","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"    public void save(Storable storable) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"        for (String str : storable.getData()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"            fw.write(str + System.lineSeparator());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"        fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"     * Returns an ArrayList of String which is the data that has been read from the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"     * Requires more processing to recreate the data as objects.","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"     * @return An ArrayList of String which is the data that has been read from the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"    public List\u003cString\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"            list.add(sc.nextLine());","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"        return list;","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lkldev":70}},{"path":"src/main/java/luke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"    private static final int CIRCLE_RADIUS \u003d 50;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    private static final int CIRCLE_CENTER_X \u003d 50;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    private static final int CIRCLE_CENTER_Y \u003d 50;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    private HBox displayPictureBox;","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        Circle clip \u003d new Circle(CIRCLE_CENTER_X, CIRCLE_CENTER_Y, CIRCLE_RADIUS);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"        displayPictureBox.setClip(clip);","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"    public static DialogBox getLukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":68}},{"path":"src/main/java/luke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"import luke.Luke;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"import luke.commands.Result;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I am Luke! \\nHow can I help you?\";","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"    private static final int EXIT_DELAY_DURATION \u003d 3;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"    private Luke luke;","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DarthVader.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"    private Image lukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Luke.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"     * Initializes the GUI and send out a greeting message from luke.","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getLukeDialog(GREETING_MESSAGE, lukeImage));","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"    public void setLuke(Luke l) {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"        luke \u003d l;","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Luke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"        Result result \u003d luke.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"                DialogBox.getLukeDialog(result.getResult(), lukeImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"        if (result.isExit()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(EXIT_DELAY_DURATION));","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"            delay.play();","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":72}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"        \u003cLabel fx:id\u003d\"dialog\" stylesheets\u003d\"@DialogStyle.css\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"        \u003cHBox fx:id\u003d\"displayPictureBox\" stylesheets\u003d\"@DialogStyle.css\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"        \u003cImageView fitHeight\u003d\"600.0\" fitWidth\u003d\"398.0\" pickOnBounds\u003d\"true\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"                \u003cImage url\u003d\"@../images/SpaceBackground.png\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lkldev":26}},{"path":"src/test/java/luke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"package luke.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"import luke.commands.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"import luke.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"    private static final String[] DESCRIPTIONS \u003d {\"eat\", \"sleep\", \"code\"};","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    private static final String[] FILLERS \u003d {\"dinner\", \"lunch\", \"project\"};","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    private static final String[] DATES \u003d {\"01/01/2022\", \"02/02/2022\", \"03/03/2022\"};","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"    private static final String[] TIMES \u003d {\"06:00\", \"1200\", \"1800\", \"23:59\"};","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"    public void deadlineCommand_validInput_correctCommandResult() {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"        for (int i \u003d 0; i \u003c DESCRIPTIONS.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"            for (int j \u003d 0; j \u003c DATES.length; j++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"                for (int k \u003d 0; k \u003c TIMES.length; k++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"                    String description \u003d DESCRIPTIONS[i];","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"                    String datetime \u003d String.format(\"%s %s\", DATES[j], TIMES[k]);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"                    String commandString \u003d String.format(\"deadline %s /by %s\", description, datetime);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"                    String expectedCommandResult \u003d String.format(\"[D][ ] %s\\n\\t(by: %s)\",","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"                            description, DateTimeParser.toString(DateTimeParser.toLocalDateTime(datetime)));","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"                    String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"                    testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"    public void deadlineCommand_invalidArgument_incorrectCommandResult() {","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"deadline %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"        String errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(errorMsg, \"deadline command requires the by argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"deadline\";","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"deadline has invalid number of arguments.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"deadline %s /by tmr\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"lkldev"},"content":"        String expectedErrorMsg \u003d String.format(\"The force does not comprehend the date:\\n%s\",","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"lkldev"},"content":"                \"Text \u0027tmr\u0027 could not be parsed, unparsed text found at index 0\");","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, expectedErrorMsg);","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"deadline /today\";","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"deadline command requires the description argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"deadline sleep /today\";","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"deadline command requires the by argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"lkldev"},"content":"    public void todoCommand_validArgument_correctCommandResult() {","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d \"todo this work\";","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d \"[T][ ] this work\";","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"todo this should work too /not this\";","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"lkldev"},"content":"        expectedCommandResult \u003d \"[T][ ] this should work too\";","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"lkldev"},"content":"    public void todoCommand_invalidArgument_incorrectCommandResult() {","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d \"todo\";","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"lkldev"},"content":"        String errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(errorMsg, \"todo has invalid number of arguments.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"todo /this does not work\";","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"todo command requires the description argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"lkldev"},"content":"    public void eventCommand_invalidArgument_incorrectCommandResult() {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"event %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"lkldev"},"content":"        String errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(errorMsg, \"event command requires the at argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"event\";","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"event has invalid number of arguments.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"event %s /at Sunday noon\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"lkldev"},"content":"        String expectedErrorMsg \u003d String.format(\"The force does not comprehend the date:\\n%s\",","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"lkldev"},"content":"            \"Text \u0027Sunday noon\u0027 could not be parsed, unparsed text found at index 0\");","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, expectedErrorMsg);","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"event /at Sunday noon\";","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"event command requires the description argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":117,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"lkldev"},"content":"    public void unmarkCommand_invalidInput_incorrectCommandResult() {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d \"unmark 1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"lkldev"},"content":"        String expected \u003d \"The force cannot find the task.\\nPlease try again :(\";","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"unmark abcdef\";","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"lkldev"},"content":"        String errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"The force cannot convert the value to a number.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"lkldev"},"content":"    public void deleteCommand_validInput_correctCommandResult() {","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"todo %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"lkldev"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"lkldev"},"content":"        command.execute(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"lkldev"},"content":"        String expected \u003d \"Forcing it out... Success! I\u0027ve removed the following task:\\n\\t[T][ ] %s\";","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(expected, DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"delete 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"lkldev"},"content":"    public void markCommand_validInput_correctCommandResult() {","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"todo %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"lkldev"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"lkldev"},"content":"        command.execute(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"mark 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"lkldev"},"content":"        String expected \u003d \"Using the force... Great! I have forced this task as done.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(expected, taskList.get(0));","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"list\");","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(\"Currently, you have the following tasks:\\n\\t1. [T][X] %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":159,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":161,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":162,"author":{"gitId":"lkldev"},"content":"    public void findCommand_validInput_correctCommandResult() {","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"lkldev"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":164,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":165,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"find %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-01-30"},{"lineNumber":167,"author":{"gitId":"lkldev"},"content":"        command.execute(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":168,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":169,"author":{"gitId":"lkldev"},"content":"        String expected \u003d \"The force is unable to find any task with the keyword...\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":170,"author":{"gitId":"lkldev"},"content":"                + \"The keyword parsed is \\\"%s\\\".\";","lastModifiedDate":"2022-01-30"},{"lineNumber":171,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(expected, DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-30"},{"lineNumber":172,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":173,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":174,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"todo %s %s\", DESCRIPTIONS[0], FILLERS[0]);","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"lkldev"},"content":"        command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"lkldev"},"content":"        command.execute(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":177,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"todo %s %s\", DESCRIPTIONS[2], FILLERS[2]);","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"lkldev"},"content":"        command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-01-30"},{"lineNumber":180,"author":{"gitId":"lkldev"},"content":"        command.execute(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":181,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":182,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"todo %s %s\", DESCRIPTIONS[0], FILLERS[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":183,"author":{"gitId":"lkldev"},"content":"        command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-01-30"},{"lineNumber":184,"author":{"gitId":"lkldev"},"content":"        command.execute(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":185,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":186,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"find %s\", DESCRIPTIONS[0]);","lastModifiedDate":"2022-01-30"},{"lineNumber":187,"author":{"gitId":"lkldev"},"content":"        expected \u003d \"The force found the following matching tasks:\\n\\t1. [T][ ] %s %s\\n\\t3. [T][ ] %s %s\";","lastModifiedDate":"2022-01-30"},{"lineNumber":188,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(expected, DESCRIPTIONS[0], FILLERS[0], DESCRIPTIONS[0], FILLERS[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":189,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":190,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":191,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"list\");","lastModifiedDate":"2022-01-30"},{"lineNumber":192,"author":{"gitId":"lkldev"},"content":"        expected \u003d \"Currently, you have the following tasks:\\n\\t1. [T][ ] %s %s\\n\\t2. [T][ ] %s %s\\n\\t3. [T][ ] %s %s\";","lastModifiedDate":"2022-01-30"},{"lineNumber":193,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(expected, DESCRIPTIONS[0], FILLERS[0],","lastModifiedDate":"2022-01-30"},{"lineNumber":194,"author":{"gitId":"lkldev"},"content":"                DESCRIPTIONS[2], FILLERS[2], DESCRIPTIONS[0], FILLERS[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":195,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":196,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":197,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":198,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"lkldev"},"content":"    public void findCommand_invalidInput_incorrectCommandResult() {","lastModifiedDate":"2022-01-30"},{"lineNumber":200,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d \"find\";","lastModifiedDate":"2022-01-30"},{"lineNumber":201,"author":{"gitId":"lkldev"},"content":"        String errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-01-30"},{"lineNumber":202,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(errorMsg, \"find command requires a keyword argument.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":203,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":204,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":205,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":206,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":207,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":208,"author":{"gitId":"lkldev"},"content":"    public void recurCommand_invalidInput_incorrectCommandResult() {","lastModifiedDate":"2022-02-13"},{"lineNumber":209,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d \"recur\";","lastModifiedDate":"2022-02-13"},{"lineNumber":210,"author":{"gitId":"lkldev"},"content":"        String errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":211,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(errorMsg, \"recur has invalid number of arguments.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":212,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":213,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":214,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"recur event sleep /at 12/12/2022 0000\";","lastModifiedDate":"2022-02-13"},{"lineNumber":215,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":216,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"recur command requires the every argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":217,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":218,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":219,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"recur event sleep /at 12/12/2022 0000 /every second\";","lastModifiedDate":"2022-02-13"},{"lineNumber":220,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":221,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d String.format(errorMsg, \"The force does not comprehend the date:\\n%s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":222,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"\\\"second\\\" is not a valid argument for every.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":223,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":224,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":225,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"recur /every day\";","lastModifiedDate":"2022-02-13"},{"lineNumber":226,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":227,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"recur command requires the task argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":228,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":229,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":230,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"recur eat sleep code /every day\";","lastModifiedDate":"2022-02-13"},{"lineNumber":231,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":232,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d String.format(errorMsg, \"recur command encountered an error:\\n%s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":233,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"Command not supported.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":234,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":235,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":236,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"recur mark 1 /every day\";","lastModifiedDate":"2022-02-13"},{"lineNumber":237,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":238,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d String.format(errorMsg, \"recur command encountered an error:\\n%s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":239,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"Command not supported.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":240,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":241,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":242,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"recur todo /every day\";","lastModifiedDate":"2022-02-13"},{"lineNumber":243,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d \"Oops, the force has encountered an error:\\n%s\\nPlease try again :(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":244,"author":{"gitId":"lkldev"},"content":"        errorMsg \u003d String.format(errorMsg, \"recur command encountered an error:\\n%s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":245,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(errorMsg, \"todo command requires the description argument.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":246,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":247,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":248,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":249,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":250,"author":{"gitId":"lkldev"},"content":"    public void recurCommandAdd_validInput_correctCommandResult() {","lastModifiedDate":"2022-02-13"},{"lineNumber":251,"author":{"gitId":"lkldev"},"content":"        LocalDateTime currentDateTimePlusOne \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":252,"author":{"gitId":"lkldev"},"content":"        String dateTimeCommandString \u003d DateTimeParser.toCommandString(currentDateTimePlusOne);","lastModifiedDate":"2022-02-13"},{"lineNumber":253,"author":{"gitId":"lkldev"},"content":"        String dateTimeString \u003d DateTimeParser.toString(currentDateTimePlusOne);","lastModifiedDate":"2022-02-13"},{"lineNumber":254,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"recur event sleep /at %s /every day\", dateTimeCommandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":255,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":256,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d String.format(\"[R][E][ ] sleep\\n\\t(at: %s) (every: day)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":257,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":258,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":259,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":260,"author":{"gitId":"lkldev"},"content":"        LocalDateTime currentDateTimeMinusOne \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":261,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":262,"author":{"gitId":"lkldev"},"content":"        LocalDateTime expectedDateTime \u003d currentDateTimeMinusOne.plusWeeks(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":263,"author":{"gitId":"lkldev"},"content":"        dateTimeCommandString \u003d DateTimeParser.toCommandString(currentDateTimeMinusOne);","lastModifiedDate":"2022-02-13"},{"lineNumber":264,"author":{"gitId":"lkldev"},"content":"        dateTimeString \u003d DateTimeParser.toString(expectedDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":265,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"recur event sleep /at %s /every week\", dateTimeCommandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":266,"author":{"gitId":"lkldev"},"content":"        successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":267,"author":{"gitId":"lkldev"},"content":"        expectedCommandResult \u003d String.format(\"[R][E][ ] sleep\\n\\t(at: %s) (every: week)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":268,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":269,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":270,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":271,"author":{"gitId":"lkldev"},"content":"        expectedDateTime \u003d currentDateTimeMinusOne.plusMonths(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":272,"author":{"gitId":"lkldev"},"content":"        dateTimeCommandString \u003d DateTimeParser.toCommandString(currentDateTimeMinusOne);","lastModifiedDate":"2022-02-13"},{"lineNumber":273,"author":{"gitId":"lkldev"},"content":"        dateTimeString \u003d DateTimeParser.toString(expectedDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":274,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"recur event sleep /at %s /every month\", dateTimeCommandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":275,"author":{"gitId":"lkldev"},"content":"        successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":276,"author":{"gitId":"lkldev"},"content":"        expectedCommandResult \u003d String.format(\"[R][E][ ] sleep\\n\\t(at: %s) (every: month)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":277,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":278,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":279,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":280,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"recur todo teach /every month\", dateTimeCommandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":281,"author":{"gitId":"lkldev"},"content":"        successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":282,"author":{"gitId":"lkldev"},"content":"        expectedCommandResult \u003d String.format(\"[R][T][ ] teach (every: month)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":283,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":284,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":285,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":286,"author":{"gitId":"lkldev"},"content":"        expectedDateTime \u003d currentDateTimeMinusOne.plusYears(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":287,"author":{"gitId":"lkldev"},"content":"        dateTimeCommandString \u003d DateTimeParser.toCommandString(currentDateTimeMinusOne);","lastModifiedDate":"2022-02-13"},{"lineNumber":288,"author":{"gitId":"lkldev"},"content":"        dateTimeString \u003d DateTimeParser.toString(expectedDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":289,"author":{"gitId":"lkldev"},"content":"        commandString \u003d String.format(\"recur deadline sleep /by %s /every year\", dateTimeCommandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":290,"author":{"gitId":"lkldev"},"content":"        successMessage \u003d \"I have added the following task into list: \\n\\t%s\\nnow you have %d tasks in the list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":291,"author":{"gitId":"lkldev"},"content":"        expectedCommandResult \u003d String.format(\"[R][D][ ] sleep\\n\\t(by: %s) (every: year)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":292,"author":{"gitId":"lkldev"},"content":"        expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":293,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, new TaskList());","lastModifiedDate":"2022-02-13"},{"lineNumber":294,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":295,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":296,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":297,"author":{"gitId":"lkldev"},"content":"    public void recurCommand_markTaskAsDone_correctCommandResult() {","lastModifiedDate":"2022-02-13"},{"lineNumber":298,"author":{"gitId":"lkldev"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-02-13"},{"lineNumber":299,"author":{"gitId":"lkldev"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now().plusMinutes(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":300,"author":{"gitId":"lkldev"},"content":"        String dateTimeCommandString \u003d DateTimeParser.toCommandString(currentDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":301,"author":{"gitId":"lkldev"},"content":"        String dateTimeString \u003d DateTimeParser.toString(currentDateTime);","lastModifiedDate":"2022-02-13"},{"lineNumber":302,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d String.format(\"recur event sleep /at %s /every day\", dateTimeCommandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":303,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":304,"author":{"gitId":"lkldev"},"content":"        command.execute(tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":305,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"mark 1\";","lastModifiedDate":"2022-02-13"},{"lineNumber":306,"author":{"gitId":"lkldev"},"content":"        command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":307,"author":{"gitId":"lkldev"},"content":"        command.execute(tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":308,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":309,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"list\";","lastModifiedDate":"2022-02-13"},{"lineNumber":310,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"Currently, you have the following tasks:\\n\\t%s\";","lastModifiedDate":"2022-02-13"},{"lineNumber":311,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d String.format(\"1. [R][E][X] sleep\\n\\t(at: %s) (every: day)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":312,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":313,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":314,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":315,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":316,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":317,"author":{"gitId":"lkldev"},"content":"    public void recurCommand_todoLoadFromStorageMark_markRemoved() {","lastModifiedDate":"2022-02-13"},{"lineNumber":318,"author":{"gitId":"lkldev"},"content":"        String storedData \u003d \"recur todo homework /every day /next 13/02/2022 04:01 | 1\";","lastModifiedDate":"2022-02-13"},{"lineNumber":319,"author":{"gitId":"lkldev"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-02-13"},{"lineNumber":320,"author":{"gitId":"lkldev"},"content":"        String[] inputs \u003d storedData.split(\"\\\\|\");","lastModifiedDate":"2022-02-13"},{"lineNumber":321,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d inputs[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":322,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":323,"author":{"gitId":"lkldev"},"content":"        command.execute(tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":324,"author":{"gitId":"lkldev"},"content":"        tasklist.get(0).setDoneStatus(Integer.parseInt(inputs[1].strip()));","lastModifiedDate":"2022-02-13"},{"lineNumber":325,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":326,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"list\";","lastModifiedDate":"2022-02-13"},{"lineNumber":327,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"Currently, you have the following tasks:\\n\\t%s\";","lastModifiedDate":"2022-02-13"},{"lineNumber":328,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d \"1. [R][T][ ] homework (every: day)\";","lastModifiedDate":"2022-02-13"},{"lineNumber":329,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":330,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":331,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":332,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":333,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":334,"author":{"gitId":"lkldev"},"content":"    public void recurCommand_todoLoadFromStorageMark_markRemained() {","lastModifiedDate":"2022-02-13"},{"lineNumber":335,"author":{"gitId":"lkldev"},"content":"        String storedData \u003d \"recur todo homework /every day /next 13/02/2100 04:01 | 1\";","lastModifiedDate":"2022-02-13"},{"lineNumber":336,"author":{"gitId":"lkldev"},"content":"        LocalDateTime expectedDate \u003d DateTimeParser.toLocalDateTime(\"13/02/2100 04:01\");","lastModifiedDate":"2022-02-13"},{"lineNumber":337,"author":{"gitId":"lkldev"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-02-13"},{"lineNumber":338,"author":{"gitId":"lkldev"},"content":"        String[] inputs \u003d storedData.split(\"\\\\|\");","lastModifiedDate":"2022-02-13"},{"lineNumber":339,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d inputs[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":340,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":341,"author":{"gitId":"lkldev"},"content":"        command.execute(tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":342,"author":{"gitId":"lkldev"},"content":"        tasklist.get(0).setDoneStatus(Integer.parseInt(inputs[1].strip()));","lastModifiedDate":"2022-02-13"},{"lineNumber":343,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":344,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"list\";","lastModifiedDate":"2022-02-13"},{"lineNumber":345,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"Currently, you have the following tasks:\\n\\t%s\";","lastModifiedDate":"2022-02-13"},{"lineNumber":346,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d \"1. [R][T][X] homework (every: day)\";","lastModifiedDate":"2022-02-13"},{"lineNumber":347,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":348,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":349,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":350,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":351,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":352,"author":{"gitId":"lkldev"},"content":"    public void recurCommand_eventLoadFromStorageMark_markRemained() {","lastModifiedDate":"2022-02-13"},{"lineNumber":353,"author":{"gitId":"lkldev"},"content":"        String storedData \u003d \"recur event sleep /at 14/02/2100 12:12 /every day /next 13/02/2022 00:00 | 1\";","lastModifiedDate":"2022-02-13"},{"lineNumber":354,"author":{"gitId":"lkldev"},"content":"        LocalDateTime expectedDate \u003d DateTimeParser.toLocalDateTime(\"14/02/2100 12:12\");","lastModifiedDate":"2022-02-13"},{"lineNumber":355,"author":{"gitId":"lkldev"},"content":"        Function\u003cLocalDateTime, LocalDateTime\u003e recurFunction \u003d DateTimeParser.getDateTimeIncrementFunction(\"day\");","lastModifiedDate":"2022-02-13"},{"lineNumber":356,"author":{"gitId":"lkldev"},"content":"        while (expectedDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2022-02-13"},{"lineNumber":357,"author":{"gitId":"lkldev"},"content":"            expectedDate \u003d recurFunction.apply(expectedDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":358,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":359,"author":{"gitId":"lkldev"},"content":"        String dateTimeString \u003d DateTimeParser.toString(expectedDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":360,"author":{"gitId":"lkldev"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-02-13"},{"lineNumber":361,"author":{"gitId":"lkldev"},"content":"        String[] inputs \u003d storedData.split(\"\\\\|\");","lastModifiedDate":"2022-02-13"},{"lineNumber":362,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d inputs[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":363,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":364,"author":{"gitId":"lkldev"},"content":"        command.execute(tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":365,"author":{"gitId":"lkldev"},"content":"        tasklist.get(0).setDoneStatus(Integer.parseInt(inputs[1].strip()));","lastModifiedDate":"2022-02-13"},{"lineNumber":366,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":367,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"list\";","lastModifiedDate":"2022-02-13"},{"lineNumber":368,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"Currently, you have the following tasks:\\n\\t%s\";","lastModifiedDate":"2022-02-13"},{"lineNumber":369,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d String.format(\"1. [R][E][X] sleep\\n\\t(at: %s) (every: day)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":370,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":371,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":372,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":373,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":374,"author":{"gitId":"lkldev"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":375,"author":{"gitId":"lkldev"},"content":"    public void recurCommand_eventLoadFromStorageMark_markRemoved() {","lastModifiedDate":"2022-02-13"},{"lineNumber":376,"author":{"gitId":"lkldev"},"content":"        String storedData \u003d \"recur event sleep /at 13/02/2022 12:12 /every day /next 14/02/2100 03:47 | 1\";","lastModifiedDate":"2022-02-13"},{"lineNumber":377,"author":{"gitId":"lkldev"},"content":"        LocalDateTime expectedDate \u003d DateTimeParser.toLocalDateTime(\"13/02/2022 12:12\");","lastModifiedDate":"2022-02-13"},{"lineNumber":378,"author":{"gitId":"lkldev"},"content":"        Function\u003cLocalDateTime, LocalDateTime\u003e recurFunction \u003d DateTimeParser.getDateTimeIncrementFunction(\"day\");","lastModifiedDate":"2022-02-13"},{"lineNumber":379,"author":{"gitId":"lkldev"},"content":"        while (expectedDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2022-02-13"},{"lineNumber":380,"author":{"gitId":"lkldev"},"content":"            expectedDate \u003d recurFunction.apply(expectedDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":381,"author":{"gitId":"lkldev"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":382,"author":{"gitId":"lkldev"},"content":"        String dateTimeString \u003d DateTimeParser.toString(expectedDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":383,"author":{"gitId":"lkldev"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-02-13"},{"lineNumber":384,"author":{"gitId":"lkldev"},"content":"        String[] inputs \u003d storedData.split(\"\\\\|\");","lastModifiedDate":"2022-02-13"},{"lineNumber":385,"author":{"gitId":"lkldev"},"content":"        String commandString \u003d inputs[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":386,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":387,"author":{"gitId":"lkldev"},"content":"        command.execute(tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":388,"author":{"gitId":"lkldev"},"content":"        tasklist.get(0).setDoneStatus(Integer.parseInt(inputs[1].strip()));","lastModifiedDate":"2022-02-13"},{"lineNumber":389,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":390,"author":{"gitId":"lkldev"},"content":"        commandString \u003d \"list\";","lastModifiedDate":"2022-02-13"},{"lineNumber":391,"author":{"gitId":"lkldev"},"content":"        String successMessage \u003d \"Currently, you have the following tasks:\\n\\t%s\";","lastModifiedDate":"2022-02-13"},{"lineNumber":392,"author":{"gitId":"lkldev"},"content":"        String expectedCommandResult \u003d String.format(\"1. [R][E][ ] sleep\\n\\t(at: %s) (every: day)\", dateTimeString);","lastModifiedDate":"2022-02-13"},{"lineNumber":393,"author":{"gitId":"lkldev"},"content":"        String expected \u003d String.format(successMessage, expectedCommandResult, 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":394,"author":{"gitId":"lkldev"},"content":"        testCommand(commandString, expected, tasklist);","lastModifiedDate":"2022-02-13"},{"lineNumber":395,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":396,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":397,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":398,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":399,"author":{"gitId":"lkldev"},"content":"    private void testCommand(String commandString, String expectedOutput, TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":400,"author":{"gitId":"lkldev"},"content":"        Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-02-13"},{"lineNumber":401,"author":{"gitId":"lkldev"},"content":"        assertEquals(expectedOutput, command.execute(taskList).getResult());","lastModifiedDate":"2022-02-13"},{"lineNumber":402,"author":{"gitId":"lkldev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":403,"author":{"gitId":"lkldev"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"lkldev":403}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"todo read book","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"deadline return book /by 06/06/2022 00:00","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"event project meeting /at 06/08/2022 14:00","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"todo join sports club","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"mark 4","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"todo borrow book","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"deadline return book /by 30/01/2022 14:00","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"event project meeting /at 31/01/2022 16:00","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":"unmark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"blah","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"deadline","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"event","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lkldev"},"content":"deadline test1","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lkldev"},"content":"event test2","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lkldev"},"content":"deadline test3 /at 5pm","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lkldev"},"content":"event test4 /by 6pm","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lkldev"},"content":"mark abcd","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lkldev"},"content":"unmark efgh","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"lkldev"},"content":"delete 1","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lkldev"},"content":"find abcdef","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lkldev"},"content":"find book","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lkldev"},"content":"find","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lkldev"},"content":"find return","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lkldev"},"content":"delete 5","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lkldev"},"content":"delete 8","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lkldev"},"content":"mark 8","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lkldev"},"content":"unmark 8","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"lkldev"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lkldev":42}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"bye","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"lkldev":2}},{"path":"text-ui-test/run.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"lkldev"},"content":"@ECHO OFF","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"lkldev"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"lkldev"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"lkldev"},"content":"REM delete output from previous run","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"lkldev"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"REM delete data from previous run","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"if exist data\\luke.txt del data\\luke.txt","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lkldev"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\luke\\*.java","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"lkldev"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"lkldev"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lkldev"},"content":"    exit /b 1","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lkldev"},"content":")","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"lkldev"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lkldev"},"content":"java -classpath ..\\bin luke.Luke \u003c input.txt \u003e EXPECTED.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"java -classpath ..\\bin luke.Luke \u003c input2.txt \u003e\u003e EXPECTED.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lkldev":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"lkldev"},"content":"REM delete data from previous run","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"lkldev"},"content":"if exist data\\luke.txt del data\\luke.txt","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"lkldev"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lkldev"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\luke\\*.java","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"lkldev"},"content":"java -classpath ..\\bin luke.Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"lkldev"},"content":"java -classpath ..\\bin luke.Luke \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lkldev":6,"-":19}}]
