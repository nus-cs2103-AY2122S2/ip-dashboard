[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"    String by;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"    public Deadline(String activity, String type, String by) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"        super(activity, type);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    public void getStatus() {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"        if (this.status \u003d\u003d 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"            System.out.println(\"[\" + type + \"][ ] \" + activity + \" (by \" + by + \" )\");","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"            System.out.println(\"[\" + type + \"][X] \" + activity + \" (by \" + by + \" )\");","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"import java.util.*;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"        while(true) {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"            System.out.print(\"Me   : \");","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"            String message \u003d sc.nextLine();","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"            String[] splitStr \u003d message.split(\" \", 2);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"            boolean exitLoop \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"            switch(splitStr[0]) {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"                    exitLoop \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"                case \"list\":","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"                        int num \u003d i + 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"                        System.out.print(num + \". \");","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"                        list.get(i).getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"                    try {","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"                        int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"                        index--;","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"                        if (index \u003c list.size() \u0026\u0026 index \u003e -1) {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"                            Task updateT \u003d list.get(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"                            updateT.status \u003d 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"                            list.set(index, updateT);","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"                            updateT.getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"                        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"                            System.out.println(\"Invalid mark index\");","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Invalid mark index\");","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"                    try{","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"                        int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"                        index--;","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"                        if (index \u003c list.size() \u0026\u0026 index \u003e -1) {","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"                            Task updateT \u003d list.get(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"                            updateT.status \u003d 0;","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"                            list.set(index, updateT);","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"                            System.out.println(\"Ooof! I\u0027ve marked this task as undone\");","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"                            updateT.getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"                        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"                            System.out.println(\"Invalid mark index\");","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"nnmoq"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Invalid mark index\");","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"                        if (splitStr[1].trim().equals(\"\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"                            throw new ArrayIndexOutOfBoundsException(\"Blank\");","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Invalid todo command format.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"                        break;","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"                    Task newT \u003d new Todo(splitStr[1], \"T\");","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"                    list.add(newT);","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"nnmoq"},"content":"                    newT.addedTask();","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"nnmoq"},"content":"                    newT.getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"nnmoq"},"content":"                    System.out.println(\"Now you\u0027ve got \" + list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"nnmoq"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"nnmoq"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"nnmoq"},"content":"                        String[] tempStr \u003d splitStr[1].split(\" /by \");","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"nnmoq"},"content":"                        Task newD \u003d new Deadline(tempStr[0], \"D\", tempStr[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"nnmoq"},"content":"                        list.add(newD);","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"nnmoq"},"content":"                        newD.addedTask();","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"nnmoq"},"content":"                        newD.getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Now you\u0027ve got \" + list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"nnmoq"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Invalid deadline command format.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"nnmoq"},"content":"                case \"event\":","lastModifiedDate":"2022-01-16"},{"lineNumber":95,"author":{"gitId":"nnmoq"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"nnmoq"},"content":"                        String[] tempStr2 \u003d splitStr[1].split(\" /at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":97,"author":{"gitId":"nnmoq"},"content":"                        Task newE \u003d new Event(tempStr2[0], \"E\", tempStr2[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"nnmoq"},"content":"                        list.add(newE);","lastModifiedDate":"2022-01-16"},{"lineNumber":99,"author":{"gitId":"nnmoq"},"content":"                        newE.addedTask();","lastModifiedDate":"2022-01-16"},{"lineNumber":100,"author":{"gitId":"nnmoq"},"content":"                        newE.getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":101,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Now you\u0027ve got \" + list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"nnmoq"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Invalid event command format.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"nnmoq"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"nnmoq"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"nnmoq"},"content":"                        int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"nnmoq"},"content":"                        index--;","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"nnmoq"},"content":"                        if (index \u003c list.size() \u0026\u0026 index \u003e -1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"nnmoq"},"content":"                            Task deletedT \u003d list.remove(index);","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"nnmoq"},"content":"                            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"nnmoq"},"content":"                            deletedT.getStatus();","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"nnmoq"},"content":"                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"nnmoq"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"nnmoq"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"nnmoq"},"content":"                        System.out.println(\"Invalid deletion index.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"nnmoq"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"nnmoq"},"content":"                default:","lastModifiedDate":"2022-01-16"},{"lineNumber":121,"author":{"gitId":"nnmoq"},"content":"                    System.out.println(\"Invalid Task.\\nValid tasks are: \\\"todo\\\", \\\"deadline\\\" and \\\"event\\\"\");","lastModifiedDate":"2022-01-16"},{"lineNumber":122,"author":{"gitId":"nnmoq"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":123,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":124,"author":{"gitId":"nnmoq"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":125,"author":{"gitId":"nnmoq"},"content":"            if (exitLoop) {","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"nnmoq"},"content":"                break;","lastModifiedDate":"2022-01-16"},{"lineNumber":127,"author":{"gitId":"nnmoq"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":128,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":129,"author":{"gitId":"nnmoq"},"content":"        sc.close();","lastModifiedDate":"2022-01-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"nnmoq":127}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"    String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"    public Event(String activity, String type, String at) {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"        super(activity, type);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    public void getStatus() {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"        if (this.status \u003d\u003d 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"            System.out.println(\"[\" + type + \"][ ] \" + activity + \" (at \" + at + \" )\");","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"            System.out.println(\"[\" + type + \"][X] \" + activity + \" (at \" + at + \" )\");","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"    String activity;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"    int status;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"    String type \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"    public Task(String activity, String type) {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"        this.activity \u003d activity;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    public void addedTask() {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"        System.out.println(\"Got it. I\u0027ve added this task\");","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    public abstract void getStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":16}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"    public Todo(String activity, String type ) {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"        super(activity, type);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    public void getStatus() {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"        if (this.status \u003d\u003d 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"            System.out.println(\"[\" + type + \"][ ] \" + activity);","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"            System.out.println(\"[\" + type + \"][X] \" + activity);","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"todo return books","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"deadline finish assignment /by Sunday 3pm","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"event project meeting /at Monday 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"delete 2","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"nnmoq":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"\"C:\\Program Files\\Java\\jdk-11\\bin\\java\" -classpath ..\\out\\production\\ip Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"nnmoq":2}}]
