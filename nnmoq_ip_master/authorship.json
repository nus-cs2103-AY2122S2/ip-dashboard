[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"3. After that, locate the `src/main/java/gui/Launcher.java` file, right-click it, and choose `Run Launcher.main()` ","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"   (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:\\","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"   ![Duke showcase](./docs/StartUp.png)","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"-":15,"nnmoq":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"nnmoq":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"# Duke Task Manager User Guide","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"Duke is a task manager that keeps track of various types of tasks and compiles it into a list for your convenience.","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"## Quick Setup","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"1. Install Java 11 or above on your device.","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"2. Run ```java -jar duke.jar```","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"### 1. [Add Todo](#todo---adds-todo-task)","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"### 2. [Add Deadline](#deadline---adds-deadline-task)","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"### 3. [Add Event](#event---adds-event-task)","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"### 4. [Add Do Afterwards](#do_after---adds-do-afterwards-task)","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"### 5. [List current tasks](#list---lists-current-tasks)","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"### 6. [Mark a task as complete](#mark---mark-a-task-as-complete)","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"### 7. [Mark a task as incomplete](#unmark---mark-a-task-as-incomplete)","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"### 8. [Delete a task](#delete---delete-a-task)","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"### 9. [Find a task](#find---find-a-task)","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"### 10. [Exit](#bye---close-the-application)","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"## Commands ","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"### `todo` - Adds Todo task","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"Adds a simple todo task.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```todo [task]```","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"```todo go home```","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"[T][] go home","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"Now you\u0027ve got 1 task in the list.","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"### `deadline` - Adds deadline task","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"Add a simple task with a deadline.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```deadline [task] /by [yyyy-mm-dd]```","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"```deadline homework assignment /by 2022-02-14```","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"[D][] homework assignment (by Feb 14 2022)","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"Now you\u0027ve got 2 task in the list.","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"### `event` - Adds event task","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"Add a simple task with a location.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```event [task] /at [location]```","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"```event LAN party /at Samuel\u0027s place```","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"[E][] LAN party (at Samuel\u0027s place)","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"Now you\u0027ve got 3 task in the list.","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"### `do_after` - Adds Do Afterwards task","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"Add a simple task to do after another task.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```do_after [task] /after [task]```","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"nnmoq"},"content":"```do_after cry /after finals```","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"nnmoq"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"nnmoq"},"content":"[A][] cry (after finals)","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"nnmoq"},"content":"Now you\u0027ve got 4 task in the list.","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"nnmoq"},"content":"### `list` - Lists current tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"nnmoq"},"content":"Show all the current tasks you have in the list.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```list```","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"nnmoq"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"nnmoq"},"content":"1. [T][ ] go home","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"nnmoq"},"content":"2. [D][ ] homework assignment (by Feb 14 2022)","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"nnmoq"},"content":"3. [E][ ] LAN Party (at Sammy boyo\u0027s house)","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"nnmoq"},"content":"4. [A][X] cry (after finals)","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"nnmoq"},"content":"### `mark` - Mark a task as complete","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"nnmoq"},"content":"Marks a task at the given index as completed.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```mark [index]```","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"nnmoq"},"content":"```mark 2```","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"nnmoq"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"nnmoq"},"content":"[D][X] homework assignment (by Feb 14 2022)","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"nnmoq"},"content":"### `unmark` - Mark a task as incomplete","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"nnmoq"},"content":"Marks a task at the given index as in-complete.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```unmark [index]```","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"nnmoq"},"content":"```unmark 2```","lastModifiedDate":"2022-02-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"nnmoq"},"content":"Oof! I\u0027ve marked this task as undone:","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"nnmoq"},"content":"[D][ ] homework assignment (by Feb 14 2022)","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"nnmoq"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"nnmoq"},"content":"Deletes a task at the given index in the task list.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":133,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```delete [index]```","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"nnmoq"},"content":"```delete 2```","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"nnmoq"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"nnmoq"},"content":"[D][X] homework assignment (by Feb 14 2022)","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"nnmoq"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"nnmoq"},"content":"### `find` - Find a task","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"nnmoq"},"content":"Finds a task in the list.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```find [task]```","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"nnmoq"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"nnmoq"},"content":"```find cry```","lastModifiedDate":"2022-02-13"},{"lineNumber":154,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":156,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"nnmoq"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-13"},{"lineNumber":158,"author":{"gitId":"nnmoq"},"content":"1. [A][X] cry (after finals)","lastModifiedDate":"2022-02-13"},{"lineNumber":159,"author":{"gitId":"nnmoq"},"content":"```","lastModifiedDate":"2022-02-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"nnmoq"},"content":"### `bye` - Close the application","lastModifiedDate":"2022-02-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"nnmoq"},"content":"Closes the application.\\","lastModifiedDate":"2022-02-13"},{"lineNumber":164,"author":{"gitId":"nnmoq"},"content":"Format Syntax:```bye```","lastModifiedDate":"2022-02-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":166,"author":{"gitId":"nnmoq"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":168,"author":{"gitId":"nnmoq"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":29,"nnmoq":140}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":" * It represents the Duke task manager.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    private final Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    private boolean shouldAbort;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"     * Constructor for duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"     * @param filepath the relative path to store task list on disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"        this.shouldAbort \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"     * Checks if Duke has exited.","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"     * @return true if duke has exited, false otherwise.","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"    public boolean hasAborted() {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"        return this.shouldAbort;","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"     * Passes the given user input to duke and gets its response.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"     * @param input the user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"     * @return the response from Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"        String response;","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"            Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"            response \u003d command.exec(tasks, storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"            shouldAbort \u003d command.shouldAbort();","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"            response \u003d new InvalidCommand(e.toString()).exec(tasks, storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"        return response;","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"nnmoq":56}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" * Command to add a task onto the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    private Task task;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"     * @param task the task to be added onto the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"        String message \u003d taskList.addTask(this.task);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"        storage.saveAddedTask(this.task);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"        return message;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" * Abstraction of all the commands that can be given by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     * Executes the command.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"     * @param storage the storage that is being used.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"     * @return a String consisting of Duke\u0027s response message.","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     * @throws DukeException superclass of all exceptions that can be thrown. InvalidIndexException for invalid index,","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"     *              InvalidDateException if the date from user is of the wrong format and InvalidCommandFormatException","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"     *              if the command given by the user is of wrong syntax.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    public abstract String exec(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"     * Checks if Duke should exit.","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"     * @return false for all Commands other than Exit Command.","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    public boolean shouldAbort() {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":32}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    private int index;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     * Constructor for the delete command.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"        String printStr \u003d taskList.deleteTask(index);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"        storage.saveUpdatedTask(index, null);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"        return printStr;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":30}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":" * Command to exit Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     * Constructor for the exit command.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    public ExitCommand() {}","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"     * Checks if Duke should exit.","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"     * @return true since this is the Exit Command.","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    public boolean shouldAbort() {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"        return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    private final String findTask;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     * Constructor for Find command.","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     * @param findTask the task to be found.","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    public FindCommand(String findTask) {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"        this.findTask \u003d findTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"        return taskList.find(findTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":25}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":" * Command to print error message if the user has given invalid input.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    private String errorMessage \u003d \"ERROR: \";","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     * Constructor for an invalid user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"     * @param errorMessage the error message describing the invalid command.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"        this.errorMessage +\u003d errorMessage;","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":" * Command to list and print the current task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     * Constructor to list all tasks in teh task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    public ListCommand(){}","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"        return taskList.list();","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":21}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":" * Command to mark a task in the task list as complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    private int index;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     * Constructor to mark a task as complete in the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the task to be marked as complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"        Map.Entry\u003cTask, String\u003e markedTask \u003d taskList.mark(index);","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"        storage.saveUpdatedTask(index, markedTask.getKey());","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"        return markedTask.getValue();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":33}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":" * Command to mark a task in the task list as incomplete.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    private int index;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     * Constructor to mark a task as incomplete.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the task to be marked as incomplete.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    public String exec(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"        Map.Entry\u003cTask, String\u003e unmarkedTask \u003d taskList.unmark(index);","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"        storage.saveUpdatedTask(index, unmarkedTask.getKey());","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"        return unmarkedTask.getValue();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * The superclass of all custom exceptions.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    private String errorMessage;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"     * Constructor for custom exception.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     * @param errorMessage descriptor for the exception.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"        super();","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"        assert errorMessage !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"     * Getter for error message.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"     * @return errorMessage - string descriptor for the exception.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"        return errorMessage;","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":31}},{"path":"src/main/java/duke/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * Exception for an invalid command.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public class InvalidCommandFormatException extends DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"     * Constructor for InvalidCommandFormatException.","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"     * @param errorMessage the invalid command format message.","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    public InvalidCommandFormatException(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":16}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * Exception for invalid date.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"     * Constructor for InvalidDateException.","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    public InvalidDateException() {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"        super(\"Invalid date format -e.g, deadline homework /by yyyy-mm-dd\");","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":14}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * Exception for invalid index.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"     * Constructor for InvalidIndexException.","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"     * @param indexRange the String of valid index range 1 to max_index.","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    public InvalidIndexException(String indexRange) {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        super(\"Invalid Index. Current task list range is \" + indexRange);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":" * Controller for a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"//Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"     * Constructor for a dialog box.","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"     * @param text the message.","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"     * @param img the image of duke or user.","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"        this.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"     * Creates a new user dialogue box.","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"nnmoq"},"content":"     * @param text the user\u0027s message.","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"     * @param img user\u0027s image.","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"nnmoq"},"content":"     * @return a new dialog box based on user message.","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"        db.setStyle(\"-fx-background-color:blue;\");","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"        return db;","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"     * Creates a new duke dialogue box.","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"     * @param text the duke\u0027s message.","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"     * @param img duke\u0027s image.","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"nnmoq"},"content":"     * @return a new dialog box based on duke message.","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"nnmoq"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"nnmoq"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"nnmoq"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"nnmoq"},"content":"        String[] splitStr \u003d text.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"nnmoq"},"content":"        if (splitStr[0].equals(\"ERROR:\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"nnmoq"},"content":"            db.setStyle(\"-fx-background-color:red;\");","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"nnmoq"},"content":"            db.setStyle(\"-fx-background-color:black;\");","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"nnmoq"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"nnmoq":90}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":" * Launcher for the Duke application.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"//Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     * Main method to start the application","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     * @param args commandline arguments","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"nnmoq":18}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"//Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    private final Duke duke \u003d new Duke(\"data/data.txt\");","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"     * The entry point to all javafx applications.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"     * @param stage the primary stage for this application.","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"nnmoq":38}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"//Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    private Button button;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"     * Creates the initialization dialog box where Duke greets the user.","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"        assert userImage !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"        assert dukeImage !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I am Duke.\\n\", dukeImage));","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"     * Setter for Duke.","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"     * @param duke the duke task manager to be set into MainWindow.","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"nnmoq"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"        if (duke.hasAborted()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"            CompletableFuture.delayedExecutor(500, TimeUnit.MILLISECONDS).execute(Platform::exit);","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"nnmoq":76}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":" * A task that needs to be done before a specific date.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    private static final DateTimeFormatter PRINT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     * @param activity the activity that needs to be done.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"     * @param by the date of the deadline, yyyy-mm-dd format.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"    public Deadline(String activity, String by) {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"        super(activity, \"D\");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"        assert by !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"        date \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    public String printTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"        if (this.isMarked) {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][X] \" + activity + \" (by \" + date.format(PRINT_FORMAT) + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][ ] \" + activity + \" (by \" + date.format(PRINT_FORMAT) + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"        return type + \"|\" + isMarked + \"|\" + activity + \"|\" + date.format(PRINT_FORMAT) + \"|\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":43}},{"path":"src/main/java/duke/task/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * A task that occurs at a location that has to be done.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public class DoAfter extends Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    private final String doAfterTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"     * Constructor for event task.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     * @param activity the activity that needs to be done.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     * @param doAfterTime the location of the event.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    public DoAfter(String activity, String doAfterTime) {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"        super(activity, \"A\");","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"        assert doAfterTime !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"        this.doAfterTime \u003d doAfterTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    public String printTask() {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"        if (this.isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][X] \" + activity + \" (after \" + doAfterTime + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][ ] \" + activity + \" (after \" + doAfterTime + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"    public String toString() {","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"        return type + \"|\" + isMarked + \"|\" + activity + \"|\" + doAfterTime + \"|\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"nnmoq":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * A task that occurs at a location that has to be done.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    private final String eventLocation;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"     * Constructor for event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"     * @param activity the activity that needs to be done.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     * @param eventLocation the location of the event.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    public Event(String activity, String eventLocation) {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"        super(activity, \"E\");","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"        assert eventLocation !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"        this.eventLocation \u003d eventLocation;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    public String printTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"        if (this.isMarked) {","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][X] \" + activity + \" (at \" + eventLocation + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][ ] \" + activity + \" (at \" + eventLocation + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"        return type + \"|\" + isMarked + \"|\" + activity + \"|\" + eventLocation + \"|\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * An abstraction of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    // The variables that are common among all tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    protected String activity;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    protected boolean isMarked \u003d false;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    protected String type;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"     * Constructor that contains parameters for all types of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"     * @param activity the activity of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"     * @param type the type of task, T, D or E.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    public Task(String activity, String type) {","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"        assert activity !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"        assert type !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"        this.activity \u003d activity;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"     * Sets the status of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"     * @param isMarked the status of the task, false for incomplete and true for completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"    public void setMarked(boolean isMarked) {","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"     * Getter for activity of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"     * @return the activity of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"    public String getActivity() {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"        return this.activity;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"     * Formats the task into a string for the user to read.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"     * @return the string to be printed.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"    public abstract String printTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"     * Converts the task into a string to be stored onto disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"     * @return the string representation of the task to be stored onto disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"        return \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":61}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":" * A task that needs to be done.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"     * Constructor for a to-do task.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"     * @param activity the activity that needs to be done.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    public Todo(String activity) {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        super(activity, \"T\");","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    public String printTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"        if (this.isMarked) {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][X] \" + activity;","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"            return \"[\" + type + \"][ ] \" + activity;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"        return type + \"|\" + isMarked + \"|\" + activity + \"|\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"nnmoq":34}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"import duke.task.DoAfter;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":" * This class parses the user input into commands and also parses the saved task list on disk into tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    // Global constant commands.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"    private static final SimpleDateFormat TASK_FORMAT \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"    private static final SimpleDateFormat SAVED_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"    private static final Command EXIT_COMMAND \u003d new ExitCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"    private static final Command LIST \u003d new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"    private static final Command INVALID_COMMAND \u003d new InvalidCommand(\"Invalid Command. Valid commands are:\"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"            + \"\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\" + \"do_after\\n\" + \"mark\\n\" + \"unmark\\n\" + \"list\\n\" + \"delete\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"            + \"find\\n\" + \"bye\");","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"     * Constructor for a parser.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"    public Parser() {}","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"     * Parses a saved task on disk into a task.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"     * @param savedTask the saved task.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"     * @return the parsed task.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"    public static Task parseFile(String savedTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"        String[] splitStr \u003d savedTask.split(\"\\\\|\");","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"        boolean status \u003d Boolean.parseBoolean(splitStr[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"        String activity \u003d splitStr[2];","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"        String timeOrPlace \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"        Task parsedTask \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"        assert activity !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"        switch (splitStr[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"nnmoq"},"content":"        case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new Todo(activity);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"        case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"            timeOrPlace \u003d splitStr[3];","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"            assert timeOrPlace !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new Event(activity, timeOrPlace);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"        case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"            String tmp \u003d splitStr[3];","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"                timeOrPlace \u003d SAVED_FORMAT.format(TASK_FORMAT.parse(tmp));","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"            } catch (ParseException e) { // Corrupted Save File.","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"nnmoq"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"nnmoq"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"nnmoq"},"content":"            assert timeOrPlace !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new Deadline(activity, timeOrPlace);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nnmoq"},"content":"        case \"A\":","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"nnmoq"},"content":"            timeOrPlace \u003d splitStr[3];","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"nnmoq"},"content":"            assert timeOrPlace !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new DoAfter(activity, timeOrPlace);","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"nnmoq"},"content":"        default:","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"nnmoq"},"content":"        assert parsedTask !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"nnmoq"},"content":"        parsedTask.setMarked(status);","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"nnmoq"},"content":"        return parsedTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"nnmoq"},"content":"     * Parses user input into a command.","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"nnmoq"},"content":"     * @param command the user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"nnmoq"},"content":"     * @return a command that can be executed.","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"nnmoq"},"content":"     * @throws DukeException if the user input is invalid.","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"nnmoq"},"content":"    public Command parseCommand(String command) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"nnmoq"},"content":"        String[] userInput \u003d command.split(\" \", 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"nnmoq"},"content":"        Command parsed;","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"nnmoq"},"content":"        switch (userInput[0]) {","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"nnmoq"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d EXIT_COMMAND;","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"nnmoq"},"content":"        case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d LIST;","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"nnmoq"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseMark(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"nnmoq"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseUnmark(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"nnmoq"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseTodo(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"nnmoq"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseDeadline(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"nnmoq"},"content":"        case \"event\":","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseEvent(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"nnmoq"},"content":"        case \"do_after\":","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseDoAfter(userInput);","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"nnmoq"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseDelete(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"nnmoq"},"content":"        case \"find\":","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d parseFind(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"nnmoq"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"nnmoq"},"content":"            parsed \u003d INVALID_COMMAND;","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"nnmoq"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"nnmoq"},"content":"        return parsed;","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into a Mark Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":145,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"nnmoq"},"content":"     * @return a Mark Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if Mark Command format by userInput is invalid.","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"nnmoq"},"content":"    private Command parseMark(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"nnmoq"},"content":"        int index;","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"nnmoq"},"content":"            index \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"nnmoq"},"content":"            index--;","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"nnmoq"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command mark has invalid syntax -e.g., mark [index], \"","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"nnmoq"},"content":"                    + \"where integer is an index\");","lastModifiedDate":"2022-02-01"},{"lineNumber":157,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"nnmoq"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into a Unmark Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":164,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"nnmoq"},"content":"     * @return a Unmark Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the Unmark Command format by the userInput is invalid.","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"nnmoq"},"content":"    private Command parseUnmark(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"nnmoq"},"content":"        int index;","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"nnmoq"},"content":"            index \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"nnmoq"},"content":"            index--;","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"nnmoq"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":174,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command unmark has invalid syntax -e.g., unmark [index], \"","lastModifiedDate":"2022-02-01"},{"lineNumber":175,"author":{"gitId":"nnmoq"},"content":"                    + \"where integer is an index\");","lastModifiedDate":"2022-02-01"},{"lineNumber":176,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"nnmoq"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into an Add Command for a To-Do task.","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"nnmoq"},"content":"     * @return a Add Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the user did not input an activity To-Do.","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"nnmoq"},"content":"    private Command parseTodo(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"nnmoq"},"content":"            if (userInput[1].trim().equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"nnmoq"},"content":"                throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"nnmoq"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"nnmoq"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command todo cannot be blank. -e.g, todo [task], \"","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"nnmoq"},"content":"                    + \"where task is not empty\");","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"nnmoq"},"content":"        Task parsedTask \u003d new Todo(userInput[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"nnmoq"},"content":"        return new AddCommand(parsedTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":198,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":200,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":201,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into an Add Command for a Deadline task.","lastModifiedDate":"2022-02-06"},{"lineNumber":202,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":204,"author":{"gitId":"nnmoq"},"content":"     * @return an Add Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":205,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the Deadline Command format by the userInput is invalid.","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidDateException if the date given is of the wrong format.","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"nnmoq"},"content":"    private Command parseDeadline(String[] userInput) throws InvalidCommandFormatException, InvalidDateException {","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"nnmoq"},"content":"        Task parsedTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"nnmoq"},"content":"            String[] splitBy \u003d userInput[1].split(\" /by \");","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"nnmoq"},"content":"            String activity \u003d splitBy[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"nnmoq"},"content":"            String by \u003d splitBy[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new Deadline(activity, by);","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"nnmoq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-01-28"},{"lineNumber":217,"author":{"gitId":"nnmoq"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":218,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command deadline has invalid syntax -e.g., \"","lastModifiedDate":"2022-02-01"},{"lineNumber":219,"author":{"gitId":"nnmoq"},"content":"                    + \"deadline [activity] /by [yyyy-mm-dd]\");","lastModifiedDate":"2022-02-01"},{"lineNumber":220,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"nnmoq"},"content":"        return new AddCommand(parsedTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":222,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":223,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":224,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":225,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into an Add Command for an Event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":226,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":227,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":228,"author":{"gitId":"nnmoq"},"content":"     * @return an Add Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":229,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the Event Command format by the userInput is invalid.","lastModifiedDate":"2022-02-06"},{"lineNumber":230,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":231,"author":{"gitId":"nnmoq"},"content":"    private Command parseEvent(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":232,"author":{"gitId":"nnmoq"},"content":"        Task parsedTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":233,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":234,"author":{"gitId":"nnmoq"},"content":"            String[] splitAt \u003d userInput[1].split(\" /at \");","lastModifiedDate":"2022-02-06"},{"lineNumber":235,"author":{"gitId":"nnmoq"},"content":"            String activity \u003d splitAt[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":236,"author":{"gitId":"nnmoq"},"content":"            String at \u003d splitAt[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":237,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new Event(activity, at);","lastModifiedDate":"2022-02-06"},{"lineNumber":238,"author":{"gitId":"nnmoq"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command event has invalid syntax -e.g., \"","lastModifiedDate":"2022-02-06"},{"lineNumber":240,"author":{"gitId":"nnmoq"},"content":"                    + \"event [activity] /at [location]\");","lastModifiedDate":"2022-02-01"},{"lineNumber":241,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":242,"author":{"gitId":"nnmoq"},"content":"        return new AddCommand(parsedTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":243,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":244,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":245,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":246,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into an Add Command for a DoAfter task.","lastModifiedDate":"2022-02-09"},{"lineNumber":247,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":248,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-09"},{"lineNumber":249,"author":{"gitId":"nnmoq"},"content":"     * @return an Add Command.","lastModifiedDate":"2022-02-09"},{"lineNumber":250,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the Event Command format by the userInput is invalid.","lastModifiedDate":"2022-02-09"},{"lineNumber":251,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":252,"author":{"gitId":"nnmoq"},"content":"    private Command parseDoAfter(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-09"},{"lineNumber":253,"author":{"gitId":"nnmoq"},"content":"        Task parsedTask;","lastModifiedDate":"2022-02-09"},{"lineNumber":254,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":255,"author":{"gitId":"nnmoq"},"content":"            String[] splitAt \u003d userInput[1].split(\" /after \");","lastModifiedDate":"2022-02-09"},{"lineNumber":256,"author":{"gitId":"nnmoq"},"content":"            String activity \u003d splitAt[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":257,"author":{"gitId":"nnmoq"},"content":"            String doAfter \u003d splitAt[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":258,"author":{"gitId":"nnmoq"},"content":"            parsedTask \u003d new DoAfter(activity, doAfter);","lastModifiedDate":"2022-02-09"},{"lineNumber":259,"author":{"gitId":"nnmoq"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":260,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command event has invalid syntax -e.g., \"","lastModifiedDate":"2022-02-09"},{"lineNumber":261,"author":{"gitId":"nnmoq"},"content":"                    + \"do_after [activity] /after [task]\");","lastModifiedDate":"2022-02-09"},{"lineNumber":262,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":263,"author":{"gitId":"nnmoq"},"content":"        return new AddCommand(parsedTask);","lastModifiedDate":"2022-02-09"},{"lineNumber":264,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":265,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":266,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":267,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into a Delete Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":268,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":269,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":270,"author":{"gitId":"nnmoq"},"content":"     * @return a Delete Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":271,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the Delete Command format by the userInput is invalid.","lastModifiedDate":"2022-02-06"},{"lineNumber":272,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":273,"author":{"gitId":"nnmoq"},"content":"    private Command parseDelete(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":274,"author":{"gitId":"nnmoq"},"content":"        int index;","lastModifiedDate":"2022-02-06"},{"lineNumber":275,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":276,"author":{"gitId":"nnmoq"},"content":"            index \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":277,"author":{"gitId":"nnmoq"},"content":"            index--;","lastModifiedDate":"2022-01-26"},{"lineNumber":278,"author":{"gitId":"nnmoq"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":279,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command delete has invalid syntax -e.g., \"","lastModifiedDate":"2022-02-01"},{"lineNumber":280,"author":{"gitId":"nnmoq"},"content":"                    + \"delete [index], where index is an integer\");","lastModifiedDate":"2022-02-01"},{"lineNumber":281,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":282,"author":{"gitId":"nnmoq"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":283,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":284,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":285,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":286,"author":{"gitId":"nnmoq"},"content":"     * Parses the given user input into a Find Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":287,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":288,"author":{"gitId":"nnmoq"},"content":"     * @param userInput the user input to be parsed.","lastModifiedDate":"2022-02-06"},{"lineNumber":289,"author":{"gitId":"nnmoq"},"content":"     * @return a Find Command.","lastModifiedDate":"2022-02-06"},{"lineNumber":290,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidCommandFormatException if the Find Command format by the userInput is invalid.","lastModifiedDate":"2022-02-06"},{"lineNumber":291,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":292,"author":{"gitId":"nnmoq"},"content":"    private Command parseFind(String[] userInput) throws InvalidCommandFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":293,"author":{"gitId":"nnmoq"},"content":"        String findTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":294,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":295,"author":{"gitId":"nnmoq"},"content":"            findTask \u003d userInput[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":296,"author":{"gitId":"nnmoq"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":297,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidCommandFormatException(\"Command find has invalid syntax -e.g., find [task]\");","lastModifiedDate":"2022-01-28"},{"lineNumber":298,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":299,"author":{"gitId":"nnmoq"},"content":"        return new FindCommand(findTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":300,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":301,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":302,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":302}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":" * This class abstracts the load and store operations onto the disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    private final String filepath;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"     * A constructor for the Storage class.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"     * @param filepath the relative filepath to store and load tasks from.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"        assert filepath !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"     * Loads the tasks from disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"     * @return ArrayList which contain the tasks that have been saved onto the disk.","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"        File saveFile \u003d new File(this.filepath);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"        saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"        Scanner readFile \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"        String nextSavedTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"            readFile \u003d new Scanner(saveFile).useDelimiter(\"\\\\|\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"        assert readFile !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"        while (readFile.hasNextLine()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"nnmoq"},"content":"            nextSavedTask \u003d readFile.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"            Task savedTask \u003d Parser.parseFile(nextSavedTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"nnmoq"},"content":"            taskList.add(savedTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"        readFile.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"     * Adds a new task onto storage.","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"     * @param addedTask the task to be added onto storage.","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"    public void saveAddedTask(Task addedTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"nnmoq"},"content":"            FileWriter fw \u003d new FileWriter(this.filepath, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"nnmoq"},"content":"            fw.write(addedTask.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"nnmoq"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"nnmoq"},"content":"     * Replaces a task in storage with the given task.","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the stored task to be replaced.","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"nnmoq"},"content":"     * @param updatedTask the updated task. If null then the task is to be deleted.","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"nnmoq"},"content":"    public void saveUpdatedTask(int index, Task updatedTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"nnmoq"},"content":"        String tempFilePath \u003d \"data/temp.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"nnmoq"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"nnmoq"},"content":"        File saveFile \u003d new File(filepath);","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"nnmoq"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"nnmoq"},"content":"        BufferedWriter writer \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"nnmoq"},"content":"            reader \u003d new BufferedReader(new FileReader(saveFile));","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"nnmoq"},"content":"            writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"nnmoq"},"content":"        assert writer !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"nnmoq"},"content":"        changeLine(reader, writer, updatedTask, index);","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"nnmoq"},"content":"            // Update saved file with temp file and delete temp file.","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"nnmoq"},"content":"            Files.copy(Paths.get(tempFilePath), Paths.get(filepath), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"nnmoq"},"content":"            Files.delete(Paths.get(tempFilePath));","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"nnmoq"},"content":"     * Changes the task at the given line number with the given task.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"nnmoq"},"content":"     * @param reader reader io","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"nnmoq"},"content":"     * @param writer writer io","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"nnmoq"},"content":"     * @param updatedTask the task to be updated in save file. If null then delete the task in save file.","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"nnmoq"},"content":"     * @param lineNumber the line number of the task in the saved file to be updated.","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"nnmoq"},"content":"    private void changeLine(BufferedReader reader, BufferedWriter writer, Task updatedTask, int lineNumber) {","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"nnmoq"},"content":"            String currentLine;","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"nnmoq"},"content":"            int i \u003d -1;","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"nnmoq"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"nnmoq"},"content":"                i++;","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"nnmoq"},"content":"                if (i \u003d\u003d lineNumber \u0026\u0026 updatedTask !\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"nnmoq"},"content":"                    // Update the task at lineNumber","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"nnmoq"},"content":"                    writer.write(updatedTask.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"nnmoq"},"content":"                } else if (i !\u003d lineNumber) {","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"nnmoq"},"content":"                    writer.write(currentLine + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"nnmoq"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"nnmoq"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"nnmoq"},"content":"            writer.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"nnmoq"},"content":"            reader.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"nnmoq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"nnmoq"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":145}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":" * The class which contains the array list of tasks and functions that can be done to modify it.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"     * @param taskList an ArrayList which is abstracted into the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"nnmoq"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"nnmoq"},"content":"     * @param task the input task which will be added into the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"nnmoq"},"content":"     * @return the String which will be prints out the task that has been added and the current tasks in the list.","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"nnmoq"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"nnmoq"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"nnmoq"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"nnmoq"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.printTask() + \"\\n\" + \"Now you\u0027ve got \" + taskList.size()","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"nnmoq"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"nnmoq"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"nnmoq"},"content":"     * @return the String to be printed.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidIndexException if the index is out of bounds.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"nnmoq"},"content":"    public String deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"nnmoq"},"content":"        Task deletedTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"nnmoq"},"content":"            deletedTask \u003d this.taskList.remove(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"nnmoq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidIndexException(\"1 to \" + taskList.size() + \" inclusive\");","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"nnmoq"},"content":"        assert deletedTask !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"nnmoq"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask.printTask() + \"\\n\" + \"Now you have \" + taskList.size()","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"nnmoq"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"nnmoq"},"content":"     * Marks a task as completed in the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the task to be marked as completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"nnmoq"},"content":"     * @return Pair containing the marked Task and the String to be printed.","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidIndexException if the index is out of bounds.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"nnmoq"},"content":"    public Map.Entry\u003cTask, String\u003e mark(int index) throws InvalidIndexException {","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"nnmoq"},"content":"        Task markTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"nnmoq"},"content":"            markTask \u003d taskList.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"nnmoq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidIndexException(\"1 to \" + taskList.size() + \" inclusive\");","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"nnmoq"},"content":"        assert markTask !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"nnmoq"},"content":"        markTask.setMarked(true);","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"nnmoq"},"content":"        return Map.entry(markTask, \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"nnmoq"},"content":"                + markTask.printTask());","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"nnmoq"},"content":"     * Marks a task as incomplete in the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"nnmoq"},"content":"     * @param index the index of the task to be marked as incomplete.","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"nnmoq"},"content":"     * @return Pair containing the unmarked Task and the String to be printed.","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"nnmoq"},"content":"     * @throws InvalidIndexException if the index is out of bounds.","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"nnmoq"},"content":"    public Map.Entry\u003cTask, String\u003e unmark(int index) throws InvalidIndexException {","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"nnmoq"},"content":"        Task unmarkTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"nnmoq"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"nnmoq"},"content":"            unmarkTask \u003d taskList.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"nnmoq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"nnmoq"},"content":"            throw new InvalidIndexException(\"1 to \" + taskList.size() + \" inclusive\");","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"nnmoq"},"content":"        assert unmarkTask !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"nnmoq"},"content":"        unmarkTask.setMarked(false);","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"nnmoq"},"content":"        return Map.entry(unmarkTask, \"Oof! I\u0027ve marked this task as undone:\\n\"","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"nnmoq"},"content":"                + unmarkTask.printTask());","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"nnmoq"},"content":"     * List of all the tasks currently in the task list.","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"nnmoq"},"content":"     * @return the String to be printed.","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"nnmoq"},"content":"    public String list() {","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"nnmoq"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"nnmoq"},"content":"            return \"Your task list is empty.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"nnmoq"},"content":"        StringBuilder printStr \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"nnmoq"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"nnmoq"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"nnmoq"},"content":"            printStr.append(num);","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"nnmoq"},"content":"            printStr.append(\". \");","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"nnmoq"},"content":"            Task taskToBePrinted \u003d taskList.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"nnmoq"},"content":"            assert taskToBePrinted !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"nnmoq"},"content":"            printStr.append(taskToBePrinted.printTask());","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"nnmoq"},"content":"            printStr.append(\"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"nnmoq"},"content":"        return printStr.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"nnmoq"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"nnmoq"},"content":"     * Finds a task with partial-match to taskName in task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"nnmoq"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"nnmoq"},"content":"     * @param taskName the task to find in task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"nnmoq"},"content":"     * @return the String to be printed.","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"nnmoq"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"nnmoq"},"content":"    public String find(String taskName) {","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"nnmoq"},"content":"        if (taskName.trim().equals(\"\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"nnmoq"},"content":"            return \"Please enter a task name to be found.\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"nnmoq"},"content":"        Iterator\u003cTask\u003e taskIterator \u003d taskList.iterator();","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"nnmoq"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"nnmoq"},"content":"        while (taskIterator.hasNext()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"nnmoq"},"content":"            Task currentTask \u003d taskIterator.next();","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"nnmoq"},"content":"            if (currentTask.getActivity().contains(taskName)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"nnmoq"},"content":"                foundTasks.add(currentTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"nnmoq"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"nnmoq"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"nnmoq"},"content":"            return \"No matching tasks were found in your list.\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"nnmoq"},"content":"        StringBuilder printStr \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"nnmoq"},"content":"        printStr.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"nnmoq"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"nnmoq"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":151,"author":{"gitId":"nnmoq"},"content":"            printStr.append(num);","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"nnmoq"},"content":"            printStr.append(\". \");","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"nnmoq"},"content":"            Task taskToBePrinted \u003d foundTasks.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"nnmoq"},"content":"            assert taskToBePrinted !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"nnmoq"},"content":"            printStr.append(taskToBePrinted.printTask());","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"nnmoq"},"content":"            printStr.append(\"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"nnmoq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"nnmoq"},"content":"        return printStr.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":161,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"nnmoq":161}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: white;\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"nnmoq":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-text-fill: white; -fx-background-color:black;\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: black;\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"nnmoq"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"nnmoq"},"content":"               \u003c/opaqueInsets\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"nnmoq"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"nnmoq"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"nnmoq"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"nnmoq"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"nnmoq":25}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    public void deadlineToString_validInput_validOutput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"        assertEquals(\"D|false|homework|Dec 10 2014|\\n\", new Deadline(\"homework\", \"2014-12-10\").toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    public void deadlinePrintTask_validInput_validOutput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"        assertEquals(\"[D][ ] exam (by Jan 24 2020)\", new Deadline(\"exam\", \"2020-01-24\").printTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"public class EventTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"    public void eventToString_validInput_validOutput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"        assertEquals(\"E|false|hang out with friends|Vivo 2pm 2014-12-10|\\n\",","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"                new Event(\"hang out with friends\", \"Vivo 2pm 2014-12-10\").toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    public void eventPrintTask_validInput_validOutput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"        assertEquals(\"[E][ ] exam (at 2020-01-24)\", new Event(\"exam\", \"2020-01-24\").printTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nnmoq"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"nnmoq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"nnmoq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"nnmoq"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"nnmoq"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"nnmoq"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"nnmoq"},"content":"    public void todoToString_validInput_validOutput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"nnmoq"},"content":"        assertEquals(\"T|false|homework|\\n\", new Todo(\"homework\").toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"nnmoq"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"nnmoq"},"content":"    public void todoPrintTask_validInput_validOutput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"nnmoq"},"content":"        assertEquals(\"[T][ ] exam\", new Todo(\"exam\").printTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"nnmoq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"nnmoq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"nnmoq":16}}]
