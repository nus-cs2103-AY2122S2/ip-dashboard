[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"███╗░░██╗██╗██╗░░██╗██╗░░██╗██╗　　　　 　∧_∧","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"████╗░██║██║██║░██╔╝██║░██╔╝██║　　　　 ( ﾟωﾟ)","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"██╔██╗██║██║█████═╝░█████═╝░██║　　　　 /ｕ ｕ","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"██║╚████║██║██╔═██╗░██╔═██╗░██║　　　　/ / /","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"██║░╚███║██║██║░╚██╗██║░╚██╗██║　　　 (ノノ","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"╚═╝░░╚══╝╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝　　　彡","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"Your Personal Assistant Chatbot that helps you keep track of the important things in life","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidTan0527":10,"-":16}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"T||0||eat","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"T||1||sleep","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"E||0||party||2/11/2022","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"T||0||repeat","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"DavidTan0527":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"import duke.command.CommandParser;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"    private final CommandParser cmd \u003d new CommandParser(new Scanner(System.in));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"     * Perform certain behaviours according to the command passed.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"     * @param action command from user","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException general exception for invalid user command: invalid command, arguments, etc.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    private void handleAction(Command action) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"        switch (action.getName()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"            ui.say(\"Bye! See you later!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"                ui.error(\"Can\u0027t save tasks to file\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"            System.exit(0);","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"        case \"list\":","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"            ui.say(\"[*] Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"                    tasks.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"            // User input is 1-indexed, list uses 0-index","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"            int markIdx \u003d Integer.parseInt(action.getArgs()) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"            tasks.mark(markIdx);","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"            ui.say(\"[*] Marked the following duke.task as done:\\n\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"                    \"\\t\" + tasks.getTask(markIdx).nameWithStatus());","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"            // User input is 1-indexed, list uses 0-index","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"            int unmarkIdx \u003d Integer.parseInt(action.getArgs()) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"            tasks.unmark(unmarkIdx);","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"            ui.say(\"[*] Marked the following duke.task as not done:\\n\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"                    \"\\t\" + tasks.getTask(unmarkIdx).nameWithStatus());","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"            // User input is 1-indexed, list uses 0-index","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"            int dltIdx \u003d Integer.parseInt(action.getArgs()) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"            Task deletedTask \u003d tasks.removeTask(dltIdx);","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"            ui.say(String.format(","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"                    \"[-] Removed this duke.task:\\n\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"                            \"\\t%s\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"                            \"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"                    deletedTask.nameWithStatus(), tasks.size()));","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"            String todoName \u003d action.getArgs();","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"            Todo todo \u003d new Todo(todoName);","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"            ui.logNewTask(todo, tasks.size());","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"            String deadlineName \u003d action.getArgs();","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"            String deadlineDate \u003d action.getKwargs().get(\"by\");","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"            Deadline deadline \u003d new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"            ui.logNewTask(deadline, tasks.size());","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"        case \"event\":","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"            String eventName \u003d action.getArgs();","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"DavidTan0527"},"content":"            String eventDate \u003d action.getKwargs().get(\"at\");","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"DavidTan0527"},"content":"            Event event \u003d new Event(eventName, eventDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(event);","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"DavidTan0527"},"content":"            ui.logNewTask(event, tasks.size());","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"DavidTan0527"},"content":"        default:","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"DavidTan0527"},"content":"            throw new DukeException(\"I don\u0027t know what to do\");","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"DavidTan0527"},"content":"     * Construct a duke.Duke instance","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"DavidTan0527"},"content":"     * @param filename File to load and save Tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"DavidTan0527"},"content":"    public Duke(String filename) {","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"DavidTan0527"},"content":"        ui.printBanner();","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"DavidTan0527"},"content":"        String introduction \u003d \"Hello, I\u0027m Nikki\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"DavidTan0527"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"DavidTan0527"},"content":"        ui.say(introduction);","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"DavidTan0527"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"DavidTan0527"},"content":"            storage \u003d new Storage(filename);","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"DavidTan0527"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"DavidTan0527"},"content":"        } catch (IOException| DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"DavidTan0527"},"content":"            ui.warning(\"[!] Error reading file - initializing duke.task list as empty list\");","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"DavidTan0527"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"DavidTan0527"},"content":"     * Main driver method to run duke.Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"DavidTan0527"},"content":"    public void run() {","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"DavidTan0527"},"content":"        while (true) {","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"DavidTan0527"},"content":"                Command action \u003d cmd.readAndParse();","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"DavidTan0527"},"content":"                handleAction(action);","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"DavidTan0527"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":131,"author":{"gitId":"DavidTan0527"},"content":"                ui.error(\"!( ｀Д´)ﾉ  \" + e.getLocalizedMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"DavidTan0527"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"DavidTan0527"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DavidTan0527":136,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"DavidTan0527":7}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":" * Class to abstract and encapsulate file interactions for duke.Duke.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":" * File format:","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":" * tag||\u003c0 or 1\u003e||name[||additional arguments...]","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"    private String filename;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"    private File file;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"     * Instantiates a FileManager","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"     * @param filename path to file of interaction","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"    public Storage(String filename) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"        this.file \u003d new File(filename);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * Saves Tasks to file in a standard format","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"     * @param taskList list of Tasks to save","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"     * @throws IOException file access error","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filename, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"        fileWriter.write(taskList.tasksFileSaveFormat());","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        fileWriter.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"     * Loads Tasks from file","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"     * @return duke.task.TaskList populated with data from file","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"     * @throws IOException file access error","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException when format error is present in file","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"    public TaskList loadTasks() throws IOException, DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"        // Create file if it doesn\u0027t exist","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"            this.file.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"            Scanner fileReader \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"            for (int lineCount \u003d 1; fileReader.hasNextLine(); lineCount++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"                try {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"                    Task task \u003d Task.parseFileSaveFormat(fileReader.nextLine());","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"                    throw new DukeException(String.format(\"Wrong format in line %d\", lineCount));","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"            return taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"            return new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"DavidTan0527":75}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    private class Color {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"        public static final String NONE \u003d \"\\033[m\";","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"        public static final String GREEN \u003d \"\\033[92m\";","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"        public static final String RED \u003d \"\\033[31m\";","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"        public static final String PURPLE \u003d \"\\033[35m\";","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"        public static final String YELLOW \u003d \"\\033[33m\";","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    public void printBanner() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"        String logo \u003d \"███╗░░██╗██╗██╗░░██╗██╗░░██╗██╗　　　　 　∧_∧\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"                    + \"████╗░██║██║██║░██╔╝██║░██╔╝██║　　　　 ( ﾟωﾟ)\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"                    + \"██╔██╗██║██║█████═╝░█████═╝░██║　　　　 /ｕ ｕ\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"                    + \"██║╚████║██║██╔═██╗░██╔═██╗░██║　　　　/ / /\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"                    + \"██║░╚███║██║██║░╚██╗██║░╚██╗██║　　　 (ノノ\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"                    + \"╚═╝░░╚══╝╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝　　　彡\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"        String description \u003d \"Your Personal Assistant Chatbot that helps you keep track of the important things in life\";","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(Color.PURPLE + logo + Color.NONE);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"     * Method for duke.Duke to print message in a formatted style.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * @param message message to print","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"    public void say(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"        // Set color theme for Nikki\u0027s text","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"        String defaultColor \u003d Color.GREEN;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(defaultColor);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(\"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\");","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"        // Default back to green to allow different colored messages","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(defaultColor + \"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\");","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"        // Reset to default","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(Color.NONE);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     * Method for duke.Duke to print error messages.","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"     * @param message error message to print","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"    public void error(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"        say(Color.RED + message);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"     * Method for duke.Duke to print warning messages.","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"     * @param message warning message to print","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"    public void warning(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"        say(Color.YELLOW + message);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"     * Log the addition of tasks in the same format","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"     * @param task duke.task added to be logged","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"    public void logNewTask(Task task, int taskCount) {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"        say(String.format(","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"                \"[+] Added following duke.task:\\n\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"                        \"\\t%s\\n\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"                        \"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"                task.nameWithStatus(), taskCount));","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"DavidTan0527":78}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"public class Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"    private String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    private String argument;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"    private Map\u003cString, String\u003e kwargs;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    public Command(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"        this(name, \"\", new HashMap\u003c\u003e());","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    public Command(String name, String arg) {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"        this(name, arg, new HashMap\u003c\u003e());","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"    public Command(String name, String arg, Map\u003cString, String\u003e kwargs) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"        this.argument \u003d arg;","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"        this.kwargs \u003d kwargs;","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"    public String getName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    public String getArgs() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"        return this.argument;","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"    public Map\u003cString, String\u003e getKwargs() {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"        return this.kwargs;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":36}},{"path":"src/main/java/duke/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"public class CommandParser {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"     * Date format for parsing from user input, file i/o","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"     * Available command, their syntax (in regex), and usage documentation","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"     * NOTE: syntax convention should as below","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"     * Semantics: command-name arg [[/key kwargs] ... ]","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"     * Regex: command-name (.*) (/([.+]) (.*))*","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"    private static final String[][] COMMANDS \u003d {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"            { \"bye\", \"bye\", \"bye\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"            { \"list\", \"list\", \"list\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"            { \"mark\", \"mark (\\\\d+)\", \"mark \u003cduke.task number\u003e\" },","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"            { \"unmark\", \"unmark (\\\\d+)\", \"unmark \u003cduke.task number\u003e\" },","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"            { \"todo\", \"todo (.*)\", \"todo \u003cdescription\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"            { \"deadline\",","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"                    \"deadline (.*) /(by) ((?:[1-9]|[12][0-9]|3[01])/(?:[1-9]|1[0-2])/[0-9]{4})\",","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"                    \"deadline \u003cdescription\u003e /by \u003cd/M/yyyy\u003e\" },","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"            { \"event\",","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"                    \"event (.*) /(at) ((?:[1-9]|[12][0-9]|3[01])/(?:[1-9]|1[0-2])/[0-9]{4})\",","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"                    \"event \u003cdescription\u003e /at \u003cd/M/yyyy\u003e\" },","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"            { \"delete\", \"delete (\\\\d+)\", \"delete \u003cduke.task number\u003e\" },","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"    };","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"    private final Scanner input;","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"     * Instantiate parser for parsing commands for duke.Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"     * @param input Scanner that takes in input","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"    public CommandParser(Scanner input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"       this.input \u003d input;","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"     * Checks whether a command matches","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"     * @param cmd command to check validity","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"     * @return validity of the command","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException invalid command or syntax","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"    private static Command parseCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"        String cmdName \u003d cmd.split(\" \")[0];","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"        for (String[] command : CommandParser.COMMANDS) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"            // Not the target command","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"            if (!cmdName.equals(command[0])) continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"            Pattern p \u003d Pattern.compile(command[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"            Matcher m \u003d p.matcher(cmd);","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"            if (m.matches()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"                if (m.groupCount() \u003e 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"                    String arg \u003d m.group(1);","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"                    HashMap\u003cString, String\u003e kwargs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"                    // kwargs start at 2,","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"                    // The last one is groupCount() - 1, its value being groupCount()","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"                    for (int i \u003d 2; i \u003c m.groupCount(); i +\u003d 2) {","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"                        kwargs.put(m.group(i), m.group(i + 1));","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"                    return new Command(cmdName, arg, kwargs);","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"                else {","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"                    return new Command(cmdName);","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"                // Syntax error","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"                throw new DukeException(String.format(","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"                        \"Woi, that\u0027s not how you do it...\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"                        \"\\tUsage: %s\",","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"                        command[2]));","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"DavidTan0527"},"content":"        throw new DukeException(\"What are you trying to do??\");","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"DavidTan0527"},"content":"     * Reads user input from previously specified input Scanner","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"DavidTan0527"},"content":"     * Parses command if the first token is a valid command (delimiter \u003d \" \")","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"DavidTan0527"},"content":"     * @return parsed command","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException invalid command or syntax","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"DavidTan0527"},"content":"    public Command readAndParse() throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"DavidTan0527"},"content":"        String commandLine \u003d this.input.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"DavidTan0527"},"content":"        Command command \u003d CommandParser.parseCommand(commandLine);","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"DavidTan0527"},"content":"        return command;","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"import duke.command.CommandParser;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"     * Instantiate duke.task.Deadline object with date string","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"     * @param name name for duke.task.Deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"     * @param deadline date of duke.task.Deadline (in d/M/yyyy format)","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DateTimeParseException date format error","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"    public Deadline(String name, String deadline) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"        this(name, LocalDate.parse(deadline, CommandParser.DATE_FORMAT));","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"     * Instantiate duke.task.Deadline object with date string, and status","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"     * @param name name for duke.task.Deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"     * @param deadline date of duke.task.Deadline (in d/M/yyyy format)","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"     * @param done status of completion","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DateTimeParseException date format error","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    public Deadline(String name, String deadline, Boolean done) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"        this(name, LocalDate.parse(deadline, CommandParser.DATE_FORMAT), done);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"     * Instantiate duke.task.Deadline object","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"     * @param name name for duke.task.Deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"     * @param date date of duke.task.Deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        this(name, date, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"     * Instantiate duke.task.Deadline object with status","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"     * @param name name for duke.task.Deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     * @param date date of duke.task.Deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"     * @param done status of completion","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"    public Deadline(String name, LocalDate date, Boolean done) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"        super(name, \u0027D\u0027, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"%s (by: %s)\",","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"                super.nameWithStatus(),","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"                this.date.format(fmt));","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"%s||%s\",","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"                super.fileSaveFormat(),","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"                this.date.format(CommandParser.DATE_FORMAT));","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"import duke.command.CommandParser;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    public Event(String name, String date) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"        this(name, LocalDate.parse(date, CommandParser.DATE_FORMAT));","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"    public Event(String name, String date, Boolean done) throws DateTimeParseException {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"        this(name, LocalDate.parse(date, CommandParser.DATE_FORMAT), done);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"        this(name, date, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"    public Event(String name, LocalDate date, Boolean done) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"        super(name, \u0027E\u0027, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"%s (at: %s)\",","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"                super.nameWithStatus(),","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"                this.date.format(fmt));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"%s||%s\",","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"                super.fileSaveFormat(),","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"                this.date.format(CommandParser.DATE_FORMAT));","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    private static final char completedMark \u003d \u0027X\u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"    private static final char incompleteMark \u003d \u0027 \u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"    private String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    private Boolean done;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    private char tag \u003d \u0027 \u0027;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"        this(name, \u0027 \u0027, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    public Task(String name, Boolean done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"        this(name, \u0027 \u0027, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"    public Task(String name, char tag) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"        this(name, tag, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"    public Task(String name, char tag, Boolean done) {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * Marks the duke.task.Task (marked as done)","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"     * @return true if the state of duke.task.Task was changed by marking (not done -\u003e done)","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"        if (!this.isDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"            this.done \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"            return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"     * Unmarks the duke.task.Task (marked as not done)","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"     * @return true if the state of duke.task.Task was changed by unmarking (done -\u003e not done)","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"            this.done \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"            return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"     * Getter for the tag of the duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"     * @return tag of the duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"    public char getTag() {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"        return this.tag;","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"     * Getter for the name of the duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"     * @return name of the duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"    public String getName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"     * Returns the state (done) of the duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"     * @return duke.task is done or not","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean isDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"        return this.done;","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"     * Returns the tag, status, and name of the duke.task.Task, formatted.","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"DavidTan0527"},"content":"     * @return formatted string of the duke.task.Task info","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"[%c][%c] %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"DavidTan0527"},"content":"                this.getTag(),","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"DavidTan0527"},"content":"                this.isDone() ? Task.completedMark : Task.incompleteMark,","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"DavidTan0527"},"content":"                this.name);","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"DavidTan0527"},"content":"     * Returns duke.task.Task info in a standard format for saving in file.","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"DavidTan0527"},"content":"     * @return formatted string for saving duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"DavidTan0527"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"%c||%c||%s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"DavidTan0527"},"content":"                this.getTag(),","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"DavidTan0527"},"content":"                this.isDone() ? \u00271\u0027 : \u00270\u0027,","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"DavidTan0527"},"content":"                this.name);","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"DavidTan0527"},"content":"     * Parses a formatted string from file storage, then returns the duke.task.Task object","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"DavidTan0527"},"content":"     * @return duke.task.Task object represented by the string","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"DavidTan0527"},"content":"    public static Task parseFileSaveFormat(String fmt) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"DavidTan0527"},"content":"        // Split at \"||\"","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"DavidTan0527"},"content":"        String[] taskInfo \u003d fmt.split(\"\\\\|\\\\|\");","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"DavidTan0527"},"content":"        if (taskInfo.length \u003c 3) {","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"DavidTan0527"},"content":"            throw new DukeException(\"Wrong format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"DavidTan0527"},"content":"        // Extract relevant duke.task information","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"DavidTan0527"},"content":"        String taskTag \u003d taskInfo[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"DavidTan0527"},"content":"        Boolean taskStatus \u003d taskInfo[1].equals(\"1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"DavidTan0527"},"content":"        String taskName \u003d taskInfo[2];","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"DavidTan0527"},"content":"        Task task;","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"DavidTan0527"},"content":"        switch (taskTag) {","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"DavidTan0527"},"content":"        case \"T\":","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"DavidTan0527"},"content":"            task \u003d new Todo(taskName, taskStatus);","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"DavidTan0527"},"content":"        case \"D\":","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"DavidTan0527"},"content":"                String deadline \u003d taskInfo[3];","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"DavidTan0527"},"content":"                task \u003d new Deadline(taskName, deadline, taskStatus);","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"DavidTan0527"},"content":"            } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"DavidTan0527"},"content":"                throw new DukeException(\"Wrong format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"DavidTan0527"},"content":"        case \"E\":","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"DavidTan0527"},"content":"                String eventDate \u003d taskInfo[3];","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"DavidTan0527"},"content":"                task \u003d new Event(taskName, eventDate, taskStatus);","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"DavidTan0527"},"content":"            } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"DavidTan0527"},"content":"                throw new DukeException(\"Wrong format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"DavidTan0527"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"DavidTan0527"},"content":"            task \u003d new Task(taskName, taskStatus);","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"DavidTan0527"},"content":"        return task;","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":161,"author":{"gitId":"DavidTan0527"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":162,"author":{"gitId":"DavidTan0527"},"content":"        return this.name;","lastModifiedDate":"2022-01-17"},{"lineNumber":163,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":164,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DavidTan0527":164}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.util.List;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"public class TaskList {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"    // Main data structure to store duke.task.Task objects","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"     * Adds a duke.task.Task to existing duke.task.TaskList.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"     * @param task duke.task to add","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"     * Removes a duke.task.Task from the existing list.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"     * @param index index of duke.task.Task to remove","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"     * @return the removed duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException index out of range","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"    public Task removeTask(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"     * Checks if index is in range of current List","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"     * @param index index to check","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException index out of range","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"    private void checkIndex(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"            throw new DukeException(","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"                    this.size() \u003d\u003d 0","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"                            ? \"List is empty\"","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"                            : String.format(\"Please choose tasks from 1 to %d\", this.size())","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"            );","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"     * Marks the duke.task.Task at specified index (marked as done)","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"     * @param index index of duke.task.Task to mark","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"     * @return true if the state of duke.task.Task was changed by marking (not done -\u003e done)","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException index out of range","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean mark(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"        Task target \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"        return target.mark();","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"     * Unmarks the duke.task.Task (marked as not done)","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"     * @param index index of duke.task.Task to unmark","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"     * @return true if the state of duke.task.Task was changed by unmarking (done -\u003e not done)","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException index out of range","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean unmark(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"        Task target \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"        return target.unmark();","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"     * Retrieves duke.task.Task at index","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"     * @param index index of duke.task.Task to get","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"     * @return resulting duke.task.Task","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException index out of range","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"DavidTan0527"},"content":"     * @return size of duke.task.TaskList","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"DavidTan0527"},"content":"    public int size() {","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"DavidTan0527"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"DavidTan0527"},"content":"     * Returns a string, where each line is a duke.task.Task formatted for saving to file","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"DavidTan0527"},"content":"     * @return formatted string of Tasks for saving to file","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"DavidTan0527"},"content":"    public String tasksFileSaveFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"DavidTan0527"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"DavidTan0527"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"DavidTan0527"},"content":"                result +\u003d this.getTask(i).fileSaveFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"DavidTan0527"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"DavidTan0527"},"content":"                // This won\u0027t happen, given the bounds of the for-loop","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"DavidTan0527"},"content":"                assert false;","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"DavidTan0527"},"content":"            if (i !\u003d this.size() - 1) result +\u003d \"\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"DavidTan0527"},"content":"        return result;","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":118,"author":{"gitId":"DavidTan0527"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":119,"author":{"gitId":"DavidTan0527"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"DavidTan0527"},"content":"            return \"[ list is empty ]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"DavidTan0527"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-17"},{"lineNumber":124,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":125,"author":{"gitId":"DavidTan0527"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"DavidTan0527"},"content":"                Task current \u003d this.getTask(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"DavidTan0527"},"content":"                result +\u003d String.format(","lastModifiedDate":"2022-01-17"},{"lineNumber":129,"author":{"gitId":"DavidTan0527"},"content":"                        \"%3d. %s\",","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"DavidTan0527"},"content":"                        i + 1,","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"DavidTan0527"},"content":"                        current.nameWithStatus());","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"DavidTan0527"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"DavidTan0527"},"content":"                // This won\u0027t happen, given the bounds of the for-loop","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"DavidTan0527"},"content":"                assert false;","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":137,"author":{"gitId":"DavidTan0527"},"content":"            if (i !\u003d this.size() - 1) result +\u003d \"\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":139,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":140,"author":{"gitId":"DavidTan0527"},"content":"        return result;","lastModifiedDate":"2022-01-17"},{"lineNumber":141,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":142,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DavidTan0527":142}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"        this(name, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"    public Todo(String name, Boolean done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"        super(name, \u0027T\u0027, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":12}},{"path":"src/test/java/duke/command/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"public class CommandParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    public void readAndParse() {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"        String input \u003d \"list\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"                + \"event wife\u0027s birthday /at 13/12/2022\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"                + \"todo groceries\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"                + \"delete 2\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"                + \"unmark 3\";","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"        CommandParser parser \u003d new CommandParser(new Scanner(input));","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"            Command cmd;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"            cmd \u003d parser.readAndParse();","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getName(), \"list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getArgs(), \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getKwargs().size(), 0);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"            cmd \u003d parser.readAndParse();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getName(), \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getArgs(), \"wife\u0027s birthday\");","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getKwargs().size(), 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"            cmd \u003d parser.readAndParse();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getName(), \"todo\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getArgs(), \"groceries\");","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getKwargs().size(), 0);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"            cmd \u003d parser.readAndParse();","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getName(), \"delete\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getArgs(), \"2\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getKwargs().size(), 0);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"            cmd \u003d parser.readAndParse();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getName(), \"unmark\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getArgs(), \"3\");","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(cmd.getKwargs().size(), 0);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"            // Shouldn\u0027t happen","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"            assert false;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"    public void readAndParse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"        String input \u003d \"deadline ahhh /by Sunday\";","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"        CommandParser parser \u003d new CommandParser(new Scanner(input));","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e parser.readAndParse());","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"DavidTan0527":62}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    public void size_empty_zeroReturned() {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"        assertEquals(new TaskList().size(), 0);","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"    public void size_nonEmpty() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"first\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"second\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"third\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"        assertEquals(tasks.size(), 3);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"            tasks.removeTask(2);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(new Task(\"new 1\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(new Task(\"new 2\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"            assertEquals(tasks.size(), 4);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"            // Shouldn\u0027t happen","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"            assert false;","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"    public void getTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"first\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"second\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"third\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.getTask(-1));","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.getTask(3));","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"    public void removeTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"first\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"second\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"third\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.removeTask(-1));","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.removeTask(3));","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"    public void mark_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"first\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"second\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"third\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.mark(-1));","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.mark(3));","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"    public void unmark_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"first\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"second\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"        tasks.addTask(new Todo(\"third\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.unmark(-1));","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.unmark(3));","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"DavidTan0527":85}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"todo work","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"todo more work","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"deadline many more work /by now","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"event show up at friend\u0027s party /at when he calls me","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"unmark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"bye","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"DavidTan0527":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidTan0527":1,"-":20}}]
