[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"public class Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"    private String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    private String argument;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"    private Map\u003cString, String\u003e kwargs;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"    public Command(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"        this(name, \"\", new HashMap\u003c\u003e());","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    public Command(String name, String arg) {","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"        this(name, arg, new HashMap\u003c\u003e());","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    public Command(String name, String arg, Map\u003cString, String\u003e kwargs) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"        this.argument \u003d arg;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"        this.kwargs \u003d kwargs;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"    public String getName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    public String getArgs() {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"        return this.argument;","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    public Map\u003cString, String\u003e getKwargs() {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"        return this.kwargs;","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":34}},{"path":"src/main/java/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"public class CommandParser {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"    private final Scanner input;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"     * Available command, their syntax (in regex), and usage documentation","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"     * NOTE: syntax convention should as below","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"     * Semantics: command-name arg [[/key kwargs] ... ]","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"     * Regex: command-name (.*) (/([.+]) (.*))*","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"    private static final String[][] COMMANDS \u003d {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"            { \"bye\", \"bye\", \"bye\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"            { \"list\", \"list\", \"list\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"            { \"mark\", \"mark (\\\\d+)\", \"mark \u003ctask number\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"            { \"unmark\", \"unmark (\\\\d+)\", \"unmark \u003ctask number\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"            { \"todo\", \"todo (.*)\", \"todo \u003cdescription\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"            { \"deadline\", \"deadline (.*) /(by) (.*)\", \"deadline \u003cdescription\u003e /by \u003cdate\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"            { \"event\", \"event (.*) /(at) (.*)\", \"event \u003cdescription\u003e /at \u003cdate\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"            { \"delete\", \"delete (\\\\d+)\", \"delete \u003ctask number\u003e\" },","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"    };","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    public CommandParser(Scanner input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"       this.input \u003d input;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * Checks whether a command matches","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"     * @param cmd Command to check validity","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"     * @return Validity of the command","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"    private static Command parseCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"        String cmdName \u003d cmd.split(\" \")[0];","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"        for (String[] command : CommandParser.COMMANDS) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"            // Not the target command","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"            if (!cmdName.equals(command[0])) continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"            Pattern p \u003d Pattern.compile(command[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"            Matcher m \u003d p.matcher(cmd);","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"            if (m.matches()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"                if (m.groupCount() \u003e 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"                    String arg \u003d m.group(1);","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"                    HashMap\u003cString, String\u003e kwargs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"                    // kwargs start at 2,","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"                    // The last one is groupCount() - 1, its value being groupCount()","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"                    for (int i \u003d 2; i \u003c m.groupCount(); i +\u003d 2) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"                        kwargs.put(m.group(i), m.group(i + 1));","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"                    return new Command(cmdName, arg, kwargs);","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"                else {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"                    return new Command(cmdName);","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"                // Syntax error","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"                throw new DukeException(String.format(","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"                        \"Woi, that\u0027s not how you do it...\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"                        \"\\tUsage: %s\",","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"                        command[2]));","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"        throw new DukeException(\"What are you trying to do??\");","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"     * Reads user input from previously specified input Scanner","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"     * Parses command if the first token is a valid command (delimiter \u003d \" \")","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"     * Else, treats the whole input line as a command term","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"     * @return Parsed command","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"    public Command readAndParse() throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"        String commandLine \u003d this.input.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"        Command command \u003d CommandParser.parseCommand(commandLine);","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"        return command;","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":87}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"    private String date;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"        this(name, deadline, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    public Deadline(String name, String deadline, Boolean done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"        super(name, done);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"        this.date \u003d deadline;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"                super.nameWithStatus(),","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"                this.date);","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"class Color {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"    public static final String NONE \u003d \"\\033[m\";","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    public static final String GREEN \u003d \"\\033[92m\";","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"    public static final String RED \u003d \"\\033[31m\";","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    public static final String PURPLE \u003d \"\\033[35m\";","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    private static void printBanner() {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"        String logo \u003d \"███╗░░██╗██╗██╗░░██╗██╗░░██╗██╗　　　　 　∧_∧\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"                    + \"████╗░██║██║██║░██╔╝██║░██╔╝██║　　　　 ( ﾟωﾟ)\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"                    + \"██╔██╗██║██║█████═╝░█████═╝░██║　　　　 /ｕ ｕ\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"                    + \"██║╚████║██║██╔═██╗░██╔═██╗░██║　　　　/ / /\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"                    + \"██║░╚███║██║██║░╚██╗██║░╚██╗██║　　　 (ノノ\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"                    + \"╚═╝░░╚══╝╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝　　　彡\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"        String description \u003d \"Your Personal Assistant Chatbot that helps you keep track of the important things in life\";","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(Color.PURPLE + logo + Color.NONE);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    private static final CommandParser cmd \u003d new CommandParser(new Scanner(System.in));","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"     * Method for chatbot to print message in a formatted style.","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * @param message Message to print","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"    private static void say(String message) {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"        // Set color theme for Nikki\u0027s text","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"        String defaultColor \u003d Color.GREEN;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(defaultColor);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(\"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\");","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"        // Default back to green to allow different colored messages","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(defaultColor + \"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"        // Reset to default","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"        System.out.println(Color.NONE);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     * Method for chatbot to print error messages.","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"     * @param message Error message to print","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"    private static void error(String message) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"        say(Color.RED + message);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"     * Log the addition of tasks in the same format","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"     * @param task Task added to be logged","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"    private static void logNewTask(Task task) {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"        say(String.format(","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"                \"[+] Added following task:\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"                \"\\t%s\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"                task.nameWithStatus(), tasks.size()));","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"     * Perform certain behaviours according to the command passed.","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"     * @param action Command from user","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException General exception for invalid user command: invalid command, invalid arguments, etc.","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"    private static void handleAction(Command action) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"        switch (action.getName()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"            say(\"Bye! See you later!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"            System.exit(0);","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"        case \"list\":","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"            say(\"[*] Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"                tasks.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"DavidTan0527"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"DavidTan0527"},"content":"            // User input is 1-indexed, list uses 0-index","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"DavidTan0527"},"content":"            int markIdx \u003d Integer.parseInt(action.getArgs()) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"DavidTan0527"},"content":"            tasks.mark(markIdx);","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"DavidTan0527"},"content":"            say(\"[*] Marked the following task as done:\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"DavidTan0527"},"content":"                \"\\t\" + tasks.getTask(markIdx).nameWithStatus());","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"DavidTan0527"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"DavidTan0527"},"content":"            // User input is 1-indexed, list uses 0-index","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"DavidTan0527"},"content":"            int unmarkIdx \u003d Integer.parseInt(action.getArgs()) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"DavidTan0527"},"content":"            tasks.unmark(unmarkIdx);","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"DavidTan0527"},"content":"            say(\"[*] Marked the following task as not done:\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"DavidTan0527"},"content":"                \"\\t\" + tasks.getTask(unmarkIdx).nameWithStatus());","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"DavidTan0527"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"DavidTan0527"},"content":"            // User input is 1-indexed, list uses 0-index","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"DavidTan0527"},"content":"            int dltIdx \u003d Integer.parseInt(action.getArgs()) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"DavidTan0527"},"content":"            Task deletedTask \u003d tasks.removeTask(dltIdx);","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"DavidTan0527"},"content":"            say(String.format(","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"DavidTan0527"},"content":"                    \"[-] Removed this task:\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"DavidTan0527"},"content":"                            \"\\t%s\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"DavidTan0527"},"content":"                            \"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"DavidTan0527"},"content":"                    deletedTask.nameWithStatus(), tasks.size()));","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":114,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"DavidTan0527"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"DavidTan0527"},"content":"            String todoName \u003d action.getArgs();","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"DavidTan0527"},"content":"            Todo todo \u003d new Todo(todoName);","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"DavidTan0527"},"content":"            logNewTask(todo);","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"DavidTan0527"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"DavidTan0527"},"content":"            String deadlineName \u003d action.getArgs();","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"DavidTan0527"},"content":"            String deadlineDate \u003d action.getKwargs().get(\"by\");","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"DavidTan0527"},"content":"            Deadline deadline \u003d new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"DavidTan0527"},"content":"            logNewTask(deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":130,"author":{"gitId":"DavidTan0527"},"content":"        case \"event\":","lastModifiedDate":"2022-01-21"},{"lineNumber":131,"author":{"gitId":"DavidTan0527"},"content":"            String eventName \u003d action.getArgs();","lastModifiedDate":"2022-01-21"},{"lineNumber":132,"author":{"gitId":"DavidTan0527"},"content":"            String eventDate \u003d action.getKwargs().get(\"at\");","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"DavidTan0527"},"content":"            Event event \u003d new Event(eventName, eventDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"DavidTan0527"},"content":"            tasks.addTask(event);","lastModifiedDate":"2022-01-21"},{"lineNumber":135,"author":{"gitId":"DavidTan0527"},"content":"            logNewTask(event);","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"DavidTan0527"},"content":"            break;","lastModifiedDate":"2022-01-17"},{"lineNumber":137,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":138,"author":{"gitId":"DavidTan0527"},"content":"        default:","lastModifiedDate":"2022-01-17"},{"lineNumber":139,"author":{"gitId":"DavidTan0527"},"content":"            throw new DukeException(\"I don\u0027t know what to do\");","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":141,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":142,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":143,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"DavidTan0527"},"content":"        printBanner();","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"DavidTan0527"},"content":"        String introduction \u003d \"Hello, I\u0027m Nikki\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"DavidTan0527"},"content":"                              \"What can I do for you?\";","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"DavidTan0527"},"content":"        say(introduction);","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"DavidTan0527"},"content":"        while (true) {","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":153,"author":{"gitId":"DavidTan0527"},"content":"                Command action \u003d cmd.readAndParse();","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"DavidTan0527"},"content":"                handleAction(action);","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"DavidTan0527"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":156,"author":{"gitId":"DavidTan0527"},"content":"                error(\"!( ｀Д´)ﾉ  \" + e.getLocalizedMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":158,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DavidTan0527":156,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"DavidTan0527":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"    private String dateRange;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"    public Event(String name, String dateRange) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"        this(name, dateRange, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    public Event(String name, String dateRange, Boolean done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"        super(name, done);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"        this.dateRange \u003d dateRange;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"[E]%s (at: %s)\",","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"                super.nameWithStatus(),","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"                this.dateRange);","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"    private static final char completedMark \u003d \u0027X\u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"    private static final char incompleteMark \u003d \u0027 \u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"    private String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    private Boolean done;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"        this(name, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"    public Task(String name, Boolean done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"     * Marks the Task (marked as done)","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"     * @return True if the state of Task was changed by marking (not done -\u003e done)","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"        if (!this.isDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"            this.done \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"            return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * Unmarks the Task (marked as not done)","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"     * @return True if the state of Task was changed by unmarking (done -\u003e not done)","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"            this.done \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"            return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"     * Getter for the name of the Task","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"     * @return Name of the Task","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"    public String getName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"     * Returns the state (done) of the Task","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"     * @return Task is done or not","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean isDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"        return this.done;","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"[%c] %s\",","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"                this.isDone() ? Task.completedMark : Task.incompleteMark,","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"                this.name);","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"        return this.name;","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DavidTan0527":73}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"import java.util.List;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"public class TaskList {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"    // Main data structure to store Task objects","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"     * Adds a Task to existing TaskList.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"     * @param task Task to add","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"DavidTan0527"},"content":"     * Removes a Task from the existing list.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"DavidTan0527"},"content":"     * @param index Index of Task to remove","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"DavidTan0527"},"content":"     * @return The removed Task","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException Index out of range","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"DavidTan0527"},"content":"    public Task removeTask(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"DavidTan0527"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"DavidTan0527"},"content":"     * Checks if index is in range of current List","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"DavidTan0527"},"content":"     * @param index Index to check","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException Index out of range","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"DavidTan0527"},"content":"    private void checkIndex(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"DavidTan0527"},"content":"        if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"DavidTan0527"},"content":"            throw new DukeException(","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"DavidTan0527"},"content":"                    this.size() \u003d\u003d 0","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"DavidTan0527"},"content":"                            ? \"List is empty\"","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"DavidTan0527"},"content":"                            : String.format(\"Please choose tasks from 1 to %d\", this.size())","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"DavidTan0527"},"content":"            );","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"DavidTan0527"},"content":"     * Marks the Task at specified index (marked as done)","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"DavidTan0527"},"content":"     * @param index Index of Task to mark","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"DavidTan0527"},"content":"     * @return True if the state of Task was changed by marking (not done -\u003e done)","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException Index out of range","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean mark(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"DavidTan0527"},"content":"        Task target \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"DavidTan0527"},"content":"        return target.mark();","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"DavidTan0527"},"content":"     * Unmarks the Task (marked as not done)","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"DavidTan0527"},"content":"     * @param index Index of Task to unmark","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"DavidTan0527"},"content":"     * @return True if the state of Task was changed by unmarking (done -\u003e not done)","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException Index out of range","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"DavidTan0527"},"content":"    public Boolean unmark(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"DavidTan0527"},"content":"        Task target \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"DavidTan0527"},"content":"        return target.unmark();","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"DavidTan0527"},"content":"     * Retrieves Task at index","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"DavidTan0527"},"content":"     * @param index Index of Task to get","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"DavidTan0527"},"content":"     * @return Resulting Task","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"DavidTan0527"},"content":"     * @throws DukeException Index out of range","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"DavidTan0527"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"DavidTan0527"},"content":"        checkIndex(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"DavidTan0527"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"DavidTan0527"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"DavidTan0527"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"DavidTan0527"},"content":"     * @return Size of TaskList","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"DavidTan0527"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"DavidTan0527"},"content":"    public int size() {","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"DavidTan0527"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"DavidTan0527"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"DavidTan0527"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"DavidTan0527"},"content":"            return \"[ list is empty ]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"DavidTan0527"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"DavidTan0527"},"content":"        for (int task_idx \u003d 0; task_idx \u003c this.size(); task_idx++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"DavidTan0527"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"DavidTan0527"},"content":"                Task current \u003d this.getTask(task_idx);","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"DavidTan0527"},"content":"                result +\u003d String.format(","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"DavidTan0527"},"content":"                        \"%3d. %s\",","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"DavidTan0527"},"content":"                        task_idx + 1,","lastModifiedDate":"2022-01-17"},{"lineNumber":105,"author":{"gitId":"DavidTan0527"},"content":"                        current.nameWithStatus());","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"DavidTan0527"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"DavidTan0527"},"content":"                // This won\u0027t happen, given the bounds of the for-loop","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"DavidTan0527"},"content":"                assert false;","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"DavidTan0527"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":111,"author":{"gitId":"DavidTan0527"},"content":"            if (task_idx !\u003d this.size() - 1) result +\u003d \"\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"DavidTan0527"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":113,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":114,"author":{"gitId":"DavidTan0527"},"content":"        return result;","lastModifiedDate":"2022-01-17"},{"lineNumber":115,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":116,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"DavidTan0527":116}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"        this(name, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"    public Todo(String name, Boolean done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"        super(name, done);","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"DavidTan0527"},"content":"    public String nameWithStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"DavidTan0527"},"content":"        return String.format(\"[T]%s\", super.nameWithStatus());","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"DavidTan0527"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"DavidTan0527"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"DavidTan0527":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DavidTan0527"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"DavidTan0527"},"content":"todo work","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"DavidTan0527"},"content":"todo more work","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"DavidTan0527"},"content":"deadline many more work /by now","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"DavidTan0527"},"content":"event show up at friend\u0027s party /at when he calls me","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"DavidTan0527"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"DavidTan0527"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"DavidTan0527"},"content":"unmark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"DavidTan0527"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"DavidTan0527"},"content":"bye","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"DavidTan0527":10}}]
