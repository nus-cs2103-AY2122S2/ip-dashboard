[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"javafx {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChanWeiJie":22,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"TaskJamie is a desktop app used to keep track of tasks. It provides a Graphical User Interface (GUI) for users to input their commands.","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"# User Guide (Set up)","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"2. Download the latest `duke.jar` from  [here](https://github.com/ChanWeiJie/ip/releases/tag/A-Release)","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TaskJamie.","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"4. Double-click the file to start the app. The GUI should not appear similar to the one found [here](https://chanweijie.github.io/ip/Ui.png). This is because","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"the app does not contain any sample data. ","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"## Adding a task : `todo` , `event`, `deadline`","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"Adds a task into TaskJame.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"Format for `todo`: `todo DESCRIPTION`","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"Format for `deadline`: `deadline DESCRIPTION /by DATE TIME`","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"Format for `event`: `event DESCRIPTION /at DATE START_TIME END_TIME`","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"**NOTE** the following are the format for the date and any of the mentioned time","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"- `TIME`: `hhmm`","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"- `DATE`: `yyyy-mm-dd`","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"- `todo run`","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"- `deadline return book /by 2022-05-28 2000`","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"- `event book sale /at 2022-05-27 0800 2000`\t\t  ","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"Expected outcome:  ","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"- After running `todo run`","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"\"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"[T][] run","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"Now you have 1 tasks in the list.\"","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"- After running `deadline return book /by 2022-05-28 2000`","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"\"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"[D][] return book (by: May 28 2022 8:00PM)","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"Now you have 2 tasks in the list.\"","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"- After running `event book sale /at 2022-05-27 0800 2000`","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"\"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"[D][] book sale (at: May 27 2022 8:00AM to 8:00PM)","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"Now you have 3 tasks in the list.\"","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"## Deleting a task : `delete`","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"Deletes a task from the list in TaskJamie.","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"Format : `delete INDEX`","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"- `INDEX` would be the index of the task to be deleted from the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"Expected outcome:  ","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"**Assuming the first task is `todo run`**","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"\"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"[T][] run","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"Now you have 0 tasks in the list.\"","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"## Listing all tasks: `list`","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"Shows a list of all tasks recorded by TaskJamie.","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"Format : `list`  ","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"\"Here are the tasks in your list:","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"1. task 1","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"2. deadline 1","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"3. event 1 \"","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"## Checking/Unchecking a task on the list : `unmark`, `mark`","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"Marks/Unmarks the specified task in the list as done or not done.","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"Format for `mark` : `mark INDEX`","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"Format for `unmark` : `unmark INDEX`","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"- `INDEX` would be the index of the task to be deleted from the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"Example usage : ","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"- `mark 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"- `unmark 1` ","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"**Assuming the first task is `todo run`**","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"If its mark 1 : ","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"\"Nice I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-14"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"[T][X] run\"","lastModifiedDate":"2022-02-14"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"If its unmark 1 :","lastModifiedDate":"2022-02-14"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"\"Nice I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"[T][] run\"","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"## Listing all `events` and `deadlines` from a particular `date`: `schedule`","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"Shows a list of all tasks that have the same date provided.","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"Format : `schedule DATE`","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"- As stated above, the format for `DATE` would be **`yyyy-mm-dd`**","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"Example usage : `schedule 2022-05-28`","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"Expected outcome:  ","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"**Assuming only task is `deadline return book /by 2022-05-28 2000`**","lastModifiedDate":"2022-02-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"\"Here is your Schedule for: 2022-05-28","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"1.[D][] return book (by: May 28 2022 8:00PM)","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"## Exiting the program : `bye`","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"Exits the program.","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"Format: `bye`","lastModifiedDate":"2022-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"## Saving the data","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"Tasks stored in TaskJamie are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ChanWeiJie":106,"-":28}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the add command. A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to adding that specified task","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" * to the taskList in the TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor of AddCommand class.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task task object created from user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        super(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains the message after adding the task to the list.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after adding task to list.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        tasks.addToList(super.task);","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        return message + super.task.toString() + \"\\nNow you have \" + tasks.getListSize() + \" tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":41}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the commands inputted by a user. The Command class cannot be instantiated as it is an abstract class.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    protected Task task;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor of Command class.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task task object created from user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    public Command(Task task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string, after the execution of the respective methods in TaskList class.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a String representing the respective messages after the execution of the methods in TaskList class.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    public abstract String execute(TaskList tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a boolean depending on the input command of the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"     * @return returns true if Command is an ExitCommand, eg: \"bye\". Else returns false.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the delete command. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to deleting that specified task","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" * to the taskList in the TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    private int index;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"     * @param number an indicator to the index of the taskList in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public DeleteCommand(Integer number) {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        this.index \u003d number;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains the message after deleting the task from the list.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after deleting task from list.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        assert this.index \u003e 0 : \"Index provided should be greater then 0\";","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        Task deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        return message + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"                + \"Now you have \" + tasks.getListSize() + \" tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the exit command. A \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to exiting the Duke program.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for ExitCommand class.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains the message to stop the execution of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message to signify the end of execution.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns true as the Command is an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * @return true.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        return true;","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the find command. A \u003ccode\u003eFindCommand\u003c/code\u003e object corresponds to finding similar tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * in the taskList of TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    private String keyword;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor of FindCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"     * @param word keyword used to find similar tasks in taskList of TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        this.keyword \u003d word;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains all the task after the execution of findWord in the TaskList class.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after calling findword in the TaskList class.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        TaskList newTaskList \u003d tasks.findWord(this.keyword);","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c newTaskList.getListSize(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"            String output \u003d counter + \".\" + newTaskList.getTask(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"            counter++;","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"            message +\u003d output + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"            message \u003d \"OOPS!, there are no matching task with the word provided.\" + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        return message;","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"ChanWeiJie":49}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the mark command. A \u003ccode\u003eMarkCommand\u003c/code\u003e object allows users to set the corresponding task as done.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    private int index;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"     * @param number an indicator to the index of the taskList in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    public MarkCommand(Integer number) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        this.index \u003d number;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains the message after marking the task from the list.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after marking task from the list.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        assert index \u003e 0 : \"Index provided should be greater then 0\";","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        Task markedTask \u003d tasks.markTask(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        return message + markedTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":41}},{"path":"src/main/java/duke/command/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the print command. A \u003ccode\u003ePrintCommand\u003c/code\u003e object allows users to see all task in Duke TaskBot.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class PrintCommand extends Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for PrintCommand class.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public PrintCommand() {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains all the task after the execution of printList in the TaskList class.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after calling printList in the TaskList class.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        return tasks.printList();","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":35}},{"path":"src/main/java/duke/command/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the schedule command. A \u003ccode\u003eScheduleCommand\u003c/code\u003e object corresponds to finding similar tasks","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":" * in the taskList of TaskList class.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    private LocalDate date;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor of FindCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date date used to find similar tasks in taskList of TaskList class.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    public ScheduleCommand(LocalDate date) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains all the task after the execution of findSameSchedule in the TaskList class.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after calling findSameSchedule in the TaskList class.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        TaskList newTaskList \u003d tasks.findSameSchedule(this.date);","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        String message \u003d \"Here is your schedule for: \" + this.date + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c newTaskList.getListSize(); i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"            String output \u003d counter + \".\" + newTaskList.getTask(i);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"            counter++;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"            message +\u003d output + \"\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"            message \u003d \"You have no schedule on:\" + this.date + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        return message;","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"ChanWeiJie":52}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the unmark command. A \u003ccode\u003eUnmarkCommand\u003c/code\u003e object allows users to set the corresponding task as","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" * not done.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    private int index;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for the UnmarkCommand class.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"     * @param number an indicator to the index of the taskList in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    public UnmarkCommand(Integer number) {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        super(null);","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        this.index \u003d number;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which contains the message after unmarking the task from the list.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * @param tasks an object of TaskList, used to access public methods in TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted message after unmarking task from the list.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        assert index \u003e 0 : \"Index provided should be greater then 0\";","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        Task unMarkedTask \u003d tasks.unmarkTask(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        return message + unMarkedTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns false as the Command is not an ExitCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     * @return false.","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":43}},{"path":"src/main/java/duke/exception/BlankCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the BlankCommandException the Duke program would handle. A \u003ccode\u003e BlankCommandException \u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * object corresponds to a blank command inputted by a user. Eg, \" \".","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class BlankCommandException extends DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for BlankCommandException class.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    public BlankCommandException() {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I do not accept empty commands! :-(\");","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the Exceptions the Duke program would handle. A \u003ccode\u003e DukeException \u003c/code\u003e object corresponds","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * to the exceptions specified and handled by Duke.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * @param description the error message provided for the exception.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public DukeException(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":16}},{"path":"src/main/java/duke/exception/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the IncompleteCommandException the Duke program would handle. A \u003ccode\u003e IncompleteCommandException \u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * object corresponds to a incomplete command inputted by a user. Eg, event sleep /at.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for IncompleteCommandException class.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * @param command the respective task the user has inputted eg,todo/event/deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public IncompleteCommandException(String command) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"        super(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":16}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the InvalidCommandException the Duke program would handle. A \u003ccode\u003e InvalidCommandException \u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * object corresponds to an invalid command inputted by a user. Eg, blah.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for InvalidCommandException class.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":15}},{"path":"src/main/java/duke/functionality/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.PrintCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.ScheduleCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"import duke.exception.BlankCommandException;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"import duke.exception.IncompleteCommandException;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the Parsing capabilities of the Duke project. A \u003ccode\u003e Parse \u003c/code\u003e object corresponds","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":" * to the actions taken to parse and format user inputs.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int EVENT_OFFSET \u003d 5;","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int TODO_OFFSET \u003d 4;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int DEADLINE_OFFSET \u003d 8;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int SCHEDULE_OFFSET \u003d 8;","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int INPUT_OFFSET \u003d 3;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int FIRST_INPUT \u003d 0;","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int SECOND_INPUT \u003d 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int THIRD_INPUT \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the formatted date.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"     * @param input date specified by user input. Eg, \"2020-06-06\".","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"     * @return formatted date.","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    public static LocalDate formatDate(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        LocalDate date \u003d LocalDate.parse(input, dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        return date;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the formatted time.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"     * @param input time specified by user input. Eg, \"1800\".","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"     * @return formatted time.","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    public static LocalTime formatTime(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"        LocalTime time \u003d LocalTime.parse(input, dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"        return time;","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the date.","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"     * @param input formatted date. Eg, \"2020-06-06\".","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"     * @return date but as a String.","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    public static String dateToString(LocalDate input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        String date \u003d input.format(dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"        return date;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the time.","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"     * @param input formatted time Eg, \"1800\".","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     * @return time but as a String.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"    public static String timeToString(LocalTime input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"        String time \u003d input.format(dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"        return time;","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"    private static void checkDescriptionLength(String description, String command) throws IncompleteCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"            throw new IncompleteCommandException(command);","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"    private static Command handleDeadline(String input, String command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"        String[] inputSlash \u003d input.split(\"/\");","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"        String description \u003d inputSlash[FIRST_INPUT].substring(DEADLINE_OFFSET).trim();","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"        checkDescriptionLength(description, command);","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"        String durationInput \u003d inputSlash[SECOND_INPUT].substring(INPUT_OFFSET);","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"        String[] splitDuration \u003d durationInput.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"            LocalDate date \u003d formatDate(splitDuration[FIRST_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"            LocalTime time \u003d formatTime(splitDuration[SECOND_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"            return new AddCommand(new Deadline(description, date, time));","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"            throw new DukeException(\"The expected input form is deadline xxx /by yyyy-mm-dd hhmm\");","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"    private static Command handleEvent(String input, String command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"        String[] inputSlash \u003d input.split(\"/\");","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"        String description \u003d inputSlash[FIRST_INPUT].substring(EVENT_OFFSET).trim();","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"        checkDescriptionLength(description, command);","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"        String durationInput \u003d inputSlash[SECOND_INPUT].substring(INPUT_OFFSET);","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"        String[] splitDuration \u003d durationInput.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"            LocalDate date \u003d formatDate(splitDuration[FIRST_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"            LocalTime startTime \u003d formatTime(splitDuration[SECOND_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"            LocalTime endTime \u003d formatTime(splitDuration[THIRD_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"            return new AddCommand(new Event(description, date, startTime, endTime));","lastModifiedDate":"2022-02-05"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"            throw new DukeException(\"The expected input form is event xxx /at yyyy-mm-dd hhmm hhmm\");","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"    private static Command handleTodo(String input, String command) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"        String description \u003d input.substring(TODO_OFFSET).trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"        checkDescriptionLength(description, command);","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"        return new AddCommand(new Todo(description));","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"    private static Command handleSchedule(String input, String command) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"ChanWeiJie"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"        String description \u003d input.substring(SCHEDULE_OFFSET).trim();","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"        checkDescriptionLength(description, command);","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"ChanWeiJie"},"content":"            LocalDate date \u003d formatDate(inputSplit[SECOND_INPUT]);","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"ChanWeiJie"},"content":"            return new ScheduleCommand(date);","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"ChanWeiJie"},"content":"            throw new DukeException(\"The expected input form is schedule yyyy-mm-dd\");","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the respective command from user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"ChanWeiJie"},"content":"     * @param input user input. Eg, \"todo run\".","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws DukeException when user input for date and time are not of the correct form.","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"ChanWeiJie"},"content":"        String command \u003d inputSplit[FIRST_INPUT];","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"ChanWeiJie"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"            return new PrintCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"ChanWeiJie"},"content":"            return handleTodo(input, command);","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"            return handleDeadline(input, command);","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"ChanWeiJie"},"content":"            return handleEvent(input, command);","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"ChanWeiJie"},"content":"            return new MarkCommand(Integer.parseInt(inputSplit[SECOND_INPUT]));","lastModifiedDate":"2022-02-05"},{"lineNumber":170,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"ChanWeiJie"},"content":"            return new UnmarkCommand(Integer.parseInt(inputSplit[SECOND_INPUT]));","lastModifiedDate":"2022-02-05"},{"lineNumber":173,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"ChanWeiJie"},"content":"            return new DeleteCommand(Integer.parseInt(inputSplit[SECOND_INPUT]));","lastModifiedDate":"2022-02-05"},{"lineNumber":176,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"ChanWeiJie"},"content":"            return new FindCommand(inputSplit[SECOND_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":179,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"schedule\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"ChanWeiJie"},"content":"            return handleSchedule(input, command);","lastModifiedDate":"2022-02-09"},{"lineNumber":182,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":183,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (command.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":184,"author":{"gitId":"ChanWeiJie"},"content":"            throw new BlankCommandException();","lastModifiedDate":"2022-01-30"},{"lineNumber":185,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":186,"author":{"gitId":"ChanWeiJie"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"ChanWeiJie"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"ChanWeiJie":190}},{"path":"src/main/java/duke/functionality/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the Storage capabilities of the Duke project. A \u003ccode\u003e Storage \u003c/code\u003e object corresponds","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":" * to the actions available to write and read data/task.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    protected static String pwd;","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    protected static String path;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int FIRST_INPUT \u003d 0;","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int SECOND_INPUT \u003d 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int THIRD_INPUT \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int FOURTH_INPUT \u003d 3;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int FIFTH_INPUT \u003d 4;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    private static final int SIXTH_INPUT \u003d 5;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     * @param pwd user\u0027s current working directory.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * @param path path to \"/data/TaskData.txt\".","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    public Storage(String pwd, String path) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        Storage.pwd \u003d pwd;","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        Storage.path \u003d path;","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but stores all task into the text file specified by path.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"     * @param path path to \"/data/TaskData.txt\".","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"     * @param taskList the tasklist to be written.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws IOException if the text file is missing.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    public static void writeToFile(String path, TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"            fw.write(craftOutput(task));","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but calls writeToFile to update the text file.","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"    public static void updateTextFile(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"            writeToFile(Storage.pwd + Storage.path, taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"            System.out.println(\"Something happened to the text file !\" + e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a new Tasklist object that is the saved taskList which consist of all the data read","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"     * from the file provided.","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"     * @param file the text file that stores all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a TaskList object representing the saved taskList.","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws FileNotFoundException if the file is missing.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"    public TaskList readFileDataAndStoreInList(File file) throws FileNotFoundException {","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"        while ((sc.hasNextLine())) {","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"            String[] inputSplit \u003d input.split(\"\\\\|\");","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"            String task \u003d inputSplit[FIRST_INPUT];","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"            int mark \u003d Integer.parseInt(inputSplit[SECOND_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"            if (task.equals(\"T\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"                Todo tempTask \u003d new Todo(inputSplit[THIRD_INPUT]);","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"                newTaskList.addToList(checkTaskDone(mark, tempTask));","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"            } else if (task.equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"                Deadline tempTask \u003d new Deadline(inputSplit[THIRD_INPUT], Parser.formatDate(inputSplit[FOURTH_INPUT]),","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"                        Parser.formatTime(inputSplit[FIFTH_INPUT]));","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"                newTaskList.addToList(checkTaskDone(mark, tempTask));","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"            } else if (task.equals(\"E\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"                Event tempTask \u003d new Event(inputSplit[THIRD_INPUT], Parser.formatDate(inputSplit[FOURTH_INPUT]) ,","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"                        Parser.formatTime(inputSplit[FIFTH_INPUT]), Parser.formatTime(inputSplit[SIXTH_INPUT]));","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"                newTaskList.addToList(checkTaskDone(mark, tempTask));","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but used to check if a Task is done or not.","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"     * @param mark indicator, 1 is done 0 is not done.","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the Task object to be checked.","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"    public Task checkTaskDone(int mark, Task task) {","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"        if (mark \u003d\u003d 1) {","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"            task.setTaskDone();","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"        return task;","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a crafted output to be stored in the text file.","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task created in Parser class.","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"     * @return crafted output.","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"    public static String craftOutput(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"        String doneIcon \u003d task.getStatusIcon();","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"            if (doneIcon.equals(\"X\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"                output \u003d \"T|1|\" + task.getDescription();","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"                output \u003d \"T|0|\" + task.getDescription();","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"            if (doneIcon.equals(\"X\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":127,"author":{"gitId":"ChanWeiJie"},"content":"                output \u003d \"D|1|\" + task.getDescription() + \"|\" + Parser.dateToString(((Deadline) task).getDate())","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"ChanWeiJie"},"content":"                        + \"|\" + Parser.timeToString(((Deadline) task).getTime());","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"ChanWeiJie"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"ChanWeiJie"},"content":"                output \u003d \"D|0|\" + task.getDescription() + \"|\" + Parser.dateToString(((Deadline) task).getDate())","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"ChanWeiJie"},"content":"                        + \"|\" + Parser.timeToString(((Deadline) task).getTime());","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"ChanWeiJie"},"content":"            if (doneIcon.equals(\"X\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"ChanWeiJie"},"content":"                output \u003d \"E|1|\" + task.getDescription() + \"|\" + Parser.dateToString(((Event) task).getDate())","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"ChanWeiJie"},"content":"                        + \"|\" + Parser.timeToString(((Event) task).getStartTime())","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"ChanWeiJie"},"content":"                        + \"|\" + Parser.timeToString(((Event) task).getEndTime());","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"ChanWeiJie"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"ChanWeiJie"},"content":"                output \u003d \"E|0|\" + task.getDescription() + \"|\" + Parser.dateToString(((Event) task).getDate())","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"ChanWeiJie"},"content":"                        + \"|\" + Parser.timeToString(((Event) task).getStartTime())","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"ChanWeiJie"},"content":"                        + \"|\" + Parser.timeToString(((Event) task).getEndTime());","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":143,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":144,"author":{"gitId":"ChanWeiJie"},"content":"        return output;","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a TaskList object after loading all tasks from the specified path.","lastModifiedDate":"2022-01-30"},{"lineNumber":149,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a TaskList object representing the saved taskList.","lastModifiedDate":"2022-01-30"},{"lineNumber":150,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws IOException if the file or directory is missing.","lastModifiedDate":"2022-01-30"},{"lineNumber":151,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"ChanWeiJie"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":153,"author":{"gitId":"ChanWeiJie"},"content":"        File directory \u003d new File(pwd + \"/data\");","lastModifiedDate":"2022-01-22"},{"lineNumber":154,"author":{"gitId":"ChanWeiJie"},"content":"        File inputFile \u003d new File(pwd + path);","lastModifiedDate":"2022-01-22"},{"lineNumber":155,"author":{"gitId":"ChanWeiJie"},"content":"        if (directory.mkdir() \u0026\u0026 inputFile.createNewFile()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":156,"author":{"gitId":"ChanWeiJie"},"content":"            throw new IOException(\"Do not worry! I will create the directory \u0026 file for you\");","lastModifiedDate":"2022-01-30"},{"lineNumber":157,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":158,"author":{"gitId":"ChanWeiJie"},"content":"        } else if (inputFile.createNewFile()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"ChanWeiJie"},"content":"            throw new IOException(\"Do not worry! I will create the file for you\");","lastModifiedDate":"2022-01-30"},{"lineNumber":160,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":161,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":162,"author":{"gitId":"ChanWeiJie"},"content":"        return readFileDataAndStoreInList(inputFile);","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":164,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":164}},{"path":"src/main/java/duke/functionality/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the Tasks of the Duke project. A \u003ccode\u003e TaskList \u003c/code\u003e object corresponds","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":" * to the actions available on a Task object.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * Default constructor of TaskList class.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    public TaskList() { }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the specified Task that is going to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"     * @param taskNum an indicator to the index of taskList.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the specified task to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        int actualTaskNum \u003d taskNum - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        Task deletedTask \u003d taskList.remove(actualTaskNum);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        return deletedTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the specified Task that is going to be marked as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * @param taskNum an indicator to the index of taskList.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the specified task to be marked.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    public Task markTask(int taskNum) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        int actualTaskNum \u003d taskNum - 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        Task markedTask \u003d taskList.get(actualTaskNum);","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        markedTask.setTaskDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"        return markedTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the specified Task that is going to be marked as not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     * @param taskNum an indicator to the index of taskList.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * @return the specified task to be unmarked.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    public Task unmarkTask(int taskNum) {","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"        int actualTaskNum \u003d taskNum - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        Task unMarkedtask \u003d taskList.get(actualTaskNum);","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"        unMarkedtask.setTaskNotDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"        return unMarkedtask;","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a string which is the collection of all the task in taskList.","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"     * @return accumulated tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    public String printList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c getListSize(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"            output +\u003d i + 1 + \".\" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"        return output;","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but adds the task specified into the taskList.","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"     * @param task the task created in Parser class.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a new TaskList which contains all the Task that matches the specified word.","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"     * @param word keyword input from user","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a new TaskList containing all Task that contains the specified word.","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"    public TaskList findWord(String word) {","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c getListSize(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"ChanWeiJie"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"ChanWeiJie"},"content":"            if (task.getDescription().contains(word)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"ChanWeiJie"},"content":"                newTaskList.addToList(task);","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"ChanWeiJie"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a new TaskList which contains all the Task that matches the specified date.","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date date input from user","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a new TaskList containing all Task that contains the specified date.","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"ChanWeiJie"},"content":"    public TaskList findSameSchedule(LocalDate date) {","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"ChanWeiJie"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"ChanWeiJie"},"content":"        for (int i \u003d 0; i \u003c getListSize(); i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"ChanWeiJie"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"ChanWeiJie"},"content":"            LocalDate taskDate \u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"ChanWeiJie"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"ChanWeiJie"},"content":"                taskDate \u003d ((Event) task).getDate();","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"ChanWeiJie"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"ChanWeiJie"},"content":"                taskDate \u003d ((Deadline) task).getDate();","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"ChanWeiJie"},"content":"            if (taskDate !\u003d null \u0026\u0026 taskDate.equals(date)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"ChanWeiJie"},"content":"                newTaskList.addToList(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"ChanWeiJie"},"content":"        return newTaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"ChanWeiJie"},"content":"    public int getListSize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"ChanWeiJie"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"ChanWeiJie"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"ChanWeiJie"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"ChanWeiJie":126}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor of DialogBox class.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     * @param text the text to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     * @param img the image to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"    private void flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a DialogBox object that corresponds to the user Dialogbox to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"     * @param text the text to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"     * @param img the image to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a DialogBox for the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a DialogBox object that corresponds to the Duke\u0027s Dialogbox to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"     * @param text the text to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"     * @param img the image to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a DialogBox for the Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"        db.flip();","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"        return db;","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"ChanWeiJie":85}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.main;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.Parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the starting point of the Duke project. A \u003ccode\u003e Duke \u003c/code\u003e object corresponds","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":" * to a TaskBot that helps keep tracks of all tasks inputted by a user.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    protected Storage storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * Default constructor for Duke class.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public Duke() {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        this.taskList \u003d new TaskList(); //default task list","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but is used to initialize Storage by reading in existing data from the","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"     * text file specified by filePath.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"     * @param pwd user\u0027s current working directory.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"     * @param filePath filePath path to \"/data/TaskData.txt\".","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"     * @throws IOException if the file is missing.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public void initializeStorage(String pwd, String filePath) throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        this.storage \u003d new Storage(pwd, filePath);","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        this.taskList \u003d storage.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        return this.isExit;","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns a message that corresponds to the action taken by the input of the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"     * @param input user\u0027s input.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"     * @return message that is crafted by executing the respective command.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        String output;","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"            output \u003d command.execute(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"            Storage.updateTextFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"                this.isExit \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"            return output;","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChanWeiJie":61,"-":2}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class Launcher {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * Main method to launch the application.","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     * @param args arguments used for the launch of application.","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"ChanWeiJie":17}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but used to start the GUI application.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @param stage a \"container\" to hold all the parts of the GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"            stage.setTitle(\"TaskJamie\");","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"            stage.show();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"ChanWeiJie":37}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaJamie.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but used for initializing the startUp process of GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"        String greeting \u003d \"Hello! I\u0027m TaskJamie\\nWhat can i do for you?\";","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns nothing, but used for assigning duke object \u0026 its respective storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"     * @param duke duke object created from the Main class.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"ChanWeiJie"},"content":"            duke.initializeStorage(home, \"/data/TaskData.txt\");","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"ChanWeiJie"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(e.getMessage(), dukeImage));","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"ChanWeiJie"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"ChanWeiJie"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"ChanWeiJie"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"ChanWeiJie"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"ChanWeiJie"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"ChanWeiJie"},"content":"        if (!duke.getExitStatus()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"ChanWeiJie"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"ChanWeiJie"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"ChanWeiJie"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"ChanWeiJie"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"ChanWeiJie"},"content":"            );","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"ChanWeiJie"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"ChanWeiJie"},"content":"        if (duke.getExitStatus()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"ChanWeiJie"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"ChanWeiJie"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"ChanWeiJie"},"content":"            delay.play();","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"ChanWeiJie":83}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the deadline a user would create. A \u003ccode\u003eDeadline\u003c/code\u003e object is a subclass of the Task class","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":" * and corresponds to a deadline input by a user.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"     * @param description information about the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date date details about the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @param time time details about the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        return this.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"        return this.date;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the string representation of a deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a string representation of the deadline, consisting of its description","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"     * and formatted date and time.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"                + \" \" + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the event a user would create. A \u003ccode\u003eEvent\u003c/code\u003e object is a subclass of the Task class","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":" * and corresponds to an event inputted by a user.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * @param description information about the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @param date date details about the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     * @param startTime starting time of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"     * @param endTime ending time of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"        return this.date;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        return this.startTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        return this.endTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the string representation of an event.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a string representation of the event, consisting of its description, formatted date,","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"     * starting time and ending time.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"                + \" \" + startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \" to\"","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"                + \" \" + endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the Tasks a user could create. A \u003ccode\u003e Task \u003c/code\u003e object would correspond to a task","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * inputted by a user either a Todo, Deadline or Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"    protected String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for Task class.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"     * @param description information about the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"            return \"X\";","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"            return \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTaskDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"    public void setTaskNotDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        return this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a string representation of the task, consisting of its description and whether its done or not.","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":48}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":" * Represents the todo task a user would create. A \u003ccode\u003eTodo\u003c/code\u003e object is a subclass of the Task class","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":" * and corresponds to a todo inputted by a user.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"     * @param description information about the todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"     * Returns the string representation of a todo.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"     * @return a string representation of the todo, consisting of its description.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"ChanWeiJie":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"ChanWeiJie":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"ChanWeiJie":19}},{"path":"src/test/java/duke/functionality/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    public void testInvalidCommandException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"            assertEquals(0, Parser.parse(\"blah\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"    public void testIncompleteCommandException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"            assertEquals(0, Parser.parse(\"todo\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"ChanWeiJie"},"content":"    public void dateToString_validDate_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"ChanWeiJie"},"content":"        LocalDate test1 \u003d LocalDate.parse(\"2020-06-06\", dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"2020-06-06\", Parser.dateToString(test1));","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"ChanWeiJie"},"content":"        LocalDate test2 \u003d LocalDate.parse(\"2020-07-31\", dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"2020-07-31\", Parser.dateToString(test2));","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"ChanWeiJie"},"content":"    public void timeToString_validTime_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"ChanWeiJie"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"ChanWeiJie"},"content":"        LocalTime test1 \u003d LocalTime.parse(\"1800\", dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"1800\", Parser.timeToString(test1));","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"ChanWeiJie"},"content":"        LocalTime test2 \u003d LocalTime.parse(\"2400\", dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"0000\", Parser.timeToString(test2));","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"ChanWeiJie":52}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChanWeiJie"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"ChanWeiJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"ChanWeiJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"ChanWeiJie"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"ChanWeiJie"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"[ ] read book\", new Task(\"read book\").toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"ChanWeiJie"},"content":"    public void testGetters() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"ChanWeiJie"},"content":"        Task temp \u003d new Task(\"read book\");","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"read book\", temp.getDescription());","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\" \", temp.getStatusIcon());","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"ChanWeiJie"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"ChanWeiJie"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"ChanWeiJie"},"content":"    public void testSetters() {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"ChanWeiJie"},"content":"        Task temp \u003d new Task(\"run\");","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"ChanWeiJie"},"content":"        temp.setTaskDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\"X\", temp.getStatusIcon());","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"ChanWeiJie"},"content":"        temp.setTaskNotDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"ChanWeiJie"},"content":"        assertEquals(\" \", temp.getStatusIcon());","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"ChanWeiJie"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"ChanWeiJie"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"ChanWeiJie":30}}]
