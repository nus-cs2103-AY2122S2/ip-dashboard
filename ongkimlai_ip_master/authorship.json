[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"# Bobby project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"3. After that, locate the `src/main/java/Bobby.java` file, right-click it, and choose `Run Bobby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"   ─██████████████───██████████████─██████████████───██████████████───████████──████████─","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"   ─██░░░░░░░░░░██───██░░░░░░░░░░██─██░░░░░░░░░░██───██░░░░░░░░░░██───██░░░░██──██░░░░██─","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"   ─██░░██████░░██───██░░██████░░██─██░░██████░░██───██░░██████░░██───████░░██──██░░████─","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"   ─██░░██──██░░██───██░░██──██░░██─██░░██──██░░██───██░░██──██░░██─────██░░░░██░░░░██───","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"   ─██░░██████░░████─██░░██──██░░██─██░░██████░░████─██░░██████░░████───████░░░░░░████───","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"   ─██░░░░░░░░░░░░██─██░░██──██░░██─██░░░░░░░░░░░░██─██░░░░░░░░░░░░██─────████░░████─────","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"   ─██░░████████░░██─██░░██──██░░██─██░░████████░░██─██░░████████░░██───────██░░██───────","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"   ─██░░██────██░░██─██░░██──██░░██─██░░██────██░░██─██░░██────██░░██───────██░░██───────","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"   ─██░░████████░░██─██░░██████░░██─██░░████████░░██─██░░████████░░██───────██░░██───────","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"   ─██░░░░░░░░░░░░██─██░░░░░░░░░░██─██░░░░░░░░░░░░██─██░░░░░░░░░░░░██───────██░░██───────","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"   ─████████████████─██████████████─████████████████─████████████████───────██████───────","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongkimlai":13,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    mainClassName \u003d \"bobby.Launcher\"","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    archiveBaseName \u003d \"Bobby\"","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"ongkimlai":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"# User Guide for Bobby","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"## Bobby is a simple task tracker that helps remind you about your upcoming tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"### Tasks that Bobby can track for you","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"- To-Do","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"- Deadlines","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"- Events","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"### Features","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"- `List`","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"- `Find`","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"- `Mark` ","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"- `Unmark`","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"- `Delete`","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"- `Automatically sorts deadlines and events`","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"# Usage","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"## Adding tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"Adds a ToDo, Event or Deadline task into the Bobby\u0027s list. ","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"The format for the date must be: dd-mm-yyyy","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"### Example of usage ","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"`todo buy groceries`","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"`event Dr Strange Multiverse of Madness / 06-05-2022`","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"`deadline Renew passport!! / 31-03-2022`","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"### Outcome","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"Bobby replies with a confirmation message that he added your task into the list","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"and tells you how many tasks are currently in your list. ","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"### `todo`: ","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"![todo_example.png](todo.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"### `event`:","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"![event_example.png](event.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"### `deadline`:","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"![deadline_example.png](deadline.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"## List","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"Bobby will list out your current tasks. ","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"Events and Deadlines displayed first before To-Do\u0027s. ","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"Events and Deadlines sorted by default with the earliest date first.","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"### Example of usage","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"`list`","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"### Outcome","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"Bobby shows your current tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"![list_example .png](list.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"## Find","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"Find tasks that contains the provided keyword.","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"### Example of usage","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"`find passport`","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"`find buy`","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"`find n`","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"### Outcome","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"Bobby will search through all your tasks for the keyword and displays them to you.","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"The output list will be sorted by default as well.","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"![find_example.png](find.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"## Mark","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"Bobby helps you to mark the task with the given index as done.","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"### Example of usage","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"`mark 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"### Outcome","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"Bobby marks the task as done by putting an `X` beside the task ","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"![mark_example.png](mark.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"## Unmark","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"Bobby helps you to unmark the task with the given index as not done.","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"### Example of usage","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"`unmark 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"### Outcome","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"Bobby unmarks the task as not done by removing the `X` beside the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"![unmark_example.png](unmark.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"## Delete","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"Bobby removes the task from your list.","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"### Example of usage","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"`delete 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"`delete all`","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"### Outcome","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"Bobby removes the task with the given index from your list.","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"If `delete all`, bobby removes the whole list!","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"![delete_example.png](delete.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"![delete_all_example.png](delete_all.png)","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"## Note","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"All commands are case-insensitive.","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"### For example:","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"`delete all` is the same as `DELete aLL`.","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"ongkimlai":119,"-":13}},{"path":"src/main/java/bobby/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.io.File;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.ByeCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"public class Bobby {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    private static final String FILE_LOCATION \u003d \"./Bobby.txt\";","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    private static Ui ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    private static Storage storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for Bobby","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    public Bobby() {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        ui \u003d new Ui(new Scanner(System.in));","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"            storage \u003d new Storage(new File(FILE_LOCATION));","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        } catch (BobbyException | FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * Driver method for Bobby","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    public void run() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        while (true) {","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"                if (c instanceof ByeCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            } catch (BobbyException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"            } finally {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"                ui.printLongLine(1);","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     * Main method of Bobby","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"     * @param args User inputs","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"        new Bobby().run();","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"     * Retrieves the appropriate reply from Bobby","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"     * @param input The string command","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"     * @return The reply message from Bobby","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    public static String getResponse(String input) throws BobbyException {","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"        String replyMessage;","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"        Command c \u003d Parser.parse(input.trim());","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"        replyMessage \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        return replyMessage;","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"ongkimlai":73}},{"path":"src/main/java/bobby/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.gui.Main;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"public class Launcher {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"ongkimlai":13}},{"path":"src/main/java/bobby/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.ByeCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.DeadlineCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.DeleteCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.EventCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.FindCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.InvalidCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.ListCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.MarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.ToDoCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.UnmarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.DeadlineException;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.DeleteException;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.EventException;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.FindException;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.MarkException;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.ToDoException;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    /** Specific date format that Bobby accepts as input */","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    private static final SimpleDateFormat SIMPLE_DATE_FORMAT \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     * Checks whether the command includes a valid date.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @param input The date to be inspected.","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @return True if the date is in the correct format.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        if (input.contains(\"[a-zA-Z]+\") || input.length() !\u003d 10) {","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"            SIMPLE_DATE_FORMAT.setLenient(false);","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"            SIMPLE_DATE_FORMAT.parse(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"            return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * Parses the command to allow Bobby to understand input.","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     * @param fullCommand The command the user inputs.","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     * @return The right Command object for execution.","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        String[] fullCommandArr \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        Command command;","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        switch(fullCommandArr[0].toLowerCase()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        case \"bye\": command \u003d new ByeCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        case \"list\": command \u003d new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"        case \"mark\": command \u003d parseMark(fullCommand, fullCommandArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        case \"unmark\": command \u003d parseUnmark(fullCommand, fullCommandArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        case \"todo\": command \u003d parseToDo(fullCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        case \"deadline\": command \u003d parseDeadline(fullCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"        case \"event\": command \u003d parseEvent(fullCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        case \"delete\": command \u003d parseDelete(fullCommand, fullCommandArr);","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        case \"find\": command \u003d parseFind(fullCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"        default: command \u003d new InvalidCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"        return command;","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"    private static DeadlineCommand parseDeadline(String fullCommand) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(8).isBlank()) { // nothing after command","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"blank\");","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"        } else if (!fullCommand.contains(\"/\")) { // no \"/\"","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"no_slash\");","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"        } else if (fullCommand.substring(fullCommand.indexOf(\"/\") + 1).isBlank()) { // nothing after time","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"no_date\");","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"        } else if (!isValidDate(fullCommand.substring(fullCommand.length() - 10))) { // invalid date","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"invalid_date\");","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"        return new DeadlineCommand(fullCommand.substring(fullCommand.indexOf(\" \") + 1, fullCommand.indexOf(\"/\") - 1),","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"                fullCommand.substring(fullCommand.length() - 10));","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"    private static DeleteCommand parseDelete(String fullCommand, String[] fullCommandArr) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(6).isBlank()) { // no argument","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"            throw new DeleteException(\"empty\");","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"        return new DeleteCommand(fullCommandArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"    private static EventCommand parseEvent(String fullCommand) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(5).isBlank()) { // nothing after command","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"blank\");","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"        } else if (!fullCommand.contains(\"/\")) { // no \"/\"","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"no_slash\");","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"        } else if (fullCommand.substring(fullCommand.indexOf(\"/\") + 1).isBlank()) { // nothing after time","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"no_date\");","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"        } else if (!isValidDate(fullCommand.substring(fullCommand.length() - 10))) { // invalid date","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"invalid_date\");","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"        return new EventCommand(fullCommand.substring(fullCommand.indexOf(\" \") + 1, fullCommand.indexOf(\"/\") - 1),","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"                fullCommand.substring(fullCommand.length() - 10));","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"    private static FindCommand parseFind(String fullCommand) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(4).isBlank()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"            throw new FindException(\"empty_command\");","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"        String keyword \u003d fullCommand.substring(4).trim().toLowerCase();","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"    private static MarkCommand parseMark(String fullCommand, String[] fullCommandArr) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(4).isBlank()) { // no argument","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"empty\");","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"        return new MarkCommand(fullCommandArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"    private static ToDoCommand parseToDo(String fullCommand) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(4).isBlank()) { // nothing after command","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"            throw new ToDoException(\"todo\");","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"        return new ToDoCommand(fullCommand.substring(5));","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"    private static UnmarkCommand parseUnmark(String fullCommand, String[] fullCommandArr) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"        if (fullCommand.substring(6).isBlank()) { // no argument","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"empty\");","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"        return new UnmarkCommand(fullCommandArr[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":143}},{"path":"src/main/java/bobby/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.StorageException;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    private File bobbyFile;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    public Storage(File dataFile) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        this.bobbyFile \u003d dataFile;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * Loads the saved tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"     * @return A list of tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"     * @throws StorageException If loading fails","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     * @throws FileNotFoundException If the file cannot be found at the specified location.","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws StorageException, FileNotFoundException {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(bobbyFile));","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            ois.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        } catch (ClassNotFoundException | FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            throw new StorageException(\"no_file\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"            throw new StorageException(\"empty_file\");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        return tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"     * Saves and stores the current list of tasks as a file.","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks The list of tasks to be stored.","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(bobbyFile));","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"            oos.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":58}},{"path":"src/main/java/bobby/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    private Scanner sc;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    private final String line1 \u003d \"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"    private final String line2 \u003d \"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    private final String greeting \u003d \"Howdy! I\u0027m Bobby\\t\\t(｡◕‿‿◕｡)\\nWhat can I do for you?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    private final String goodbye \u003d \"Bye! Hope to see you again soon!\\n(｡^‿‿^｡)\";","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public Ui(Scanner sc) {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * Wrapper method to print messages out.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param message The message to print.","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public void print(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"     * Prints a long line for CLI.","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     * @param type Specifies the type of long line. Long line ends with a new line.","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    public void printLongLine(int type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        if (type \u003d\u003d 1) {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            System.out.print(line1);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            System.out.print(line2);","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"     * Prints the greeting message for CLI.","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        printLongLine(1);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        printLongLine(2);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     * @return the goodbye message to be printed.","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"    public String goodbyeMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        return goodbye;","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"     * Reads in user input from the CLI.","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * @return user input as a string.","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after marking a task.","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"     * @param task The task that is marked.","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after marking.","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"    public String markMessage(Task task) {","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        return \"Finally... I\u0027ve marked this task as done: \" + task;","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after unmarking a task.","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"     * @param task The task that is unmarked.","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after unmarking.","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"    public String unmarkMessage(Task task) {","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"        return \"Could you be any more lazy? I\u0027ve marked this task as not done yet: \" + task;","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after adding a ToDo task.","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"     * @param todo The ToDo task that is added.","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after adding the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"    public String todoMessage(Task todo) {","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"        return \"OK you better do this today, or else...\\n(ㆆ _ ㆆ)\\nAdded task: \" + todo;","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after adding a Deadline task.","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"     * @param deadline The Deadline task that is added.","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after adding the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"    public String deadlineMessage(Task deadline) {","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        return \"Oh boy, another deadline?\\n(ㆆ _ ㆆ)\\nAdded task:\" + deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after adding an Event task","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"     * @param event The Event task that is added.","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after adding the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"    public String eventMessage(Task event) {","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"        return \"Let\u0027s see... A new event!\\nAdded task: \" + event;","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after deleting a task","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"     * @param deleteTask The task that is to be deleted.","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after deleting the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"    public String deleteMessage(Task deleteTask) {","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"        return \"Alright I\u0027m deleting this task:\\n\" + deleteTask;","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"     * Returns the message after deleting all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"     * @return The message after deleting all tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"    public String deleteAllMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"ongkimlai"},"content":"        return \"Alright I\u0027m deleting ALL tasks \\n(*・‿・)ノ⌒*:･ﾟ✧\";","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks The tasks list to be printed.","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"     * @return A string stating the number of tasks in the list.","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"    public String printNumTasks(TaskList tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"        return \"Now you have \" + tasks.getSize() + \" in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":146,"author":{"gitId":"ongkimlai"},"content":"     * Gets the tasks and returns messages with the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks The tasks list to be printed.","lastModifiedDate":"2022-02-15"},{"lineNumber":149,"author":{"gitId":"ongkimlai"},"content":"     * @return Messages with the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":151,"author":{"gitId":"ongkimlai"},"content":"    public String printTaskList(TaskList tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"ongkimlai"},"content":"        String replyMessage;","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"ongkimlai"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"ongkimlai"},"content":"            replyMessage \u003d \"Wow you are very free now! Enjoy~ \\n༼ つ ◕_◕ ༽つ\";","lastModifiedDate":"2022-02-02"},{"lineNumber":155,"author":{"gitId":"ongkimlai"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"ongkimlai"},"content":"            replyMessage \u003d \"I\u0027ve sorted and put the any deadlines/events to the top for you :)\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"ongkimlai"},"content":"            replyMessage +\u003d taskListToString(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":158,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"ongkimlai"},"content":"        return replyMessage;","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"ongkimlai"},"content":"     * Gets the tasks and returns messages with the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks The tasks list to be printed.","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"ongkimlai"},"content":"     * @return Messages with the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":167,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":168,"author":{"gitId":"ongkimlai"},"content":"    public String printFindTaskList(TaskList tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"ongkimlai"},"content":"        String replyMessage;","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"ongkimlai"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"ongkimlai"},"content":"            replyMessage \u003d \"No matching tasks in your list (≧︿≦)\";","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"ongkimlai"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"ongkimlai"},"content":"            replyMessage \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"ongkimlai"},"content":"            replyMessage +\u003d taskListToString(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"ongkimlai"},"content":"        return replyMessage;","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":179,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":180,"author":{"gitId":"ongkimlai"},"content":"     * Gets the tasks and return a properly formatted list.","lastModifiedDate":"2022-02-15"},{"lineNumber":181,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":182,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks The tasks list to be printed.","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"ongkimlai"},"content":"     * @return A properly formatted string of the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":185,"author":{"gitId":"ongkimlai"},"content":"    private String taskListToString(TaskList tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"        Task currTask;","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"ongkimlai"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"ongkimlai"},"content":"            currTask \u003d tasks.getIndex(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"ongkimlai"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"ongkimlai"},"content":"            taskListString +\u003d index + \".\" + currTask + \"\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"ongkimlai"},"content":"        return taskListString;","lastModifiedDate":"2022-02-09"},{"lineNumber":194,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":195}},{"path":"src/main/java/bobby/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027bye\u0027 command.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * Creates a ByeCommand Object","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public ByeCommand(){","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks   TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param ui      Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        Platform.exit();","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        return ui.goodbyeMessage();","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are ByeCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof ByeCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":46}},{"path":"src/main/java/bobby/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":" * Represents the parent class of each command that Bobby can interpret.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     * Creates a Command object.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    public Command() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * Carries out the respective command\u0027s actions.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks   TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * @param ui      Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are of the same Command type. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    public abstract boolean equals(Object obj);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":38}},{"path":"src/main/java/bobby/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Deadline;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027deadline\u0027 command","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    /** The name of the Deadline task */","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    private String taskName;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    /** The date to tied to this task */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    private String byDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * Creates a DeadLineCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * @param taskName Name of the Deadline task.","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param byDate Date of the Deadline task.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public DeadlineCommand(String taskName, String byDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        Deadline newDeadline \u003d new Deadline(taskName, byDate);","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        return ui.deadlineMessage(newDeadline) + \"\\n\" + ui.printNumTasks(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are DeadlineCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof DeadlineCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":59}},{"path":"src/main/java/bobby/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.DeleteException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.InvalidNumberException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027delete\u0027 command.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    /** The task index to be deleted */","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    private String toDelete;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param toDelete The task index to be deleted, or \u0027all\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public DeleteCommand(String toDelete) {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        this.toDelete \u003d toDelete;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        String replyMessage;","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        int indexDelete;","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        if (toDelete.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"                throw new DeleteException(\"list_empty\");","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"            tasks.removeAll();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"            replyMessage \u003d ui.deleteAllMessage();","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"                indexDelete \u003d Integer.parseInt(toDelete) - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"                throw new InvalidNumberException(\"letter\");","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"            Task task \u003d tasks.getIndex(indexDelete);","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"            replyMessage \u003d ui.deleteMessage(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"            tasks.removeTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"        return replyMessage + \"\\n\" + ui.printNumTasks(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are DeleteCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof DeleteCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":75}},{"path":"src/main/java/bobby/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Event;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":" * Represents an \u0027event\u0027 command","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    /** The name of the Deadline task */","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    private String eventName;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    /** The date to tied to this task */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    private String atDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * Creates an EventCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * @param eventName Name of the Event task.","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param atDate Date of the Event task.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public EventCommand(String eventName, String atDate) {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     * @return","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        Event newEvent \u003d new Event(eventName, atDate);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        return ui.eventMessage(newEvent) + \"\\n\" + ui.printNumTasks(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are EventCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof EventCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":60}},{"path":"src/main/java/bobby/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.FindException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    private String keyword;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks   TaskList object containing a list of Tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     * @param ui      Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            throw new FindException(\"empty_tasks\");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        TaskList tempTaskList \u003d extractTasksWithKeyword(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        return ui.printFindTaskList(tempTaskList);","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"     * Extracts the tasks containing the keyword and put into a new TaskList.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"     * @returns TaskList containing only tasks containing the keyword.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    private TaskList extractTasksWithKeyword(TaskList tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"        ArrayList\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"        for (Task t : tasks.getTaskList()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"            if ((t.getTaskName().toLowerCase()).contains(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"                tempTasks.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        return new TaskList(tempTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both objects are FindCommand objects. False otherwise.","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof FindCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":67}},{"path":"src/main/java/bobby/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.InvalidCommandException;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":" * Represents a command that Bobby cannot understand","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * Creates an InvalidCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public InvalidCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     * @return Nothing, throws an exception for parent class to handle.","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        throw new InvalidCommandException(\"invalid\");","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are InvalidCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof InvalidCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":41}},{"path":"src/main/java/bobby/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027list\u0027 command","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        tasks.sortTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        return ui.printTaskList(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are InvalidCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":45}},{"path":"src/main/java/bobby/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.InvalidNumberException;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.MarkException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027mark\u0027 command","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    /** The task index to be marked */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    private String toMark;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     * Creates a MarkCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * @param toMark The task index to be marked.","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    public MarkCommand(String toMark) {","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        int indexMark;","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"            indexMark \u003d Integer.parseInt(toMark) - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"            throw new InvalidNumberException(\"letter\");","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        Task task \u003d tasks.getIndex(indexMark);","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"        if (task.isDone()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"alr_marked\");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        task.markDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        return ui.markMessage(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are MarkCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof MarkCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":66}},{"path":"src/main/java/bobby/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.ToDo;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027todo\u0027 command","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    /** The name of the ToDo task */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    private String taskName;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"     * Creates a ToDoCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * @param taskName Name of the ToDo task","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    public ToDoCommand(String taskName) {","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        ToDo newToDo \u003d new ToDo(taskName);","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        tasks.addTask(newToDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        return ui.todoMessage(newToDo) + \"\\n\" + ui.printNumTasks(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are ToDoCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof ToDoCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":56}},{"path":"src/main/java/bobby/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.InvalidNumberException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.MarkException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":" * Represents an \u0027unmark\u0027 command.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    /** The task index to be marked */","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    private String toUnmark;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * Creates an UnmarkCommand object.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param toUnmark The task index to be unmarked.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public UnmarkCommand(String toUnmark) {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        this.toUnmark \u003d toUnmark;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"     * @param tasks TaskList object containing a list of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"     * @param ui Ui object to allow for Bobby to print messages.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * @param storage Storage object that handles the reading/writing of TaskList into a specified file.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     * @return Bobby\u0027s reply to the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * @throws BobbyException if an invalid command is given by the user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        int indexUnmark;","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            indexUnmark \u003d Integer.parseInt(toUnmark) - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"            throw new InvalidNumberException(\"letter\");","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"        Task task \u003d tasks.getIndex(indexUnmark);","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"alr_unmarked\");","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        task.unmarkDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        return ui.unmarkMessage(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"     * Overrides the default equals() method. Compares if 2 objects are of the same Command type.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * @param obj The other Command object to compare with.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     * @return True if both are UnmarkCommand objects. False otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        return obj instanceof UnmarkCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":67}},{"path":"src/main/java/bobby/exception/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Abstract class for this project.","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" * All Exceptions should extend from this class.","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"public abstract class BobbyException extends IllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for BobbyException","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * @param message Indicates the error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    public BobbyException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"     * Uses the error type to choose which message to return.","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * @return Appropriate message according to the error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    public abstract String toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":24}},{"path":"src/main/java/bobby/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027deadline\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class DeadlineException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errorType;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DeadlineException.","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public DeadlineException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        errorType \u003d message;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch (errorType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"blank\":","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"There is no description after the \\\"deadline\\\" command :(\";","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        case \"no_slash\":","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot tell the due date and time, put it after a \\\"/\\\"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        case \"no_date\":","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"There is nothing after the \\\"/\\\"! When is this due?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        case \"invalid_date\":","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Wrong date format! I only accept dd-mm-yyyy!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot understand this..\";","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        return errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":44}},{"path":"src/main/java/bobby/exception/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027delete\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class DeleteException extends BobbyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errorType;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DeleteException","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public DeleteException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        errorType \u003d message;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch (errorType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"empty\":","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Delete which task?\\nTell me by inputting delete {number}\";","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        case \"list_empty\":","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"List is already empty, nothing to delete\";","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot understand this..\";","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        return errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":38}},{"path":"src/main/java/bobby/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents an \u0027event\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class EventException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errType;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for EventException","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public EventException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        this.errType \u003d message;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch (errType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"blank\":","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"There is no description after the event command :(\";","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        case \"no_slash\":","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot tell the time of the event, put the time after a \\\"/\\\"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        case \"no_date\":","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"There is nothing after the \\\"/\\\"! When is this event happening?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        case \"invalid_date\":","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Wrong date format! I only accept dd-mm-yyyy!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot understand this..\";","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        return errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":44}},{"path":"src/main/java/bobby/exception/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027delete\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class FindException extends BobbyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errType;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for FindException","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public FindException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        errType \u003d message;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorString;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch(errType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"empty_command\": errorString \u003d \"What is the keyword?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"        case \"empty_tasks\": errorString \u003d \"You have completely no tasks!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        default: errorString \u003d \"Cannot find any task matching the keyword.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        return errorString;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":35}},{"path":"src/main/java/bobby/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents an \u0027invalid command\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class InvalidCommandException extends BobbyException {","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for InvalidCommandException","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        return \"Invalid command!\\n(╯°□°)╯︵ ┻━┻ ︵ ╯(°□° ╯)\";","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"ongkimlai":24}},{"path":"src/main/java/bobby/exception/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027invalid number\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class InvalidNumberException extends BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errorType;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for InvalidNumberException","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public InvalidNumberException(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        errorType \u003d message;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorMsg;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch (errorType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"OOB\":","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Number too big, count properly!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        case \"negative\":","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Invalid number man, cannot be 0 or negative\";","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        case \"letter\":","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Invalid index\";","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot understand this..\";","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        return errorMsg;","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"ongkimlai":41}},{"path":"src/main/java/bobby/exception/MarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027mark\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class MarkException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errType;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for MarkException","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public MarkException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        errType \u003d message;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch (errType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"empty\":","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"Which task?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        case \"alr_marked\":","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"This task is already marked as done\";","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        case \"alr_unmarked\":","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"This task is already marked as undone\";","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            errorMsg \u003d \"I cannot understand this..\";","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        return errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":41}},{"path":"src/main/java/bobby/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027storage\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class StorageException extends BobbyException {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    /* Flag to indicate the type of message to be sent */","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    private String errType;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for MarkException","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public StorageException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        errType \u003d message;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        String errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        switch(errType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        case \"no_file\": errorMsg \u003d \"File not found. Creating file now. (づ｡◕‿‿◕｡)づ\";","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"        case \"empty_file\": errorMsg \u003d \"Empty file found! Nothing to import\";","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        default: errorMsg \u003d \"Something went wrong. Couldn\u0027t save or load tasks\";","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        return errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":35}},{"path":"src/main/java/bobby/exception/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":" * Represents a \u0027todo\u0027 exception","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"public class ToDoException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for ToDoException","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"     * @param message short message to indicate error type.","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"    public ToDoException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        return \"There is no description after the todo command :(\";","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":22}},{"path":"src/main/java/bobby/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    private Text dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for DialogBox","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"     * @param text The text message to be displayed in the dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"     * @param isUser Determines if image is to be on the left or right.","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"     * @param isErrorBox Determines if the font is to be bold or not.","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    private DialogBox(String text, Image img, boolean isUser, boolean isErrorBox) {","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        dialog.setTextAlignment(isUser ? TextAlignment.RIGHT : TextAlignment.LEFT);","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        if (isErrorBox) {","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"            dialog.setFont(Font.font(\"Verdana\", FontWeight.BOLD, 13));","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"    private void flip() {","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"     * Creates a dialog box for the user.","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"     * @param text The text message to be displayed in the dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"     * @param img The user image.","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"     * @return The user dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"        var db \u003d new DialogBox(text, img, true, false);","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"        db.setStyle(db.getStyle() + \"-fx-background-color: #B0E0E6\");","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"     * Creates a dialog box for Bobby.","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"     * @param text The text message to be displayed in the dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"     * @param img The Bobby image.","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"     * @return The Bobby dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"    public static DialogBox getBobbyDialog(String text, Image img) {","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"        var db \u003d new DialogBox(text, img, false, false);","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"        db.setStyle(db.getStyle() + \"-fx-background-color: #66CDAA\");","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"        db.flip();","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"        return db;","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"     * Creates a dialog box for the Error.","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"     * @param text The text message to be displayed in the dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"     * @param img The Bobby image.","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"     * @return The Error dialog box.","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        var db \u003d new DialogBox(text, img, false, true);","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"        db.setStyle(db.getStyle() + \"-fx-background-color: #FF6347\");","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"        db.flip();","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"        return db;","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"ongkimlai":109}},{"path":"src/main/java/bobby/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.Bobby;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    private Bobby bobby \u003d new Bobby();","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"     * Sets the stage for JavaFX and starts the program.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"     * @param stage The stage to be set.","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            stage.setTitle(\"Bobby\");","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBobby(bobby);","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"            stage.show();","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"ongkimlai":40}},{"path":"src/main/java/bobby/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.Bobby;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    private Bobby bobby;","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bojji.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    private Stage stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"    public void setBobby(Bobby bobby) {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"        this.bobby \u003d bobby;","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"        String response;","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"            return;","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"            response \u003d Bobby.getResponse(input);","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"                    DialogBox.getBobbyDialog(response, dukeImage)","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"            );","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"                    DialogBox.getErrorDialog(e.toString(), dukeImage)","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"            );","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"     * Setter method for stage.","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"     * @param stage The stage to be set.","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"ongkimlai":76}},{"path":"src/main/java/bobby/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":" * Represents the Deadline object.","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for Deadline Task.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"     * @param byDate The date tied to the Deadline task.","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    public Deadline(String taskName, String byDate) {","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        super(taskName);","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        date \u003d LocalDate.parse(LocalDate.parse(byDate, formatter).format(formatter2));","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"        super.setDate(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"ongkimlai":33}},{"path":"src/main/java/bobby/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":" * Represents the Event object.","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"     * Constructor class for Event task.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"     * @param atDate The date tied to this Event task.","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    public Event(String taskName, String atDate) {","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        super(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"        date \u003d LocalDate.parse(LocalDate.parse(atDate, formatter).format(formatter2));","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        super.setDate(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":32}},{"path":"src/main/java/bobby/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":" * Represents the Task object.","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"public class Task implements Serializable, Comparable\u003cTask\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    private final String taskName;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"     * Constructor for Task","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"     * @param taskName The name of the Task.","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        date \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        return taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        return isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"     * Gets the status and appends it with the task name.","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"     * @return Task status with the task name.","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        return getStatus() + taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"     * Earlier dates will be sorted before the later dates.","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"     * @param t The task to be compared with.","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"     * @return -1 if current task is before t, 1 if after t and 0 otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"        if (this.date \u003d\u003d null \u0026\u0026 t.date \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"            return 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"        } else if (this.date \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"            return 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"        } else if (t.date \u003d\u003d null) {","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"            return -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        } else if (this.date.isBefore(t.date)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"            return -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"        } else if (this.date.isAfter((t.date))) {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"            return 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"        } else if (this.date.isEqual(t.date)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"            return 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"        return 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"ongkimlai":82}},{"path":"src/main/java/bobby/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.BobbyException;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.exception.InvalidNumberException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public void removeTask(Task t) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        tasks.remove(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"    public void removeAll() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"    public Task getIndex(int index) throws BobbyException {","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        Task resTask;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"            throw new InvalidNumberException(\"negative\");","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"            resTask \u003d tasks.get(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"            throw new InvalidNumberException(\"OOB\");","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        return resTask;","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"        return tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"     * Method to sort deadlines and events to the top, by chronological ordering","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"    public void sortTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ongkimlai":66}},{"path":"src/main/java/bobby/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":" * Represents the ToDo object.","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"     * Constructor class for ToDo task.","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"        super(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"180.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-insets: 0 0 5 0; -fx-background-radius: 20; -fx-background-insets: 0 0 5 0; -fx-padding: 0 0 5 0; -fx-background: transparent;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        \u003cText fx:id\u003d\"dialog\" fontSmoothingType\u003d\"LCD\" text\u003d\"Text\" wrappingWidth\u003d\"250.17236328125\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"            \u003cFont name\u003d\"Verdana\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"                \u003cInsets right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            \u003cInsets right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"      \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"ongkimlai":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bobby.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"323.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"550.0\" prefWidth\u003d\"380.0\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"               \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"ongkimlai":28}},{"path":"test/bobby/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.ByeCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.DeadlineCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.DeleteCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.EventCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"import bobby.command.ListCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    public void parse_byeCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new ByeCommand(), Parser.parse(\"bye\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new ByeCommand(), Parser.parse(\"BYE\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new ByeCommand(), Parser.parse(\"BYE\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        assertNotEquals(new ByeCommand(), Parser.parse(\"|3YE\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"    public void parse_listCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new ListCommand(), Parser.parse(\"list\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new ListCommand(), Parser.parse(\"lIsT\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new ListCommand(), Parser.parse(\"LIST\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        assertNotEquals(new ListCommand(), Parser.parse(\"L1ST\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"    public void parse_deadlineCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        String command1 \u003d \"deadline something / 01-02-2022\";","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        String command2 \u003d \"dEaDLiNe something / 01-02-2022\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new DeadlineCommand(command1), Parser.parse(command1));","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new DeadlineCommand(command1), Parser.parse(command2));","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new DeadlineCommand(command1), Parser.parse(\"DeAdLIne\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"        assertNotEquals(new DeadlineCommand(command1), Parser.parse(\"d34dLine\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    public void parse_deleteCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"        String command1 \u003d \"delete 1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"        String[] command1Arr \u003d command1.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new DeleteCommand(command1, command1Arr), Parser.parse(\"delete\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new DeleteCommand(command1, command1Arr), Parser.parse(\"DELETE\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        assertNotEquals(new DeleteCommand(command1, command1Arr), Parser.parse(\"dElEt3\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"    public void parse_eventCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"        String command1 \u003d \"event something / 01-02-2022\";","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        String command2 \u003d \"EVeNt something / 01-02-2022\";","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new EventCommand(command1), Parser.parse(command1));","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new EventCommand(command1), Parser.parse(command2));","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"        assertEquals(new EventCommand(command1), Parser.parse(\"evENt\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        assertNotEquals(new EventCommand(command1), Parser.parse(\"eV3nt\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":59}},{"path":"test/bobby/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"package bobby.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"class EventCommandTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"    void isValidDate() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        EventCommand eventCommand \u003d new EventCommand(\"event\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(eventCommand.isValidDate(\"12-01-1998\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"        assertTrue(eventCommand.isValidDate(\"01-12-1998\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(eventCommand.isValidDate(\"00-01-1998\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(eventCommand.isValidDate(\"01-01-19988\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(eventCommand.isValidDate(\"01-01-abc\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        assertFalse(eventCommand.isValidDate(\"01-32-1998\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ongkimlai":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"event pokemon release","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"event pokemon release /","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"event pokemon release /at 28-01-2022","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"read book","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"deadline return book","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"deadline return book /","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"deadline return book /by 25-01-2022","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"mark 6","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"unmark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"unmark 6","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"delete -1","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"delete 10","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"java -classpath ..\\bin bobby.Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ongkimlai":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bobby/*.java","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"java -classpath ../bin bobby.Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ongkimlai":2}},{"path":"Bobby.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"ongkimlai":0}}]
