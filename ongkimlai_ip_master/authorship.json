[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"# Bobby project template","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"3. After that, locate the `src/main/java/Bobby.java` file, right-click it, and choose `Run Bobby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongkimlai":2,"-":22}},{"path":"src/main/java/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"public class Bobby {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    enum Commands {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"        todo, bye, list, mark, unmark, deadline, event, delete, illegal","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"    public static void AddTask(Task t) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"    public static void DeleteTask(String input, String[] inputs) throws DeleteException {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        if (input.substring(6).isBlank()) {                             // no argument","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"            throw new DeleteException(\"empty\");","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        } else if (Character.isLetter(input.charAt(7))) {               // contains letter instead of number","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"            throw new DeleteException(\"letter\");","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"        } else if (Integer.parseInt(inputs[1]) \u003e tasks.size()) {        // out of bounds","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            throw new DeleteException(\"OOB\");","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        } else if (Integer.parseInt(inputs[1]) \u003c 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"            throw new DeleteException(\"negative\");","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        Task t \u003d Bobby.tasks.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    Alright I\u0027m deleting this task:\\n    \" + t);","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        tasks.remove(t);","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + DisplayNumTasks());","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"    public static String DisplayNumTasks() {","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"        return \"Now you have \" + tasks.size() + \" in the list.\";","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    public static void ListTask() {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"        Task currTask;","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"ongkimlai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"ongkimlai"},"content":"            currTask \u003d Bobby.tasks.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"ongkimlai"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"ongkimlai"},"content":"            System.out.println(\"    \" + index + \".\" + currTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"ongkimlai"},"content":"    public static void markAsDone(String input, String[] inputs) throws MarkException {","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"ongkimlai"},"content":"        if (input.substring(4).isBlank()) {                             // no argument","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"empty\");","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"ongkimlai"},"content":"        } else if (Character.isLetter(input.charAt(5))) {               // contains letter instead of number","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"letter\");","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"ongkimlai"},"content":"        } else if (Integer.parseInt(inputs[1]) \u003e tasks.size()) {        // out of bounds","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"OOB\");","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"ongkimlai"},"content":"        } else if (Integer.parseInt(inputs[1]) \u003c 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"negative\");","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"ongkimlai"},"content":"        Task t \u003d Bobby.tasks.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"ongkimlai"},"content":"        if (t.done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"alr_marked\");","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"ongkimlai"},"content":"        t.markDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    Finally... I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"      \" + t);","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"ongkimlai"},"content":"    public static void markAsNotDone(String input, String[] inputs) throws MarkException {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"ongkimlai"},"content":"        if (input.substring(4).isBlank()) {                             // no argument","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"empty\");","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"ongkimlai"},"content":"        } else if (Character.isLetter(input.charAt(7))) {               // contains letter instead of number","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"letter\");","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"ongkimlai"},"content":"        } else if (Integer.parseInt(inputs[1]) \u003e tasks.size()) {        // out of bounds","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"OOB\");","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"ongkimlai"},"content":"        } else if (Integer.parseInt(inputs[1]) \u003c 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"negative\");","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"ongkimlai"},"content":"        Task t \u003d Bobby.tasks.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"ongkimlai"},"content":"        if (!t.done) {","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"ongkimlai"},"content":"            throw new MarkException(\"alr_unmarked\");","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"ongkimlai"},"content":"        t.unmarkDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + \"Could you be any more lazy? I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"      \" + t);","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"ongkimlai"},"content":"    public static void AddDeadline(String s) throws DeadlineException {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"ongkimlai"},"content":"        if (s.substring(8).isBlank()) {                             // nothing after command","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"deadline1\");","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"ongkimlai"},"content":"        } else if (!s.contains(\"/\")) {                               // no \"/\"","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"deadline2\");","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"ongkimlai"},"content":"        } else if (s.substring(s.indexOf(\"/\") + 1).isBlank()) {       // nothing after time","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"ongkimlai"},"content":"            throw new DeadlineException(\"deadline3\");","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"ongkimlai"},"content":"        Deadline newDeadline \u003d new Deadline(s.substring(s.indexOf(\" \") + 1, s.indexOf(\"/\") - 1),","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"ongkimlai"},"content":"                s.substring(s.indexOf(\"/\")));","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    Oh boy, another deadline? Added task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + newDeadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"ongkimlai"},"content":"        AddTask(newDeadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + DisplayNumTasks());","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"ongkimlai"},"content":"    public static void AddToDo(String s) throws ToDoException {","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"ongkimlai"},"content":"        if (s.substring(4).isBlank()) {                             // nothing after command","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"ongkimlai"},"content":"            throw new ToDoException(\"todo\");","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"ongkimlai"},"content":"        ToDo newToDo \u003d new ToDo(s.substring(4));","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    OK you better do this today, or else! Added task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + newToDo);","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"ongkimlai"},"content":"        AddTask(newToDo);","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + DisplayNumTasks());","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"ongkimlai"},"content":"    public static void AddEvent(String s) throws EventException {","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"ongkimlai"},"content":"        if (s.substring(5).isBlank()) {                             // nothing after command","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"event1\");","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"ongkimlai"},"content":"        } else if (!s.contains(\"/\")) {                               // no \"/\"","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"event2\");","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"ongkimlai"},"content":"        } else if (s.substring(s.indexOf(\"/\") + 1).isBlank()) {       // nothing after time","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"ongkimlai"},"content":"            throw new EventException(\"event3\");","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"ongkimlai"},"content":"        Event newEvent \u003d new Event(s.substring(s.indexOf(\" \") + 1, s.indexOf(\"/\") - 1), s.substring(s.indexOf(\"/\")));","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    Let\u0027s see... A new event! Added task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + newEvent);","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"ongkimlai"},"content":"        AddTask(newEvent);","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(\"    \" + DisplayNumTasks());","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"ongkimlai"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-16"},{"lineNumber":127,"author":{"gitId":"ongkimlai"},"content":"        String logo \u003d \" ____  _____ ____  ____ __  __\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":128,"author":{"gitId":"ongkimlai"},"content":"                + \"|  _ \\\\|  _  |  _ \\\\|  _ \\\\\\\\ \\\\/ /\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":129,"author":{"gitId":"ongkimlai"},"content":"                + \"| |_| | | | | |_| | |_| |\\\\  /\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":130,"author":{"gitId":"ongkimlai"},"content":"                + \"| |_| | |_| | |_| | |_| ||  |\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":131,"author":{"gitId":"ongkimlai"},"content":"                + \"|____/|_____|____/|____/ |__|\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"ongkimlai"},"content":"        String dash \u003d \"    ____________________________________\\n\";","lastModifiedDate":"2022-01-16"},{"lineNumber":134,"author":{"gitId":"ongkimlai"},"content":"        String dash2 \u003d \"    ____________________________________\";","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"ongkimlai"},"content":"        System.out.println(dash + \"    Howdy! I\u0027m Bobby\\n    What can I do for you?\\n\" + dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":137,"author":{"gitId":"ongkimlai"},"content":"        while (true) {","lastModifiedDate":"2022-01-16"},{"lineNumber":138,"author":{"gitId":"ongkimlai"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-16"},{"lineNumber":139,"author":{"gitId":"ongkimlai"},"content":"            String inputs[] \u003d input.split(\" \");","lastModifiedDate":"2022-01-17"},{"lineNumber":140,"author":{"gitId":"ongkimlai"},"content":"            Commands cmd \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"ongkimlai"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"ongkimlai"},"content":"                cmd \u003d Commands.valueOf(inputs[0]);","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"ongkimlai"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"ongkimlai"},"content":"                cmd \u003d Commands.illegal;","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"ongkimlai"},"content":"            switch (cmd) {","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"ongkimlai"},"content":"            case bye:","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash + \"    Bye! Hope to see you again soon!\\n\" + dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"ongkimlai"},"content":"                return;","lastModifiedDate":"2022-01-17"},{"lineNumber":150,"author":{"gitId":"ongkimlai"},"content":"            case list:","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-17"},{"lineNumber":152,"author":{"gitId":"ongkimlai"},"content":"                ListTask();","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-16"},{"lineNumber":155,"author":{"gitId":"ongkimlai"},"content":"            case mark:","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-17"},{"lineNumber":157,"author":{"gitId":"ongkimlai"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":158,"author":{"gitId":"ongkimlai"},"content":"                    markAsDone(input, inputs);","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"ongkimlai"},"content":"                } catch (MarkException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":160,"author":{"gitId":"ongkimlai"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-17"},{"lineNumber":164,"author":{"gitId":"ongkimlai"},"content":"            case unmark:","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-17"},{"lineNumber":166,"author":{"gitId":"ongkimlai"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":167,"author":{"gitId":"ongkimlai"},"content":"                    markAsNotDone(input, inputs);","lastModifiedDate":"2022-01-18"},{"lineNumber":168,"author":{"gitId":"ongkimlai"},"content":"                } catch (MarkException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":169,"author":{"gitId":"ongkimlai"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":170,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":171,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":172,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-17"},{"lineNumber":173,"author":{"gitId":"ongkimlai"},"content":"            case todo:","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-18"},{"lineNumber":175,"author":{"gitId":"ongkimlai"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":176,"author":{"gitId":"ongkimlai"},"content":"                    AddToDo(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"ongkimlai"},"content":"                } catch (ToDoException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"ongkimlai"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"ongkimlai"},"content":"            case deadline:","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-18"},{"lineNumber":184,"author":{"gitId":"ongkimlai"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":185,"author":{"gitId":"ongkimlai"},"content":"                    AddDeadline(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":186,"author":{"gitId":"ongkimlai"},"content":"                } catch (DeadlineException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":187,"author":{"gitId":"ongkimlai"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":188,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":189,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":190,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":191,"author":{"gitId":"ongkimlai"},"content":"            case event:","lastModifiedDate":"2022-01-20"},{"lineNumber":192,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-18"},{"lineNumber":193,"author":{"gitId":"ongkimlai"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":194,"author":{"gitId":"ongkimlai"},"content":"                    AddEvent(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"ongkimlai"},"content":"                } catch (EventException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":196,"author":{"gitId":"ongkimlai"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":197,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":200,"author":{"gitId":"ongkimlai"},"content":"            case delete:","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash);","lastModifiedDate":"2022-01-18"},{"lineNumber":202,"author":{"gitId":"ongkimlai"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":203,"author":{"gitId":"ongkimlai"},"content":"                    DeleteTask(input, inputs);","lastModifiedDate":"2022-01-18"},{"lineNumber":204,"author":{"gitId":"ongkimlai"},"content":"                } catch (DeleteException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":205,"author":{"gitId":"ongkimlai"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":206,"author":{"gitId":"ongkimlai"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":207,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":208,"author":{"gitId":"ongkimlai"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":209,"author":{"gitId":"ongkimlai"},"content":"            case illegal:","lastModifiedDate":"2022-01-20"},{"lineNumber":210,"author":{"gitId":"ongkimlai"},"content":"                System.out.println(dash + \"    Invalid command\\n\" + dash2);","lastModifiedDate":"2022-01-18"},{"lineNumber":211,"author":{"gitId":"ongkimlai"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":212,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":213,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":214,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":215,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":216,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"ongkimlai":214,"-":2}},{"path":"src/main/java/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public abstract class BobbyException extends IllegalArgumentException{","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    String errorType;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"    public BobbyException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        errorType \u003d message;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    public abstract String toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    protected String by;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        super(taskName);","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        this.by \u003d by.substring(by.indexOf(\" \")+1);","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"ongkimlai":13}},{"path":"src/main/java/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class DeadlineException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    public String errtype;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"    public DeadlineException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        errtype \u003d message;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"        String error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        switch (errtype) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        case \"deadline1\":","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    There is no description after the \\\"deadline\\\" command :(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"        case \"deadline2\":","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    I cannot tell the due date and time, put it after a \\\"/\\\"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"        case \"deadline3\":","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    There is nothing after the \\\"/\\\"! When is this due?\";","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    I cannot understand this..\";","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"        return error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":26}},{"path":"src/main/java/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class DeleteException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    public String errtype;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"    public DeleteException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        errtype \u003d message;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        String error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        switch (errtype) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"        case \"empty\":","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    Delete which task?\";","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        case \"letter\":","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    C\u0027mon, a letter is not a number dude\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        case \"OOB\":","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    Number too big, count properly!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        case \"negative\":","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    Invalid number man, cannot be 0 or negative\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    I cannot understand this..\";","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        return error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":30}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    protected String at;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"    public Event(String taskName, String at) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        super(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        this.at \u003d at.substring(at.indexOf(\" \")+1);","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        return \"[T]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":13}},{"path":"src/main/java/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class EventException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    public String errtype;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"    public EventException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        this.errtype \u003d message;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        String error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        switch (errtype) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"        case \"event1\":","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    There is no description after the event command :(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        case \"event2\":","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    I cannot tell the time of the event, put the time after a \\\"/\\\"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        case \"event3\":","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    There is nothing after the \\\"/\\\"! When is this event happening?\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    I cannot understand this..\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        return error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":27}},{"path":"src/main/java/MarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class MarkException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    public String errtype;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"    public MarkException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        errtype \u003d message;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        String error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"        switch (errtype) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"        case \"empty\":","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"     Which task?\";","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"        case \"letter\":","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    C\u0027mon, a letter is not a number dude\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        case \"OOB\":","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    Number too big, count properly!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"        case \"negative\":","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    Invalid number man, cannot be 0 or negative\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"        case \"alr_marked\":","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    This task is already marked as done\";","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"ongkimlai"},"content":"        case \"alr_unmarked\":","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    This task is already marked as undone\";","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"ongkimlai"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"ongkimlai"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"ongkimlai"},"content":"            error_string \u003d \"    I cannot understand this..\";","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"ongkimlai"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"ongkimlai"},"content":"        return error_string;","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":36}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    public String taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"    public boolean done;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"        return done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"        return this.getStatus() + this.taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"ongkimlai":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"        super(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":12}},{"path":"src/main/java/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"public class ToDoException extends BobbyException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"    public String errtype;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"    public ToDoException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"        errtype \u003d message;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"        return \"    There is no description after the todo command :(\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongkimlai"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ongkimlai"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ongkimlai"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ongkimlai"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ongkimlai"},"content":"event pokemon release","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ongkimlai"},"content":"event pokemon release /","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ongkimlai"},"content":"event pokemon release /at 28th jan","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ongkimlai"},"content":"read book","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ongkimlai"},"content":"deadline return book","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ongkimlai"},"content":"deadline return book /","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ongkimlai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ongkimlai"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ongkimlai"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ongkimlai"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ongkimlai"},"content":"mark 6","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"unmark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ongkimlai"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ongkimlai"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"ongkimlai"},"content":"unmark 6","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ongkimlai"},"content":"delete -1","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ongkimlai"},"content":"delete 10","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ongkimlai"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ongkimlai"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ongkimlai":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ongkimlai"},"content":"java -classpath ..\\bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ongkimlai":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ongkimlai"},"content":"java -classpath ../bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"ongkimlai":1}}]
