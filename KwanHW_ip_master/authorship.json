[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"# duke.Duke project template","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KwanHW":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"/*","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":" * This is a general purpose Gradle build.","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":" * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"plugins {","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"repositories {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    mavenCentral()","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"dependencies {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"test {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"    testLogging {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"        showExceptions true","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"        showCauses true","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"        showStackTraces true","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"application {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"shadowJar {","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"checkstyle {","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"run {","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"KwanHW":67}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"@rem","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"@rem Find java.exe","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"echo.","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"echo.","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"goto fail","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"echo.","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"echo.","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"goto fail","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":":execute","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"@rem Setup the command line","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"KwanHW"},"content":":end","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"KwanHW"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"KwanHW"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"KwanHW"},"content":":fail","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"KwanHW"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"KwanHW"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"KwanHW"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"KwanHW"},"content":"exit /b 1","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"KwanHW"},"content":":mainEnd","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"KwanHW"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"KwanHW"},"content":":omega","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"KwanHW":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"/*","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":" * in the user manual at https://docs.gradle.org/7.3.3/userguide/multi_project_builds.html","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"rootProject.name \u003d \u0027[A\u0027","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"KwanHW":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import duke.io.Storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"import duke.parser.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskStore;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"    private TaskStore tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"     * Builds the Storage, Parser and TaskStore for Duke application","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    public Duke() {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"            this.tasks \u003d storage.importTasks();","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"            ui.printError(\"Unable to load file.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"            ui.printError(\"Sorry I don\u0027t understand that format. Make sure its in yyyy-mm-dd.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"            String checkFile \u003d \"\\nPlease check your import file if there are tasks that fall on the same day\";","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"            ui.printError(e.getMessage().concat(checkFile));","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"            // Builds the controllers necessary for MainWindow","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"            this.ui \u003d new Ui(fxmlLoader.\u003cMainWindow\u003egetController().getDialogContainer());","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setParser(this.parser);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStorage(this.storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setUi(this.ui);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTasks(this.tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"            // Builds the stage","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"            primaryStage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"            primaryStage.setMinHeight(600.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"            primaryStage.setMinWidth(400.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"            primaryStage.setResizable(false);","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"            // Inserts greet statement","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"            ui.greet();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"            // Displays the stage to the user","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"            primaryStage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"KwanHW":74}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"     * Launches the Duke application","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"     * @param args User inserted arguments to change the application behaviour","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"        new Duke();","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"KwanHW":14}},{"path":"src/main/java/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.io;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"import java.io.File;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import duke.parser.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskStore;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"import duke.task.Timeable;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":" * Represents an interface to perform file reading and writing the tasks to the drive.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    //    Support for OS independent paths","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    public static final String PATH \u003d String.join(File.separator, \"data\", \"duke.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    private final File file;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    public Storage() {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"        this.file \u003d new File(PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    public boolean directoryExists() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"        return this.file.getParentFile().exists();","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"     * Creates a directory if the directory in \u003ci\u003ePATH\u003c/i\u003e does not exist.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"    public void makeDirectory() {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"        if (!this.directoryExists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"            this.file.getParentFile().mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"     * Iterates through the given task list and write all the tasks into \u003ci\u003ePATH\u003c/i\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"     * @param ts \u003ccode\u003eTaskStore\u003c/code\u003e containing all the tasks to write into the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"     * @throws IOException If the file could not be accessed (e.g. file not found, no write permissions on file)","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    public void writeToFile(TaskStore ts) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        assert file.exists() : \"Assertion failed on Storage.writeToFile(): duke.txt does not exist\";","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"        FileWriter fw \u003d new FileWriter(PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"        for (Task task : ts.getTaskList()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"            fw.write(task.writeToFile() + \"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"        fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"     * Imports the tasks specified in \u003ci\u003ePATH\u003c/i\u003e. When reading each line in the file, it will create a task based on","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"     * the first column along with the subsequent columns which would be the arguments. Returns an empty","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"     * \u003ccode\u003eTaskStore\u003c/code\u003e if an IOException occurs.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"     * @return The imported tasks in the form of \u003ccode\u003eTaskStore\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"     * @throws IOException            If the file does not exist. In this case, an empty TaskStore is returned.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"     * @throws DateTimeParseException If the date could not be parsed when creating the task. The user may need to","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"     *                                change the date format such that it is readable by the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"    public TaskStore importTasks() throws DateTimeParseException, DukeException, IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"        TaskStore tasks \u003d new TaskStore();","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"                String[] line \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"                TaskType type \u003d TaskType.fromString(line[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"KwanHW"},"content":"                boolean isDone \u003d line[1].equals(\"1\");","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"KwanHW"},"content":"                switch (type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"KwanHW"},"content":"                case TODO:","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"KwanHW"},"content":"                    tasks.addTask(new Todo(line[2], isDone));","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"KwanHW"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"KwanHW"},"content":"                case EVENT:","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"KwanHW"},"content":"                    tasks.addTask(new Event(line[2], isDone, Timeable.of(line[3])));","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"KwanHW"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"KwanHW"},"content":"                case DEADLINE:","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"KwanHW"},"content":"                    tasks.addTask(new Deadline(line[2], isDone, Timeable.of(line[3])));","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"KwanHW"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"KwanHW"},"content":"                default:","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"KwanHW"},"content":"            return tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"KwanHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"KwanHW"},"content":"            this.makeDirectory();","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"KwanHW"},"content":"            this.file.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"KwanHW"},"content":"            return tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"KwanHW":98}},{"path":"src/main/java/duke/parser/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"KwanHW":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskStore;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":" * Represents the logic which would make sense of the user\u0027s commands.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"    public static final String EMPTY_LIST_ERROR \u003d","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"            \"Please make sure you have something in the list before performing this operation!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    public static final String MAKE_TODO \u003d \"todo\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"    public static final String MAKE_EVENT \u003d \"event\";","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    public static final String MAKE_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"    public static final String TASKS_ON \u003d \"taskon\";","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"     * Processes the raw input from the user and performs the action on the task store. If the executed action","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"     * encounters an error, it will display the error message.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"     * @param inputTxt The raw input containing the command and parameters.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"     * @param tasks    The task store which the user wishes to query or update.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"     * @return A boolean which determines if the input was successfully processed","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"    public boolean processInput(String inputTxt, Ui ui, TaskStore tasks) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"        String[] split \u003d inputTxt.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        String command \u003d split[0].toLowerCase();","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"        String commandArgs \u003d inputTxt.substring(command.length()).trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"        Task task;","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"            validateCommand(command, commandArgs, tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"            switch (command) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"            case BYE:","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"                ui.bye();","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"            case LIST:","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"                if (tasks.getIsEmpty()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"                    ui.printMessage(\"There are no tasks in your list.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"                } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"                    ui.printMessage(tasks.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"            case MARK:","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"                //Fallthrough","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"                boolean isMarkCommand \u003d command.equals(MARK);","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"                if (commandArgs.matches(\"all\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"                    tasks.markAllTasks(isMarkCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"                    String markAction \u003d isMarkCommand ? \"Marked\" : \"Unmarked\";","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"                    String message \u003d String.format(\"%s all tasks.\", markAction);","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"                    ui.printMessage(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"                } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"                    ArrayList\u003cTask\u003e markedTasks \u003d tasks.markTasks(commandArgs.split(\" \"), isMarkCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"                    ui.printTaskMarking(markedTasks, isMarkCommand);","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"KwanHW"},"content":"            case DELETE:","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"KwanHW"},"content":"                if (commandArgs.matches(\"all\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"KwanHW"},"content":"                    tasks.removeAllTasks();","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"KwanHW"},"content":"                    ui.printMessage(\"Deleted all tasks.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"KwanHW"},"content":"                } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"KwanHW"},"content":"                    ArrayList\u003cTask\u003e deletedTasks \u003d tasks.removeTasks(commandArgs.split(\" \"));","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"KwanHW"},"content":"                    ui.printTaskDelete(deletedTasks, tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"KwanHW"},"content":"            case MAKE_DEADLINE:","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"KwanHW"},"content":"                // Fallthrough","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"KwanHW"},"content":"            case MAKE_EVENT:","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"KwanHW"},"content":"                // Fallthrough","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"KwanHW"},"content":"            case MAKE_TODO:","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"KwanHW"},"content":"                task \u003d tasks.addTask(command, commandArgs);","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"KwanHW"},"content":"                ui.printTaskAdd(task, tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"KwanHW"},"content":"            case TASKS_ON:","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"KwanHW"},"content":"                LocalDate date \u003d LocalDate.parse(commandArgs);","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"KwanHW"},"content":"                ui.printMessage(tasks.getTasksOn(date));","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"KwanHW"},"content":"            case FIND:","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"KwanHW"},"content":"                ui.printMessage(tasks.getTaskWithKeyword(commandArgs));","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"KwanHW"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"KwanHW"},"content":"            default:","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"KwanHW"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"KwanHW"},"content":"            return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"KwanHW"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"KwanHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"KwanHW"},"content":"            ui.printError(\"I don\u0027t think you gave me a valid number.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"KwanHW"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"KwanHW"},"content":"            ui.printError(\"I think you may have given me something that\u0027s out of range.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"KwanHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"KwanHW"},"content":"            ui.printError(\"Sorry I don\u0027t understand that format. Make sure its in yyyy-mm-dd.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":119,"author":{"gitId":"KwanHW"},"content":"        return false;","lastModifiedDate":"2022-02-14"},{"lineNumber":120,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"KwanHW"},"content":"     * Validates the input command, arguments and taskStore before executing the function. If the command is \"bye\" or","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"KwanHW"},"content":"     * \"list\", the validation is skipped.","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"KwanHW"},"content":"     * In general, the check ensures that the command and arguments are non-empty and the task store having at least","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"KwanHW"},"content":"     * 1 item. Should any of these requirements fail, an exception is thrown.","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"KwanHW"},"content":"     * @param command     The action which the user wishes to execute.","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"KwanHW"},"content":"     * @param commandArgs The parameters passed to support the action","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"KwanHW"},"content":"     * @param tasks       The task store which the user wishes to update","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"KwanHW"},"content":"     // * @return The updated task from \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"KwanHW"},"content":"     * @throws DukeException             If there is a syntax error in the command or \u003ccode\u003etasks\u003c/code\u003e does not have","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"KwanHW"},"content":"     *                                   any tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"KwanHW"},"content":"     // * @throws NumberFormatException     If the provided parameters is not a number.","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"KwanHW"},"content":"     * @throws IndexOutOfBoundsException If the provided index exceeds the size of \u003ccode\u003etasks\u003c/code\u003e or the index \u003c 0.","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"KwanHW"},"content":"    public static void validateCommand(String command, String commandArgs, TaskStore tasks) throws DukeException,","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"KwanHW"},"content":"            NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"KwanHW"},"content":"        if (command.equals(BYE) || command.equals(LIST)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"KwanHW"},"content":"            return;","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"KwanHW"},"content":"        if (tasks.getIsEmpty()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"KwanHW"},"content":"            throw new DukeException(EMPTY_LIST_ERROR);","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"KwanHW"},"content":"        if (commandArgs.isEmpty()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"KwanHW"},"content":"            throw new DukeException(String.format(\"The command %s should have arguments\", command));","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"KwanHW"},"content":"     * Obtains a delimiter based on the given action. DukeException will be thrown if the command does not have a","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"KwanHW"},"content":"     * delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"KwanHW"},"content":"     * @param action The command that was given by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"KwanHW"},"content":"     * @return The mapped delimiter for that particular command.","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"KwanHW"},"content":"     * @throws DukeException If the command does not have a mapped delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"KwanHW"},"content":"    public static String getDelimiter(String action) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":163,"author":{"gitId":"KwanHW"},"content":"        switch (action) {","lastModifiedDate":"2022-01-24"},{"lineNumber":164,"author":{"gitId":"KwanHW"},"content":"        case MAKE_DEADLINE:","lastModifiedDate":"2022-01-24"},{"lineNumber":165,"author":{"gitId":"KwanHW"},"content":"            return Deadline.DELIMITER;","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"KwanHW"},"content":"        case MAKE_EVENT:","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"KwanHW"},"content":"            return Event.DELIMITER;","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"KwanHW"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":169,"author":{"gitId":"KwanHW"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t think there\u0027s a delimiter for that..\");","lastModifiedDate":"2022-01-24"},{"lineNumber":170,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":171,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":172,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"KwanHW":172}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":" * Represents a task that has to be completed before a certain date.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"public class Deadline extends Task implements Timeable {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    public static final String DELIMITER \u003d \" /by \";","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"    private LocalDate by;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"        this(description, false, by);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"     * Initializes a Deadline Instance.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"     * @param isDone Marks the task as done","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"     * @param by The deadline of the task (date)","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"        super(TaskType.DEADLINE, isDone, description);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"     * Generates a writable format of the deadline. The format is as such:","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"     * D | 1 | Description of task | Deadline of task (in yyyy-mm-dd)","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"     * Note that the second column represents (isDone) and is denoted as 1 for done and 0 for not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"     * @return The writable format of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        return super.writeToFile() + \" | \" + this.getDateString(Timeable.getWritableFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"        return this.by;","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    public String getDateString(DateTimeFormatter dateTimeFormat) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        return this.by.format(dateTimeFormat);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"        return this.by.equals(date);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.getDateString(Timeable.getPrintableFormat()));","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"KwanHW":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":" * Represents an event that is happening on a certain date.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"public class Event extends Task implements Timeable {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    public static final String DELIMITER \u003d \" /at \";","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"    private LocalDate at;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"        this(description, false, at);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"     * Initializes an Event instance.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"     * @param description Description of the event","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"     * @param isDone Marks the task as done","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"     * @param at Date of the event","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    public Event(String description, boolean isDone, LocalDate at) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"        super(TaskType.EVENT, isDone, description);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"     * Generates a writable format of the deadline. The format is as such:","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"     * E | 1 | Description of task | Deadline of task (in yyyy-mm-dd)","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"     * Note that the second column represents (isDone) and is denoted as 1 for done and 0 for not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"     * @return The writable format of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        return super.writeToFile() + \" | \" + this.getDateString(Timeable.getWritableFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"        return this.at;","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    public String getDateString(DateTimeFormatter dateTimeFormat) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        return this.at.format(dateTimeFormat);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"        return this.at.equals(date);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), this.getDateString(Timeable.getPrintableFormat()));","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"KwanHW":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":" * Represents a general task which the user has inserted.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"    private final String description;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"     * Generates a Task Instance.","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"     * @param type The type of task (Todo, Event, Deadline)","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"     * @param isDone Mark if the task is done","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"    public Task(TaskType type, boolean isDone, String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"        return isDone;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"        return description;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"    public void markTask(boolean isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"    // public void markAsDone() {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"    //     isDone \u003d true;","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"    // }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"    //","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    // public void markAsUndone() {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"    //     isDone \u003d false;","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"    // }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"     * Generates a string which represents the task for disk storage. The format is as follows:","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"     * TaskType | isDone | Task Description","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"     * Note that isDone will be \"1\" if its is marked as done and \"0\" otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"     * @return String representation of the task for disk storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"        String isDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"        return String.join(\" | \", taskType.toString(), isDone, description);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"        return String.format(\"[%s][%s] %s\", taskType.toString(), getStatusIcon(), description);","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"KwanHW":64}},{"path":"src/main/java/duke/task/TaskStore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import duke.parser.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":" * Represents a collection of the tasks stored in the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"public class TaskStore {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"    public TaskStore() {","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    public boolean getIsEmpty() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"     * Adds a new task to the \u003ccode\u003eTaskStore\u003c/code\u003e. Once complete, it will return the task that has been added.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"     * @param command Type of task to create.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"     * @param args    The entire sting of parameters to create the task (e.g. task description or time of task).","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"     * @return The created \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"     * @throws DukeException          If there is an error creating the task due to syntax error (i.e. missing","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"     *                                parameters).","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"     * @throws DateTimeParseException If the time parameter given cannot be parsed (Applies to \u003ccode\u003eTimeable\u003c/code\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"     *                                tasks).","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    public Task addTask(String command, String args) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        Task t \u003d this.createTask(command, args);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"        assert t !\u003d null : \"Assertion failed on TaskStore.addTask(): Task should be created\";","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"        this.addTask(t);","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"        return t;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"     * Adds task to tasklist. If the task is a \u003ccode\u003eTimeable\u003c/code\u003e, it will check if there are clashing dates first","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"     * and an DukeException is thrown if there is.","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"     * @param t The task to add to the tasklist","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"     * @throws DukeException If the task is a \u003ccode\u003eTimeable\u003c/code\u003e and it clashes with an existing task in the list","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"    public void addTask(Task t) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"        if (t instanceof Timeable) {","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"            if (this.hasClashingDate((Timeable) t)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"                throw new DukeException(\"There is a task that falls on this day.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"     * Removes the tasks specified in the arguments. If an argument is invalid (not a number or not in range), it will","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"     * be skipped.","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"KwanHW"},"content":"     * @param args The arguments in the form of a String array.","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"KwanHW"},"content":"     * @return The tasks that were deleted.","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"KwanHW"},"content":"    public ArrayList\u003cTask\u003e removeTasks(String[] args) {","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"KwanHW"},"content":"        ArrayList\u003cInteger\u003e indexList \u003d this.getIndices(args);","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"KwanHW"},"content":"        // Sorts the indices in descending order to prevent false index deletion","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"KwanHW"},"content":"        indexList.sort(Collections.reverseOrder());","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"KwanHW"},"content":"        ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"KwanHW"},"content":"        for (int index: indexList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"KwanHW"},"content":"            Task deletedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"KwanHW"},"content":"            deletedTasks.add(deletedTask);","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"KwanHW"},"content":"        return deletedTasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"KwanHW"},"content":"    public void removeAllTasks() {","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"KwanHW"},"content":"        this.tasks.clear();","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"KwanHW"},"content":"    public void markAllTasks(boolean isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"KwanHW"},"content":"        this.tasks.forEach((Task t) -\u003e t.markTask(isDone));","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"KwanHW"},"content":"     * Marks the specified tasks in args as done or undone depending on the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"KwanHW"},"content":"     * If an argument is invalid (not a number or not in range), it will be skipped.","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"KwanHW"},"content":"     * @param args The arguments in the form of a String array.","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"KwanHW"},"content":"     * @param isDone Indicator to mark the task as done or undone.","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"KwanHW"},"content":"     * @return The tasks that were marked to be done or undone.","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"KwanHW"},"content":"    public ArrayList\u003cTask\u003e markTasks(String[] args, boolean isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"KwanHW"},"content":"        ArrayList\u003cInteger\u003e indexList \u003d this.getIndices(args);","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"KwanHW"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"KwanHW"},"content":"        for (int index: indexList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"KwanHW"},"content":"            Task markedTask \u003d this.tasks.get(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"KwanHW"},"content":"            // Ignore marking if task is already done/not done","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"KwanHW"},"content":"            if (markedTask.getIsDone() \u003d\u003d isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"KwanHW"},"content":"                continue;","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"KwanHW"},"content":"            markedTask.markTask(isDone);","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"KwanHW"},"content":"            markedTasks.add(markedTask);","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"KwanHW"},"content":"        return markedTasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"KwanHW"},"content":"     * Finds all tasks in the \u003ccode\u003eTaskStore\u003c/code\u003e that falls on the given date. If there are no tasks that fall on","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"KwanHW"},"content":"     * that date, a message saying that there are no tasks will be sent instead.","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"KwanHW"},"content":"     * @param date The selected date to search.","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"KwanHW"},"content":"     * @return A complete message of the tasks or a message saying that there are no tasks that fall on the given date","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"KwanHW"},"content":"    public String getTasksOn(LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"KwanHW"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"KwanHW"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"KwanHW"},"content":"            // Find all timeable tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"KwanHW"},"content":"            if (t instanceof Timeable) {","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"KwanHW"},"content":"                Timeable timeableTask \u003d (Timeable) t;","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"KwanHW"},"content":"                // Checks if the date is the same as input","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"KwanHW"},"content":"                if (timeableTask.isSameDate(date)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"KwanHW"},"content":"                    sb.append(t).append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"KwanHW"},"content":"        String tasksToPrint \u003d sb.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"KwanHW"},"content":"        String dateString \u003d date.format(Timeable.getPrintableFormat());","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"KwanHW"},"content":"        if (tasksToPrint.isEmpty()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"KwanHW"},"content":"            return String.format(\"You don\u0027t have any tasks on %s\", dateString);","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"KwanHW"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"KwanHW"},"content":"            return String.format(\"Here are your tasks on %s\\n%s\", dateString, tasksToPrint);","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":158,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":159,"author":{"gitId":"KwanHW"},"content":"     * Checks the task list of there are any clashing dates with another task","lastModifiedDate":"2022-02-09"},{"lineNumber":160,"author":{"gitId":"KwanHW"},"content":"     * @param t The timeable task to be checked","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"KwanHW"},"content":"     * @return true if there exists a task where the dates are the same. Otherwise, return false.","lastModifiedDate":"2022-02-09"},{"lineNumber":162,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":163,"author":{"gitId":"KwanHW"},"content":"    public boolean hasClashingDate(Timeable t) {","lastModifiedDate":"2022-02-09"},{"lineNumber":164,"author":{"gitId":"KwanHW"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":165,"author":{"gitId":"KwanHW"},"content":"            if (task instanceof Timeable) {","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"KwanHW"},"content":"                Timeable timeableTask \u003d (Timeable) task;","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"KwanHW"},"content":"                if (timeableTask.isSameDate(t.getDate())) {","lastModifiedDate":"2022-02-09"},{"lineNumber":169,"author":{"gitId":"KwanHW"},"content":"                    return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":171,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":172,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":173,"author":{"gitId":"KwanHW"},"content":"        return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"KwanHW"},"content":"    public ArrayList\u003cInteger\u003e getIndices(String[] args) {","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"KwanHW"},"content":"        ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":179,"author":{"gitId":"KwanHW"},"content":"        for (String arg : args) {","lastModifiedDate":"2022-02-09"},{"lineNumber":180,"author":{"gitId":"KwanHW"},"content":"            // Catch invalid numbers (non-digital characters or index out of range)","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"KwanHW"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":182,"author":{"gitId":"KwanHW"},"content":"                int index \u003d Integer.parseInt(arg) - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":183,"author":{"gitId":"KwanHW"},"content":"                if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":184,"author":{"gitId":"KwanHW"},"content":"                    continue;","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"KwanHW"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"KwanHW"},"content":"                indexList.add(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"KwanHW"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"KwanHW"},"content":"                continue;","lastModifiedDate":"2022-02-09"},{"lineNumber":189,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":190,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":191,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"KwanHW"},"content":"        return indexList;","lastModifiedDate":"2022-02-09"},{"lineNumber":193,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":194,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":195,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"KwanHW"},"content":"     * Searches the \u003ccode\u003eTaskStore\u003c/code\u003e for tasks that contains the keyword.","lastModifiedDate":"2022-02-14"},{"lineNumber":197,"author":{"gitId":"KwanHW"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":198,"author":{"gitId":"KwanHW"},"content":"     * Returns a formatted message containing information of the tasks if there is at least 1 match. Else return","lastModifiedDate":"2022-02-14"},{"lineNumber":199,"author":{"gitId":"KwanHW"},"content":"     * a message if there are no matching tasks in the list.","lastModifiedDate":"2022-02-14"},{"lineNumber":200,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"KwanHW"},"content":"     * @param keyword Keyword to search in all task descriptions.","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"KwanHW"},"content":"     * @return A message containing all the task information that matches the keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"KwanHW"},"content":"    public String getTaskWithKeyword(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"KwanHW"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":207,"author":{"gitId":"KwanHW"},"content":"        // Numbers list from 1","lastModifiedDate":"2022-02-09"},{"lineNumber":208,"author":{"gitId":"KwanHW"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"KwanHW"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"KwanHW"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"KwanHW"},"content":"                // Task Format: \u003ccount\u003e.\u003ctask\u003e\\n","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"KwanHW"},"content":"                sb.append(String.format(\"%d.\", count++)).append(t).append(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":213,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":214,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":215,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"KwanHW"},"content":"        String tasksToPrint \u003d sb.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":217,"author":{"gitId":"KwanHW"},"content":"        if (tasksToPrint.isEmpty()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":218,"author":{"gitId":"KwanHW"},"content":"            return \"There are no matching tasks in your list\";","lastModifiedDate":"2022-01-26"},{"lineNumber":219,"author":{"gitId":"KwanHW"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":220,"author":{"gitId":"KwanHW"},"content":"            return String.format(\"Here are the matching tasks in your list:\\n%s\", tasksToPrint);","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":222,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":223,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"KwanHW"},"content":"     * Creates a \u003ccode\u003eTask\u003c/code\u003e with a given command and its arguments.","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"KwanHW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"KwanHW"},"content":"     * @param command The type of task to create.","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"KwanHW"},"content":"     * @param args    The respective arguments required to create the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":229,"author":{"gitId":"KwanHW"},"content":"     * @return The created \u003ccode\u003eTask\u003c/code\u003e specified by the arguments.","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"KwanHW"},"content":"     * @throws DukeException          If there is an error creating the task due to syntax error (i.e. missing","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"KwanHW"},"content":"     *                                parameters).","lastModifiedDate":"2022-01-27"},{"lineNumber":232,"author":{"gitId":"KwanHW"},"content":"     * @throws DateTimeParseException If the supplied date in args cannot be parsed as a \u003ccode\u003eLocalDate\u003c/code\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":233,"author":{"gitId":"KwanHW"},"content":"     *                                instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":234,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":235,"author":{"gitId":"KwanHW"},"content":"    public Task createTask(String command, String args) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-01-24"},{"lineNumber":236,"author":{"gitId":"KwanHW"},"content":"        if (command.equals(Parser.MAKE_TODO)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":237,"author":{"gitId":"KwanHW"},"content":"            if (args.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":238,"author":{"gitId":"KwanHW"},"content":"                throw new DukeException(\"Make sure the task is not empty!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":239,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":240,"author":{"gitId":"KwanHW"},"content":"            return new Todo(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":241,"author":{"gitId":"KwanHW"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":242,"author":{"gitId":"KwanHW"},"content":"            String delimiter \u003d Parser.getDelimiter(command);","lastModifiedDate":"2022-01-24"},{"lineNumber":243,"author":{"gitId":"KwanHW"},"content":"            String[] taskParams \u003d args.split(delimiter);","lastModifiedDate":"2022-01-24"},{"lineNumber":244,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":245,"author":{"gitId":"KwanHW"},"content":"            // Checks for syntax correctness","lastModifiedDate":"2022-01-24"},{"lineNumber":246,"author":{"gitId":"KwanHW"},"content":"            if (taskParams.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":247,"author":{"gitId":"KwanHW"},"content":"                String errorMsg \u003d String.format(\"Make sure your command follows this format: %s \u003ctask\u003e%s\u003ctime\u003e\",","lastModifiedDate":"2022-02-04"},{"lineNumber":248,"author":{"gitId":"KwanHW"},"content":"                        command, delimiter);","lastModifiedDate":"2022-02-04"},{"lineNumber":249,"author":{"gitId":"KwanHW"},"content":"                throw new DukeException(errorMsg);","lastModifiedDate":"2022-01-24"},{"lineNumber":250,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":251,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":252,"author":{"gitId":"KwanHW"},"content":"            LocalDate date \u003d Timeable.of(taskParams[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":253,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":254,"author":{"gitId":"KwanHW"},"content":"            // At this point it can only be a deadline or an event","lastModifiedDate":"2022-01-24"},{"lineNumber":255,"author":{"gitId":"KwanHW"},"content":"            if (command.equals(Parser.MAKE_DEADLINE)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":256,"author":{"gitId":"KwanHW"},"content":"                return new Deadline(taskParams[0], date);","lastModifiedDate":"2022-01-24"},{"lineNumber":257,"author":{"gitId":"KwanHW"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":258,"author":{"gitId":"KwanHW"},"content":"                return new Event(taskParams[0], date);","lastModifiedDate":"2022-01-24"},{"lineNumber":259,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":260,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":261,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":262,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":263,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":264,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":265,"author":{"gitId":"KwanHW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":266,"author":{"gitId":"KwanHW"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":267,"author":{"gitId":"KwanHW"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":268,"author":{"gitId":"KwanHW"},"content":"            sb.append(String.format(\"\\n%d.%s\", i + 1, tasks.get(i)));","lastModifiedDate":"2022-01-19"},{"lineNumber":269,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":270,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":271,"author":{"gitId":"KwanHW"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":272,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":273,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KwanHW":273}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":" * Represents a fixed set of types a task can take on.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"    TODO(\"T\"),","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"    DEADLINE(\"D\");","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"    private final String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"    TaskType(String type) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"     * Generates a TaskType Instance","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"     * @param from The keyword of the TaskType (T,E,D)","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"     * @return Generated TaskType","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    public static TaskType fromString(String from) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"        for (TaskType tt : TaskType.values()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"            if (tt.toString().equals(from)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"                return tt;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"        throw new IllegalArgumentException(\"ERROR!!! No such TaskType exists\");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"KwanHW":36}},{"path":"src/main/java/duke/task/Timeable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"public interface Timeable {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"    LocalDate getDate();","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    String getDateString(DateTimeFormatter dateTimeFormat);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"    boolean isSameDate(LocalDate date);","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"    static LocalDate of(String date) throws DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"        return LocalDate.parse(date);","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"    static DateTimeFormatter getPrintableFormat() {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"        return DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    static DateTimeFormatter getWritableFormat() {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"        return DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"KwanHW":26}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"        this(description, false);","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"        super(TaskType.TODO, isDone, description);","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"KwanHW":11}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"KwanHW":62}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import duke.io.Storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskStore;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"    private TaskStore tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"    public VBox getDialogContainer() {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        return this.dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    public void setUi(Ui u) {","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"        this.ui \u003d u;","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"    public void setTasks(TaskStore tasks) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"    public void setParser(Parser p) {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"        this.parser \u003d p;","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"        boolean isSuccessful \u003d parser.processInput(userInput.getText(), this.ui, this.tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"        if (isSuccessful) {","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"            this.storage.writeToFile(this.tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"KwanHW":75}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskStore;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":" * Represents an interface which will display messages to the user based on the inputs.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"    public static final String TASK_MARKED \u003d \"Nice! I marked the %d task(s) as done:\\n %s\";","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    public static final String TASK_UNMARKED \u003d \"OK, I\u0027ve marked %d task(s) as not done:\\n %s\";","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"    public static final String TASK_DELETE \u003d \"Noted. I\u0027ve removed the %d task(s): \\n%s\";","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"    public static final String TASK_ADD \u003d \"Got it. I\u0027ve added this task:\\n\\t %s\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"    public static final String TASKS_SIZE \u003d \"Now you have %d tasks in the list\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    private static final String GREET \u003d \"Hello! I\u0027m Waldo\\nWhat can I do for you?\";","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"    private static final String ERROR_TEMPLATE \u003d \"☹ OOPS!!! %s\";","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaWaldo.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    private final VBox container;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    public Ui(VBox c) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"        this.container \u003d c;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"     * Sends a greeting dialog box to the user.","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"    public void greet() {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"        this.addDukeDialogBox(GREET);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"     * Generates a dialog box to reply to the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"     * @param inputTxt The text which waldo will reply with.","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"    public void printMessage(String inputTxt) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"        // this.container.getChildren().addAll(DialogBox.getDukeDialog(inputTxt, dukeImage));","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"        this.addDukeDialogBox(inputTxt);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"    public String getTaskSizeString(TaskStore tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"        return String.format(TASKS_SIZE, tasks.getSize());","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"     * Generates an error dialog box to the user.","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"     * @param errorMsg The error message to display to the user","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"    public void printError(String errorMsg) {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"        String error \u003d String.format(ERROR_TEMPLATE, errorMsg);","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"        this.addDukeDialogBox(error);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"     * Generates a dialog box on task added. This will also display all tasks in the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"     * @param task The newly added task","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"     * @param tasks The task list","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"KwanHW"},"content":"    public void printTaskAdd(Task task, TaskStore tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"KwanHW"},"content":"        String template \u003d TASK_ADD + this.getTaskSizeString(tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"KwanHW"},"content":"        String taskAddMessage \u003d String.format(template, task, tasks.getSize());","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"KwanHW"},"content":"        this.addDukeDialogBox(taskAddMessage);","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"KwanHW"},"content":"     * Prepares the summary of tasks that were deleted and displays them to the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"KwanHW"},"content":"     * @param deletedTasks The tasks that were deleted.","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"KwanHW"},"content":"     * @param tasks The task list which was deleted.","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"KwanHW"},"content":"    public void printTaskDelete(ArrayList\u003cTask\u003e deletedTasks, TaskStore tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"KwanHW"},"content":"        int numTasksDeleted \u003d deletedTasks.size();","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"KwanHW"},"content":"        String template \u003d TASK_DELETE + this.getTaskSizeString(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"KwanHW"},"content":"        String taskList \u003d generateTaskInList(deletedTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"KwanHW"},"content":"        String taskDeleteMessage \u003d String.format(template, numTasksDeleted, taskList);","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"KwanHW"},"content":"        this.addDukeDialogBox(taskDeleteMessage);","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"KwanHW"},"content":"     * Prepares the summary fo tasks that were marked as done or undone and displays them to the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"KwanHW"},"content":"     * @param tasks The tasks that were marked a done or undone.","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"KwanHW"},"content":"     * @param isDone Indicator of the task being marked as done or undone.","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"KwanHW"},"content":"    public void printTaskMarking(ArrayList\u003cTask\u003e tasks, boolean isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"KwanHW"},"content":"        String taskList \u003d this.generateTaskInList(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"KwanHW"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"KwanHW"},"content":"            this.addDukeDialogBox(String.format(TASK_MARKED, tasks.size(), taskList));","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"KwanHW"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"KwanHW"},"content":"            this.addDukeDialogBox(String.format(TASK_UNMARKED, tasks.size(), taskList));","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"KwanHW"},"content":"    public void bye() {","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"KwanHW"},"content":"        this.addDukeDialogBox(BYE);","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"KwanHW"},"content":"    public void addDukeDialogBox(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"KwanHW"},"content":"        this.container.getChildren().addAll(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"KwanHW"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"KwanHW"},"content":"     * Generates a numbered list from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"KwanHW"},"content":"     * @param tasklist The task list to be generated as the numbered list.","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"KwanHW"},"content":"     * @return The generated numbered task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"KwanHW"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"KwanHW"},"content":"    public String generateTaskInList(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"KwanHW"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"KwanHW"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"KwanHW"},"content":"            String taskItem \u003d String.format(\"\\t%d.%s\\n\", (i + 1), tasklist.get(i).toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"KwanHW"},"content":"            sb.append(taskItem);","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"KwanHW"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"KwanHW":120}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"KwanHW":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"KwanHW":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"KwanHW":3}},{"path":"src/test/java/duke/io/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.io;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"import java.io.File;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"import duke.parser.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"import duke.task.TaskStore;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"    @BeforeAll","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"    public static void deleteFilesAndDirectory() {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"        File f \u003d new File(Storage.PATH);","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"        f.delete();","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"        f.getParentFile().delete();","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"    public void importTasksNoDirNoFile() throws IOException, DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"            assertEquals(0, new Storage().importTasks().getSize(),","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"                    \"Failed: Importing non-existent file supposed to be empty (size 0).\");","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"            fail(\"Failed: Clashing dates for task creation\");","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"    public void importTasksEmptyFile() throws IOException, DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"            assertEquals(0, new Storage().importTasks().getSize(),","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"                    \"Failed: Importing task file (empty file) supposed to be empty (size 0).\");","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"            fail(\"Failed: Clashing dates for task creation\");","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    public void importTasksFileHasContent() throws IOException, DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        TaskStore ts \u003d new TaskStore();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Todo(\"read book\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Deadline(\"return book\", LocalDate.parse(\"2022-01-31\")));","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"            new Storage().writeToFile(ts);","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"            assertEquals(2, new Storage().importTasks().getSize(),","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"                    \"Failed: Importing task file with content supposed to have 2 tasks.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"            fail(\"Failed: Clashing dates for task creation\");","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"KwanHW":61}},{"path":"src/test/java/duke/task/TaskStoreTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"import duke.parser.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"public class TaskStoreTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"    public void init_emptyTaskStore() {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"        assertTrue(new TaskStore().getIsEmpty(), \"Failed: Task Store not empty when initialised\");","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"    public void noTasksOnDate() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"        TaskStore ts \u003d new TaskStore();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"2022-01-31\");","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"2022-01-30\");","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Deadline(\"Complete Assignment\", date1));","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Event(\"Project Meeting\", date2));","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"            assertEquals(\"You don\u0027t have any tasks on Jan 29 2022\", ts.getTasksOn(LocalDate.parse(\"2022-01-29\")),","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"                    \"Failed: TaskStore contains tasks that do not fall on that date\");","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"            fail(\"There are matching dates in the file. Could be a seed file error\");","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"    public void noTasksOnDate_noTimeables() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"KwanHW"},"content":"        TaskStore ts \u003d new TaskStore();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"KwanHW"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-31\");","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Todo(\"Complete Assignment\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Todo(\"Project Meeting\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"KwanHW"},"content":"            assertEquals(\"You don\u0027t have any tasks on Jan 29 2022\", ts.getTasksOn(LocalDate.parse(\"2022-01-29\")),","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"KwanHW"},"content":"                    \"Failed: TaskStore only contains non-timeable instances.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"KwanHW"},"content":"            fail(\"There are matching dates in the file. Could be a seed file error\");","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"KwanHW"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"KwanHW"},"content":"    public void tasksOnDate() {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"KwanHW"},"content":"        TaskStore ts \u003d new TaskStore();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"KwanHW"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"2022-01-31\");","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"KwanHW"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"2022-01-30\");","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"KwanHW"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Deadline(\"Complete Assignment\", date1));","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"KwanHW"},"content":"            ts.addTask(new Event(\"Project Meeting\", date2));","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"KwanHW"},"content":"            String expected \u003d \"Here are your tasks on Jan 31 2022\\n\" + ts.getTask(0).toString() + \"\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"KwanHW"},"content":"            assertEquals(expected, ts.getTasksOn(date1),","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"KwanHW"},"content":"                    \"Failed: TaskStore should output the 1 task that fall on that day.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"KwanHW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"KwanHW"},"content":"            fail(\"There are matching dates in the file. Could be a seed file error\");","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"KwanHW"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"KwanHW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"KwanHW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"KwanHW"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"KwanHW":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KwanHW"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"KwanHW"},"content":"delete 1","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"KwanHW"},"content":"todo read book","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"KwanHW"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"KwanHW"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"KwanHW"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"KwanHW"},"content":"todo join sports club","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"KwanHW"},"content":"mark 4","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"KwanHW"},"content":"todo borrow book","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"KwanHW"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"KwanHW"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"KwanHW"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"KwanHW"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"KwanHW"},"content":"delete 7","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"KwanHW"},"content":"delete 6","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"KwanHW"},"content":"delete 0","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KwanHW"},"content":"delete -1","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"delete 27","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"KwanHW"},"content":"delete 3","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"KwanHW"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"KwanHW"},"content":"delete abcde","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"KwanHW"},"content":"delete","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"KwanHW"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"KwanHW"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"KwanHW"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"KwanHW"},"content":"deadline Submit report /by","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"KwanHW"},"content":"deadline /by Sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"KwanHW"},"content":"mark -1","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"KwanHW"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"KwanHW"},"content":"mark 16","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"KwanHW"},"content":"unmark -1","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"KwanHW"},"content":"unmark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"KwanHW"},"content":"unmark 27","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"KwanHW"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"KwanHW":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KwanHW"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KwanHW":1,"-":20}}]
