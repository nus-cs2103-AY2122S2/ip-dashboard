[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"## Level-1","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"#### UserGuide","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"The task manager Conan, is at his infancy stage. He is able to remember your name for the session and \u003cbr/\u003e","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"echoes your messages or tasks. Given below are the instructions on how you could interact with conan.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"Your Interaction Guide:","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"+ run the program and let Conan get to know you!","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"+ First type in your name, so that he knows who is talking to him.","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"+ Type in your message and see what conan could do!","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"+ Conan echoes your messages or tasks that you type in.","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"+ If you would like to exit, please tell conan \"Bye\" in the command line.","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"-":24,"Harish-coding":15}},{"path":"src/main/java/CarryOn.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of enum CarryOn.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public enum CarryOn {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"    // NEXT indicates that the user does not want to exit yet.","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    // STOP indicates that the user wants to exit.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    NEXT, STOP","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":10}},{"path":"src/main/java/Conan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Conan class.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"public class Conan {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    // GREETING variable contains the introductory greetings.","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    private static final String GREETING \u003d \"Hello There, My name is Conan! \\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"            + \"Hope you\u0027re doing fine today! (^_^) \\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"            + \"I\u0027m a task manager, and I can help you keep up with your tasks.\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"            + \"Now before we start, lets get acquainted! Lets start with our names!\";","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    // SEPARATOR helps us distinguish between user commands and the task managers comments.","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    private static final String SEPARATOR \u003d \"------------------------------------------------\";","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    // HELLO variable is used to store Hello greeting.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private static final String HELLO \u003d \"Hello, \";","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    // NTMY variable is followed by after the username.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    private static final String NTMY \u003d \"!, Nice to meet you! (*^_^*)\";","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    // INITIAL_ASK stores the text to be displayed at the start of the interaction.","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    private static final String INITIAL_ASK \u003d \"So, tell me what would you like to do \";","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    // ASK variable asks the user for tasks.","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    private static final String ASK \u003d \"Please let me know if there\u0027s anything else you would like to add, \";","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    // ADDED variable stores the message displayed after the task is added.","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    private static final String ADDED \u003d \", I have added \";","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    // BYE variable stores bye, which recognises user exit command.","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    private static final String BYE \u003d \"BYE\";","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    //DELETE variable stores delete command.","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    // LIST variable store the list command","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    private static final String LIST \u003d \"LIST\";","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    // GOODBYE variable stores a farewell message.","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    private static final String GOODBYE \u003d \"Goodbye, \";","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    // FAREWELL variable store the remaining goodbye message.","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    private static final String FAREWELL \u003d \"\\nHope I helped you complete your tasks!\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"            + \"Have a great day ahead, enjoy ! (^-^)/\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"            + \"Hope to see you next time! \";","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    // space","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    // MARK stores the command mark.","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"    // DONE stores the message to be printed when a task is marked done.","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    private static final String DONE \u003d \"Great job, on completing this task! \\\\(^_^)/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    // UNDONE stores the meesage to be printed when a task is unmarked done.","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    private static final String UNDONE \u003d \"Sure, I have unmarked this task :\";","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    //","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    private static final String DISPLAY \u003d \"These are your Tasks, \";","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"    // UNMARK stores the command unmark.","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"    // starting index of a list or a char in string.","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    // stores the length of date argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"    private static final int DATE_LENGTH \u003d 10;","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command TODO.","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"    private static final String TODO \u003d \"TODO\";","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command DEADLINE.","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    private static final String DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command EVENT.","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"    private static final String EVENT \u003d \"EVENT\";","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for due before.","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"    private static final String DUE_BEFORE \u003d \"due-before\";","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for due on.","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"    private static final String DUE_ON \u003d \"due-on\";","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"    private static final String NUM_TASKS \u003d \"Number of tasks up to now: \";","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"    private static final String NUM_TASK \u003d \"Number of tasks: \";","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"    // username is an instance variable that stores the name of the user.","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"    private String username;","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"    // tasks store the list of all tasks given by the user.","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * Constructor returns a new Conan object.","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     * returns a new Conan instance.","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"    Conan() {","lastModifiedDate":"2022-01-19"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2022-01-19"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        this.username \u003d \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * tellName updates the username.","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    void tellName(String username) {","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        this.username \u003d username;","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(HELLO + this.username + NTMY);","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(INITIAL_ASK + this.username);","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     * echo function echoes the message given by user.","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     * @param message the message given by user.","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to indicate the user wants to give more tasks.","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn echo(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"     * bye function bids user farewell and returns a trigger to end the program.","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.STOP to end the program.","lastModifiedDate":"2022-01-19"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn bye() {","lastModifiedDate":"2022-01-19"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(GOODBYE + this.username + FAREWELL);","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.STOP;","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"     * tell function gets the message from user and passes on to other","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"     *  function for a suitable response.","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"     * @param message the message given by user.","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT if the user wants to continue; else CarryOn.STOP.","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"    CarryOn tell(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"        message \u003d message.trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"            // Checks if the user wants to exit.","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"            if (message.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"                return bye();","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"            // Checks if the user wants to display the tasks","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"            if (message.equalsIgnoreCase(LIST)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"                return displayTasks();","lastModifiedDate":"2022-01-19"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"            // Primary error handling for commands.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"            if (!message.contains(SPACE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"                // check if the commands are empty","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"                // or else its invalid command","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"                if (message.equalsIgnoreCase(TODO)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(TODO);","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(DEADLINE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(DEADLINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(EVENT)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(EVENT);","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(MARK)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(MARK);","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(UNMARK)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(UNMARK);","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(DELETE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(DELETE);","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(DUE_BEFORE)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(DUE_BEFORE);","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"                } else if (message.equalsIgnoreCase(DUE_ON)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"                    throw new MissingTaskArgumentException(DUE_ON);","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"                    throw new IllegalCommandException(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"            String command \u003d message.split(SPACE, 2)[START_INDEX].toLowerCase();","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"            // check if the command says mark or unmarked.","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"            switch (command) {","lastModifiedDate":"2022-01-20"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"                case MARK:","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"                    return mark(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":205,"author":{"gitId":"Harish-coding"},"content":"                case UNMARK:","lastModifiedDate":"2022-01-20"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"                    return unmark(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"                case DELETE:","lastModifiedDate":"2022-01-25"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"                    return delete(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"                case DUE_BEFORE:","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"                    return dueBefore(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"                case DUE_ON:","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"                    return dueOn(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":214,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":215,"author":{"gitId":"Harish-coding"},"content":"            return add(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":216,"author":{"gitId":"Harish-coding"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-25"},{"lineNumber":220,"author":{"gitId":"Harish-coding"},"content":"            return CarryOn.NEXT;","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":222,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":223,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":224,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":225,"author":{"gitId":"Harish-coding"},"content":"     * add function adds a task to the list of tasks to be performed.","lastModifiedDate":"2022-01-19"},{"lineNumber":226,"author":{"gitId":"Harish-coding"},"content":"     * @param text the task to be added.","lastModifiedDate":"2022-01-19"},{"lineNumber":227,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-19"},{"lineNumber":228,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTimeArgumentException if the user missed time argument out.","lastModifiedDate":"2022-01-25"},{"lineNumber":229,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":232,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn add(String text) {","lastModifiedDate":"2022-01-19"},{"lineNumber":233,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":234,"author":{"gitId":"Harish-coding"},"content":"        String[] split_text \u003d text.split(SPACE, 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":235,"author":{"gitId":"Harish-coding"},"content":"        String type \u003d split_text[START_INDEX].toUpperCase();","lastModifiedDate":"2022-01-20"},{"lineNumber":236,"author":{"gitId":"Harish-coding"},"content":"        String message \u003d split_text[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":237,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":238,"author":{"gitId":"Harish-coding"},"content":"        Task task;","lastModifiedDate":"2022-01-20"},{"lineNumber":239,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":240,"author":{"gitId":"Harish-coding"},"content":"        switch (type) {","lastModifiedDate":"2022-01-20"},{"lineNumber":241,"author":{"gitId":"Harish-coding"},"content":"            case TODO:","lastModifiedDate":"2022-01-20"},{"lineNumber":242,"author":{"gitId":"Harish-coding"},"content":"                task \u003d new Todo(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":243,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":244,"author":{"gitId":"Harish-coding"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-20"},{"lineNumber":245,"author":{"gitId":"Harish-coding"},"content":"                Deadline.correctArgument(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":246,"author":{"gitId":"Harish-coding"},"content":"                task \u003d new Deadline(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":247,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":248,"author":{"gitId":"Harish-coding"},"content":"            case EVENT:","lastModifiedDate":"2022-01-20"},{"lineNumber":249,"author":{"gitId":"Harish-coding"},"content":"                Event.correctArgument(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":250,"author":{"gitId":"Harish-coding"},"content":"                task \u003d new Event(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":251,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":252,"author":{"gitId":"Harish-coding"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":253,"author":{"gitId":"Harish-coding"},"content":"                task \u003d new Task(text);","lastModifiedDate":"2022-01-20"},{"lineNumber":254,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":255,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":256,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":257,"author":{"gitId":"Harish-coding"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":258,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(this.username + ADDED + task.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":259,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(NUM_TASKS + tasks.size());","lastModifiedDate":"2022-01-20"},{"lineNumber":260,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-19"},{"lineNumber":261,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":262,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-19"},{"lineNumber":263,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":264,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":265,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":266,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":267,"author":{"gitId":"Harish-coding"},"content":"     * mark function marks a task as done.","lastModifiedDate":"2022-01-19"},{"lineNumber":268,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user command.","lastModifiedDate":"2022-01-19"},{"lineNumber":269,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-19"},{"lineNumber":270,"author":{"gitId":"Harish-coding"},"content":"     * @throws FaultyTaskNumberException if the user inputs an invalid task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":271,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":272,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn mark(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":273,"author":{"gitId":"Harish-coding"},"content":"        String[] arr \u003d message.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":274,"author":{"gitId":"Harish-coding"},"content":"        int num \u003d Integer.valueOf(arr[1]);","lastModifiedDate":"2022-01-19"},{"lineNumber":275,"author":{"gitId":"Harish-coding"},"content":"        if (num \u003c\u003d this.tasks.size() \u0026\u0026 num \u003e 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":276,"author":{"gitId":"Harish-coding"},"content":"            this.tasks.get(num - 1).markDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":277,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(DONE);","lastModifiedDate":"2022-01-19"},{"lineNumber":278,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(tasks.get(num - 1));","lastModifiedDate":"2022-01-19"},{"lineNumber":279,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":280,"author":{"gitId":"Harish-coding"},"content":"            throw new FaultyTaskNumberException(num);","lastModifiedDate":"2022-01-25"},{"lineNumber":281,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":282,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-19"},{"lineNumber":283,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":284,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-19"},{"lineNumber":285,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":286,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":287,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":288,"author":{"gitId":"Harish-coding"},"content":"     * unmark function marks a task as not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":289,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user command.","lastModifiedDate":"2022-01-19"},{"lineNumber":290,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-19"},{"lineNumber":291,"author":{"gitId":"Harish-coding"},"content":"     * @throws FaultyTaskNumberException if the user inputs an invalid task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":292,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":293,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn unmark(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":294,"author":{"gitId":"Harish-coding"},"content":"        String[] arr \u003d message.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":295,"author":{"gitId":"Harish-coding"},"content":"        int num \u003d Integer.valueOf(arr[1]);","lastModifiedDate":"2022-01-19"},{"lineNumber":296,"author":{"gitId":"Harish-coding"},"content":"        if(num \u003e 0 \u0026\u0026 num \u003c\u003d this.tasks.size()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":297,"author":{"gitId":"Harish-coding"},"content":"            this.tasks.get(num - 1).unMarkDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":298,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(UNDONE);","lastModifiedDate":"2022-01-19"},{"lineNumber":299,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(tasks.get(num - 1));","lastModifiedDate":"2022-01-19"},{"lineNumber":300,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":301,"author":{"gitId":"Harish-coding"},"content":"            throw new FaultyTaskNumberException(num);","lastModifiedDate":"2022-01-25"},{"lineNumber":302,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":303,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-19"},{"lineNumber":304,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":305,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-19"},{"lineNumber":306,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":307,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":308,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":309,"author":{"gitId":"Harish-coding"},"content":"     * delete function removes a task from the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":310,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user command.","lastModifiedDate":"2022-01-25"},{"lineNumber":311,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-25"},{"lineNumber":312,"author":{"gitId":"Harish-coding"},"content":"     * @throws FaultyTaskNumberException if the user inputs an invalid task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":313,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":314,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn delete(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":315,"author":{"gitId":"Harish-coding"},"content":"        String[] arr \u003d message.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":316,"author":{"gitId":"Harish-coding"},"content":"        int num \u003d Integer.valueOf(arr[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":317,"author":{"gitId":"Harish-coding"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d this.tasks.size()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":318,"author":{"gitId":"Harish-coding"},"content":"            Task task \u003d this.tasks.remove(num - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":319,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(\"The following task has been removed from the list :\");","lastModifiedDate":"2022-01-25"},{"lineNumber":320,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":321,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":322,"author":{"gitId":"Harish-coding"},"content":"            throw new FaultyTaskNumberException(num);","lastModifiedDate":"2022-01-25"},{"lineNumber":323,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":324,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-25"},{"lineNumber":325,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-25"},{"lineNumber":326,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-25"},{"lineNumber":327,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":328,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":329,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":330,"author":{"gitId":"Harish-coding"},"content":"     * prints a list of tasks that are due before date","lastModifiedDate":"2022-01-27"},{"lineNumber":331,"author":{"gitId":"Harish-coding"},"content":"     * @param date the date given by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":332,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-27"},{"lineNumber":333,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":334,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":335,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":336,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn dueBefore(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":337,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":338,"author":{"gitId":"Harish-coding"},"content":"        date \u003d date.substring(DUE_BEFORE.length()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":339,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":340,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":341,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":342,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(DISPLAY + this.username);","lastModifiedDate":"2022-01-27"},{"lineNumber":343,"author":{"gitId":"Harish-coding"},"content":"        int taskNum \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":344,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":345,"author":{"gitId":"Harish-coding"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":346,"author":{"gitId":"Harish-coding"},"content":"            if (task.isBefore(date)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":347,"author":{"gitId":"Harish-coding"},"content":"                System.out.println(taskNum + \". \" + task);","lastModifiedDate":"2022-01-27"},{"lineNumber":348,"author":{"gitId":"Harish-coding"},"content":"                taskNum +\u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":349,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":350,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":351,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":352,"author":{"gitId":"Harish-coding"},"content":"        taskNum -\u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":353,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(NUM_TASK + taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":354,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-27"},{"lineNumber":355,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-27"},{"lineNumber":356,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":357,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-27"},{"lineNumber":358,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":359,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":360,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":361,"author":{"gitId":"Harish-coding"},"content":"     * prints a list of tasks that are due on date","lastModifiedDate":"2022-01-27"},{"lineNumber":362,"author":{"gitId":"Harish-coding"},"content":"     * @param date the date given by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":363,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-27"},{"lineNumber":364,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":365,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":366,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":367,"author":{"gitId":"Harish-coding"},"content":"    private CarryOn dueOn(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":368,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":369,"author":{"gitId":"Harish-coding"},"content":"        date \u003d date.substring(DUE_ON.length()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":370,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":371,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":372,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":373,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(DISPLAY + this.username);","lastModifiedDate":"2022-01-27"},{"lineNumber":374,"author":{"gitId":"Harish-coding"},"content":"        int taskNum \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":375,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":376,"author":{"gitId":"Harish-coding"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":377,"author":{"gitId":"Harish-coding"},"content":"            if (task.isOnDate(date)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":378,"author":{"gitId":"Harish-coding"},"content":"                System.out.println(taskNum + \". \" + task);","lastModifiedDate":"2022-01-27"},{"lineNumber":379,"author":{"gitId":"Harish-coding"},"content":"                taskNum +\u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":380,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":381,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":382,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":383,"author":{"gitId":"Harish-coding"},"content":"        taskNum -\u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":384,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":385,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(NUM_TASK + taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":386,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-27"},{"lineNumber":387,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-27"},{"lineNumber":388,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":389,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-27"},{"lineNumber":390,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":391,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":392,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":393,"author":{"gitId":"Harish-coding"},"content":"     * displayTasks shows all the tasks that are currently in the list of tasks.","lastModifiedDate":"2022-01-19"},{"lineNumber":394,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT to ask what else the user wants to do.","lastModifiedDate":"2022-01-19"},{"lineNumber":395,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":396,"author":{"gitId":"Harish-coding"},"content":"    CarryOn displayTasks() {","lastModifiedDate":"2022-01-19"},{"lineNumber":397,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":398,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(DISPLAY + this.username);","lastModifiedDate":"2022-01-20"},{"lineNumber":399,"author":{"gitId":"Harish-coding"},"content":"        int taskNum \u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":400,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":401,"author":{"gitId":"Harish-coding"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-01-19"},{"lineNumber":402,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(taskNum + \". \" + task);","lastModifiedDate":"2022-01-19"},{"lineNumber":403,"author":{"gitId":"Harish-coding"},"content":"            taskNum +\u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":404,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":405,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(NUM_TASKS + this.tasks.size());","lastModifiedDate":"2022-01-20"},{"lineNumber":406,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(ASK + this.username);","lastModifiedDate":"2022-01-19"},{"lineNumber":407,"author":{"gitId":"Harish-coding"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-19"},{"lineNumber":408,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":409,"author":{"gitId":"Harish-coding"},"content":"        return CarryOn.NEXT;","lastModifiedDate":"2022-01-19"},{"lineNumber":410,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":411,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":412,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":412}},{"path":"src/main/java/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of DatHandler class.","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * @author  Saravanan Anuja Harish","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"public class DateHandler {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    // Separator to split deadline substring.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // stores an empty string.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // Limits the splitting of date into substrings.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final int LIMIT \u003d 2;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // The starting index of a character in a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // The index value of date string in split array.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final int DATE_IDX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    // The index value of time string in split array.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    private static final int TIME_IDX \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    // The index value where minute character starts in time string.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    private static final int MINUTE_INDEX \u003d 2;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    // stores information on the date.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    // stores information on the time.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    private final boolean isTimeGiven;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    // stores the length of date argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    private static final int DATE_LENGTH \u003d 10;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    // stores the length of time argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    private static final int TIME_LENGTH \u003d 4;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    // stores the time argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for DateHandler class.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string representation of the date.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of DateHandler.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    DateHandler(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        date \u003d date.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        if (date.contains(SPACE)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"            this.date \u003d LocalDate.parse(date.split(SPACE, LIMIT)[DATE_IDX]);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"            String hour \u003d date.split(SPACE, LIMIT)[TIME_IDX].substring(START_INDEX, MINUTE_INDEX);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"            String minute \u003d date.split(SPACE, LIMIT)[TIME_IDX].substring(MINUTE_INDEX);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"            this.time \u003d LocalTime.of(Integer.valueOf(hour), Integer.valueOf(minute));","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"            this.isTimeGiven \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"            this.time \u003d LocalTime.MIN;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"            this.isTimeGiven \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     * checks if the userDate is of the valid format.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     * @param userDate the date input by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"    static void checkValidDate(String userDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"        // handle time checking","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        if (userDate.contains(SPACE)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"            String hr_mt \u003d userDate.split(SPACE, LIMIT)[TIME_IDX].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"            if (hr_mt.length() !\u003d TIME_LENGTH) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"                throw new WrongTimeArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"            for (int i \u003d 0; i \u003c TIME_LENGTH; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"                if (!Character.isDigit(hr_mt.charAt(i))) {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"                    throw new WrongTimeArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"            userDate \u003d userDate.substring(START_INDEX, DATE_LENGTH).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        // handles date checking.","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"        char separator \u003d \"-\".charAt(START_INDEX);","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        int firstSeparatorIdx \u003d 4;","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        int secondSeparatorIdx \u003d 7;","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        // checks if the date is in the correct format.","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"        if (userDate.length() !\u003d DATE_LENGTH) {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"            throw new WrongDateArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"        if (userDate.charAt(firstSeparatorIdx) !\u003d separator || userDate.charAt(secondSeparatorIdx) !\u003d separator) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"            throw new WrongDateArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c DATE_LENGTH; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"            if (i !\u003d firstSeparatorIdx \u0026\u0026 i !\u003d secondSeparatorIdx) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"                if (!Character.isDigit(userDate.charAt(i))) {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"                    throw new WrongDateArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     * checks whether the date is before the given date.","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @param maxDate the value if the date limit","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the true; false otherwise","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    boolean isBefore(String maxDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        return this.date.isBefore(LocalDate.parse(maxDate.trim()));","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"     * checks if the date is same.","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     * @param onDate the date given.","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"     * @return return true if onDate matches the date of instance; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"    boolean isOnDate(String onDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"        return this.date.equals(LocalDate.parse(onDate.trim()));","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"     * returns the string representation of the DateHandler instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the object.","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"        return this.date.getDayOfWeek() + SPACE + (this.isTimeGiven ? this.time + SPACE : EMPTY) +","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"                this.date.getDayOfMonth() + SPACE + this.date.getMonth() + SPACE + this.date.getYear();","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":144}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Deadline class.","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    // Symbol for Deadline class.","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    private static final String SYMBOL \u003d \"[D]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    // Separator to distinguish task and deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    private static final String SEPARATOR \u003d \"/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // Separator to split deadline substring.","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // The index value of task string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final int TSK_INDEX \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // the index value of deadline string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final int DD_IDX \u003d 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // Limits the splitting of user message into substrings.","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final int LIMIT \u003d 2;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    private static final String TIME_ARGUMENT \u003d \"/by\";","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    // instance variable to store deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    private final DateHandler deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"     * @param message the text given by the user.","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"     * return an instance of deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    Deadline(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        super(message.split(SEPARATOR, LIMIT)[TSK_INDEX]);","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d message.split(SEPARATOR, LIMIT)[DD_IDX];","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(str.split(SPACE, LIMIT)[DD_IDX]);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        this.deadline \u003d new DateHandler(str.split(SPACE, LIMIT)[DD_IDX]);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"     * correctArgument checks if the function is valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * @param text the task input given by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * @return true if correct.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTimeArgumentException if the user missed time argument out.","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    static boolean correctArgument(String text) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"        if (!text.contains(SEPARATOR) || !text.contains(TIME_ARGUMENT) || text.trim().split(TIME_ARGUMENT).length \u003d\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTimeArgumentException(\"Deadline \" + text);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task deadline is due before date.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"     * @return return if the task is due before date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    boolean isBefore(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"        return this.deadline.isBefore(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task deadline is due on date.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"     * @return return if the task is due on date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"    boolean isOnDate(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        return this.deadline.isOnDate(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"     * toString returns the string representation of the Deadline object.","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"        return SYMBOL + super.toString() + \"(by: \" + this.deadline + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Harish-coding":87}},{"path":"src/main/java/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of EmptyCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * EmptyCommandException is used to raise error when the user inputs an empty string or gives no input.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class EmptyCommandException extends IllegalCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for EmptyCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    EmptyCommandException(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the EmptyCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"        return \"You have not input any command, please add some and try again.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    // Symbol for event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    private static final String SYMBOL \u003d \"[E]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    // Separator to distinguish task and event time.","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    private static final String SEPARATOR \u003d \"/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // Separator to split deadline substring.","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // The index value of task string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final int TSK_INDEX \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // the index value of event time string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final int ET_IDX \u003d 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // Limits the splitting of user message into substrings.","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final int LIMIT \u003d 2;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    private static final String TIME_ARGUMENT \u003d \"/at\";","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    // instance variable to store event time.","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    private final DateHandler time;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"     * @param message the text given by the user.","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"     * returns a new instance of Event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    Event(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        super(message.split(SEPARATOR, LIMIT)[TSK_INDEX]);","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d message.split(SEPARATOR, LIMIT)[ET_IDX];","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(str.split(SPACE, LIMIT)[ET_IDX].trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        this.time \u003d new DateHandler(str.split(SPACE, LIMIT)[ET_IDX].trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"     * checks if there are any events before date.","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * @return return if there is an event before date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    boolean isBefore(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"        return this.time.isBefore(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"     * checks if there are any events on date.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"     * @return return if there is an event on date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    boolean isOnDate(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"        return this.time.isOnDate(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"     * correctArgument checks if the function is valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     * @param text the task input given by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     * @return true if correct.","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTimeArgumentException if the user missed time argument out.","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    static boolean correctArgument(String text) {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"        if (!text.contains(SEPARATOR) || !text.contains(TIME_ARGUMENT) || text.trim().split(TIME_ARGUMENT).length \u003d\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTimeArgumentException(\"Event \" + text);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"     * toString returns the string representation of the Event object.","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        return SYMBOL + super.toString() + \"(at: \" + this.time + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Harish-coding":89}},{"path":"src/main/java/FaultyTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of FaultyTaskNumberException.","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * FaultyTaskNumberException is used to raise error when the user inputs a task number that is not present.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"public class FaultyTaskNumberException extends IllegalCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    // Stores the value of task num.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    private final int message;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for FaultyTaskNumberException.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    FaultyTaskNumberException(int message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        super(String.valueOf(message));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the FaultyTaskNumberException.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        return \"Task num :\" + this.message + \" isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":30}},{"path":"src/main/java/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of IllegalCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * IllegalCommandException is used to raise an error when invalid arguments are fed.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class IllegalCommandException extends IllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for IllegalCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    IllegalCommandException(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the IllegalCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        return \"IllegalCommandException: \" + getMessage() + \". Please enter a valid command!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":25}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Main class.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class Main {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    private final static String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    private static final String SEPARATOR \u003d \"------------------------------------------------\";","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"        // creates a new instance of conan.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        Conan conan \u003d new Conan();","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"        CarryOn carryOn \u003d CarryOn.NEXT;","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"        //keep asking the user for name till u get a valid name","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        while (userInput.trim().equalsIgnoreCase(EMPTY_STRING)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"            System.out.println(\"Please enter valid name\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        conan.tellName(userInput);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"        // while the user still wants to type in.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"        while (carryOn \u003d\u003d CarryOn.NEXT) {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"                // get the text from the user.","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"                String text \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"                // tell conan the text and update if the user wants to continue.","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"                if (text.equalsIgnoreCase(EMPTY_STRING)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"                    throw new EmptyCommandException(EMPTY_STRING);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"                carryOn \u003d conan.tell(text);","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"            } catch (IllegalCommandException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"                System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":48}},{"path":"src/main/java/MissingTaskArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of MissingTaskArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This Exception class throws exception when the task argument is missing in the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"public class MissingTaskArgumentException extends IllegalCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    // stores the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    private final String message;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for MissingTaskArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    MissingTaskArgumentException(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the MissingTaskArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        return \"Task missing for :\" + this.message;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":30}},{"path":"src/main/java/MissingTimeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of MissingTimeArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * MissingTimeArgumentException is used to raise error when the time argument of deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * and event tasks are not specified in user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"public class MissingTimeArgumentException extends MissingTaskArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    // stores the user message.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    private final String message;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for MissingTimeArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    MissingTimeArgumentException(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the MissingTimeArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        return \"Time argument missing for \" + this.message;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Task class.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    // symbol for indicating task is completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    private static final String CROSS \u003d \"X\";","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    // symbol for indicating task is yet to be completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    // task variable stores the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    private final String task;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // Tells if the task is completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private boolean done;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * returns a new instance of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    Task(String task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     * markDone marks the task completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    void markDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     * markDone unmarks the task as not completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    void unMarkDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"     * returns the task to be performed.","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"     * @return the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    String getTask() {","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        return this.task;","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task is due before date.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     * @return false trivially, as Tasks do not have deadlines, or event date.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    boolean isBefore(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task is on date.","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"     * @return false trivially, as tasks do not have dates associated with them.","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    boolean isOnDate(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     * toSting method returns the string representation of the object.","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representing the task instance.","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        return \"[\" +  (this.done ? CROSS : SPACE ) + \"] \" + this.task;","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":79}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Todo Class.","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    // Symbol for Todo class.","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    private static final String SYMBOL \u003d \"[T]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     * @param message the text given by user.","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of Todo.","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    Todo (String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     * toString returns the string representation of the Todo object.","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        return SYMBOL + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Harish-coding":29}},{"path":"src/main/java/WrongDateArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of WrongDateArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * WrongDateArgumentException is used to raise error when the user inputs date in the wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class WrongDateArgumentException extends IllegalCommandException {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    // Stores date string input by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    private final String date;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for WrongDateExceptionException.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     * @param date input given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    WrongDateArgumentException(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"        super(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the WrongDateArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        return \"You have input: \" + this.date + \"\\n please try with the format YYYY-MM-DD\";","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":29}},{"path":"src/main/java/WrongTimeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of WrongTimeArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":" * WrongTimeArgumentException is used to raise error when the user inputs time in the wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class WrongTimeArgumentException extends IllegalCommandException {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    // Stores date string input by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    private final String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for WrongTimeExceptionException.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     * @param time input given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    WrongTimeArgumentException(String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"        super(time);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the WrongTimeArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        return \"You have input: \" + this.time + \"\\n please try with the format HHMM\";","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"harish","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"todo buy lunch","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"deadline return book /by 2019-03-01","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"event project team meeting /at 2019-02-22","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"todo buy shoes","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"todo edit pics","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"mark 2","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"mark 5","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"todo fill out application form","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"unmark 2","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"deadline paint walls /by 2022-06-18","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"mark 7","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"mark 3","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"event dance practice /at 2022-5-1","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"event dance practice /at 2022-05-15 180","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"event dance practice /at 2022-05-15 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"unmark 5","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"unmark 7","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"unmark 3","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"mark 19","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"delete","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"delete 12","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"unmark 14","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"due-before 2020-01-10","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"due-on 2022-05-15","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"due-on","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"due-before","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"due-on 14","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"due-on","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"mark","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"mark 1","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"mark 4","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"unmark","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"deadline mark","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"deadline mark /by","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"event","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"delete 2","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"event meet","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"event meet /at","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"haha","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"lol","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"random","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"return books to library","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"bye","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":57}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"C:\\Users\\G.SARAVANAN\\.jdks\\azul-13.0.6\\bin\\javac  -cp ..\\src\\main\\java -Xlint:none -d C:\\Users\\G.SARAVANAN\\.jdks\\corretto-11.0.13\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"C:\\Users\\G.SARAVANAN\\.jdks\\azul-13.0.6\\bin\\java -classpath C:\\Users\\G.SARAVANAN\\.jdks\\corretto-11.0.13\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Harish-coding":2}}]
