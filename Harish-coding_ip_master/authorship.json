[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"# Conan","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"**_Conan_** is a task manager, who can hep you manage your day easily :v:.","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"\u003e \"The key is not spending time, but investing it.\" - Stephen R. Covey [(Source)](https://www.inc.com/dan-scalco/22-time-management-quotes-to-inspire-you-to-achieve-your-goals.html) \u003c/br\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"Conan draws inspiration from [Project Duke](https://nus-cs2103-ay2122s2.github.io/website/se-book-adapted/projectDuke/index.html), that was designed to help learn Software Engineering Techniques.","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"## Quick Links","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"+ [Quick Start](README.md#Quick-Start)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"+ [Features](README.md#Features)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"+ [User Guide](README.md#User-Guide)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"+ [Glossary](README.md#Glossary)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"+ [FAQ](README.md#FAQ)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"+ [Setting up in Intellij](README.md#Setting-up-in-Intellij)","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"## Quick Start","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"1. Download the jar file to your computer.","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"2. Run the command  `java -jar ip.jar` on ubuntu or CLI.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"3. Try the sample commands given in the user guide.","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"## Features","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"+ Run _**Conan**_ on your command line.","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"+ _**Conan**_ can remember your tasks from previous runs and can recollect them if you want to. :wink:","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"+ _**Conan**_ warns you about possible clashes between your tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"+ _**Conan**_ does not allows duplicate tasks to exist.","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"## User Guide","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"Once you run the program in your Command line, a window will open through which Conan will \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"introduce himself and ask for your name.","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"Once you are acquainted you could tell Conan the tasks you want to do.","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"#### Tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"There are :four: kinds of tasks that Conan can store.","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"1. **Todo** - Keeps track of the task that do not have to be completed without sometime. \u003c/br\u003e ","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"   Format: : todo {Task} in the command line for such commands.","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"2. **Event** - Any event that you have to attend an certain date and time, Conan can keep track of that for you. :stopwatch:","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"   Format: event {Task} /at YYYY-MM-DD HHMM","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"3. **Deadline** - Tasks that need to be completed within a time frame. :hourglass:","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"   Format: deadline {Task} /by YYYY-MM-DD HHMM","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"4. **Task** - any general tasks to keep track of.","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"   Format: {Task , more than 2 words}","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"**Note**: For Event and Deadline, time argument HHMM is not necessary to enter, however the date must be entered.","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"#### Operations","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"+ **add** : add a task to track.","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"  _Format_ : refer to [Tasks](README.md#tasks)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warning_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"  + If an empty task argument is added then task missing exception is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"  + For Event, if time agrument identifier, \u0027/at\u0027 is not used time argument missing exception is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"  + For Deadline, if time agrument identifier, \u0027/by\u0027 is not used time argument missing exception is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"  + For Event and Deadline, if the Date is not in {YYYY-MM-DD} format, error will be issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"  + For Event and Deadline, if a time argument is used, it should be of {HHMM} format or else error will be issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"  _Usage Example_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"  + make pancakes","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    \u003e I have added: make pancakes, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    \u003e Number of tasks up to now: 1","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"  + todo do laundry","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    \u003e I have added: do laundry, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    \u003e Number of tasks up to now: 2","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"  + deadline submit cs3243 project /by 2022-02-20","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"    \u003e I have added: submit cs3243 project, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    \u003e Number of tasks up to now: 3","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"  + event GEQ lecture /at 2022-02-25 0800","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"    \u003e I have added: GEH lecture, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    \u003e Number of tasks up to now: 4","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"+ **bye** : To close the program. Conan stores all your tasks so that you can visit them later.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"  _Format_: bye\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"  + NONE","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"  + bye","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    \u003e Goodbye, Jules\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"    \u003e Hope I helped you complete your tasks!\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"    \u003e Have a great day ahead, enjoy ! (^-^)/\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    \u003e Hope to see you next time! \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"+ **delete** : Delete that task from the list.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":" ","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"  _Format_: delete {Task Number}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"  + If the argument is missing the task number, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"  + If the task index number is invalid, that is if it is less than or equal to 0 or greater than \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"  the total number of tasks, an error warning is issued. ","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"  + delete 2","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"    \u003e The following task has been removed from the list :","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    \u003e [D][ ] return book (by: FRIDAY 1 MARCH 2019)","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"  + delete 4","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    \u003e Task num: 4 isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"    \u003e Please try again!\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"+ **due-on** : To view tasks that are due on this date.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":" ","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"  _Format_: due-on {YYYY-MM-DD}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"  + Issues an warning id the date argument is empty.","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"  + Issues an warning if the date is not in {YYYY-MM-DD} format.","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"  + due-on 2022-03-01","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    \u003e The following tasks are due on TUESDAY 1 MARCH 2022:\u003cbr/\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    \u003e 1.[E][ ] Finance Seminar (at: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"    \u003e 2.[D][ ] finish cp assignment (by: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"  + due-on 2022-02-20","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"    \u003e Seems like you are free on SUNDAY 20 FEBRUARY 2022","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"+ **due-before** : To view tasks that are due before this date.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"  _Format_: due-before {YYYY-MM-DD}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"  + Issues an warning id the date argument is empty.","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"  + Issues an warning if the date is not in {YYYY-MM-DD} format.","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"  + due-before 2022-03-02","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"    \u003e The following tasks are due before WEDNESDAY 2 MARCH 2022:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    \u003e 1.[E][ ] Finance Seminar (at: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    \u003e 2.[D][ ] finish cp assignment (by: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"  + due-before 2022-02-25","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"    \u003e Seems like you are free before FRIDAY 25 FEBRUARY 2022","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"+ **find** : To find tasks containing that keyword.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"  _Format_: find {Keyword}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e ","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"  + If the keyword is missing, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"  + find assign","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"    \u003e The following tasks contain assign:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"    \u003e 1.[D][ ] finish cp assignment (by: TUESDAY 1 MARCH 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"  + find monkey","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"    \u003e No task containing: monkey, was found.","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"+ **list** : To view the list of tasks lined up.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"  _Format_: list\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_: ","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"  + If the list is empty _Conan_ tells the user that the list is empty.","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"  _Usage Example_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"  + list","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"    \u003e 1.[T][ ] buy lunch \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"    \u003e 2.[D][ ] return book (by: FRIDAY 1 MARCH 2019) \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"    \u003e 3.[E][X] project team meeting (at: FRIDAY 22 FEBRUARY 2019) \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"    \u003e 4.[T][ ] buy shoes \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"  + list","lastModifiedDate":"2022-02-17"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"    \u003e No tasks are there! Seems like you are free!\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"    \u003e Do you wanna add some tasks?\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"+ **mark** : Mark that task as complete.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"  _Format_: mark {Task Number}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_: \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"  + If the argument is missing the task number, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"  + If the task index number is invalid, that is if it is less than or equal to 0 or greater than \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"  the total number of tasks, an error warning is issued. ","lastModifiedDate":"2022-02-17"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_: \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"  + mark 3","lastModifiedDate":"2022-02-17"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"    \u003e Great job, on completing this task! \\(^_^)/\u003cbr\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"    \u003e [T][X] edit pics\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"  + mark 40","lastModifiedDate":"2022-02-17"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"    \u003e Task num: 40 isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"    \u003e Please try again!\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"+ **unmark** : Mark that task as not complete.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"  _Format_: unmark {Task Number}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"  + If the argument is missing the task number, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"  + If the task index number is invalid, that is if it is less than or equal to 0 or greater than \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"  the total number of tasks, an error warning is issued. ","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-17"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e  ","lastModifiedDate":"2022-02-17"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"  + unmark 2","lastModifiedDate":"2022-02-17"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"    \u003e Sure, I have unmarked this task: \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"    \u003e [D][ ] return book (by: FRIDAY 1 MARCH 2019)","lastModifiedDate":"2022-02-17"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"  + unmark 19","lastModifiedDate":"2022-02-17"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"    \u003e Task num: 19 isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"    \u003e Please try again!\u003c/br\u003e ","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-02"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"#### Remembering Tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"Conan has the ability to remember tasks from your previous runs. If you want to access them, then run the program under the same name you used last time. :smile_cat:","lastModifiedDate":"2022-02-02"},{"lineNumber":205,"author":{"gitId":"Harish-coding"},"content":"And then type **yes** if you want to continue from last time, otherwise press **no**.","lastModifiedDate":"2022-02-02"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"#### Abilities","lastModifiedDate":"2022-02-02"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"- [X] Remember Tasks from previous runs, of a single user.","lastModifiedDate":"2022-02-02"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"- [X] identify task clashes.","lastModifiedDate":"2022-02-17"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"- [X] does not allow duplicate tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"- [ ] Be able to save data of different users on the same Pc.","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":214,"author":{"gitId":"Harish-coding"},"content":"***","lastModifiedDate":"2022-02-02"},{"lineNumber":215,"author":{"gitId":"Harish-coding"},"content":"#### For programmers","lastModifiedDate":"2022-02-02"},{"lineNumber":216,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":217,"author":{"gitId":"Harish-coding"},"content":"Open IDE and run `Launcher.main()`;","lastModifiedDate":"2022-02-17"},{"lineNumber":218,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":219,"author":{"gitId":"Harish-coding"},"content":"```java","lastModifiedDate":"2022-02-02"},{"lineNumber":220,"author":{"gitId":"Harish-coding"},"content":"public class Launcher {","lastModifiedDate":"2022-02-17"},{"lineNumber":221,"author":{"gitId":"Harish-coding"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-02"},{"lineNumber":222,"author":{"gitId":"Harish-coding"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-17"},{"lineNumber":223,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":224,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":225,"author":{"gitId":"Harish-coding"},"content":"```","lastModifiedDate":"2022-02-02"},{"lineNumber":226,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":227,"author":{"gitId":"Harish-coding"},"content":"## FAQ","lastModifiedDate":"2022-02-17"},{"lineNumber":228,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":229,"author":{"gitId":"Harish-coding"},"content":"**Q.** Can multiple users use the same app? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":230,"author":{"gitId":"Harish-coding"},"content":"**A.** This task manager is designed to track the tasks of a sigle user, at a time. This means if another \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":231,"author":{"gitId":"Harish-coding"},"content":"user starts the app then your tasks will be erased.","lastModifiedDate":"2022-02-17"},{"lineNumber":232,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":233,"author":{"gitId":"Harish-coding"},"content":"**Q.** What happens after I type in the bye command? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":234,"author":{"gitId":"Harish-coding"},"content":"**A.** Once the bye command is enter, Conan shut downs, however the window, will still be open, in case you \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":235,"author":{"gitId":"Harish-coding"},"content":"would like to review any of the actions perfrmed.","lastModifiedDate":"2022-02-17"},{"lineNumber":236,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":237,"author":{"gitId":"Harish-coding"},"content":"**Q.** What version of java is needed to run Conan? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":238,"author":{"gitId":"Harish-coding"},"content":"**A.** You would need to have Java 11, to run Conan on your device.","lastModifiedDate":"2022-02-17"},{"lineNumber":239,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":240,"author":{"gitId":"Harish-coding"},"content":"**Q.** If I try to add a duplicate task what would happen? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":241,"author":{"gitId":"Harish-coding"},"content":"**A.** The duplicate task will not be added to the list of tasks, instead a warning will be issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":242,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":243,"author":{"gitId":"Harish-coding"},"content":"**Q.** Can I add a task that clashes with a previously added task? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":244,"author":{"gitId":"Harish-coding"},"content":"**A.** Yes, an warning will be isseud, but the task will be added. In case you would like to remove the task use\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":245,"author":{"gitId":"Harish-coding"},"content":"the delete command.","lastModifiedDate":"2022-02-17"},{"lineNumber":246,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":247,"author":{"gitId":"Harish-coding"},"content":"**Q.** What happens if I input an empty Command? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":248,"author":{"gitId":"Harish-coding"},"content":"**A.** A warning will be issued to indicate that empty command has been entered.","lastModifiedDate":"2022-02-17"},{"lineNumber":249,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":250,"author":{"gitId":"Harish-coding"},"content":"**Q.** Conan window is still open after the I entered the bye command, doe this mean I can add more tasks? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":251,"author":{"gitId":"Harish-coding"},"content":"**A.** No, once you have typed, bye, conan program stops, and any command you enter will be not recorded, or carried \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":252,"author":{"gitId":"Harish-coding"},"content":"out by conan. Instead run conan again.","lastModifiedDate":"2022-02-17"},{"lineNumber":253,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":254,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":255,"author":{"gitId":"Harish-coding"},"content":"## Glossary","lastModifiedDate":"2022-02-17"},{"lineNumber":256,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":257,"author":{"gitId":"Harish-coding"},"content":"| Action      | Description                                | Format           |","lastModifiedDate":"2022-02-17"},{"lineNumber":258,"author":{"gitId":"Harish-coding"},"content":"| ----------- | ------------------------------------------ | ---------------- |","lastModifiedDate":"2022-02-17"},{"lineNumber":259,"author":{"gitId":"Harish-coding"},"content":"| Add         | Adds a task to track                       | {Task , more than 2 words} \u003c/br\u003e todo {Task} \u003c/br\u003e event {Task} /at YYYY-MM-DD HHMM \u003c/br\u003e deadline {Task} /by YYYY-MM-DD HHMM |","lastModifiedDate":"2022-02-17"},{"lineNumber":260,"author":{"gitId":"Harish-coding"},"content":"| Bye         | Closes the program and stores the tasks    | bye","lastModifiedDate":"2022-02-17"},{"lineNumber":261,"author":{"gitId":"Harish-coding"},"content":"| Delete      | Deletes a task from the list of tasks      | delete {Index Number}","lastModifiedDate":"2022-02-17"},{"lineNumber":262,"author":{"gitId":"Harish-coding"},"content":"| Due on      | Gets tasks that are due on {Date}          | due-on {YYYY-MM-DD}","lastModifiedDate":"2022-02-17"},{"lineNumber":263,"author":{"gitId":"Harish-coding"},"content":"| Due before  | Gets tasks that are due before {Date}      | due-before {YYYY-MM-DD}","lastModifiedDate":"2022-02-17"},{"lineNumber":264,"author":{"gitId":"Harish-coding"},"content":"| Find        | Finds tasks that have {Keyword}            | find {keyword}","lastModifiedDate":"2022-02-17"},{"lineNumber":265,"author":{"gitId":"Harish-coding"},"content":"| List        | Displays the lists of tracks added by user | list","lastModifiedDate":"2022-02-17"},{"lineNumber":266,"author":{"gitId":"Harish-coding"},"content":"| Mark        | Marks task at {Index number} as done       | mark {Index Number}","lastModifiedDate":"2022-02-17"},{"lineNumber":267,"author":{"gitId":"Harish-coding"},"content":"| Unmark      | Marks task at {Index number} as not done   | unmark {Index Number}","lastModifiedDate":"2022-02-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2022-02-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-02-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":273,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-02-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2022-02-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-02-17"},{"lineNumber":276,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-02-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-02-17"},{"lineNumber":278,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":279,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"-":13,"Harish-coding":266}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"Harish-coding":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"# Conan","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"**_Conan_** is a task manager, who can help you manage your day easily :v:.","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"\u003e \"The key is not spending time, but investing it.\" - Stephen R. Covey [(Source)](https://www.inc.com/dan-scalco/22-time-management-quotes-to-inspire-you-to-achieve-your-goals.html) \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"Conan draws inspiration from [Project Duke](https://nus-cs2103-ay2122s2.github.io/website/se-book-adapted/projectDuke/index.html), that was designed to help learn Software Engineering Techniques.","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"## Quick Links","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"+ [Quick Start](README.md#Quick-Start)","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"+ [Features](README.md#Features)","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"+ [User Guide](README.md#User-Guide)","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"+ [Glossary](README.md#Glossary)","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"+ [FAQ](README.md#FAQ)","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"+ [Setting up in Intellij](README.md#Setting-up-in-Intellij)","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"## Quick Start","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"1. Download the jar file to your computer.","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"2. Run the command  `java -jar ip.jar` on ubuntu or CLI.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"3. Try the sample commands given in the user guide.","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"+ Run _**Conan**_ on your command line.","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"+ _**Conan**_ can remember your tasks from previous runs and can recollect them if you want to. ","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"+ _**Conan**_ warns you about possible clashes between your tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"+ _**Conan**_ does not allows duplicate tasks to exist.","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"## User Guide","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"Once you run the program in your Command line, a window will open through which Conan will","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"introduce himself and ask for your name.","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"Once you are acquainted you could tell Conan the tasks you want to do.","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"#### Tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"There are :four: kinds of tasks that Conan can store.","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"1. **Todo** - Keeps track of the task that do not have to be completed without sometime. \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"   Format: : todo {Task} in the command line for such commands.","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"2. **Event** - Any event that you have to attend a certain date and time, Conan can keep track of that for you.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"   Format: event {Task} /at YYYY-MM-DD HHMM","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"3. **Deadline** - Tasks that need to be completed within a time frame.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"   Format: deadline {Task} /by YYYY-MM-DD HHMM","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"4. **Task** - any general tasks to keep track of.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"   Format: {Task , more than 2 words}","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"**Note**: For Event and Deadline, time argument HHMM is not necessary to enter, however the date must be entered.","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"#### Operations","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"+ **add** : add a task to track.","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"  _Format_ : refer to [Tasks](README.md#tasks)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warning_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    + If an empty task argument is added then task missing exception is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    + For Event, if time argument identifier, \u0027/at\u0027 is not used time argument missing exception is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    + For Deadline, if time argument identifier, \u0027/by\u0027 is not used time argument missing exception is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    + For Event and Deadline, if the Date is not in {YYYY-MM-DD} format, error will be issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"    + For Event and Deadline, if a time argument is used, it should be of {HHMM} format or else error will be issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"  _Usage Example_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    + make pancakes","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"      \u003e I have added: make pancakes, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"      Number of tasks up to now: 1","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    + todo do laundry","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"      \u003e I have added: do laundry, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"       Number of tasks up to now: 2","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    + deadline submit cs3243 project /by 2022-02-20","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"      \u003e I have added: submit cs3243 project, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"       Number of tasks up to now: 3","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"    + event GEQ lecture /at 2022-02-25 0800","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"      \u003e I have added: GEH lecture, to your list of tasks.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"       Number of tasks up to now: 4","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"+ **bye** : To close the program. Conan stores all your tasks so that you can visit them later.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"  _Format_: bye\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    + NONE","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"    + bye","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"      \u003e Goodbye, Jules\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"       Hope I helped you complete your tasks!\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"       Have a great day ahead, enjoy ! (^-^)/\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"       Hope to see you next time! ","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"+ **delete** : Delete that task from the list.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"  _Format_: delete {Task Number}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    + If the argument is missing the task number, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"    + If the task index number is invalid, that is if it is less than or equal to 0 or greater than \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"      the total number of tasks, an error warning is issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    + delete 2","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"      \u003e The following task has been removed from the list : \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"       [D][ ] return book (by: FRIDAY 1 MARCH 2019)","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"    + delete 4","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"      \u003e Task num: 4 isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"       Please try again!","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"      ","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"+ **due-on** : To view tasks that are due on this date.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"  _Format_: due-on {YYYY-MM-DD}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"    + Issues a warning id the date argument is empty.","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    + Issues a warning if the date is not in {YYYY-MM-DD} format.","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"    + due-on 2022-03-01","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"      \u003e The following tasks are due on TUESDAY 1 MARCH 2022:\u003cbr/\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"       1.[E][ ] Finance Seminar (at: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"       2.[D][ ] finish cp assignment (by: TUESDAY 1 MARCH 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"    + due-on 2022-02-20","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"      \u003e Seems like you are free on SUNDAY 20 FEBRUARY 2022","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"+ **due-before** : To view tasks that are due before this date.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"  _Format_: due-before {YYYY-MM-DD}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    + Issues a warning id the date argument is empty.","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"    + Issues a warning if the date is not in {YYYY-MM-DD} format.","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"    + due-before 2022-03-02","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"      \u003e The following tasks are due before WEDNESDAY 2 MARCH 2022:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"       1.[E][ ] Finance Seminar (at: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"       2.[D][ ] finish cp assignment (by: TUESDAY 1 MARCH 2022)\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"    + due-before 2022-02-25","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"      \u003e Seems like you are free before FRIDAY 25 FEBRUARY 2022","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"+ **find** : To find tasks containing that keyword.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"  _Format_: find {Keyword}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"    + If the keyword is missing, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"    + find assign","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"      \u003e The following tasks contain assign:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"       1.[D][ ] finish cp assignment (by: TUESDAY 1 MARCH 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"    + find monkey","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"      \u003e No task containing: monkey, was found.","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"+ **list** : To view the list of tasks lined up.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"  _Format_: list\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"    + If the list is empty _Conan_ tells the user that the list is empty.","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"  _Usage Example_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"    + list","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"      \u003e 1.[T][ ] buy lunch \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"       2.[D][ ] return book (by: FRIDAY 1 MARCH 2019) \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"       3.[E][X] project team meeting (at: FRIDAY 22 FEBRUARY 2019) \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"       4.[T][ ] buy shoes ","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"    + list","lastModifiedDate":"2022-02-17"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"      \u003e No tasks are there! Seems like you are free!\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"       Do you wanna add some tasks?","lastModifiedDate":"2022-02-17"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"+ **mark** : Mark that task as complete.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"  _Format_: mark {Task Number}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_: \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"    + If the argument is missing the task number, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"    + If the task index number is invalid, that is if it is less than or equal to 0 or greater than \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"      the total number of tasks, an error warning is issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_: \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"    + mark 3","lastModifiedDate":"2022-02-17"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"      \u003e Great job, on completing this task! \\(^_^)/\u003cbr\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"       [T][X] edit pics","lastModifiedDate":"2022-02-17"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"    + mark 40","lastModifiedDate":"2022-02-17"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"      \u003e Task num: 40 isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"       Please try again!","lastModifiedDate":"2022-02-17"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"+ **unmark** : Mark that task as not complete.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"  _Format_: unmark {Task Number}\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"  _Possible Error Warnings_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"    + If the argument is missing the task number, error is raised.","lastModifiedDate":"2022-02-17"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"    + If the task index number is invalid, that is if it is less than or equal to 0 or greater than \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"      the total number of tasks, an error warning is issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"  _Usage Examples_:\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"    + unmark 2","lastModifiedDate":"2022-02-17"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"      \u003e Sure, I have unmarked this task: \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"       [D][ ] return book (by: FRIDAY 1 MARCH 2019)","lastModifiedDate":"2022-02-17"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"    + unmark 19","lastModifiedDate":"2022-02-17"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"      \u003e Task num: 19 isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"       Please try again!","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"#### Remembering Tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"Conan has the ability to remember tasks from your previous runs. If you want to access them, then run the program under ","lastModifiedDate":"2022-02-17"},{"lineNumber":205,"author":{"gitId":"Harish-coding"},"content":"the same name you used last time. And then type **yes** if you want to continue from last time, otherwise press **no**.","lastModifiedDate":"2022-02-17"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"#### Abilities","lastModifiedDate":"2022-02-17"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"- [X] Remember Tasks from previous runs, of a single user.","lastModifiedDate":"2022-02-17"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"- [X] identify task clashes.","lastModifiedDate":"2022-02-17"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"- [X] does not allow duplicate tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"- [ ] Be able to save data of different users on the same Pc.","lastModifiedDate":"2022-02-17"},{"lineNumber":213,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":214,"author":{"gitId":"Harish-coding"},"content":"***","lastModifiedDate":"2022-02-17"},{"lineNumber":215,"author":{"gitId":"Harish-coding"},"content":"#### For programmers","lastModifiedDate":"2022-02-17"},{"lineNumber":216,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":217,"author":{"gitId":"Harish-coding"},"content":"Open IDE and run `Launcher.main()`;","lastModifiedDate":"2022-02-17"},{"lineNumber":218,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":219,"author":{"gitId":"Harish-coding"},"content":"```java","lastModifiedDate":"2022-02-17"},{"lineNumber":220,"author":{"gitId":"Harish-coding"},"content":"public class Launcher {","lastModifiedDate":"2022-02-17"},{"lineNumber":221,"author":{"gitId":"Harish-coding"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-17"},{"lineNumber":222,"author":{"gitId":"Harish-coding"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-17"},{"lineNumber":223,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":224,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-02-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":226,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":227,"author":{"gitId":"Harish-coding"},"content":"## FAQ","lastModifiedDate":"2022-02-17"},{"lineNumber":228,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":229,"author":{"gitId":"Harish-coding"},"content":"**Q.** Can multiple users use the same app? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":230,"author":{"gitId":"Harish-coding"},"content":"**A.** This task manager is designed to track the tasks of a single user, at a time. This means if another \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":231,"author":{"gitId":"Harish-coding"},"content":"user starts the app then your tasks will be erased.","lastModifiedDate":"2022-02-17"},{"lineNumber":232,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":233,"author":{"gitId":"Harish-coding"},"content":"**Q.** What happens after I type in the bye command? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":234,"author":{"gitId":"Harish-coding"},"content":"**A.** Once the bye command is entered, Conan shutdowns, however the window, will still be open, in case you \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":235,"author":{"gitId":"Harish-coding"},"content":"would like to review any of the actions performed.","lastModifiedDate":"2022-02-17"},{"lineNumber":236,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":237,"author":{"gitId":"Harish-coding"},"content":"**Q.** What version of java is needed to run Conan? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":238,"author":{"gitId":"Harish-coding"},"content":"**A.** You would need to have Java 11, to run Conan on your device.","lastModifiedDate":"2022-02-17"},{"lineNumber":239,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":240,"author":{"gitId":"Harish-coding"},"content":"**Q.** If I try to add a duplicate task what would happen? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":241,"author":{"gitId":"Harish-coding"},"content":"**A.** The duplicate task will not be added to the list of tasks, instead a warning will be issued.","lastModifiedDate":"2022-02-17"},{"lineNumber":242,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":243,"author":{"gitId":"Harish-coding"},"content":"**Q.** Can I add a task that clashes with a previously added task? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":244,"author":{"gitId":"Harish-coding"},"content":"**A.** Yes, a warning will be issued, but the task will be added. In case you would like to remove the task use\u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":245,"author":{"gitId":"Harish-coding"},"content":"the delete command.","lastModifiedDate":"2022-02-17"},{"lineNumber":246,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":247,"author":{"gitId":"Harish-coding"},"content":"**Q.** What happens if I input an empty Command? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":248,"author":{"gitId":"Harish-coding"},"content":"**A.** A warning will be issued to indicate that empty command has been entered.","lastModifiedDate":"2022-02-17"},{"lineNumber":249,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":250,"author":{"gitId":"Harish-coding"},"content":"**Q.** Conan window is still open after I entered the bye command, doe this mean I can add more tasks? \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":251,"author":{"gitId":"Harish-coding"},"content":"**A.** No, once you have typed, bye, conan program stops, and any command you enter will be not recorded, or carried \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":252,"author":{"gitId":"Harish-coding"},"content":"out by conan. Instead, run conan again.","lastModifiedDate":"2022-02-17"},{"lineNumber":253,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":254,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":255,"author":{"gitId":"Harish-coding"},"content":"## Glossary","lastModifiedDate":"2022-02-17"},{"lineNumber":256,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":257,"author":{"gitId":"Harish-coding"},"content":"| Action      | Description                                | Format                                                                                                                        |","lastModifiedDate":"2022-02-17"},{"lineNumber":258,"author":{"gitId":"Harish-coding"},"content":"| ----------- | ------------------------------------------ |-------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-17"},{"lineNumber":259,"author":{"gitId":"Harish-coding"},"content":"| Add         | Adds a task to track                       | {Task , more than 2 words} \u003c/br\u003e todo {Task} \u003c/br\u003e event {Task} /at YYYY-MM-DD HHMM \u003c/br\u003e deadline {Task} /by YYYY-MM-DD HHMM |","lastModifiedDate":"2022-02-17"},{"lineNumber":260,"author":{"gitId":"Harish-coding"},"content":"| Bye         | Closes the program and stores the tasks    | bye                                                                                                                           |","lastModifiedDate":"2022-02-17"},{"lineNumber":261,"author":{"gitId":"Harish-coding"},"content":"| Delete      | Deletes a task from the list of tasks      | delete {Index Number}                                                                                                         |","lastModifiedDate":"2022-02-17"},{"lineNumber":262,"author":{"gitId":"Harish-coding"},"content":"| Due on      | Gets tasks that are due on {Date}          | due-on {YYYY-MM-DD}                                                                                                           |","lastModifiedDate":"2022-02-17"},{"lineNumber":263,"author":{"gitId":"Harish-coding"},"content":"| Due before  | Gets tasks that are due before {Date}      | due-before {YYYY-MM-DD}                                                                                                       |","lastModifiedDate":"2022-02-17"},{"lineNumber":264,"author":{"gitId":"Harish-coding"},"content":"| Find        | Finds tasks that have {Keyword}            | find {keyword}                                                                                                                |","lastModifiedDate":"2022-02-17"},{"lineNumber":265,"author":{"gitId":"Harish-coding"},"content":"| List        | Displays the lists of tracks added by user | list                                                                                                                          |","lastModifiedDate":"2022-02-17"},{"lineNumber":266,"author":{"gitId":"Harish-coding"},"content":"| Mark        | Marks task at {Index number} as done       | mark {Index Number}                                                                                                           |","lastModifiedDate":"2022-02-17"},{"lineNumber":267,"author":{"gitId":"Harish-coding"},"content":"| Unmark      | Marks task at {Index number} as not done   | unmark {Index Number}                                                                                                         |","lastModifiedDate":"2022-02-17"},{"lineNumber":268,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":269,"author":{"gitId":"Harish-coding"},"content":"## Setting up in Intellij","lastModifiedDate":"2022-02-17"},{"lineNumber":270,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":271,"author":{"gitId":"Harish-coding"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-02-17"},{"lineNumber":272,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":273,"author":{"gitId":"Harish-coding"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-02-17"},{"lineNumber":274,"author":{"gitId":"Harish-coding"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-02-17"},{"lineNumber":275,"author":{"gitId":"Harish-coding"},"content":"    1. Click `Open`.","lastModifiedDate":"2022-02-17"},{"lineNumber":276,"author":{"gitId":"Harish-coding"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-02-17"},{"lineNumber":277,"author":{"gitId":"Harish-coding"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-02-17"},{"lineNumber":278,"author":{"gitId":"Harish-coding"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk). \u003c/br\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":279,"author":{"gitId":"Harish-coding"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-02-17"},{"lineNumber":280,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"-":19,"Harish-coding":261}},{"path":"src/main/java/CommandSet/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.MissingTimeArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import tasks.Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import tasks.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eAddCommand\u003c/h1\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":" * AddCommand class adds tasks to the list of user tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":" *\u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    // stores space.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    // starting index of a list or a char in string.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    private static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    // stores the value of empty task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    private static final int EMPTY_TASKLIST \u003d 0;","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    // used to differentiate between constructors.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    private static final int DUMMY_VARIABLE \u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    // the index of element containing the task description.","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    private static final int TASK_DESC_IDX \u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    // Stores the split limit.","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    private static final int SPLIT_LIMIT \u003d 2;","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command TODO.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    private static final String TODO \u003d \"TODO\";","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command DEADLINE.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    private static final String DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command EVENT.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    private static final String EVENT \u003d \"EVENT\";","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of addCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    AddCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        super();","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"     * adds the task to taskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"     * @param text the string of the task to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTimeArgumentException if the user missed time argument out.","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    public static void add(TaskList taskList, String text) {","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"        assert text.contains(SPACE) : \"Must contain a space to differentiate task from type of task\";","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"      ","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"        String[] splitText \u003d text.split(SPACE, SPLIT_LIMIT);","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"        String type \u003d splitText[TASK_TYPE_INDEX].toUpperCase();","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"        String message \u003d splitText[TASK_DESC_IDX];","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"        Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"        switch (type) {","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"        case TODO:","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"            task \u003d new Todo(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"            Deadline.correctArgument(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"            task \u003d new Deadline(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"        case EVENT:","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"            Event.correctArgument(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"            task \u003d new Event(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"            task \u003d new Task(text);","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        // checks if there has been a similar task","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"        TaskList similarTasks \u003d taskList.getTasksContaining(task.getTask());","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"        if (similarTasks.numOfTasks() !\u003d EMPTY_TASKLIST) {","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"            Ui.printFoundSimilarTask(similarTasks);","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"            // checks for any possible clashes.","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"            TaskList clashes \u003d taskList.getTasksDueOn(task.getDate());","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"            // add the task.","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"            taskList.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"            if (clashes.numOfTasks() \u003d\u003d EMPTY_TASKLIST) { // no clashes.","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"                Ui.printAdded(task.getTask(), taskList.numOfTasks());","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"            } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"                Ui.printClashes(clashes);","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * adds the previous tasks to the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"     * @param storage the string of the task to be added.","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"    public static void add(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        for (String task: storage.loadPreviousTasks()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"            if (Todo.isTodo(task)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"                taskList.add(new Todo(task, DUMMY_VARIABLE));","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"            } else if (Deadline.isDeadline(task)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"                taskList.add(new Deadline(task, DUMMY_VARIABLE));","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"            } else if (Event.isEvent(task)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"                taskList.add(new Event(task, DUMMY_VARIABLE));","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"                taskList.add(new Task(task, DUMMY_VARIABLE));","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":137}},{"path":"src/main/java/CommandSet/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import helper.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eByeCommand\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * ByeCommand class is responsible for closing the program and storing the user tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * for accessing in next run.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * Empty Constructor for ByeCommand.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    ByeCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"        super();","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * stores the user tasks and username and closes the program.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @param storage the storage instance associated with the current program.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    public static void executeBye(String username, Storage storage, TaskList taskList) {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        String toStore \u003d username + \"\\n\" + taskList.getTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        storage.storeTasks(toStore);","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"        Ui.printFarewell(username);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":38}},{"path":"src/main/java/CommandSet/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eCommand class\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * Command class is a super class for all the commands that can be","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * implemented by conan.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Command class.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    Command() {}","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":19}},{"path":"src/main/java/CommandSet/CommandChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.IllegalCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import exceptions.InvalidYesOrNoException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import exceptions.MissingTaskArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eCommandChecker\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * CommandChecker class checks the user input and returns the type of command input by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"public class CommandChecker {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    // stores space.","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    // starting index of a list or a char in string.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    // Stores the split limit.","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    private static final int SPLIT_LIMIT \u003d 2;","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    // MARK stores the command mark.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    // UNMARK stores the command unmark.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for due before.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    private static final String DUE_BEFORE \u003d \"due-before\";","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for due on.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    private static final String DUE_ON \u003d \"due-on\";","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for find.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command TODO.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    private static final String TODO \u003d \"TODO\";","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command DEADLINE.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    private static final String DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    // Stores the command EVENT.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    private static final String EVENT \u003d \"EVENT\";","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    // BYE variable stores bye, which recognises user exit command.","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    private static final String BYE \u003d \"BYE\";","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    //DELETE variable stores delete command.","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    // the user input when they want to continue with the previous task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"    private static final String YES \u003d \"yes\";","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    // the user input when they don\u0027t want to continue with the previous task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    private static final String NO \u003d \"no\";","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    // LIST variable store the list command.","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    private static final String LIST \u003d \"LIST\";","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"     * finds and checks if the user command is valid.","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input message.","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * @return the respective command enum.","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    public static Commands findAndCheck(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"            // Checks if the user wants to exit.","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"            if (message.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"                return Commands.BYE;","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"            // Checks if the user wants to display the tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"            if (message.equalsIgnoreCase(LIST)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"                return Commands.LIST;","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"            // Primary error handling for commands.","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"            if (!message.contains(SPACE)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"                throwMissingTaskArgument(message);","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"            assert message.contains(SPACE) : \"wrong format of command\";","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"            String command \u003d message.split(SPACE, SPLIT_LIMIT)[START_INDEX].toLowerCase();","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"            return findCommandType(command);            ","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(e.toString() + \"\\nPlease try again!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"            return Commands.INVALID;","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     * throws an exception depending on the command type.","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * @param command the command entered by the user.","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTaskArgumentException if the command is missing the task argument.","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * @throws IllegalCommandException if the command is not appropriate.","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"    private static void throwMissingTaskArgument(String command) {","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        // check if the commands are empty,","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        // or else its invalid command.","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"        if (command.equalsIgnoreCase(TODO)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(TODO);","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(DEADLINE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(DEADLINE);","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(EVENT)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(EVENT);","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(MARK)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(MARK);","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(UNMARK)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(UNMARK);","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(DELETE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(DELETE);","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(DUE_BEFORE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(DUE_BEFORE);","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(DUE_ON)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(DUE_ON);","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"        } else if (command.equalsIgnoreCase(FIND)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTaskArgumentException(FIND);","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"            throw new IllegalCommandException(command);","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"     * checks the command type.","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"     * @param command the command entered by the user.","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"     * @return command type entered by the user..","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"    private static Commands findCommandType(String command) {","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"        // check if the command says mark or unmarked.","lastModifiedDate":"2022-01-29"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        switch (command) {","lastModifiedDate":"2022-01-29"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"        case MARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"            return Commands.MARK;","lastModifiedDate":"2022-01-29"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"            return Commands.UNMARK;","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        case DELETE:","lastModifiedDate":"2022-01-29"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"            return Commands.DELETE;","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"        case DUE_BEFORE:","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"            return Commands.DUEBEFORE;","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"        case DUE_ON:","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"            return Commands.DUEON;","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"        case FIND:","lastModifiedDate":"2022-01-30"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"            return Commands.FIND;","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"            return Commands.ADD;","lastModifiedDate":"2022-01-29"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"     * checks whether the user wants to continue from previous tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"     * @return either YES or NO.","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"     * @throws InvalidYesOrNoException if the user inputs a command other than yes or no.","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"    public static Commands checkYesOrNo(String message) {","lastModifiedDate":"2022-01-30"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"        switch (message.toLowerCase()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"        case YES:","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"            return Commands.YES;","lastModifiedDate":"2022-01-29"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"        case NO:","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"            return Commands.NO;","lastModifiedDate":"2022-01-29"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"            throw new InvalidYesOrNoException(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":178}},{"path":"src/main/java/CommandSet/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eCommands\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * Commands Enum contains the commands that are available to the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"public enum Commands {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    // contains commands that are valid.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    // invalid command enum is to indicate the command given by user was invalid.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    ADD, BYE, DELETE, DUEBEFORE, DUEON, FIND, INVALID, LIST, MARK, NO, UNMARK, YES","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":15}},{"path":"src/main/java/CommandSet/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.FaultyTaskNumberException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eDeleteCommand\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * DeleteCommand deletes a task from the list of user tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    // stores the value of space.","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    // the index of the task number in the split array.","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private static final int TASK_NUM_IDX \u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"  ","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of DeleteCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    DeleteCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        super();","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"     * deletes the task at taskNum.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user command.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     * @throws FaultyTaskNumberException if the user inputs an invalid task number.","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    public static void delete(TaskList taskList, String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        assert message.contains(SPACE) : \"Must contain space to find the task number.\";","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        String[] arr \u003d message.split(SPACE);","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        int num \u003d Integer.valueOf(arr[TASK_NUM_IDX]);","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d taskList.numOfTasks()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"            Task task \u003d taskList.remove(num - 1);  // to adjust with index starting with 0.","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"            Ui.printRemoved(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"            throw new FaultyTaskNumberException(num);","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":52}},{"path":"src/main/java/CommandSet/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import helper.DateHandler;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * File contains the implementation of DueCommand class.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eDueCommand\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * DueCommand implements the command that the would returns the list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * that are due on a certain date or due before a certain date.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    // the size of task list if no tasks are present.","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    private static final int EMPTY \u003d 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for due before.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    private static final String DUE_BEFORE \u003d \"due-before\";","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for due on.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    private static final String DUE_ON \u003d \"due-on\";","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for DueCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of DueCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    DueCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        super();","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     * checks the tasks that are due on date.","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     * @param date the due date.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    public static void getTasksDueOn(String date, TaskList taskList) {","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        date \u003d date.substring(DUE_ON.length()).trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"        TaskList dueTasks \u003d taskList.getTasksDueOn(date);","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"        date \u003d new DateHandler(date).toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        if (dueTasks.numOfTasks() !\u003d EMPTY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(\"The following Tasks are due on \" + date + \":\\n\" + dueTasks.toString());","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(\"Seems like you are free on \" + date);","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"     * checks the tasks that are due before date.","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"     * @param date the due date.","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    public static void getTasksDueBefore(String date, TaskList taskList) {","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"        date \u003d date.substring(DUE_BEFORE.length()).trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        TaskList dueTasks \u003d taskList.getTasksDueBefore(date);","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        date \u003d new DateHandler(date).toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"        if (dueTasks.numOfTasks() !\u003d EMPTY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(\"The following Tasks are due before \" + date + \":\\n\" +dueTasks.toString());","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(\"Seems like you are free before \" + date);","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":73}},{"path":"src/main/java/CommandSet/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eFindCommand\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * FindCommands checks if any of the tasks in the list of tasks match","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * the user input word.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // stores the command for find.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // stores the value of no tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final int EMPTY \u003d 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * checks for tasks containing the word given by user.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * @param word the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    public static void findTasksContaining(String word, TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"        word \u003d word.substring(FIND.length()).trim();","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"        TaskList tasksContainingWord \u003d taskList.getTasksContaining(word);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        if (tasksContainingWord.numOfTasks() \u003d\u003d EMPTY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"            Ui.printNoTasksFound(word);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(\"The following tasks contain, \" + word + \":\" + tasksContainingWord.toString());","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Harish-coding":40}},{"path":"src/main/java/CommandSet/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    // the size of task list if no tasks are present.","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    private static final int EMPTY \u003d 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"     * prints the list of user commands.","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    public static void list(TaskList taskList) {","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"        if (taskList.numOfTasks() !\u003d EMPTY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(taskList.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(\"No tasks are there! Seems like you are free! \\n Do you wanna add some tasks?\");","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"Harish-coding":24}},{"path":"src/main/java/CommandSet/Marking.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.FaultyTaskNumberException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eMarking\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * Marking class implements the methods are mark tasks as done or","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * unmark them.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"public class Marking extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // stores the value of space.","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // the index of the task number in the split array.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final int TASK_NUM_IDX \u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // smallest task number","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final int TASK_START_NUM \u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Marking.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of Marking.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    Marking() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"        super();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * marks a task as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user command.","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     * @throws FaultyTaskNumberException if the user inputs an invalid task number.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    public static void markTask(String message, TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        String[] arr \u003d message.split(SPACE);","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"        int num \u003d Integer.valueOf(arr[TASK_NUM_IDX]);","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"        if (num \u003c\u003d taskList.numOfTasks() \u0026\u0026 num \u003e\u003d TASK_START_NUM) {","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"            taskList.get(num - 1).markDone();                // to adjust with index starting with 0.","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"            Ui.printTaskCompleted(taskList.get(num - 1));    // to adjust with index starting with 0.","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"            throw new FaultyTaskNumberException(num);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     * marks a task as not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user command.","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     * @throws FaultyTaskNumberException if the user inputs an invalid task number.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    public static void unmarkTask(String message, TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        String[] arr \u003d message.split(SPACE);","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        int num \u003d Integer.valueOf(arr[TASK_NUM_IDX]);","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d taskList.numOfTasks()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"            taskList.get(num - 1).unMarkDone();         // to adjust with index starting with 0.","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"            Ui.printUnmarked(taskList.get(num - 1));    // to adjust with index starting with 0.","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"            throw new FaultyTaskNumberException(num);","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":74}},{"path":"src/main/java/Conan/Conan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package conan;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import commandset.*;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import exceptions.IllegalCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import exceptions.InvalidYesOrNoException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import helper.CarryOn;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import helper.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import helper.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eConan\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" * Conan class contains the implementation of the task manager.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"public class Conan {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    // used as a temporary value placeholder.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private static final String EMPTY_STR_FILLER \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    // username is an instance variable that stores the name of the user.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    private String username;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    // instance of storage class to deal with storing user tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    // instance of taskList.","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"     * Constructor returns a new Conan object.","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * returns a new Conan instance.","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    public Conan() {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        Ui.printGreeting();","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        this.username \u003d EMPTY_STR_FILLER;","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * updates the username, returns true if there was a similar user previously.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    public boolean tellName(String username) {","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        boolean isSimilarUser \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        String previousUser \u003d EMPTY_STR_FILLER;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        if (storage.isFilePresent()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"            // the first line of the file contains the username.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"            previousUser \u003d storage.getPreviousUser();","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        this.username \u003d username.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        if (!previousUser.equalsIgnoreCase(this.username)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"            Ui.printSayHello(this.username);","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"            Ui.printFoundSimilarName(previousUser);","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"            isSimilarUser \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"        return isSimilarUser;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"     * checks is the user wants to add the previous tasks to list.","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"     * @param userInput the userInput.","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"     * @return true is successful, false if the user typed invalid input.","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"    public boolean continueFromLastTime(String userInput) {","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"        boolean isSuccessful \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"            userInput \u003d userInput.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"            if (CommandChecker.checkYesOrNo(userInput) \u003d\u003d Commands.YES) {","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"                AddCommand.add(this.taskList, this.storage);","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"            Ui.printAsk(this.username);","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        } catch (InvalidYesOrNoException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(e.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"            isSuccessful \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"        } finally {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"            return isSuccessful;","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * implements the user command.","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * @return CarryOn.NEXT if the user wants to continue;","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     * or CarryOn.STOP if the user wants to stop.","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"    public CarryOn tell(String message) {","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        CarryOn carryOn \u003d CarryOn.NEXT;","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"            message \u003d message.trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"            Commands userCommand \u003d CommandChecker.findAndCheck(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"            switch (userCommand) {","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"            case ADD:","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"                AddCommand.add(taskList, message);","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"            case BYE:","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"                ByeCommand.executeBye(this.username, this.storage, this.taskList);","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"                carryOn \u003d CarryOn.STOP;","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"            case DELETE:","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"                DeleteCommand.delete(this.taskList, message);","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"            case DUEBEFORE:","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"                DueCommand.getTasksDueBefore(message, this.taskList);","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"            case DUEON:","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"                DueCommand.getTasksDueOn(message, this.taskList);","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"            case FIND:","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"                FindCommand.findTasksContaining(message, this.taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"            case LIST:","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"                ListCommand.list(this.taskList);","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"            case MARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"                Marking.markTask(message, this.taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"                Marking.unmarkTask(message, this.taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"            default:","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"                // do nothing.","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(e.toString() + \"\\nPlease try again!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"        } finally {","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"            return carryOn;","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":155}},{"path":"src/main/java/Exceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eEmptyCommandException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * EmptyCommandException is used to raise error when the user inputs","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * an empty string or gives no input.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class EmptyCommandException extends IllegalCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for EmptyCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    public EmptyCommandException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the EmptyCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"        return \"You have not input any command, please add some and try again.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":33}},{"path":"src/main/java/Exceptions/FaultyTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eFaultyTaskNumberException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * FaultyTaskNumberException is used to raise error when the user inputs","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * a task number that is not present.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class FaultyTaskNumberException extends IllegalCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // Stores the value of task num.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private final int message;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for FaultyTaskNumberException.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input task number.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public FaultyTaskNumberException(int message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        super(String.valueOf(message));","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the FaultyTaskNumberException.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        return \"Task num: \" + this.message + \" isn\u0027t present. Type \u0027list\u0027 command to view the task numbers.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":37}},{"path":"src/main/java/Exceptions/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eIllegalCommandException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * IllegalCommandException is used to raise an error when invalid arguments are fed.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"public class IllegalCommandException extends IllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for IllegalCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the IllegalCommandException.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        return \"IllegalCommandException: \" + getMessage() + \". Please enter a valid command!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":31}},{"path":"src/main/java/Exceptions/InvalidYesOrNoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eInvalidYesOrNoException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * InvalidYesOrNoException is used when conan expects the user to input only a yes or no command,","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * but the user has given a different response.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class InvalidYesOrNoException extends IllegalCommandException {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // stores user input.","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private final String userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for InvalidYesOrNoException.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     * @param userInput the user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public InvalidYesOrNoException(String userInput) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        super(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the InvalidYesOrNoException.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        return \"You have entered: \" + this.userInput + \"\\nPlease enter either yes or no\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":37}},{"path":"src/main/java/Exceptions/MissingTaskArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eMissingTaskArgumentException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * This Exception class throws exception when the task argument is missing in the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"public class MissingTaskArgumentException extends IllegalCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    // stores the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    private final String message;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for MissingTaskArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    public MissingTaskArgumentException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the MissingTaskArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        return \"Task missing for: \" + this.message;","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":35}},{"path":"src/main/java/Exceptions/MissingTimeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eMissingTimeArgumentException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * MissingTimeArgumentException is used to raise error when the time argument of deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * and event tasks are not specified in user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class MissingTimeArgumentException extends MissingTaskArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // stores the user message.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private final String message;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for MissingTimeArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     * @param message the user input.","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public MissingTimeArgumentException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the MissingTimeArgumentException.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        return \"Time argument missing for: \" + this.message;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":36}},{"path":"src/main/java/Exceptions/WrongDateArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eWrongDateArgumentException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * WrongDateArgumentException is used to raise error when the user inputs date in the wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"public class WrongDateArgumentException extends IllegalCommandException {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    // Stores date string input by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    private final String date;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for WrongDateExceptionException.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * @param date input given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    public WrongDateArgumentException(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"        super(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the WrongDateArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        return \"You have input: \" + this.date + \"\\nPlease try with the format YYYY-MM-DD\";","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":35}},{"path":"src/main/java/Exceptions/WrongTimeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eWrongTimeArgumentException\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * WrongTimeArgumentException is used to raise error when the user inputs time in the wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"public class WrongTimeArgumentException extends IllegalCommandException {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    // Stores date string input by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    private final String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for WrongTimeExceptionException.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * @param time input given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    public WrongTimeArgumentException(String time) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"        super(time);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * gives the string representation of the WrongTimeArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the exception object.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        return \"You have input: \" + this.time + \"\\nPlease try with the format HHMM\";","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":35}},{"path":"src/main/java/Helper/CarryOn.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eCarryOn\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * CarryOn contains instructions on whether to continue the program,","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * or stop taking input from the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public enum CarryOn {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    // NEXT indicates that the user does not want to exit yet.","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // STOP indicates that the user wants to exit.","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    USERNAME, CONTINUE_FROM_LAST_TIME, NEXT, STOP","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":16}},{"path":"src/main/java/Helper/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import exceptions.WrongDateArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import exceptions.WrongTimeArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eDateHandler\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * DateHandler task handles the operation related to the dates associated with tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" * @author  Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"public class DateHandler {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // Separator to split deadline substring.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // stores an empty string.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    // Limits the splitting of date into substrings.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    private static final int LIMIT \u003d 2;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    // The starting index of a character in a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    // The index value of date string in split array.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    private static final int DATE_IDX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    // The index value of time string in split array.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    private static final int TIME_IDX \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    // The index value where minute character starts in time string.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    private static final int MINUTE_INDEX \u003d 2;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    // stores the length of date argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    private static final int DATE_LENGTH \u003d 10;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    // stores the length of time argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    private static final int TIME_LENGTH \u003d 4;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    // stores information on the date.","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    // stores information on the time.","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    private final boolean isTimeGiven;","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    // stores the time argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for DateHandler class.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string representation of the date.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of DateHandler.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    public DateHandler(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        date \u003d date.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        if (date.contains(SPACE)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"            this.date \u003d LocalDate.parse(date.split(SPACE, LIMIT)[DATE_IDX]);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"            String hour \u003d date.split(SPACE, LIMIT)[TIME_IDX].substring(START_INDEX, MINUTE_INDEX);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"            String minute \u003d date.split(SPACE, LIMIT)[TIME_IDX].substring(MINUTE_INDEX);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"            this.time \u003d LocalTime.of(Integer.valueOf(hour), Integer.valueOf(minute));","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"            this.isTimeGiven \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"            this.time \u003d LocalTime.MIN;","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"            this.isTimeGiven \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for DateHandler.","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"     * @param date the date associated with the task from the previous runs.","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"     * @param dummyVariable to differentiate between the constructors.","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    public DateHandler(String date, int dummyVariable) {","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"        assert date.contains(SPACE) : \"wrong format of date\";","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"        String[] strings \u003d date.split(SPACE);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c strings.length / 2; i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"            String temp \u003d strings[i];","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"            strings[i] \u003d strings[strings.length - i - 1];","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"            strings[strings.length - i - 1] \u003d temp;","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        int yearIdx \u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        int monthIdx \u003d 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"        int dayIdx \u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        this.date \u003d LocalDate.of(Integer.valueOf(strings[yearIdx]), Month.valueOf(strings[monthIdx]),","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"                Integer.valueOf(strings[dayIdx]));","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"        int splitArrLenWithTime \u003d 5;","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"        if (strings.length \u003d\u003d splitArrLenWithTime) {","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"            //extract time","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"            String[] time \u003d strings[strings.length - 2].split(\":\");","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"            int hourIdx \u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"            int minuteIdx \u003d 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"            int hour \u003d Integer.valueOf(time[hourIdx]);","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"            int minute \u003d Integer.valueOf(time[minuteIdx].substring(1));","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"            this.time \u003d LocalTime.of(hour, minute);","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"            this.isTimeGiven \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"            this.time \u003d LocalTime.MIN;","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"            this.isTimeGiven \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     * checks if the userDate is of the valid format.","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @param userDate the date input by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongDateArgumentException if the user inputs an invalid date.","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"     * @throw WrongTimeArgumentException if the user inputs an invalid time.","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"    public static void checkValidDate(String userDate) {","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"        // handle time checking","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        if (userDate.contains(SPACE)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"            String hourMinute \u003d userDate.split(SPACE, LIMIT)[TIME_IDX].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"            if (hourMinute.length() !\u003d TIME_LENGTH) {","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"                throw new WrongTimeArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"            for (int i \u003d 0; i \u003c TIME_LENGTH; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"                if (!Character.isDigit(hourMinute.charAt(i))) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"                    throw new WrongTimeArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"            userDate \u003d userDate.substring(START_INDEX, DATE_LENGTH).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"        // handles date checking.","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"        char separator \u003d \"-\".charAt(START_INDEX);","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"        int firstSeparatorIdx \u003d 4;","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        int secondSeparatorIdx \u003d 7;","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"        // checks if the date is in the correct format.","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"        if (userDate.length() !\u003d DATE_LENGTH) {","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"            throw new WrongDateArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"        if (userDate.charAt(firstSeparatorIdx) !\u003d separator || userDate.charAt(secondSeparatorIdx) !\u003d separator) {","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"            throw new WrongDateArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c DATE_LENGTH; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"            boolean notFirstSeparator \u003d i !\u003d firstSeparatorIdx;","lastModifiedDate":"2022-02-15"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"            boolean notSecondSeparator \u003d i !\u003d secondSeparatorIdx;","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"            boolean isNotDigit \u003d !Character.isDigit(userDate.charAt(i));","lastModifiedDate":"2022-02-15"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"            if (notFirstSeparator \u0026\u0026 notSecondSeparator \u0026\u0026 isNotDigit) {","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"                    throw new WrongDateArgumentException(userDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"     * checks whether the date is before the given date.","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"     * @param maxDate the value if the date limit.","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the true; false otherwise.","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"    public boolean isBefore(String maxDate) {","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"        return this.date.isBefore(LocalDate.parse(maxDate.trim()));","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"     * checks if the date is same.","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"     * @param onDate the date given.","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"     * @return true if onDate matches the date of instance; false otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(String onDate) {","lastModifiedDate":"2022-01-29"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"        return this.date.equals(LocalDate.parse(onDate.trim()));","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"     * checks if the date is same.","lastModifiedDate":"2022-02-15"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"     * @param onDate the date given.","lastModifiedDate":"2022-02-15"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"     * @return true if onDate matches the date of instance; false otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(LocalDate onDate) {","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"        return this.date.equals(onDate);","lastModifiedDate":"2022-02-15"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"     * gets the date stored.","lastModifiedDate":"2022-02-15"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"     * @return date as LocalDate.","lastModifiedDate":"2022-02-15"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-15"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"        return this.date;","lastModifiedDate":"2022-02-15"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"     * returns the string representation of the DateHandler instance.","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the object.","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"        return this.date.getDayOfWeek() + SPACE + (this.isTimeGiven ? this.time + SPACE : EMPTY)","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"                + this.date.getDayOfMonth() + SPACE + this.date.getMonth() + SPACE + this.date.getYear();","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":212}},{"path":"src/main/java/Helper/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eDialogBox\u003c/h1\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":" * Creates dialog boxes for GUI.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private Label text;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * creates a dialog box.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * @param l the label of the dialog box.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @param iv the image to use.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        this.setSpacing(10);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.ORANGE, null, null)));","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * flips the order of the image and label.","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of user dialog box.","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"     * @param l the label of the dialog box.","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"     * @param iv the image of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"     * @return a dialog box representing user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of conan dialog box.","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     * @param l the label of the dialog box.","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"     * @param iv the image of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"     * @return a dialog box representing conan\u0027s response.","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"    public static DialogBox getConanDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.AQUA, null, null)));","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"Harish-coding":81}},{"path":"src/main/java/Helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eStorage\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" * Storage class handles the storing of tasks from the current run,","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" * and loading of tasks from the previous runs.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // stores the location of previous task file.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final String PATH_TASK_FILE \u003d \"taskList.txt\";","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    // the index of array list that stores the username.","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    private static final int USER_INDEX \u003d 0;","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    // stores empty string.","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    private static final String EMPTY_STR \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    // a file object.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    private final File file;","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    // tell of there is a file already present.","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    private final boolean isTaskFilePresent;","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    // stores the username and previous tasks from the file.","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    private final ArrayList\u003cString\u003e previousTasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of storage class.","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    public Storage() {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"        this.file \u003d new File(PATH_TASK_FILE);","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        this.isTaskFilePresent \u003d this.file.exists();","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        this.previousTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"     * reads the file contents and stores each line in previousTasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     * @throws FileNotFoundException raise an error if the file is not found","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    private void readFile() throws FileNotFoundException {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        if (this.isTaskFilePresent) {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"                this.previousTasks.add(str);","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * gets the previous userName.","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"     * @return the name of the previous user","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    public String getPreviousUser() {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"            readFile();","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"            // the first line of the file contains the username.","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"            return this.previousTasks.remove(USER_INDEX).trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"            return EMPTY_STR;","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     * tells if there was a file from previous runs.","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     * @return returns true of there was a file from previous runs; false otherwise.","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"    public boolean isFilePresent() {","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        return this.isTaskFilePresent;","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"     * loads the previous tasks in string representation.","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"     * @return the list of previous tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    public ArrayList\u003cString\u003e loadPreviousTasks() {","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"        return this.previousTasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * stores the tasks in the file.","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * @param tasks the list of tasks the user told conan.","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"    public void storeTasks(ArrayList\u003cTask\u003e tasks, String username) {","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"            boolean noPreviousFile \u003d this.file.createNewFile();","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"            String content \u003d username + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"                content +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TASK_FILE);","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"            writer.write(content);","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     * stores the tasks in the file.","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     * @param tasks the list of tasks the user told conan.","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    public void storeTasks(String tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"            boolean noPreviousFile \u003d this.file.createNewFile();","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TASK_FILE);","lastModifiedDate":"2022-01-29"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"            writer.write(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":146}},{"path":"src/main/java/Helper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eTaskList\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * TaskList is responsible for maintaining the list of user tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // stores the list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * adds the task to the list of user tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"     * @return true if added successfully.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        return this.tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     * returns the task at index.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index number of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"     * @return Task at index.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     * removes the task number num.","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     * @param num the task number.","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"     * @return the task that was removed.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    public Task remove(int num) {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        return this.tasks.remove(num);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     * gets the total number of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"     * @return the number tasks the user has.","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    public int numOfTasks() {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     * returns the string representation of tasks without numbering.","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * @return String representation of each task in a line.","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    public String getTasks() {","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"        String content \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"            content +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"        return content;","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"     * checks the tasks that are due on date.","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"     * @param date the due date.","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     * @return a TaskList instance representing the same.","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    public TaskList getTasksDueOn(String date) {","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"        TaskList dueTasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c this.numOfTasks(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"            Task task \u003d this.get(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"            if (task.isOnDate(date)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"                dueTasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        return dueTasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"     * checks the tasks that are due on date.","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     * @param date the due date.","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"     * @return a TaskList instance representing the same.","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    public TaskList getTasksDueOn(LocalDate date) {","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"        TaskList dueTasks \u003d new TaskList();","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c this.numOfTasks(); i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"            Task task \u003d this.get(i);","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"            if (task.isOnDate(date)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"                dueTasks.add(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        return dueTasks;","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * checks the tasks that are due before date.","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @param date the due date.","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @return a TaskList instance representing the same.","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    public TaskList getTasksDueBefore(String date) {","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        TaskList dueTasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c this.numOfTasks(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"            Task task \u003d this.get(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"            if (task.isBefore(date)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"                dueTasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"        return dueTasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"     * checks for tasks that contain the word given by user.","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"     * @param word the word to look out for.","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"     * @return a TaskList containing those tasks that have word.","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"    public TaskList getTasksContaining(String word) {","lastModifiedDate":"2022-01-30"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"        TaskList tasksContainingWord \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"        for (int i \u003d 0; i \u003c this.numOfTasks(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"            Task task \u003d this.get(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"            if (task.contains(word)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"                tasksContainingWord.add(task);","lastModifiedDate":"2022-01-30"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        return tasksContainingWord;","lastModifiedDate":"2022-01-30"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"     * gets the string representation of the class.","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-02-02"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"        int taskNum \u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"        String separator \u003d \".\";","lastModifiedDate":"2022-02-15"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"            str +\u003d (taskNum + separator + task + \"\\n\");","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"            taskNum +\u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"        return str;","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":168}},{"path":"src/main/java/Helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Ui class.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    // stores the location of previous task file.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    private static final String PATH_TEMP_FILE \u003d \"tempStore.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    // stores empty string.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * prints introductory greetings.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    public static void printGreeting() {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        String greeting \u003d \"Hello There, My name is Conan! \\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"                + \"Hope you\u0027re doing fine today! (^_^) \\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"                + \"I\u0027m a task manager, and I can help you keep up with your tasks.\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"                + \"Now before we start, lets get acquainted! Lets start with our names!\";","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"            writer.write(greeting);","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"     * prints a farewell message to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    public static void printFarewell(String username) {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"        String farewell \u003d \"\\nHope I helped you complete your tasks!\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"                + \"Have a great day ahead, enjoy ! (^-^)/\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"                + \"Hope to see you next time! \";","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"            writer.write(\"Goodbye, \" + username + farewell);","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"     * prints an introductory message.","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"    public static void printSayHello(String username) {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"Hello, \" + username + \"!, Nice to meet you! (*^_^*)\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"                + \"So, tell me what would you like to do, \" + username + \"!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"     * prints a message saying that a user under a similar name was found.","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     * @param previousUser the previous username.","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    public static void printFoundSimilarName(String previousUser) {","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"I have found out that there was a similar user in the past under the name:\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"                + previousUser + \"\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"                + \"If this is you, would you like to continue from the previous tasks ?\"","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"                + \"If this isn\u0027t you or you don\u0027t want to use the previous tasks, please type no\";","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(e.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     * prints a message asking if there is anything else the user wants to do.","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * @param username the name of the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"    public static void printAsk(String username) {","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        String ask \u003d \"Please let me know if there\u0027s anything else you would like to do, \";","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"            writer.write(ask + username);","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * asks the user to enter a valid name.","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    public static void printAskValidName() {","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"Please enter a valid name!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"     * prints that task was added successfully to the list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task that was added.","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"    public static void printAdded(String task, int numTasks) {","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"I have added: \" + task + \", to your list of tasks.\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"                + \"Number of tasks up to now: \" + numTasks;","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"     * prints that the task has been removed from the list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task that was removed.","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"    public static void printRemoved(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"The following task has been removed from the list :\" + \"\\n\" + task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"     * tells the users that the task they have completed is marked.","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task that was completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"    public static void printTaskCompleted(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"Great job, on completing this task! \\\\(^_^)/\\n\" + task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"     * tells the user that the task is unmarked.","lastModifiedDate":"2022-01-29"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task that was unmarked.","lastModifiedDate":"2022-01-29"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"    public static void printUnmarked(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"Sure, I have unmarked this task:\\n\" + task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"     * gets error string.","lastModifiedDate":"2022-02-15"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"     * @return String error.","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"    public static String getError() {","lastModifiedDate":"2022-02-15"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"         return \"Error...\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":205,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"     * prints that no tasks were found.","lastModifiedDate":"2022-01-30"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"    public static void printNoTasksFound(String word) {","lastModifiedDate":"2022-01-30"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"No task containing: \" + word + \", was found.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":216,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":217,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":218,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":219,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":220,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":221,"author":{"gitId":"Harish-coding"},"content":"     * prints a message for the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":222,"author":{"gitId":"Harish-coding"},"content":"     * @param message the message to be printed.","lastModifiedDate":"2022-01-29"},{"lineNumber":223,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":224,"author":{"gitId":"Harish-coding"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":225,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":226,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":227,"author":{"gitId":"Harish-coding"},"content":"            writer.write(message);","lastModifiedDate":"2022-02-06"},{"lineNumber":228,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":229,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":230,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":231,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":232,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":233,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":234,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":235,"author":{"gitId":"Harish-coding"},"content":"     * prints the list of tasks that are clashing, with the newly added one.","lastModifiedDate":"2022-02-15"},{"lineNumber":236,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":237,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of tasks that are clashing.","lastModifiedDate":"2022-02-15"},{"lineNumber":238,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":239,"author":{"gitId":"Harish-coding"},"content":"    public static void printClashes(TaskList taskList) {","lastModifiedDate":"2022-02-15"},{"lineNumber":240,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"I\u0027ve found that the newly added task clashes with the previous ones \\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":241,"author":{"gitId":"Harish-coding"},"content":"                + taskList.toString();","lastModifiedDate":"2022-02-15"},{"lineNumber":242,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":243,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-15"},{"lineNumber":244,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-15"},{"lineNumber":245,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-15"},{"lineNumber":246,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":247,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":248,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":249,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":250,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":251,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":252,"author":{"gitId":"Harish-coding"},"content":"     * prints a warning that similar task has been found.","lastModifiedDate":"2022-02-15"},{"lineNumber":253,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":254,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the list of use tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":255,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":256,"author":{"gitId":"Harish-coding"},"content":"    public static void printFoundSimilarTask(TaskList taskList) {","lastModifiedDate":"2022-02-15"},{"lineNumber":257,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d \"Found similar task(s), please delete them if you want to add the new task.\"","lastModifiedDate":"2022-02-15"},{"lineNumber":258,"author":{"gitId":"Harish-coding"},"content":"                + taskList.toString();","lastModifiedDate":"2022-02-15"},{"lineNumber":259,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":260,"author":{"gitId":"Harish-coding"},"content":"            FileWriter writer \u003d new FileWriter(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-15"},{"lineNumber":261,"author":{"gitId":"Harish-coding"},"content":"            writer.write(str);","lastModifiedDate":"2022-02-15"},{"lineNumber":262,"author":{"gitId":"Harish-coding"},"content":"            writer.close();","lastModifiedDate":"2022-02-15"},{"lineNumber":263,"author":{"gitId":"Harish-coding"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":264,"author":{"gitId":"Harish-coding"},"content":"            Ui.printMessage(Ui.getError() + e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":265,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":266,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":267,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":268,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":269,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":270,"author":{"gitId":"Harish-coding"},"content":"     * reads the text written to the file.","lastModifiedDate":"2022-02-06"},{"lineNumber":271,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":272,"author":{"gitId":"Harish-coding"},"content":"     * @return the String of message written to the file.","lastModifiedDate":"2022-02-06"},{"lineNumber":273,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":274,"author":{"gitId":"Harish-coding"},"content":"    public static String readFile() {","lastModifiedDate":"2022-02-06"},{"lineNumber":275,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":276,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":277,"author":{"gitId":"Harish-coding"},"content":"            File file \u003d new File(PATH_TEMP_FILE);","lastModifiedDate":"2022-02-06"},{"lineNumber":278,"author":{"gitId":"Harish-coding"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":279,"author":{"gitId":"Harish-coding"},"content":"            String str \u003d EMPTY_STRING;","lastModifiedDate":"2022-02-06"},{"lineNumber":280,"author":{"gitId":"Harish-coding"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":281,"author":{"gitId":"Harish-coding"},"content":"                str +\u003d sc.nextLine() + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":282,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":283,"author":{"gitId":"Harish-coding"},"content":"            sc.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":284,"author":{"gitId":"Harish-coding"},"content":"            return str.trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":285,"author":{"gitId":"Harish-coding"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":286,"author":{"gitId":"Harish-coding"},"content":"            return e.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":287,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":288,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":289,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Harish-coding":289}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eLauncher\u003c/h1\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * Launcher class serves as a entry point to launch the program..","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"     * Launches the program.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     * @param args parameter to start the main method.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"        // modified from https://se-education.org/guides/tutorials/javaFxPart1.html","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"Harish-coding":23}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"import conan.Conan;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.EmptyCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import exceptions.IllegalCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import helper.CarryOn;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import helper.DialogBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import helper.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eMain\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":" * Main class serves as a mediator class between the user and Conan.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    // stores empty_string.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    // contains the reference to user image file.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    // contains the reference to conan image file.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    private final Image conanImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/conan.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * Starts the user interface.","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     * @param stage the window where the program is run.","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        // modified from https://se-education.org/guides/tutorials/javaFxPart3.html","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        // Step 1 : the container for the content of the chat to scroll;","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"        scene.setFill(Color.web(\"#4378c0\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"        stage.show(); // show the stage.","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"        // step 2 : Formatting the window to look as expected.","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"        stage.setTitle(\"Conan\");","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"        ///////////////////////////////////////////////////////////////////////","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"        // start conan print greetings","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"        Conan conan \u003d new Conan();","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        CarryOn[] programStage \u003d {CarryOn.USERNAME};","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d Ui.readFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        Label greetingText \u003d new Label(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"                DialogBox.getConanDialog(greetingText, new ImageView(conanImage))","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"        //////////////////////////////////////////////////////////////////","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"        // step 3: Add functionality to handle user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"            handleUserInput(programStage, conan);","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"            handleUserInput(programStage, conan);","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     * handles the user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     * @param programStage the stage in which the program is currently in.","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     * @param conan the task manager instance.","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    private void handleUserInput(CarryOn[] programStage, Conan conan) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"        Label conanText \u003d new Label(getResponse(userInput.getText(), programStage, conan));","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImage)),","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"                DialogBox.getConanDialog(conanText, new ImageView(conanImage))","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"     * gets an appropriate response to the user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"     * @param input the input given by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"     * @param programStage the stage in which the program is currently in.","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"     * @param conan the task manager instance.","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"     * @return appropriate response to the user command.","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"    private String getResponse(String input, CarryOn[] programStage, Conan conan) {","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"        if (programStage[0] \u003d\u003d CarryOn.USERNAME) {","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"            if (input.equalsIgnoreCase(EMPTY_STRING)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"                Ui.printAskValidName();","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"                return Ui.readFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"            boolean isSimilarPreviousUser \u003d conan.tellName(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"            if (isSimilarPreviousUser) {","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"                programStage[0] \u003d CarryOn.CONTINUE_FROM_LAST_TIME;","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"                programStage[0] \u003d CarryOn.NEXT;","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"            return Ui.readFile();","lastModifiedDate":"2022-02-15"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"        if (programStage[0] \u003d\u003d CarryOn.CONTINUE_FROM_LAST_TIME) {","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"            if (conan.continueFromLastTime(input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"                programStage[0] \u003d CarryOn.NEXT;","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"            return Ui.readFile();","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"        if (programStage[0] \u003d\u003d CarryOn.NEXT) {","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"            try {","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"                if (input.equalsIgnoreCase(EMPTY_STRING)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"                    throw new EmptyCommandException(\"\");","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"                programStage[0] \u003d conan.tell(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"                return Ui.readFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"            } catch (IllegalCommandException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"                Ui.printMessage(e.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"                return Ui.readFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":194}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.MissingTimeArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.DateHandler;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eDeadline\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * Deadline handles tasks that are supposed to be completed before","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * a certain date.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    // Symbol for Deadline class.","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    private static final String SYMBOL \u003d \"[D]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    // Separator to distinguish task and deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    private static final String SEPARATOR \u003d \"/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    // Separator to split deadline substring.","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    // The index value of task string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    private static final int TSK_INDEX \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    // the index value of deadline string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    private static final int DD_IDX \u003d 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    // Limits the splitting of user message into substrings.","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    private static final int LIMIT \u003d 2;","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    // The argument preceding time.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    private static final String TIME_ARGUMENT \u003d \"/by\";","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    // stores the time argument indicator in the output string.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    private static final String TIME_ARGUMENT_OUTPUT \u003d \"(by: \";","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    // used to differentiate between constructors","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    private static final int DUMMY_VARIABLE \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    // stores the start index value.","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    // instance variable to store deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    private final DateHandler deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     * @param message the text given by the user.","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"     * return an instance of deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"    public Deadline(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        super(message.split(SEPARATOR, LIMIT)[TSK_INDEX]);","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d message.split(SEPARATOR, LIMIT)[DD_IDX];","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(str.split(SPACE, LIMIT)[DD_IDX]);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        this.deadline \u003d new DateHandler(str.split(SPACE, LIMIT)[DD_IDX]);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     * @param str string output of Deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"     * @param dummyVariable int to differentiate from other constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    public Deadline(String str, int dummyVariable) {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        super(str.substring(SYMBOL.length(), str.indexOf(TIME_ARGUMENT_OUTPUT)).trim(), DUMMY_VARIABLE);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"        String temp \u003d str.substring(str.indexOf(TIME_ARGUMENT_OUTPUT) + TIME_ARGUMENT_OUTPUT.length());","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"        temp \u003d temp.trim().substring(START_INDEX, temp.length() - 1); // removes \")\".","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        this.deadline \u003d new DateHandler(temp, DUMMY_VARIABLE);","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     * correctArgument checks if the function is valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     * @param text the task input given by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"     * @return true if correct.","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTimeArgumentException if the user missed time argument out.","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"    public static boolean correctArgument(String text) {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"        boolean isSeparatorAbsent \u003d !text.contains(SEPARATOR);","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        boolean isTimeAbsent \u003d !text.contains(TIME_ARGUMENT);","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"        boolean isTimeArgumentAbsent \u003d text.trim().split(TIME_ARGUMENT).length \u003d\u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        if (isSeparatorAbsent || isTimeAbsent || isTimeArgumentAbsent) {","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTimeArgumentException(\"Deadline \" + text);","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task deadline is due before date.","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"     * @return return if the task is due before date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    public boolean isBefore(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        return this.deadline.isBefore(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task deadline is due on date.","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @return return if the task is due on date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        return this.deadline.isOnDate(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task deadline is due on date.","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     * @return return if the task is due on date; false otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"        return this.deadline.isOnDate(date);","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"     * returns the date on which the task is due.","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"     * @return the date associated with task as LocalDate.","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-15"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"        return this.deadline.getDate();","lastModifiedDate":"2022-02-15"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"     * checks if the string is a Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"     * @param str the string representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"     * @return true if  the task is Deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"    public static boolean isDeadline(String str) {","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"        return str.substring(START_INDEX, SYMBOL.length()).contains(SYMBOL);","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"     * returns the string representation of the Deadline object.","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"        return SYMBOL + super.toString() + SPACE + TIME_ARGUMENT_OUTPUT + this.deadline + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Harish-coding":166}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import exceptions.MissingTimeArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import helper.DateHandler;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eEvent\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * Event handles tasks that occur at a certain time.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // Symbol for event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final String SYMBOL \u003d \"[E]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // Separator to distinguish task and event time.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final String SEPARATOR \u003d \"/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    // Separator to split deadline substring.","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    // The index value of task string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    private static final int TSK_INDEX \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    // the index value of event time string in split array.","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    private static final int ET_IDX \u003d 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    // Limits the splitting of user message into substrings.","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    private static final int LIMIT \u003d 2;","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    // The argument preceding time.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    private static final String TIME_ARGUMENT \u003d \"/at\";","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    // stores the time argument indicator in the output string.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    private static final String TIME_ARGUMENT_OUTPUT \u003d \"(at: \";","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    // stores the start index value.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    // used to differentiate between constructors","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    private static final int DUMMY_VARIABLE \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    // instance variable to store event time.","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    private final DateHandler time;","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * @param message the text given by the user.","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     * returns a new instance of Event class.","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    public Event(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        super(message.split(SEPARATOR, LIMIT)[TSK_INDEX]);","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        String str \u003d message.split(SEPARATOR, LIMIT)[ET_IDX];","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        DateHandler.checkValidDate(str.split(SPACE, LIMIT)[ET_IDX].trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        this.time \u003d new DateHandler(str.split(SPACE, LIMIT)[ET_IDX].trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Event class.","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"     * @param str string output of Event.","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * @param dummyVariable int to differentiate from other constructor.","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    public Event(String str, int dummyVariable) {","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"        super(str.substring(SYMBOL.length(), str.indexOf(TIME_ARGUMENT_OUTPUT)).trim(), DUMMY_VARIABLE);","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"        String temp \u003d str.substring(str.indexOf(TIME_ARGUMENT_OUTPUT) + TIME_ARGUMENT_OUTPUT.length());","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"        temp \u003d temp.trim().substring(START_INDEX, temp.length() - 1); // removes \")\".","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"        this.time \u003d new DateHandler(temp, DUMMY_VARIABLE);","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"     * checks if there are any events before date.","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"     * @return return if there is an event before date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"    public boolean isBefore(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        return this.time.isBefore(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"     * checks if there are any events on date.","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"     * @return return if there is an event on date; false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"        return this.time.isOnDate(date.trim());","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * checks if there are any events on date.","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"     * @return return if there is an event on date; false otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        return this.time.isOnDate(date);","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * returns the date on which the event occurs.","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @return the date associated with task as LocalDate.","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        return this.time.getDate();","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"     * correctArgument checks if the function is valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"     * @param text the task input given by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     * @return true if correct.","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     * @throws MissingTimeArgumentException if the user missed time argument out.","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    public static boolean correctArgument(String text) {","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"        boolean isSeparatorAbsent \u003d !text.contains(SEPARATOR);","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"        boolean isTimeAbsent \u003d !text.contains(TIME_ARGUMENT);","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"        boolean isTimeArgumentAbsent \u003d text.trim().split(TIME_ARGUMENT).length \u003d\u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"        if (isSeparatorAbsent || isTimeAbsent || isTimeArgumentAbsent) {","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"            throw new MissingTimeArgumentException(\"Event \" + text);","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"     * checks if the string is a Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"     * @param str the string representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"     * @return true if  the task is Event.","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"    public static boolean isEvent(String str) {","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"        return str.substring(START_INDEX, SYMBOL.length()).contains(SYMBOL);","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"     * toString returns the string representation of the Event object.","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"        return SYMBOL + super.toString() + SPACE + TIME_ARGUMENT_OUTPUT + this.time + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Harish-coding":164}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eTask\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * Tasks contains the operations that can be performed on task.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" * This file contains the implementation of Task class.","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    // symbol for indicating task is completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    private static final String CROSS \u003d \"X\";","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    // symbol for indicating task is yet to be completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    // symbol for task done.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    private static final String DONE \u003d \"[X]\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    // stores the start index value.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    // task variable stores the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    private final String task;","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    // Tells if the task is completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    private boolean done;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     * returns a new instance of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    public Task(String task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d task.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"     * @param task the string output of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * @param dummyVariable int to differentiate from other constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * returns a new instance of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    public Task(String task, int dummyVariable) {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"        if (task.substring(START_INDEX, DONE.length()).contains(DONE)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"            this.done \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"            this.done \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d task.substring(DONE.length()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     * markDone marks the task completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"     * markDone unmarks the task as not completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    public void unMarkDone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"     * returns the task to be performed.","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"     * @return the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"        return this.task;","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     * returns the date on which the task is due or the day event occurs.","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"     * @return the date associated with task as LocalDate.","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        return LocalDate.MIN;","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task is due before date.","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"     * @return false trivially, as Tasks do not have deadlines, or event date.","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"    public boolean isBefore(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task is on date.","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"     * @return false trivially, as tasks do not have dates associated with them.","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task is on date.","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @param date the string given by the user","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @return false trivially, as tasks do not have dates associated with them.","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"     * checks if the task contains word.","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"     * @param word the word to check for.","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     * @return true if task contains the word; false otherwise.","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"    public boolean contains(String word) {","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"        return this.task.contains(word);","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"     * toSting method returns the string representation of the object.","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representing the task instance.","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        return \"[\" + (this.done ? CROSS : SPACE) + \"] \" + this.task;","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Harish-coding":145}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * \u003ch1\u003eTodo\u003c/h1\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * Todo class handles the implementation of tasks that do not have","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" * time associated with them.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * @author Saravanan Anuja Harish","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    // Symbol for Todo class.","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    private static final String SYMBOL \u003d \"[T]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    // stores the start index value.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    private static final int START_INDEX \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    // used to differentiate between constructors","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    private static final int DUMMY_VARIABLE \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * @param message the text given by user.","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * returns an instance of Todo.","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    public Todo (String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"     * Constructor for Todoclass.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"     * @param str the string output of Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * @param dummyVariable int to differentiate from other constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    public Todo(String str, int dummyVariable) {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"        super(str.substring(SYMBOL.length()).trim(), DUMMY_VARIABLE);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"     * checks if the string is an todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"     * @param str the string representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"     * @return true if  the task is todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    public static boolean isTodo(String str) {","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        return str.substring(START_INDEX, SYMBOL.length()).contains(SYMBOL);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * returns the string representation of the Todo object.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     * @return the string representation of the instance.","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        return SYMBOL + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Harish-coding":60}},{"path":"src/test/java/CommandSet/CommandCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package commandset;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import commandset.CommandChecker;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import static commandset.Commands.*;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"public class CommandCheckerTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     * tests if the yes or no userinput is properly recognised.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    public void yesOrNoChecker_userInputs_yesOrNo() {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(YES, CommandChecker.checkYesOrNo(\"yes\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(NO, CommandChecker.checkYesOrNo(\"no\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     * tests if the commands are properly recognised.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    public void findAndCheck_userInputs_Commands() {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(ADD, CommandChecker.findAndCheck(\"todo return textbooks\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(BYE, CommandChecker.findAndCheck(\"bye\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(MARK, CommandChecker.findAndCheck(\"mark 4\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(UNMARK, CommandChecker.findAndCheck(\"unmark 5\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(DELETE, CommandChecker.findAndCheck(\"delete 3\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(DUEON, CommandChecker.findAndCheck(\"due-on 2022-10-04\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(DUEBEFORE, CommandChecker.findAndCheck(\"due-before 2022-11-05\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(INVALID, CommandChecker.findAndCheck(\"random\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Harish-coding":35}},{"path":"src/test/java/Helper/DateHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package helper;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public class DateHandlerTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"     * tests if the isOnDate methods in DateHandler works appropriately.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    public void isOnDate_date_returnTrueOrFalse() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"        DateHandler case1 \u003d new DateHandler(\"2022-05-19\");","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(true, case1.isOnDate(\"2022-05-19\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isOnDate(\"2022-06-19\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isOnDate(\"2022-04-10\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isOnDate(\"2022-05-18\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     * tests if the isBefore methods in DateHandler works appropriately.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    public void isBefore_date_returnTrueOrFalse() {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"        DateHandler case1 \u003d new DateHandler(\"2022-05-19\");","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isBefore(\"2022-05-19\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(true, case1.isBefore(\"2022-06-19\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isBefore(\"2022-04-10\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isBefore(\"2022-05-18\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Harish-coding":34}},{"path":"src/test/java/Tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"     * tests of task is returned properly.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    public void getTask_taskInstance_taskStored() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"        Task case1 \u003d new Task(\"return books to library\");","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(\"return books to library\", case1.getTask());","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"        Task case2 \u003d new Task(\"Cook pasta for dinner\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(\"Cook pasta for dinner\", case2.getTask());","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * tests if isOnDate returns false.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    public void isOnDate_taskInstance_false() {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"        Task case1 \u003d new Task(\"return books to library\");","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isOnDate(\"2022-08-15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"        Task case2 \u003d new Task(\"Cook pasta for dinner\");","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case2.isOnDate(\"2022-08-15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * tests if isBefore returns false.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    public void isBefore_taskInstance_false() {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        Task case1 \u003d new Task(\"return books to library\");","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case1.isBefore(\"2022-08-15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        Task case2 \u003d new Task(\"Cook pasta for dinner\");","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        assertEquals(false, case2.isBefore(\"2022-08-15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Harish-coding":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"harish","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"todo buy lunch","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"deadline return book /by 2019-03-01","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"event project team meeting /at 2019-02-22","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"todo buy shoes","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"todo edit pics","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"mark 2","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"mark 5","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"todo fill out application form","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"unmark 2","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"deadline paint walls /by 2022-06-18","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"mark 7","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"mark 3","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"event dance practice /at 2022-5-1","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"event dance practice /at 2022-05-15 180","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"event dance practice /at 2022-05-15 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"unmark 5","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"unmark 7","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"unmark 3","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"mark 19","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"delete","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"delete 12","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"unmark 14","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"due-before 2020-01-10","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"due-on 2022-05-15","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"due-on","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"due-before","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"due-on 14","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"due-on","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"mark","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"mark 1","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"mark 4","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"unmark","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"deadline","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"deadline mark","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"deadline mark /by","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"event","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"delete 2","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"event meet","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"event meet /at","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"find","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"find buy","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"find edit","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"find boardmarkers","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"haha","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"lol","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"random","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"return books to library","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"bye","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Harish-coding":61}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"harish","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"yes","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"todo make bread toast","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"deadline take clothes out of drier","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"deadline take clothes out of the dryer /by 2022-01-29","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"event attend photoediting session /at 2023-02-18 1900","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"mark 34","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"mark 3","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"mark 5","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"unmark 5","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"delete 4","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"list","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"bye","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Harish-coding":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"REM delete output from previous run","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"if exist taskList.txt del taskList.txt","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"REM delete output from previous run","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"if exist ACTUAL2.TXT del ACTUAL2.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"C:\\Users\\G.SARAVANAN\\.jdks\\azul-13.0.6\\bin\\javac  -cp ..\\src\\main\\java -Xlint:none -d C:\\Users\\G.SARAVANAN\\.jdks\\corretto-11.0.13\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"C:\\Users\\G.SARAVANAN\\.jdks\\azul-13.0.6\\bin\\java -classpath C:\\Users\\G.SARAVANAN\\.jdks\\corretto-11.0.13\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"C:\\Users\\G.SARAVANAN\\.jdks\\azul-13.0.6\\bin\\java -classpath C:\\Users\\G.SARAVANAN\\.jdks\\corretto-11.0.13\\bin Main \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"REM compare the output to the expected output","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"-":19,"Harish-coding":14}}]
