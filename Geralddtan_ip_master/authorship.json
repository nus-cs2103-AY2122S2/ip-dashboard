[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"T|0|go playground","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"D|1|go for a run|Jan 25 2021","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"T|1|smilee","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import duke.misc.Quote;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    private TaskList userTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Duke Constructor","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * @param savedTasksPath final path of saved tasks file","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public Duke(String savedTasksPath){","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        this.userTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        this.fileManager \u003d new FileManager(savedTasksPath);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"     * Main duke run method which starts duke Chat Bot","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if exceptions occur throughout the program","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        this.userTaskList \u003d this.fileManager.loadTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        ui.print(\"Hello, My Dear Friend... I\u0027m Duke, your personal motivator!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        Quote quoteOfTheDay \u003d new Quote();","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"//        duke.print(quoteOfTheDay.generateQuote());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        ui.print(\"What can i do for you today?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"                String userTaskString \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"                Command c \u003d parser.parseUserCommand(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"                c.executeTask(this.userTaskList, this.fileManager);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"//                this.performCommand(parser.parseUserCommand(userTaskString), userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"                ui.print(exception);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        duke.run();","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Geralddtan":52,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    private String errorMessage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        return this.errorMessage;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Geralddtan":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    public Parser() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     * Parses user input into their respective commands. Creates different Command type objects which is executed to perform its tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"     * @param userTaskString","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"     * @return Command Object","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    public Command parseUserCommand(String userTaskString) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        if (userTaskString.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"            return new ByeCommand(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"            return new ListCommand(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(delete|Delete|DELETE).*\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"                int taskIdx \u003d Integer.parseInt(userTaskString.substring(6+1))-1;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"                return new DeleteCommand(userTaskString, taskIdx);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"                //+1 is to take into account the \" \"after delete, -1 is to convert it into 0-based indexing","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException err) { // For cases like \"delete\" without a number","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter a task number to delete!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"                // For cases like \"delete1\" without a space in between or \"delete 3b\" where the term is not a number","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please delete a task in the following format:\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"                        \"delete [number]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(mark|Mark|MARK).*\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"                int taskIdx \u003d Integer.parseInt(userTaskString.substring(4+1))-1;","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"                return new MarkCommand(userTaskString, taskIdx);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"                //+1 is to take into account the \" \"after mark, -1 is to convert it into 0-based indexing","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException err) { // For cases like \"mark\" without a number","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter a task number to mark!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"                // For cases like \"mark1\" without a space in between or \"mark 3b\" where the term is not a number","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please mark a task in the following format:\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"                        \"mark [number]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(unmark|Unmark|UNMARK).*\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"                int taskIdx \u003d Integer.parseInt(userTaskString.substring(6+1))-1;","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"                return new UnmarkCommand(userTaskString, taskIdx);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"                //+1 is to take into account the \" \"after unmark, -1 is to convert it into 0-based indexing","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException err) { // For cases like \"unmark\" without a number","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter a task number to unmark!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"                // For cases like \"unmark1\" without a space in between or \"unmark 3b\" where the term is not a number","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please unmark a task in the following format:\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"                        \"unmark [number]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(todo|Todo|TODO).*\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"                Todo userTodo \u003d new Todo(userTaskString.substring(4+1));","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"                return new AddCommand(userTaskString, userTodo);","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException err) { //For cases like \"todo\" without any further description","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter a description!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(deadline|Deadline|DEADLINE).*\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"                String userTaskStringSliced \u003d userTaskString.substring(8+1);","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"                String[] descriptionDeadlineSplit \u003d userTaskStringSliced.split(\" /by \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"                Deadline userDeadline \u003d new Deadline(descriptionDeadlineSplit[0], descriptionDeadlineSplit[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"                return new AddCommand(userTaskString, userDeadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException | DateTimeParseException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter a Deadline in the following format:\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"                        \"deadline [description] /by [yyyy-mm-dd]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"                //StringIndexOutOfBoundsException For cases like \"deadline\" without any other information","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"                //ArrayIndexOutOfBoundsException For cases like \"deadline homework\" without a \"/by\"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"                //DateTimeParseException For cases where date cannot be recognised","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(event|Event|EVENT).*\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"                String userTaskStringSliced \u003d userTaskString.substring(5+1);","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"                String[] descriptionTimingSplit \u003d userTaskStringSliced.split(\" /at \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"                Event userEvent \u003d new Event(descriptionTimingSplit[0], descriptionTimingSplit[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"                return new AddCommand(userTaskString, userEvent);","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"                // For cases like \"event\" without any other information","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter an Event in the following format:\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"                        \"event [description] /at [datetime]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        } else if (userTaskString.matches(\"^(find|Find|FIND).*\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"                String userFindTask \u003d userTaskString.substring(4 + 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"                return new FindCommand(userTaskString, userFindTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"            } catch (StringIndexOutOfBoundsException err) { //For cases like \"find\" without any further description","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"                ui.throwDukeException(\"Please enter a description!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"        return new InvalidCommand(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"     * Print statement with divider line","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"     * @param str input string to be printed","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public void print(Object str) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        System.out.println(str);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        System.out.println(\"_\".repeat(100));","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Prints oridinary System.out.println","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * @param str input string to be printed","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public void println(Object str) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        System.out.println(str);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     * Print statement for when system exits","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public void printBye(){","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        this.print(\"Bye. Hope I\u0027ve motivated you as much as I could have, and SMILE :D\");","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    public void throwDukeException(String message) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        throw new DukeException(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":36}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public AddCommand(String userTaskString, Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Executes adding of task to TaskList (with printing)","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(this.task, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":25}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    public ByeCommand(String userTaskString) {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     * Executes saving of tasks and exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException when not able to save tasks (File does not exist etc).","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        fileManager.saveTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        ui.printBye();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private String userTaskString;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public Command(String userTaskString) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        this.userTaskString \u003d userTaskString;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    public String getUserTaskString(){","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        return this.userTaskString;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * Abstract method which executes the commands\u0027 tasks","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    public abstract void executeTask(TaskList taskList, FileManager fileManager) throws DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private int taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public DeleteCommand(String userTaskString, int taskIdx) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Executes deletion of task per taskIdx","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if task idx is not valid","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        taskList.deleteTask(this.taskIdx);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private String userFindTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public FindCommand(String userTaskString, String userFindTask){","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        this.userFindTask \u003d userFindTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        taskList.printUserTasks(this.userFindTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":21}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    public InvalidCommand(String userTaskString) {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     * Throws exception when the command is invalid","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        ui.throwDukeException(\"Invalid Input! Please either add in a Todo, Deadline or Event!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"    private int taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"    public ListCommand(String userTaskString) {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"     * List current remaining user tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"        taskList.printUserTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private int taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public MarkCommand(String userTaskString, int taskIdx) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Marks user task as per taskIdx.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        taskList.markTaskDone(taskIdx, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":26}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.FileManager;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private int taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public UnmarkCommand(String userTaskString, int taskIdx) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        super(userTaskString);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Unmarks task as per taskIdx","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * @param taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * @param fileManager","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    public void executeTask(TaskList taskList, FileManager fileManager) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        taskList.markTaskNotDone(taskIdx, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":26}},{"path":"src/main/java/duke/managers/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.managers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"public class FileManager {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    private TaskList userTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    private String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     * @param filePath representing file path where user task is saved in","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public FileManager(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        userTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    private void appendToFile(String filePath, String textToAppend) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        } catch (IOException e){","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"            ui.throwDukeException((\"We did not manage to save your tasks:\\n\" + e.getMessage()));","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    private void createFile(String filePath) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"            File yourFile \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"            yourFile.getParentFile().mkdirs(); //","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            yourFile.createNewFile(); //Will not create new file if it exists","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"            ui.throwDukeException(\"We did not manage to create a file to save your tasks!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"     * Saves user tasks into txt at file path","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if txt file at file path does not exist","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    public void saveTasks() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"            Files.deleteIfExists(new File(this.filePath).toPath());","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"            ui.throwDukeException(\"File does not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        this.createFile(this.filePath); //Creates file at filePath if it does not exist","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        for (Task task:this.userTaskList.getArrayList()){","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"            this.appendToFile(this.filePath, task.toSaveDataFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"     * Loads users\u0027 saved tasks into an TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"     * @return TaskList containing users\u0027 saved tasks","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    public TaskList loadTasks() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"            while (s.hasNext()){","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"                String loadedTask \u003d s.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"                this.parseLoadedTask(loadedTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"            ui.println(\"No past tasks found! Let\u0027s start creating tasks!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"        return this.userTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"    private void parseLoadedTask(String loadedTask) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"        String[] loadedTaskSplit \u003d loadedTask.split(Pattern.quote(\"|\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"        switch (loadedTaskSplit[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"            case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"                Todo todo \u003d new Todo(loadedTaskSplit[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"                this.userTaskList.addTask(todo, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"                if (loadedTaskSplit[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"                    this.userTaskList.markTaskDone(this.userTaskList.getSize()-1, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"            case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"                Deadline deadline \u003d new Deadline(loadedTaskSplit[2], LocalDate.parse(loadedTaskSplit[3],","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy\")).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"                // Parse the saved format \"MMM dd yyyy\" into yyyy-mm-dd which is what Deadline() class requires","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"                this.userTaskList.addTask(deadline, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"                if (loadedTaskSplit[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"                    this.userTaskList.markTaskDone(this.userTaskList.getSize()-1, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"            case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"                Event event \u003d new Event(loadedTaskSplit[2], loadedTaskSplit[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"                this.userTaskList.addTask(event, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"                if (loadedTaskSplit[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"                    this.userTaskList.markTaskDone(this.userTaskList.getSize()-1, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":116}},{"path":"src/main/java/duke/managers/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.managers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    protected ArrayList\u003cTask\u003e userTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    protected Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"     * Constructor for TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    public TaskList(){","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        userTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * Returns exact Task of the specified index.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * @param taskIdx","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     * @return Task","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public Task getTask(int taskIdx){","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        return this.userTaskList.get(taskIdx);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"     * Returns total size of the TaskList (Number of task the user has)","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"     * @return Size of TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    public int getSize(){","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        return this.userTaskList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"     * Returns TaskList as an ArrayList","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"     * @return TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    public ArrayList\u003cTask\u003e getArrayList(){","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        return this.userTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"     * Adds a task to the user Task List","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"     * @param task exact task to be added into users\u0027 Task List","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"     * @param toPrint boolean value to decide if we want to execute print statements","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    public void addTask(Task task, Boolean toPrint) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        this.userTaskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"        if (toPrint) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"            if (task.getTag() \u003d\u003d \"T\"){","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"Fantabulous! You have added this Todo Item:\\n\" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"            } else if (task.getTag() \u003d\u003d \"D\"){","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"Perfect! You have added this Deadline Item:\\n\" + task + \"\\nRemember to stick to your objective date!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"            } else if (task.getTag() \u003d\u003d \"E\"){","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"Magnifico! You have added this Event Item:\\n\" + task + \"\\nRemember to be there 5 minutes early!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"     * Deletes specified user Task from Task List","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"     * @param taskIndex exact task index to be deleted","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if specified taskIndex is not valid (\u003c\u003d0 or \u003e total size of TaskList)","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkValidTask(taskIndex)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"            Task userTask \u003d this.userTaskList.get(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"            this.userTaskList.remove(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"            ui.print(\"I have removed \" + userTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"     * Checks if a specified task index is value","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"     * @param taskIndex exact task index to be verified","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"     * @return true if index is valid","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if specified taskIndex is not valid (\u003c\u003d0 or \u003e total size of TaskList)","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"    public boolean checkValidTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"        if ((taskIndex \u003e this.userTaskList.size()-1) || (taskIndex \u003c0)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"            ui.throwDukeException(\"There is no such task! Maybe you entered the wrong task?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        return true;","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"     * Prints all of the users tasks in a nice format","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"    public void printUserTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"        int numberOfTasks \u003d this.userTaskList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"        if (numberOfTasks \u003d\u003d 0){","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"            ui.print(\"You currently do not have any outstanding tasks! Great job! :D\");","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"            ui.println(\"Here are your tasks:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"            for (int i \u003d 1; i \u003c\u003d numberOfTasks; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"                Task userTask \u003d this.userTaskList.get(i - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"                ui.println((String.valueOf(i) + \": \" + userTask));","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"                if (!userTask.checkIsDone()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"                    counter +\u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"You have completed all your tasks! Great job!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Geralddtan"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"These are all your tasks! Only \" + String.valueOf(counter) + \" more remaining! Keep going!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"     * Prints out all of users tasks based on a matching String criteria","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"    public void printUserTasks(String userFindTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"        int numberOfTasks \u003d this.userTaskList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"        if (numberOfTasks \u003d\u003d 0){","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"            ui.print(\"You currently do not have any outstanding tasks! Great job! :D\");","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"            ui.println(\"Here are your tasks that satisfy your criteria:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"            int secondaryCounter \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"            for (int i \u003d 1; i \u003c\u003d numberOfTasks; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"                Task userTask \u003d this.userTaskList.get(i - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"                if (userTask.getTaskDescription().matches(\"^.*\" + userFindTask + \".*$\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"                    ui.println((String.valueOf(secondaryCounter) + \": \" + userTask));","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"                    secondaryCounter++;","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"Geralddtan"},"content":"            ui.print(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"Geralddtan"},"content":"     * Marks tasks as done as specified by the task index","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"Geralddtan"},"content":"     * @param taskIndex exact task index to be marked","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"Geralddtan"},"content":"     * @param toPrint boolean value to decide if we want to execute print statements","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if specified taskIndex is not valid (\u003c\u003d0 or \u003e total size of TaskList)","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"Geralddtan"},"content":"    public void markTaskDone(int taskIndex, Boolean toPrint) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"Geralddtan"},"content":"        //This is the actual index for arraylist checking (minus one already)","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkValidTask(taskIndex)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"Geralddtan"},"content":"            Task task \u003d this.userTaskList.get(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"Geralddtan"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"Geralddtan"},"content":"            if (toPrint) {","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"Congratulations on completing the task!\\n\" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"Geralddtan"},"content":"     * Marks tasks as not done as specified by the task index","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"Geralddtan"},"content":"     * @param taskIndex exact task index to be unmarked","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"Geralddtan"},"content":"     * @param toPrint boolean value to decide if we want to execute print statements","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"Geralddtan"},"content":"     * @throws DukeException if specified taskIndex is not valid (\u003c\u003d0 or \u003e total size of TaskList)","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"Geralddtan"},"content":"    public void markTaskNotDone(int taskIndex, Boolean toPrint) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"Geralddtan"},"content":"        //This is the actual index for arraylist checking (minus one already)","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkValidTask(taskIndex)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"Geralddtan"},"content":"            Task task \u003d this.userTaskList.get(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"Geralddtan"},"content":"            task.markAsNotDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"Geralddtan"},"content":"            if (toPrint) {","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"Geralddtan"},"content":"                ui.print(\"I have un-marked this task!\\n\" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":178}},{"path":"src/main/java/duke/misc/Quote.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.misc;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import java.util.Random;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class Quote {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private ArrayList\u003cString\u003e alQuotes;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"     * Contains quote list","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public Quote(){","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        alQuotes \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"Life is more than what is, its what it could be. What you could make it.\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"                \"It is our choices that show what we truly are for more than our abilities\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"                \"There comes a point in everybody’s life where we fell like giving up, \" +","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"                        \"its what we do at that point in time that defines who we are\\n\",","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"                \"What’s coming will come, and we’ll meet it when it does.\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"                \"\u0027And in the end,\\n It is not the years in your life that count.\\n It is the life in your years\u0027 - Abraham Lincoln\",","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"                \"What we need to recognise is that the things we truly want, the things that are deeply meaningful, \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"                        \"the things that are genuinely fulfilling, all require patience, \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"                        \"they all require work, they all require energy.\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"                \"So many of us choose our path out of fear disguised as practicality. \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"                        \"What we really want seems impossibly out of reach and ridiculous to expect so we never dare to ask the universe for it. \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"                        \"I am proof that you can. - Jim Carrey\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"                \"You can fail at what you don’t want, so you might as well take a chance doing what you love.\\n\" +  \"- Jim Carrey\",","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"                \"“There is a reason God limits our days”\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"                        \"“Why?”\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"                        \"“To make each one precious”\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"                        \"The Timekeeper, Mitch Albom\"","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        ));","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     * Generates random quote from a stored quote list","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"     * @return String of quote","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    public String generateQuote(){","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        Random randGenerator \u003d new Random();","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        int randomNumber \u003d randGenerator.nextInt(alQuotes.size());","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        return \"Heres your quote of the day! \\n\"+ alQuotes.get(randomNumber);","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"     * Deadline Constructor","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"     * @param description description of the deadline","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"     * @param deadlineDate exact deadline date in string format, will be converted into date object","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    public Deadline(String description, String deadlineDate){","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        super(description, \"D\");","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadlineDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * Returns deadline date in the format of \"MMM dd yyyy\"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * @return string representing deadline date in \"MMM dd yyyy\"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    public String getDeadlineDate(){","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"        return this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"     * returns deadline in save data format (format to be saved in data.txt file for task storage)","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"     * @return string representing the format it is saved in","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    public String toSaveDataFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        String isDone \u003d (super.checkIsDone() \u003d\u003d true) ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        return String.format(\"%s|%s|%s|%s\\n\", super.getTag(), isDone, super.getTaskDescription(), this.getDeadlineDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        return super.toString() + \" (By: \" + this.getDeadlineDate() + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    private String eventTiming;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"     * @param description description of event task","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"     * @param eventTiming timing of event","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    public Event(String description, String eventTiming){","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        super(description, \"E\");","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        this.eventTiming \u003d eventTiming;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public String getEventTiming(){","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        return this.eventTiming;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * returns deadline in save data format (format to be saved in data.txt file for task storage)","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * @return string representing the format it is saved in","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public String toSaveDataFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        String isDone \u003d (super.checkIsDone() \u003d\u003d true) ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        return String.format(\"%s|%s|%s|%s\\n\", super.getTag(), isDone, super.getTaskDescription(), this.getEventTiming());","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        return super.toString() + \" (At: \" + this.getEventTiming() + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"    private String taskDescription;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    private String tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"     * Constructor for Task","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"     * @param taskDescription","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"     * @param tag","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public Task (String taskDescription, String tag){","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * Checks if a task is done","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * @return","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    public boolean checkIsDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"     * Gets task description","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"     * @return","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        return this.taskDescription;","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    public String getTag(){","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        return this.tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"    public abstract String toSaveDataFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        String isDoneRepresentation;","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkIsDone() \u003d\u003d true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"            isDoneRepresentation \u003d \"[Done!] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"            isDoneRepresentation \u003d \"[] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        return \"[\" + this.getTag() + \"]\" + isDoneRepresentation + this.getTaskDescription();","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":62}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"     * @param description description of todo task","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"        super(description, \"T\");","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"     * returns Todo in save data format (format to be saved in data.txt file for task storage)","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * @return string representing the format it is saved in","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    public String toSaveDataFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"        String isDone \u003d (super.checkIsDone() \u003d\u003d true) ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        return String.format(\"%s|%s|%s\\n\", super.getTag(), isDone, super.getTaskDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":23}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    public void testTodoSaveDataFormat(){","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        Todo todo \u003d new Todo(\"Go for a run\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        todo.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(todo.toSaveDataFormat(), \"T|1|Go for a run\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    public void testDeadlineSaveDataFormat(){","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"        Deadline deadline \u003d new Deadline(\"Finish reading book\", \"2022-01-31\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"        deadline.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        deadline.markAsNotDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(deadline.toSaveDataFormat(), \"D|0|Finish reading book|Jan 31 2022\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    public void testEventSaveDataFormat(){","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"        Event event \u003d new Event(\"IS4241 Tutorial\", \"26 Jan 8pm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"        event.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(event.toSaveDataFormat(), \"E|1|IS4241 Tutorial|26 Jan 8pm\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":31}},{"path":"src/test/java/task/managers/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package task.managers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import duke.managers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    void TaskList_getSize_success() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        TaskList taskList  \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a jog\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a run\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a hike\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(taskList.getSize(), 3);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    void TaskList_deleteTask_success() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        TaskList taskList  \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a jog\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a run\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a hike\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(taskList.getSize(), 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    void TaskList_markTaskDone_success() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        TaskList taskList  \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a jog\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a run\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a hike\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        taskList.markTaskDone(2, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(taskList.getTask(2).checkIsDone(), true);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    void TaskList_markTaskNotDone_success() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        TaskList taskList  \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a jog\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a run\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        taskList.addTask(new Todo(\"Go for a hike\"), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        taskList.markTaskDone(2, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        taskList.markTaskNotDone(2, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(taskList.getTask(2).checkIsDone(), false);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Geralddtan":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"mark1","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"todo finish cs2103 work","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"event IS4241 Tutorial /at 8pm","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"deadline finish dissert work /by 2022-01-28","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"todo go for a run","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"mark 4","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"delete 5","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"delete 4","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Geralddtan":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Geralddtan":1,"-":37}}]
