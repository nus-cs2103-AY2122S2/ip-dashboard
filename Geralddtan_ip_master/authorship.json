[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    public Deadline(String description, String deadlineDate){","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"        super(description, \"D\");","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadlineDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public String getDeadlineDate(){","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        return this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public String toSaveDataFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        String isDone \u003d (super.checkIsDone() \u003d\u003d true) ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"        return String.format(\"%s|%s|%s|%s\\n\", super.getTag(), isDone, super.getTaskDescription(), this.getDeadlineDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        return super.toString() + \" (By: \" + this.getDeadlineDate() + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    public ArrayList\u003cTask\u003e userTasks;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    private final String SAVEDTASKSPATH;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public Duke(String savedTasksPath){","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        this.userTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"        this.SAVEDTASKSPATH \u003d savedTasksPath;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    public void print(Object str){","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        System.out.println(str);","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        System.out.println(\"_\".repeat(100));","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public void printBye(){","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        this.print(\"Bye. Hope I\u0027ve motivated you as much as I could have, and SMILE :D\");","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        this.userTasks.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkValidTask(taskIndex)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"            Task userTask \u003d this.userTasks.get(taskIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"            this.userTasks.remove(taskIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"            this.print(\"I have removed \" + userTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    public void printUserTasks() {","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        int numberOfTasks \u003d this.userTasks.size();","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        if (numberOfTasks \u003d\u003d 0){","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            this.print(\"You currently do not have any outstanding tasks! Great job! :D\");","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"            System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"            for (int i \u003d 1; i \u003c\u003d numberOfTasks; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"                Task userTask \u003d this.userTasks.get(i - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"                System.out.println((String.valueOf(i) + \": \" + userTask));","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"                if (!userTask.checkIsDone()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"                    counter +\u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"                this.print(\"You have completed all your tasks! Great job!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"                this.print(\"These are all your tasks! Only \" + String.valueOf(counter) + \" more remaining! Keep going!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"    public boolean checkValidTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        if ((taskIndex \u003e this.userTasks.size()-1) || (taskIndex \u003c0)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"            throw new DukeException(\"There is no such task! Maybe you entered the wrong task?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"            return true;","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"    public void markTaskDone(int taskIndex) throws DukeException { //This is the actual index for arraylist checking (minus one already)","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkValidTask(taskIndex)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"            Task task \u003d this.userTasks.get(taskIndex);","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    public void markTaskNotDone(int taskIndex) throws DukeException { //This is the actual index for arraylist checking (minus one already)","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkValidTask(taskIndex)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"            Task task \u003d this.userTasks.get(taskIndex);","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"            task.markAsNotDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"    private void appendToFile(String filePath, String textToAppend) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"            fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        } catch (IOException e){","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"            throw new DukeException((\"We did not manage to save your tasks:\\n\" + e.getMessage()));","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"    private void createFile(String filePath) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"            File yourFile \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"            yourFile.getParentFile().mkdirs(); //","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"            yourFile.createNewFile(); //Will not create new file if it exists","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"            throw new DukeException(\"We did not manage to create a file to save your tasks!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"    protected void saveTasks(String filePath) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"            Files.deleteIfExists(new File(filePath).toPath());","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"            throw new DukeException(\"File does not exist!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"        this.createFile(filePath); //Creates file at filePath if it does not exist","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"        for (Task task:this.userTasks){","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"Geralddtan"},"content":"            this.appendToFile(this.SAVEDTASKSPATH, task.toSaveDataFormat());","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"    protected void loadTasks() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"            File file \u003d new File(this.SAVEDTASKSPATH);","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"            while (s.hasNext()){","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"                String loadedTask \u003d s.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"                this.parseLoadedTask(loadedTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"            System.out.println(\"No past tasks found! Let\u0027s start creating tasks!\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"    private void parseLoadedTask(String loadedTask) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"        String[] loadedTaskSplit \u003d loadedTask.split(Pattern.quote(\"|\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"        switch (loadedTaskSplit[0]) {","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"            case \"T\":","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"                Todo todo \u003d new Todo(loadedTaskSplit[2]);","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"                this.addTask(todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"Geralddtan"},"content":"                if (loadedTaskSplit[1].equals(\"1\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"                    this.markTaskDone(this.userTasks.size()-1);","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"            case \"D\":","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"Geralddtan"},"content":"                Deadline deadline \u003d new Deadline(loadedTaskSplit[2], LocalDate.parse(loadedTaskSplit[3], DateTimeFormatter.ofPattern(\"MMM dd yyyy\")).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"Geralddtan"},"content":"                // Parse the saved format \"MMM dd yyyy\" into yyyy-mm-dd which is what Deadline() class requires","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"Geralddtan"},"content":"                this.addTask(deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"Geralddtan"},"content":"                if (loadedTaskSplit[1].equals(\"1\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"Geralddtan"},"content":"                    this.markTaskDone(this.userTasks.size()-1);","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"Geralddtan"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"Geralddtan"},"content":"            case \"E\":","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"Geralddtan"},"content":"                Event event \u003d new Event(loadedTaskSplit[2], loadedTaskSplit[3]);","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"Geralddtan"},"content":"                this.addTask(event);","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"Geralddtan"},"content":"                if (loadedTaskSplit[1].equals(\"1\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"Geralddtan"},"content":"                    this.markTaskDone(this.userTasks.size()-1);","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"Geralddtan"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":159,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":160,"author":{"gitId":"Geralddtan"},"content":"    public void performCommand(String userTaskString) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"Geralddtan"},"content":"            if (userTaskString.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"Geralddtan"},"content":"                this.saveTasks(this.SAVEDTASKSPATH);","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"Geralddtan"},"content":"                this.printBye();","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"Geralddtan"},"content":"                System.exit(0);","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.length() \u003d\u003d 0){","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"Geralddtan"},"content":"                throw new DukeException(\"You have not keyed in any task! Maybe you missed something? Don\u0027t worry, just try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.equalsIgnoreCase(\"list\")){","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"Geralddtan"},"content":"                this.printUserTasks();","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.matches(\"^(delete|Delete|DELETE).*\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"Geralddtan"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"Geralddtan"},"content":"                        this.deleteTask(Integer.parseInt(userTaskString.substring(6+1))-1);","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"Geralddtan"},"content":"                        //+1 is to take into account the \" \"after delete, -1 is to convert it into 0-based indexing","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"Geralddtan"},"content":"                    } catch (StringIndexOutOfBoundsException err) { // For cases like \"delete\" without a number","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter a task number to delete!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"Geralddtan"},"content":"                    } catch (NumberFormatException err) { // For cases like \"delete1\" without a space in between or \"delete 3b\" where the term is not a number","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please delete a task in the following format:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"Geralddtan"},"content":"                                \"delete [number]\");","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"Geralddtan"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.matches(\"^(mark|Mark|MARK).*\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"Geralddtan"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":181,"author":{"gitId":"Geralddtan"},"content":"                        int taskIdx \u003d Integer.parseInt(userTaskString.substring(4+1))-1;","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"Geralddtan"},"content":"                        this.markTaskDone(taskIdx);","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"Geralddtan"},"content":"                        this.print(\"Congratulations on completing the task!\\n\" + this.userTasks.get(taskIdx));","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"Geralddtan"},"content":"                        //+1 is to take into account the \" \"after mark, -1 is to convert it into 0-based indexing","lastModifiedDate":"2022-01-20"},{"lineNumber":185,"author":{"gitId":"Geralddtan"},"content":"                    } catch (StringIndexOutOfBoundsException err) { // For cases like \"mark\" without a number","lastModifiedDate":"2022-01-20"},{"lineNumber":186,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter a task number to mark!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":187,"author":{"gitId":"Geralddtan"},"content":"                    } catch (NumberFormatException err) { // For cases like \"mark1\" without a space in between or \"mark 3b\" where the term is not a number","lastModifiedDate":"2022-01-20"},{"lineNumber":188,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please mark a task in the following format:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":189,"author":{"gitId":"Geralddtan"},"content":"                                \"mark [number]\");","lastModifiedDate":"2022-01-20"},{"lineNumber":190,"author":{"gitId":"Geralddtan"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.matches(\"^(unmark|Unmark|UNMARK).*\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"Geralddtan"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":193,"author":{"gitId":"Geralddtan"},"content":"                        int taskIdx \u003d Integer.parseInt(userTaskString.substring(6+1))-1;","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"Geralddtan"},"content":"                        this.markTaskNotDone(taskIdx);","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"Geralddtan"},"content":"                        this.print(\"I have un-marked this task!\\n\" + this.userTasks.get(taskIdx));","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"Geralddtan"},"content":"                        //+1 is to take into account the \" \"after unmark, -1 is to convert it into 0-based indexing","lastModifiedDate":"2022-01-20"},{"lineNumber":197,"author":{"gitId":"Geralddtan"},"content":"                    } catch (StringIndexOutOfBoundsException err) { // For cases like \"unmark\" without a number","lastModifiedDate":"2022-01-20"},{"lineNumber":198,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter a task number to unmark!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":199,"author":{"gitId":"Geralddtan"},"content":"                    } catch (NumberFormatException err) { // For cases like \"unmark1\" without a space in between or \"unmark 3b\" where the term is not a number","lastModifiedDate":"2022-01-20"},{"lineNumber":200,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please unmark a task in the following format:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"Geralddtan"},"content":"                                \"unmark [number]\");","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"Geralddtan"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":203,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.matches(\"^(todo|Todo|TODO).*\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"Geralddtan"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":205,"author":{"gitId":"Geralddtan"},"content":"                        Todo userTodo \u003d new Todo(userTaskString.substring(4+1));","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"Geralddtan"},"content":"                        this.addTask(userTodo);","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"Geralddtan"},"content":"                        this.print(\"Fantabulous! You have added this Todo Item:\\n\" + userTodo);","lastModifiedDate":"2022-01-25"},{"lineNumber":208,"author":{"gitId":"Geralddtan"},"content":"                    } catch (StringIndexOutOfBoundsException err) { //For cases like \"todo\" without any further description","lastModifiedDate":"2022-01-20"},{"lineNumber":209,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter a description!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":210,"author":{"gitId":"Geralddtan"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":211,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.matches(\"^(deadline|Deadline|DEADLINE).*\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":212,"author":{"gitId":"Geralddtan"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":213,"author":{"gitId":"Geralddtan"},"content":"                        String userTaskStringSliced \u003d userTaskString.substring(8+1);","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"Geralddtan"},"content":"                        String[] descriptionDeadlineSplit \u003d userTaskStringSliced.split(\" /by \", 2);","lastModifiedDate":"2022-01-19"},{"lineNumber":215,"author":{"gitId":"Geralddtan"},"content":"                        Deadline userDeadline \u003d new Deadline(descriptionDeadlineSplit[0], descriptionDeadlineSplit[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"Geralddtan"},"content":"                        this.addTask(userDeadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"Geralddtan"},"content":"                        this.print(\"Perfect! You have added this Deadline Item:\\n\" + userDeadline + \"\\nRemember to stick to your objective date!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"Geralddtan"},"content":"                    } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException | DateTimeParseException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter a Deadline in the following format:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":220,"author":{"gitId":"Geralddtan"},"content":"                                \"deadline [description] /by [yyyy-mm-dd]\");","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"Geralddtan"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":222,"author":{"gitId":"Geralddtan"},"content":"                    //StringIndexOutOfBoundsException For cases like \"deadline\" without any other information","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"Geralddtan"},"content":"                    //ArrayIndexOutOfBoundsException For cases like \"deadline homework\" without a \"/by\"","lastModifiedDate":"2022-01-25"},{"lineNumber":224,"author":{"gitId":"Geralddtan"},"content":"                    //DateTimeParseException For cases where date cannot be recognised","lastModifiedDate":"2022-01-25"},{"lineNumber":225,"author":{"gitId":"Geralddtan"},"content":"            } else if (userTaskString.matches(\"^(event|Event|EVENT).*\")){","lastModifiedDate":"2022-01-25"},{"lineNumber":226,"author":{"gitId":"Geralddtan"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":227,"author":{"gitId":"Geralddtan"},"content":"                        String userTaskStringSliced \u003d userTaskString.substring(5+1);","lastModifiedDate":"2022-01-25"},{"lineNumber":228,"author":{"gitId":"Geralddtan"},"content":"                        String[] descriptionTimingSplit \u003d userTaskStringSliced.split(\" /at \", 2);","lastModifiedDate":"2022-01-19"},{"lineNumber":229,"author":{"gitId":"Geralddtan"},"content":"                        Event userEvent \u003d new Event(descriptionTimingSplit[0], descriptionTimingSplit[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":230,"author":{"gitId":"Geralddtan"},"content":"                        this.addTask(userEvent);","lastModifiedDate":"2022-01-25"},{"lineNumber":231,"author":{"gitId":"Geralddtan"},"content":"                        this.print(\"Perfect! You have added this Event Item:\\n\" + userEvent + \"\\nRemember to be there 5 minutes early!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":232,"author":{"gitId":"Geralddtan"},"content":"                    } catch (StringIndexOutOfBoundsException err) { // For cases like \"event\" without any other information","lastModifiedDate":"2022-01-20"},{"lineNumber":233,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter an Event in the following format:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":234,"author":{"gitId":"Geralddtan"},"content":"                                \"event [description] /at [datetime]\");","lastModifiedDate":"2022-01-20"},{"lineNumber":235,"author":{"gitId":"Geralddtan"},"content":"                    } catch (ArrayIndexOutOfBoundsException err) { //For cases like \"event meeting\" without a \"/at\"","lastModifiedDate":"2022-01-20"},{"lineNumber":236,"author":{"gitId":"Geralddtan"},"content":"                        throw new DukeException(\"Please enter an Event in the following format:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":237,"author":{"gitId":"Geralddtan"},"content":"                                \"event [description] /at [datetime]\");","lastModifiedDate":"2022-01-20"},{"lineNumber":238,"author":{"gitId":"Geralddtan"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":239,"author":{"gitId":"Geralddtan"},"content":"            } else { // If a user does not specify a todo, deadline or event","lastModifiedDate":"2022-01-20"},{"lineNumber":240,"author":{"gitId":"Geralddtan"},"content":"                throw new DukeException(\"Invalid Input! Please either add in a Todo, Deadline or Event!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":241,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":242,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":243,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":244,"author":{"gitId":"Geralddtan"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":245,"author":{"gitId":"Geralddtan"},"content":"        Scanner sc\u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":246,"author":{"gitId":"Geralddtan"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2022-01-25"},{"lineNumber":247,"author":{"gitId":"Geralddtan"},"content":"        duke.loadTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":248,"author":{"gitId":"Geralddtan"},"content":"        duke.print(\"Hello, My Dear Friend... I\u0027m Duke, your personal motivator!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":249,"author":{"gitId":"Geralddtan"},"content":"        Quote quoteOfTheDay \u003d new Quote();","lastModifiedDate":"2022-01-19"},{"lineNumber":250,"author":{"gitId":"Geralddtan"},"content":"//        duke.print(quoteOfTheDay.generateQuote());","lastModifiedDate":"2022-01-25"},{"lineNumber":251,"author":{"gitId":"Geralddtan"},"content":"        duke.print(\"What can i do for you today?\");","lastModifiedDate":"2022-01-19"},{"lineNumber":252,"author":{"gitId":"Geralddtan"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":253,"author":{"gitId":"Geralddtan"},"content":"            String userTaskString \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":254,"author":{"gitId":"Geralddtan"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":255,"author":{"gitId":"Geralddtan"},"content":"                duke.performCommand(userTaskString);","lastModifiedDate":"2022-01-19"},{"lineNumber":256,"author":{"gitId":"Geralddtan"},"content":"            } catch (DukeException exception){","lastModifiedDate":"2022-01-20"},{"lineNumber":257,"author":{"gitId":"Geralddtan"},"content":"                duke.print(exception);","lastModifiedDate":"2022-01-20"},{"lineNumber":258,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":259,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Geralddtan":258,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"    String errorMessage;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        return this.errorMessage;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Geralddtan":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"    private String eventTiming;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    public Event(String description, String eventTiming){","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"        super(description, \"E\");","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"        this.eventTiming \u003d eventTiming;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public String getEventTiming(){","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"        return this.eventTiming;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    public String toSaveDataFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"        String isDone \u003d (super.checkIsDone() \u003d\u003d true) ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        return String.format(\"%s|%s|%s|%s\\n\", super.getTag(), isDone, super.getTaskDescription(), this.getEventTiming());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        return super.toString() + \" (At: \" + this.getEventTiming() + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":25}},{"path":"src/main/java/Quote.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.util.Random;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"public class Quote {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"    public ArrayList\u003cString\u003e alQuotes;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    public Quote(){","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"        alQuotes \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"Life is more than what is, its what it could be. What you could make it.\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"                \"It is our choices that show what we truly are for more than our abilities\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"                \"There comes a point in everybody’s life where we fell like giving up, its what we do at that point in time that defines who we are\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"                \"What’s coming will come, and we’ll meet it when it does.\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"                \"\u0027And in the end,\\n It is not the years in your life that count.\\n It is the life in your years\u0027 - Abraham Lincoln\",","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"                \"What we need to recognise is that the things we truly want, the things that are deeply meaningful, \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"                        \"the things that are genuinely fulfilling, all require patience, \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"                        \"they all require work, they all require energy.\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"                \"So many of us choose our path out of fear disguised as practicality. \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"                        \"What we really want seems impossibly out of reach and ridiculous to expect so we never dare to ask the universe for it. \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"                        \"I am proof that you can. - Jim Carrey\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"                \"You can fail at what you don’t want, so you might as well take a chance doing what you love.\\n\" +  \"- Jim Carrey\",","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"                \"“There is a reason God limits our days”\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"                        \"“Why?”\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"                        \"“To make each one precious”\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"                        \"The Timekeeper, Mitch Albom\"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        ));","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public String generateQuote(){","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        Random randGenerator \u003d new Random();","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        int randomNumber \u003d randGenerator.nextInt(alQuotes.size());","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        return \"Heres your quote of the day! \\n\"+ alQuotes.get(randomNumber);","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":33}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"    private String taskDescription;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"    private String tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"    public Task (String taskDescription, String tag){","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    public boolean checkIsDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        return this.taskDescription;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public String getTag(){","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        return this.tag;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    public abstract String toSaveDataFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    public String toString(){","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        String isDoneRepresentation;","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        if (this.checkIsDone() \u003d\u003d true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"            isDoneRepresentation \u003d \"[Done!] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"            isDoneRepresentation \u003d \"[] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        return \"[\" + this.getTag() + \"]\" + isDoneRepresentation + this.getTaskDescription();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":45}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"        super(description, \"T\");","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"    public String toSaveDataFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"        String isDone \u003d (super.checkIsDone() \u003d\u003d true) ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"        return String.format(\"%s|%s|%s\\n\", super.getTag(), isDone, super.getTaskDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Geralddtan":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"todo read book","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"mark 2","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"mark 1","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"deadline return book /by 2022-01-06","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"todo join sports club","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"mark 4","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"unmark 4","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"delete 4","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Geralddtan":18}}]
