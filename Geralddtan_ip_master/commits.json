{"authorDailyContributionsMap":{"Geralddtan":[{"date":"2022-01-19","commitResults":[{"hash":"50133ac196be7f8723f3aeaab495340b1bd0b214","messageTitle":"We now only have a very skeleton of the Duke class.","messageBody":"This needs to be changed to be able to utilise good software engineering principles by creating new classes\n\nExtracting out common behaviours into a separate method \u0026 creating new classes for abstraction allows us to employ good swe principles\n\nLet\u0027s edit Duke class \u0026 create new quote class (Additional random feature)\n\nDuke class:\n* Employed abstraction principles for print methods so that changes can be easily made\n* Instantiated new Quote class which generates a Quote of the Day\n* Utilise Scanner to get user input\n\nQuote class: Abstracted out the generation of quotes to a separate class\n* Utilise Arraylist and random number generator to randomly generate a quote\n","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":1}}},{"hash":"ebd2a742c4b18168096002d9f25422dc4b7a3087","messageTitle":"Add some characteristics to duke, our motivator!","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":8}}},{"hash":"0125a8b03b12be949fc6ed2c58112aa77787bec9","messageTitle":"Add functionality to store and display user tasks","messageBody":"Right now, we perform all commands through Duke\u0027s main method. This can be abstracted out into another method for simplicity.\n\nLets abstract this code out into a method performCommand which performs the user task! This method will call the necessary functions within the Duke class from now on.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":10}}},{"hash":"e73185e95cb291af86279a051b29d5aa594a6b76","messageTitle":"Add a Task class which is able to keep track of its done status. Created toString representation for easy printing","messageBody":"Expand performCommand method to cater to instances of \"mark\" \u0026 \"unmark\"\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":13}}},{"hash":"487a8cc373ad30846ca62ad70583dadfdcd2efdc","messageTitle":"Add functionality for 3 types of tasks - Todo, Deadline and Events","messageBody":"All 3 tasks inherits from the Task class which allows us to add features unique to each task while utilising working features\nUtilise Regex for matching to extract out the users\u0027 intention for their input\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":122,"deletions":20}}}]},{"date":"2022-01-20","commitResults":[{"hash":"f2e1a9990e843042202c7746e8a879232b5a886f","messageTitle":"TextUITesting","messageBody":"Remove code which generates random quote of the day in order to facilitate stable testing\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"43a8be6e250fdfdbd600d8ca42bf3ef026877e4a","messageTitle":"Error Handling through creation of DukeException class","messageBody":"Explanations for each error provided in code\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":3},"java":{"insertions":75,"deletions":22}}},{"hash":"e728d7312e3d927846cd9e27926f268279adf798","messageTitle":"Add delete functionality","messageBody":"Make use of arraylist to delete Tasks easily\n\nPreviously, we throw individual exceptions based on the result of checkValidTask.\nLets move throwing of invalid task errors to checkValidTask in order to abstract it out from the other methods.\nLets make checking of valid task more robust by checking if provided value \u003c 1\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":32,"deletions":12}}}]},{"date":"2022-01-24","commitResults":[{"hash":"0d542c286ee9fbbd9a59125e24ae83e9b082e24b","messageTitle":"Reactivate quote of the day functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-01-25","commitResults":[{"hash":"c3af51a26405e4f0be9fb2671b094ec9edd17942","messageTitle":"Change command parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":39}}},{"hash":"7577791d5f1ef2a5cce21866f7e59049fa2cf0f7","messageTitle":"Add save and load function utility","messageBody":"Change Task to an abstract class\nAdd tag attribute to task (\"D\", \"E\", \"T\")\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":141,"deletions":45}}},{"hash":"f4119af3fc19c3eab775501a5509caf109b7ca77","messageTitle":"Implement Deadline LocalDate Feature to understand user date input for deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":8}}},{"hash":"414d6d4635bcebd2ed727b6a39c73d1474331572","messageTitle":"Level-8 edit to solve parsing of deadline item from saved data.txt file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":12},"java":{"insertions":4,"deletions":1}}}]},{"date":"2022-01-26","commitResults":[{"hash":"70a5306b3d58f077b117e92427f6ca1fa52683c5","messageTitle":"Add more OOP classes - ui, filemanager, parser, tasklist, *commands","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":35,"deletions":0}}},{"hash":"3336f9a82162d1ec785e6fec0fdfcaf588737c3b","messageTitle":"Add more OOP classes - as per previous commit","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":8},"java":{"insertions":497,"deletions":260}}},{"hash":"1050fd8c6a3939a60937b14b25bea7d5797d031f","messageTitle":"Reorganise classes into packages - command, managers, misc, task","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":182,"deletions":21}}},{"hash":"4dbfaabf6353d5a8a09fdb78ecf6bbdeabc30343","messageTitle":"Add JUnit test for Task and TaskList","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":0}}},{"hash":"8a94b639229bd01e1954d55b60074528182ea00d","messageTitle":"Add JavaDoc Comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":32}}},{"hash":"e3def8fba37e31286284e7524da8767babac0aeb","messageTitle":"Change code to follow coding standard more closely","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":29}}},{"hash":"c8cd21c645434862bcb2f206a3a59956373d7402","messageTitle":"Add find functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":0}}},{"hash":"0fbf66af0396a0135c6a092ccc864bf3aceb282f","messageTitle":"Fix FindCommand import in Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}}]},{"date":"2022-02-02","commitResults":[{"hash":"755ef72f8d869e07a338a51ce5045bed439a74c7","messageTitle":"Change runtesh.sh to account for new directory structure","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":1,"deletions":1}}}]},{"date":"2022-02-03","commitResults":[{"hash":"5479d1474148984e9cfd7ccf4e2342d871a8ce03","messageTitle":"Add gradle support by merging add-gradle-support branch","messageBody":"Enable checkstyle, Junit tests in gradle\nPerform checkstyle checks and corrections\n","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":4},"java":{"insertions":326,"deletions":148}}}]},{"date":"2022-02-04","commitResults":[{"hash":"1c02f2035c30b363a1d7b6c7d598c1992c9edcc9","messageTitle":"Add GUI to Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":22,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":254,"deletions":45}}}]},{"date":"2022-02-09","commitResults":[{"hash":"9b83bc927231d2a5bc408aeeb292213e37713ee2","messageTitle":"Edit GUI appearance","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":19,"deletions":9},"java":{"insertions":4,"deletions":20}}},{"hash":"f32707308cbbccc6af6dc0280db5732d6a3087c8","messageTitle":"Add Assertions to TaskList Methods","messageBody":"Previous code base did not make use of assertions, making it vulnerable to code bugs.\n\nAdded some assert statements to ensure that task methods are logical and accurate.\n* addTask() Method\n* deleteTask() Method\n* markTaskDone() Method\n* printUserTasks() Methods\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":1},"java":{"insertions":20,"deletions":3}}},{"hash":"db9509b6606ab3233f3545155a4532789e7cfab5","messageTitle":"Improve Code Quality","messageBody":"Currently, there was little attention paid to good coding practices. This is problematic because it makes the code less readable and potentially harder to debug.\n\nFollowing good coding practices will help greatly in future work as well as help others better understand the code.\n\nLets improve the code quality especially following the SLAP and Make the happy path prominent principles.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":15}}},{"hash":"2e3f3937097e60682c2b54fe2077f63297c270f5","messageTitle":"Set Up CI","messageBody":"","tags":["A-CI"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"Geralddtan":{"java":1435,"md":0,"fxml":45,"sh":1,"bat":0,"gradle":29,"txt":19}},"authorContributionVariance":{"Geralddtan":75112.055},"authorDisplayNameMap":{"Geralddtan":"CS2103-F09-4 GERA.. WEI"}}
