[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"javafx {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kerbysoh":23,"-":45}},{"path":"src/main/java/duke/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"public class DateParser {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"     * Parses date string entered as user input and returns a \u003ccode\u003eLocalDate\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * @param date date found in user input in String form","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     * @return \u003ccode\u003eLocalDate\u003c/code\u003e corresponding to the user input","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        return LocalDate.parse(date);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"     * Parses a \u003ccode\u003eLocalDate\u003c/code\u003e and returns a string representing the \u003ccode\u003eLocalDate\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"     * @param date \u003ccode\u003eLocalDate\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eLocalDate\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"    public static String dateToString(LocalDate date) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":25}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":" * Represents a \u003ccode\u003eTask\u003c/code\u003e with a deadline date","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"    private String deadlineDate;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    Deadline(String description, String deadlineDate) {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"            new SimpleDateFormat(\"yyyy-mm-dd\").parse(deadlineDate);","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d DateParser.parseDate(deadlineDate);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"    Deadline(String description, String deadlineDate, Boolean completed) {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"        super(description, completed);","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"            new SimpleDateFormat(\"yyyy-mm-dd\").parse(deadlineDate);","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d DateParser.parseDate(deadlineDate);","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"    public String getType() {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"        return \"Deadline\";","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the due date of the \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the deadline date of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"        return this.deadlineDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"     * Obtains the string representation of the \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"        String printedDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"            printedDate \u003d DateParser.dateToString(this.date);","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"            printedDate \u003d this.deadlineDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + printedDate + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":67}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"    private void flip() {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"        db.flip();","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"        return db;","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"kerbysoh":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":" * Represents the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    private Scene scene;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    Duke(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"            taskManager \u003d new TaskManager(storage.load());","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"            ui.print(e.toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"            taskManager \u003d new TaskManager();","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"        if (Parser.isExit(input)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"                storage.save(taskManager.getTasks());","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"                return Parser.parseCommand(input, taskManager);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"            } catch (DukeInvalidFileSaveException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"                return e.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"        return Parser.parseCommand(input, taskManager);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"        stage.show();","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"kerbysoh"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"kerbysoh"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"kerbysoh"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"kerbysoh"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"kerbysoh"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"kerbysoh"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"kerbysoh"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"kerbysoh"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"kerbysoh"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"kerbysoh"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"kerbysoh"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"kerbysoh"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"kerbysoh"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"kerbysoh"},"content":"     * Runs the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"kerbysoh"},"content":"    public void run() {","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"kerbysoh"},"content":"        ui.greet();","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"kerbysoh"},"content":"        while (true) {","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"kerbysoh"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"kerbysoh"},"content":"            String response \u003d Parser.parseCommand(userInput, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"kerbysoh"},"content":"            ui.print(response);","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"kerbysoh"},"content":"            if (Parser.isExit(userInput)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"kerbysoh"},"content":"                try {","lastModifiedDate":"2022-01-17"},{"lineNumber":110,"author":{"gitId":"kerbysoh"},"content":"                    storage.save(taskManager.getTasks());","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"kerbysoh"},"content":"                } catch (DukeInvalidFileSaveException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"kerbysoh"},"content":"                    ui.print(e.toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"kerbysoh"},"content":"                }","lastModifiedDate":"2022-01-17"},{"lineNumber":114,"author":{"gitId":"kerbysoh"},"content":"                return;","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":116,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":117,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":118,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"kerbysoh"},"content":"     * Main driver function of the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"kerbysoh"},"content":"     * @param args Command line arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"kerbysoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"kerbysoh"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kerbysoh":124,"-":2}},{"path":"src/main/java/duke/DukeEmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of no input commands entered by the user","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public class DukeEmptyInputException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeEmptyInputException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeEmptyInputException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        return \"No input is entered.\";","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":16}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents all exceptions related to the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"    public DukeException() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"        super();","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":10}},{"path":"src/main/java/duke/DukeFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of no backup file found when starting the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public class DukeFileNotFoundException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeFileNotFoundException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeFileNotFoundException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        return \"Backup file is not found.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":16}},{"path":"src/main/java/duke/DukeInsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of a correct command entered by the user but supplied with","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" * insufficient arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"public class DukeInsufficientArgumentsException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeInsufficientArgumentsException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeInsufficientArgumentsException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        return \"The command you\u0027ve typed in is missing a few arguments.\";","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":17}},{"path":"src/main/java/duke/DukeInvalidArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of a correct command entered by the user but supplied with invalid","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" * arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"public class DukeInvalidArgumentsException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeInvalidArgumentsException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeInvalidArgumentsException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        return \"The arguments supplied are invalid for this command.\";","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":16}},{"path":"src/main/java/duke/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of an invalid command entered by the user","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeInvalidCommandException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeInvalidCommandException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        return \"The command you\u0027ve typed in is not found. Did you spell it correctly?\";","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":16}},{"path":"src/main/java/duke/DukeInvalidFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of an invalid backup file found while starting the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public class DukeInvalidFileException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeInvalidFileException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeInvalidFileException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        return \"Backup file cannot be read.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":16}},{"path":"src/main/java/duke/DukeInvalidFileSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of an inability to save user tasks to file while exiting the","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" * application","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"public class DukeInvalidFileSaveException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeInvalidFileSaveException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeInvalidFileSaveException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        return \"File cannot be saved.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":17}},{"path":"src/main/java/duke/DukeTaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents an exception that occurs as a result of an invalid task number keyed in by the user when adding, removing","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" * , marking on unmarking tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"public class DukeTaskNotFoundException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eDukeTaskNotFoundException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     * @return String representation corresponding to the \u003ccode\u003eDukeTaskNotFoundException\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        return \"The task number keyed in is invalid.\";","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":" * Represents a \u003ccode\u003eTask\u003c/code\u003e that occurs at a given time","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"    private String eventTime;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    Event(String description, String eventTime, Boolean completed) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        super(description, completed);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"            new SimpleDateFormat(\"yyyy-mm-dd\").parse(eventTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d DateParser.parseDate(eventTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"    Event(String description, String eventTime) {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"            new SimpleDateFormat(\"yyyy-mm-dd\").parse(eventTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d DateParser.parseDate(eventTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"    public String getType() {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"        return \"Event\";","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the time of the \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the time of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"        return this.eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"     * Obtains the string representation of the \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"        String printedDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"            printedDate \u003d DateParser.dateToString(this.date);","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"            printedDate \u003d this.eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + printedDate + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":67}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"public class Launcher {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     * Entrypoint for the Duke application","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"     * @param args","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"kerbysoh":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"            stage.show();","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"kerbysoh":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"    @FXML","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"        );","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"        if (Parser.isExit(input)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"            stage.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"kerbysoh":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" * Parser class to parse user commands and arguments into strings","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"public class Parser {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"     * Exit response of the Duke application","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing exit message","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    public static String exitResponse() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"     * Determine if user command is the exit command","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"     * @param command User input","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"     * @return Returns true if user input is the exit command","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"    public static boolean isExit(String command) {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"            return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"        return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"     * Parse a \u003ccode\u003eToDo\u003c/code\u003e object into a String to be saved to the backup file","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"     * @param task \u003ccode\u003eToDo\u003c/code\u003e object to be parsed","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eToDo\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"    public static String parseSavedToDoTask(ToDo task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"        String taskName \u003d task.getDescription();","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"        return String.join(\" \", \"ToDo\", taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"     * Parse a \u003ccode\u003eEvent\u003c/code\u003e object into a String to be saved to the backup file","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"     * @param task \u003ccode\u003eEvent\u003c/code\u003e object to be parsed","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"    public static String parseSavedEventTask(Event task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"        String taskName \u003d task.getDescription();","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"        String taskTime \u003d task.getTime();","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"        return String.join(\" \", \"Event\", taskName, \"/at\", taskTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"     * Parse a \u003ccode\u003eDeadline\u003c/code\u003e object into a String to be saved to the backup file","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"     * @param task \u003ccode\u003eDeadline\u003c/code\u003e object to be parsed","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"    public static String parseSavedDeadlineTask(Deadline task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"        String taskName \u003d task.getDescription();","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"        String taskTime \u003d task.getTime();","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"        return String.join(\" \", \"Deadline\", taskName, \"/by\", taskTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"     * @param line A line representing a saved \u003ccode\u003eTask\u003c/code\u003e found in the backup file","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e represented by the String input found in the backup file","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeInvalidFileException Throws exception if file contents are invalid and cannot be parsed","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"kerbysoh"},"content":"    public static Task parseFile(String line) throws DukeInvalidFileException {","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"kerbysoh"},"content":"            String[] lineArguments \u003d line.split(\" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"kerbysoh"},"content":"            String taskType \u003d lineArguments[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"kerbysoh"},"content":"            String taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"kerbysoh"},"content":"            boolean completed;","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"kerbysoh"},"content":"            if (lineArguments[lineArguments.length - 1].equals(\"done\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"kerbysoh"},"content":"                completed \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"kerbysoh"},"content":"            } else if (lineArguments[lineArguments.length - 1].equals(\"undone\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"kerbysoh"},"content":"                completed \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"kerbysoh"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"kerbysoh"},"content":"                throw new DukeInvalidFileException();","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"kerbysoh"},"content":"            lineArguments \u003d Arrays.copyOf(lineArguments, lineArguments.length - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"kerbysoh"},"content":"            line \u003d String.join(\" \", lineArguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"kerbysoh"},"content":"            switch (taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"kerbysoh"},"content":"            case \"ToDo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"kerbysoh"},"content":"                taskName \u003d line.substring(\"ToDo\".length() + 1).trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"kerbysoh"},"content":"                return new ToDo(taskName, completed);","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"kerbysoh"},"content":"            case \"Deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"kerbysoh"},"content":"                String[] deadlineDetails \u003d line.split(\"/by\", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"kerbysoh"},"content":"                String deadlineTime \u003d deadlineDetails[1].trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"kerbysoh"},"content":"                taskName \u003d deadlineDetails[0].substring(\"deadline\".length() + 1).trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"kerbysoh"},"content":"                return new Deadline(taskName, deadlineTime, completed);","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"kerbysoh"},"content":"            case \"Event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"kerbysoh"},"content":"                String[] eventDetails \u003d line.split(\"/at\", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"kerbysoh"},"content":"                String eventTime \u003d eventDetails[1].trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"kerbysoh"},"content":"                taskName \u003d eventDetails[0].substring(\"event\".length() + 1).trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"kerbysoh"},"content":"                return new Event(taskName, eventTime, completed);","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"kerbysoh"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"kerbysoh"},"content":"                throw new DukeInvalidFileException();","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInvalidFileException();","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to mark a \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"kerbysoh"},"content":"    public static String parseMarkCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"kerbysoh"},"content":"            int markIndex \u003d Integer.parseInt(commandArguments[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"kerbysoh"},"content":"            response \u003d taskManager.mark(markIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"kerbysoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInvalidArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to unmark a \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"kerbysoh"},"content":"    public static String parseUnmarkCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"kerbysoh"},"content":"            int unmarkIndex \u003d Integer.parseInt(commandArguments[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"kerbysoh"},"content":"            response \u003d taskManager.unmark(unmarkIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"kerbysoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInvalidArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to delete a \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"kerbysoh"},"content":"    public static String parseDeleteCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"kerbysoh"},"content":"            int deleteIndex \u003d Integer.parseInt(commandArguments[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"kerbysoh"},"content":"            response \u003d taskManager.delete(deleteIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"kerbysoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInvalidArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to add a \u003ccode\u003eToDo\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"kerbysoh"},"content":"    public static String parseTodoCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":184,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":185,"author":{"gitId":"kerbysoh"},"content":"        String command \u003d String.join(\" \", commandArguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":186,"author":{"gitId":"kerbysoh"},"content":"        String toDoName \u003d command.substring(\"todo\".length() + 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":187,"author":{"gitId":"kerbysoh"},"content":"        ToDo toDoTask \u003d new ToDo(toDoName);","lastModifiedDate":"2022-01-20"},{"lineNumber":188,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d taskManager.add(toDoTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":189,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":190,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":192,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to add a \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"kerbysoh"},"content":"    public static String parseDeadlineCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":200,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":203,"author":{"gitId":"kerbysoh"},"content":"        boolean foundDeadlineCommand \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"kerbysoh"},"content":"        for (int i \u003d 0; i \u003c commandArguments.length; i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":205,"author":{"gitId":"kerbysoh"},"content":"            if (commandArguments[i].equals(\"/by\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":206,"author":{"gitId":"kerbysoh"},"content":"                foundDeadlineCommand \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":207,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":208,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":209,"author":{"gitId":"kerbysoh"},"content":"        if (!foundDeadlineCommand) {","lastModifiedDate":"2022-01-20"},{"lineNumber":210,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":211,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":212,"author":{"gitId":"kerbysoh"},"content":"        String command \u003d String.join(\" \", commandArguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":213,"author":{"gitId":"kerbysoh"},"content":"        String[] deadlineDetails \u003d command.split(\"/by\", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":214,"author":{"gitId":"kerbysoh"},"content":"        String deadlineTime \u003d deadlineDetails[1].trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":215,"author":{"gitId":"kerbysoh"},"content":"        String deadlineName \u003d deadlineDetails[0].substring(\"deadline\".length() + 1).trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":216,"author":{"gitId":"kerbysoh"},"content":"        if (deadlineTime.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":217,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":218,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":219,"author":{"gitId":"kerbysoh"},"content":"        if (deadlineName.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":220,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":221,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":222,"author":{"gitId":"kerbysoh"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineName, deadlineTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":223,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d taskManager.add(deadlineTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":224,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":225,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":226,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":227,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":228,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to add an \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":229,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"kerbysoh"},"content":"    public static String parseEventCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":235,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":236,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":237,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":238,"author":{"gitId":"kerbysoh"},"content":"        boolean foundEventCommand \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":239,"author":{"gitId":"kerbysoh"},"content":"        for (int i \u003d 0; i \u003c commandArguments.length; i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":240,"author":{"gitId":"kerbysoh"},"content":"            if (commandArguments[i].equals(\"/at\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":241,"author":{"gitId":"kerbysoh"},"content":"                foundEventCommand \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":242,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":243,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":244,"author":{"gitId":"kerbysoh"},"content":"        if (!foundEventCommand) {","lastModifiedDate":"2022-01-20"},{"lineNumber":245,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":246,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":247,"author":{"gitId":"kerbysoh"},"content":"        String command \u003d String.join(\" \", commandArguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":248,"author":{"gitId":"kerbysoh"},"content":"        String[] eventDetails \u003d command.split(\"/at\", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":249,"author":{"gitId":"kerbysoh"},"content":"        String eventTime \u003d eventDetails[1].trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":250,"author":{"gitId":"kerbysoh"},"content":"        String eventName \u003d eventDetails[0].substring(\"event\".length() + 1).trim();","lastModifiedDate":"2022-01-20"},{"lineNumber":251,"author":{"gitId":"kerbysoh"},"content":"        if (eventTime.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":252,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":253,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":254,"author":{"gitId":"kerbysoh"},"content":"        if (eventName.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":255,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-20"},{"lineNumber":256,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":257,"author":{"gitId":"kerbysoh"},"content":"        Event eventTask \u003d new Event(eventName, eventTime);","lastModifiedDate":"2022-01-20"},{"lineNumber":258,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d taskManager.add(eventTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":259,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":260,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":261,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":262,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":263,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to find tasks matching the description string","lastModifiedDate":"2022-01-23"},{"lineNumber":264,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-23"},{"lineNumber":265,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":266,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":267,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-23"},{"lineNumber":268,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":269,"author":{"gitId":"kerbysoh"},"content":"    public static String parseFindCommand(String[] commandArguments, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":270,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":271,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-23"},{"lineNumber":272,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":273,"author":{"gitId":"kerbysoh"},"content":"        String command \u003d String.join(\" \", commandArguments);","lastModifiedDate":"2022-01-23"},{"lineNumber":274,"author":{"gitId":"kerbysoh"},"content":"        String queryName \u003d command.substring(\"find\".length() + 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":275,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d taskManager.find(queryName);","lastModifiedDate":"2022-01-23"},{"lineNumber":276,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-23"},{"lineNumber":277,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":278,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":280,"author":{"gitId":"kerbysoh"},"content":"     * Parse a command to find tasks matching a given date","lastModifiedDate":"2022-01-24"},{"lineNumber":281,"author":{"gitId":"kerbysoh"},"content":"     * @param commandArguments User input arguments supplied","lastModifiedDate":"2022-01-24"},{"lineNumber":282,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":283,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-24"},{"lineNumber":284,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeException Handles any errors that occur during the function","lastModifiedDate":"2022-01-24"},{"lineNumber":285,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":286,"author":{"gitId":"kerbysoh"},"content":"    public static String parseFindByDateCommand(String[] commandArguments,","lastModifiedDate":"2022-01-24"},{"lineNumber":287,"author":{"gitId":"kerbysoh"},"content":"            TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":288,"author":{"gitId":"kerbysoh"},"content":"        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":289,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInsufficientArgumentsException();","lastModifiedDate":"2022-01-24"},{"lineNumber":290,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":291,"author":{"gitId":"kerbysoh"},"content":"        String command \u003d String.join(\" \", commandArguments);","lastModifiedDate":"2022-01-24"},{"lineNumber":292,"author":{"gitId":"kerbysoh"},"content":"        String queryName \u003d command.substring(\"date\".length() + 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":293,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d taskManager.findByDate(queryName);","lastModifiedDate":"2022-01-24"},{"lineNumber":294,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-24"},{"lineNumber":295,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":296,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":297,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":298,"author":{"gitId":"kerbysoh"},"content":"     * Parse user input and invokes other functions depending on the type of user command","lastModifiedDate":"2022-01-23"},{"lineNumber":299,"author":{"gitId":"kerbysoh"},"content":"     * @param command User input","lastModifiedDate":"2022-01-23"},{"lineNumber":300,"author":{"gitId":"kerbysoh"},"content":"     * @param taskManager Handle the marking, unmarking, deleting and adding of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":301,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response by the Duke application as a result of the user command","lastModifiedDate":"2022-01-23"},{"lineNumber":302,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":303,"author":{"gitId":"kerbysoh"},"content":"    public static String parseCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2022-01-20"},{"lineNumber":304,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":305,"author":{"gitId":"kerbysoh"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":306,"author":{"gitId":"kerbysoh"},"content":"                return exitResponse();","lastModifiedDate":"2022-01-20"},{"lineNumber":307,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":308,"author":{"gitId":"kerbysoh"},"content":"            String[] commandArguments \u003d command.split(\" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":309,"author":{"gitId":"kerbysoh"},"content":"            if (command.isEmpty() || commandArguments.length \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":310,"author":{"gitId":"kerbysoh"},"content":"                throw new DukeEmptyInputException();","lastModifiedDate":"2022-01-20"},{"lineNumber":311,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":312,"author":{"gitId":"kerbysoh"},"content":"            if (commandArguments[0].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":313,"author":{"gitId":"kerbysoh"},"content":"                throw new DukeEmptyInputException();","lastModifiedDate":"2022-01-20"},{"lineNumber":314,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":315,"author":{"gitId":"kerbysoh"},"content":"            String operation \u003d commandArguments[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":316,"author":{"gitId":"kerbysoh"},"content":"            switch (operation) {","lastModifiedDate":"2022-01-20"},{"lineNumber":317,"author":{"gitId":"kerbysoh"},"content":"            case \"list\":","lastModifiedDate":"2022-01-20"},{"lineNumber":318,"author":{"gitId":"kerbysoh"},"content":"                return taskManager.list();","lastModifiedDate":"2022-01-20"},{"lineNumber":319,"author":{"gitId":"kerbysoh"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":320,"author":{"gitId":"kerbysoh"},"content":"                return parseMarkCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":321,"author":{"gitId":"kerbysoh"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":322,"author":{"gitId":"kerbysoh"},"content":"                return parseUnmarkCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":323,"author":{"gitId":"kerbysoh"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":324,"author":{"gitId":"kerbysoh"},"content":"                return parseDeleteCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":325,"author":{"gitId":"kerbysoh"},"content":"            case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":326,"author":{"gitId":"kerbysoh"},"content":"                return parseEventCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":327,"author":{"gitId":"kerbysoh"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":328,"author":{"gitId":"kerbysoh"},"content":"                return parseTodoCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":329,"author":{"gitId":"kerbysoh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":330,"author":{"gitId":"kerbysoh"},"content":"                return parseDeadlineCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-20"},{"lineNumber":331,"author":{"gitId":"kerbysoh"},"content":"            case \"find\":","lastModifiedDate":"2022-01-23"},{"lineNumber":332,"author":{"gitId":"kerbysoh"},"content":"                return parseFindCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-23"},{"lineNumber":333,"author":{"gitId":"kerbysoh"},"content":"            case \"date\":","lastModifiedDate":"2022-01-24"},{"lineNumber":334,"author":{"gitId":"kerbysoh"},"content":"                return parseFindByDateCommand(commandArguments, taskManager);","lastModifiedDate":"2022-01-24"},{"lineNumber":335,"author":{"gitId":"kerbysoh"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":336,"author":{"gitId":"kerbysoh"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2022-01-20"},{"lineNumber":337,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":338,"author":{"gitId":"kerbysoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":339,"author":{"gitId":"kerbysoh"},"content":"            return e.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":340,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":341,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":342,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":342}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import java.io.File;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":" * Represents the file storing saved user tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"public class Storage {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    private String filePath;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    private File file;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"    Storage(String filePath) throws DukeFileNotFoundException {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"                throw new DukeFileNotFoundException();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"     * Load tasks from the saved file to the user application","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"     * @return List of tasks found in the saved file","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeInvalidFileException Throws error when file saved is invalid","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeInvalidFileException {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"            String nextLine \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"                taskList.add(Parser.parseFile(nextLine));","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"                nextLine \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"        } catch (IOException | DukeInvalidFileException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInvalidFileException();","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"        return taskList;","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"     * Save tasks into a file","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"     * @param taskList \u003ccode\u003eArrayList\u003c/code\u003e of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"     * @throws DukeInvalidFileSaveException Throws exception when tasks cannot be saved","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws DukeInvalidFileSaveException {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"        String savedTasks \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"            String completed \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"            if (task.isCompleted()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"                completed \u003d \"done\";","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"                completed \u003d \"undone\";","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"            String savedTask \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"            switch (type) {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"kerbysoh"},"content":"            case \"ToDo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"kerbysoh"},"content":"                savedTasks +\u003d Parser.parseSavedToDoTask((ToDo) task);","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"kerbysoh"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"kerbysoh"},"content":"            case \"Deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"kerbysoh"},"content":"                savedTasks +\u003d Parser.parseSavedDeadlineTask((Deadline) task);","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"kerbysoh"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"kerbysoh"},"content":"            case \"Event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"kerbysoh"},"content":"                savedTasks +\u003d Parser.parseSavedEventTask((Event) task);","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"kerbysoh"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"kerbysoh"},"content":"            default:","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"kerbysoh"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"kerbysoh"},"content":"            savedTasks +\u003d \" \" + completed;","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"kerbysoh"},"content":"            savedTasks +\u003d \"\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"kerbysoh"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"kerbysoh"},"content":"            fileWriter.write(savedTasks);","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"kerbysoh"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"kerbysoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"kerbysoh"},"content":"            throw new DukeInvalidFileSaveException();","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":91}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents a task","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"    private final String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"    private boolean completed;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"    Task(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    Task(String description, Boolean completed) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the description of the task","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the description of the task","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"        return this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the completion status of the task","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"     * @return Boolean corresponding to whether the task is completed","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"        return this.completed;","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"     * Marking the tasks as completed","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"    public void mark() {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"     * Marking the task as not completed","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"    public String getType() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"        return \"Task\";","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"     * Representation of a \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"        if (this.completed) {","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"            taskString +\u003d \"[X] \";","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"kerbysoh"},"content":"            taskString +\u003d \"[ ] \";","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"kerbysoh"},"content":"        taskString +\u003d this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"kerbysoh"},"content":"        return taskString;","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":73}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" * Represents the list of tasks and functions to carry out task-related functions such as marking, unmarking, deleting","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":" * and adding tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    TaskManager() {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    TaskManager(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the list of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"     * @return \u003ccode\u003eArrayList\u003c/code\u003e representing the list of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"     * Obtain the number of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"     * @return Integer representing the number of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"    int countTasks() {","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"     * Listing out the tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the list of tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"    public String list() {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"        if (this.countTasks() \u003d\u003d 0) {","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"            return \"You have no tasks.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"        for (int i \u003d 1; i \u003c\u003d this.countTasks(); i++) {","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d (i + \". \" + this.taskList.get(i - 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"            if (i !\u003d this.countTasks()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"                response +\u003d \"\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"     * Marking a task as completed","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"     * @param index Index of task to be marked","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response when a task is marked","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"    public String mark(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"            Task taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"            taskToMark.mark();","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d \"    \" + this.taskList.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"            throw e;","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"kerbysoh"},"content":"     * Deleting a task","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"kerbysoh"},"content":"     * @param index Index of task to be deleted","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response when a task is deleted","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"kerbysoh"},"content":"    public String delete(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"kerbysoh"},"content":"            Task taskToDelete \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"kerbysoh"},"content":"            this.taskList.remove(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d \"    \" + taskToDelete + \"\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d String.format(\"Now you have %d tasks in the list.\", this.countTasks());","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"kerbysoh"},"content":"            throw e;","lastModifiedDate":"2022-01-17"},{"lineNumber":86,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":87,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":90,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"kerbysoh"},"content":"     * Adding a task","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"kerbysoh"},"content":"     * @param task Task to be added to the list","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response when a task is added","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"kerbysoh"},"content":"    public String add(Task task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"kerbysoh"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"kerbysoh"},"content":"        response +\u003d \"    \" + task + \"\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"kerbysoh"},"content":"        response +\u003d String.format(\"Now you have %d tasks in the list.\", this.countTasks());","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":102,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"kerbysoh"},"content":"     * Finding tasks that match a description","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"kerbysoh"},"content":"     * @param description String describing task","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing tasks matching the description","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"kerbysoh"},"content":"    public String find(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"kerbysoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"kerbysoh"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"kerbysoh"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"kerbysoh"},"content":"                tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"kerbysoh"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"kerbysoh"},"content":"            return \"There are no tasks matching this description.\";","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"Here are the tasks matching the description:\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"kerbysoh"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d (i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"kerbysoh"},"content":"            if (i !\u003d tasks.size()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"kerbysoh"},"content":"                response +\u003d \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"kerbysoh"},"content":"     * Finding tasks that match a given date","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"kerbysoh"},"content":"     * @param date Date supplied by user input","lastModifiedDate":"2022-01-24"},{"lineNumber":131,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing tasks with given date","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"kerbysoh"},"content":"    public String findByDate(String date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"kerbysoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"kerbysoh"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"kerbysoh"},"content":"            if (task.getType() \u003d\u003d \"Deadline\") {","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"kerbysoh"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"kerbysoh"},"content":"                if (deadlineTask.getTime().equals(date)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"kerbysoh"},"content":"                    tasks.add(deadlineTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"kerbysoh"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"kerbysoh"},"content":"            if (task.getType() \u003d\u003d \"Event\") {","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"kerbysoh"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"kerbysoh"},"content":"                if (eventTask.getTime().equals(date)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"kerbysoh"},"content":"                    tasks.add(eventTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"kerbysoh"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"kerbysoh"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"kerbysoh"},"content":"            return \"There are no tasks with this date.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"Here are the tasks with the given date date:\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"kerbysoh"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d (i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"kerbysoh"},"content":"            if (i !\u003d tasks.size()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"kerbysoh"},"content":"                response +\u003d \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"kerbysoh"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":158,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":159,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-24"},{"lineNumber":160,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":161,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":162,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"kerbysoh"},"content":"     * Marking a task as not completed","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"kerbysoh"},"content":"     * @param index Index of task to be unmarked","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the response when a task is unmarked","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"kerbysoh"},"content":"    public String unmark(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"kerbysoh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":170,"author":{"gitId":"kerbysoh"},"content":"            Task taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":171,"author":{"gitId":"kerbysoh"},"content":"            taskToMark.unmark();","lastModifiedDate":"2022-01-17"},{"lineNumber":172,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"kerbysoh"},"content":"            response +\u003d \"    \" + this.taskList.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"kerbysoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":175,"author":{"gitId":"kerbysoh"},"content":"            throw e;","lastModifiedDate":"2022-01-17"},{"lineNumber":176,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":177,"author":{"gitId":"kerbysoh"},"content":"        return response;","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":179,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":180,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":180}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":" * Represents a task with no date attached","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"    ToDo(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"    ToDo(String description, Boolean completed) {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"        super(description, completed);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"     * Returns the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"    public String getType() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"        return \"ToDo\";","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"     * Obtains the string representation of the \u003ccode\u003eToDo\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"     * @return String corresponding to the \u003ccode\u003eToDo\u003c/code\u003e object","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":" * Represents the user interface","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"public class Ui {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"    Ui() {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"     * Greets user as they launch the application","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    void greet() {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"     * Prints response to the standard output","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"     * @param response Response that is to be printed","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    void print(String response) {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"        System.out.println(response);","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"     * Read user input","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"     * @return String representing the user input","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"    String readCommand() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kerbysoh":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"kerbysoh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"kerbysoh":19}},{"path":"src/test/java/duke/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":" * Represents test for the \u003ccode\u003eDateParser\u003c/code\u003e class","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"public class DateParserTest {","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"     * Tests the parsing of strings into \u003ccode\u003eLocalDate\u003c/code\u003e objects","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"    public void stringToDate() {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"        assertTrue(DateParser.parseDate(\"2021-11-11\") instanceof LocalDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"        assertEquals(DateParser.parseDate(\"2021-11-11\").toString(), \"2021-11-11\");","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"     * Tests the parsing of \u003ccode\u003eLocalDate\u003c/code\u003e objects into strings","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    public void dateToString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"        assertEquals(DateParser.dateToString(LocalDate.of(2017, 11, 6)), \"6 November 2017\");","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"        assertEquals(DateParser.dateToString(LocalDate.of(2090, 12, 5)), \"5 December 2090\");","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"kerbysoh":32}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":" * Represents tests for the \u003ccode\u003eParser\u003c/code\u003e class","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kerbysoh"},"content":"     * Tests the parsing of Strings from a backup file for \u003ccode\u003eToDo\u003c/code\u003e objects","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kerbysoh"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"kerbysoh"},"content":"    public void parseFileToDo() {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"ToDo homework done\") instanceof ToDo);","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"ToDo dishes undone\") instanceof ToDo);","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"ToDo homework blablabla\") instanceof ToDo);","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"ToDo\") instanceof ToDo);","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"kerbysoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"kerbysoh"},"content":"            assertEquals(\"Backup file cannot be read.\", e.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kerbysoh"},"content":"     * Tests the parsing of Strings from a backup file for \u003ccode\u003eDeadline\u003c/code\u003e objects","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kerbysoh"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"kerbysoh"},"content":"    public void parseFileDeadline() {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Deadline homework /by 9pm done\") instanceof Deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Deadline assignment /by 13 Jan undone\") instanceof Deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Deadline homework /by 9pm testing\") instanceof Deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Deadline\") instanceof Deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"kerbysoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"kerbysoh"},"content":"            assertEquals(\"Backup file cannot be read.\", e.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kerbysoh"},"content":"     * Tests the parsing of Strings from a backup file for \u003ccode\u003eEvent\u003c/code\u003e objects","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kerbysoh"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"kerbysoh"},"content":"    public void parseFileEvent() {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"kerbysoh"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Event drinks /at 9pm done\") instanceof Event);","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Event party /at 13 Jan undone\") instanceof Event);","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Event homework /at 9pm testing\") instanceof Event);","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"kerbysoh"},"content":"            assertTrue(Parser.parseFile(\"Event /at\") instanceof Event);","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"kerbysoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"kerbysoh"},"content":"            assertEquals(\"Backup file cannot be read.\", e.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"kerbysoh"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"kerbysoh"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"kerbysoh"},"content":"     * Tests the parsing of Tasks to be saved into a backup file","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"kerbysoh"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"kerbysoh"},"content":"    @Test","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"kerbysoh"},"content":"    public void parseSavedTasks() {","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"kerbysoh"},"content":"        assertEquals((Parser.parseSavedEventTask(new Event(\"sleep\", \"9pm\"))),","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"kerbysoh"},"content":"                \"Event sleep /at 9pm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"kerbysoh"},"content":"        assertEquals((Parser.parseSavedDeadlineTask(new Deadline(\"sleep\", \"9pm\"))),","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"kerbysoh"},"content":"                \"Deadline sleep /by 9pm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"kerbysoh"},"content":"        assertEquals((Parser.parseSavedToDoTask(new ToDo(\"sleep\"))),","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"kerbysoh"},"content":"                \"ToDo sleep\");","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"kerbysoh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"kerbysoh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"kerbysoh"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"kerbysoh":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kerbysoh"},"content":"todo project","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"kerbysoh"},"content":"deadline assignment /by Sunday 8pm","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"kerbysoh"},"content":"event party /at Friday 9pm","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"kerbysoh"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"kerbysoh"},"content":"unmark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"kerbysoh"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"kerbysoh"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"kerbysoh"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"kerbysoh"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"kerbysoh"},"content":"todo homework","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kerbysoh"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"kerbysoh":11}}]
