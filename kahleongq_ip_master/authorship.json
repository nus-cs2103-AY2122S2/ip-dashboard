[{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" * Represents a todo, deadline or event command, adding to the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    private final String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    private final String time;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddCommand class when a command is given without time.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"todo\".","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     * @param description A string containing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    public AddCommand(String command, String description) {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"        this.time \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddCommand class when a command is given with time.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing either the word \"deadline\" or \"event\".","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"     * @param description A string containing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"     * @param time A string representing the time, formatted as \"yyyy-mm-dd\".","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    public AddCommand(String command, String description, String time) {","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"            LocalDate parsedTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"            String formattedTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"            switch (this.getFirstWord()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"                Task taskTodo \u003d new Todo(this.description);","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"                tasks.add(taskTodo);","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"  \" + taskTodo);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"                Task taskDeadline \u003d new Deadline(this.description, this.time);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"                tasks.add(taskDeadline);","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"  \" + taskDeadline);","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"            case \"event\":","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"                Task taskEvent \u003d new Event(this.description, this.time);","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"                tasks.add(taskEvent);","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"  \" + taskEvent);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"            storage.update(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"            System.out.println(\"Please type a valid date! (Format: YYYY-MM-DD)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":76}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a command","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final String command;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructor for an instance of Command objects","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string representing the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    public Command(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     * Checks if the command is \"bye\".","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @return true if command is \"bye\".","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"        return this.command.equals(\"bye\");","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"     * Fetches the keyword of the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     * @return A string equal to the first word of the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    public String getFirstWord() {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        return this.command;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"     * Executes the command","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     * @param tasks TaskList to be altered.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"     * @param ui Ui for reading user input and displaying output.","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * @param storage Storage to read pre-existing tasks, and update tasks to hard disk.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":48}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final LocalDate by;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a deadline, which is unmarked by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param by A String representing a time in the format of \"yyyy-mm-dd\"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a marked or unmarked deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * @param by A String representing a time in the format of \"yyyy-mm-dd\".","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     * Formats the date of the deadline","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     * @return A string representation of the date in the format of \"MMM d yyyy\".","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    public String formatDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"        return new Deadline(this.getDescription(), this.by, true);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"        return new Deadline(this.getDescription(), this.by, false);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatDate() + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":67}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a delete command, which deletes tasks from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"delete\".","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the task number to delete.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public DeleteCommand(String command, int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid task! (Your list has \"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                        + tasks.size() + \" tasks)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            Task deletedTask \u003d tasks.remove(taskIdx);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(\"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"                    + deletedTask","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"                    + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"            storage.update(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Duke runs a task tracker to help keep track of tasks. Tasks can be marked as done or not done,","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" * and can be added and deleted from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of Duke.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     * @param filePath A string representing the path to the file to save tasks to.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    public Duke(String filePath) throws IOException{","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"            if (storage.load().equals(\"\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"\");","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     * Runs the task tracker.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"            ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"            Command command \u003d Parser.parse(fullCommand, ui);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"            ui.showLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kahleongq":52,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents exceptions specific to Duke.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"    private String message;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of DukeException.","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * @param message A string representing the error message.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" * Represents a event task.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of an event, which is unmarked by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param at A String representing a time in the format of \"yyyy-mm-dd\"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a marked or unmarked event.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * @param at A String representing a time in the format of \"yyyy-mm-dd\".","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    public Event(String description, LocalDate at, boolean isDone) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     * Formats the date of the event","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     * @return A string representation of the date in the format of \"MMM d yyyy\".","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    String formatDate() {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"        return new Event(this.getDescription(), this.at, true);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"        return new Event(this.getDescription(), this.at, false);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.formatDate() + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":67}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents an exit command, terminating the program.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the ExitCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"bye\".","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":24}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a find command","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final String searchWord;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the FindCommand class.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A String containing the word \"find\".","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param searchWord A String representing the query.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public FindCommand(String command, String searchWord) {","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.searchWord \u003d searchWord;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            if (task.getDescription().contains(this.searchWord)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                taskCount +\u003d 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                output.append(\"\\n\").append(taskCount).append(\".\").append(task);","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(\"Uh-oh! There are no matching tasks in your list!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(String.valueOf(output));","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"kahleongq":42}},{"path":"src/main/java/duke/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents an invalid command.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the InvalidCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the original invalid command","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    public InvalidCommand(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        ui.showMessage(this.getFirstWord());","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":24}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents a list command.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the ListCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"list\".","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"         if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(\"Uh-oh! List is empty!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":30}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a mark command","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the MarkCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the \"mark\" word.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the task number to mark.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public MarkCommand(String command, int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid task! (Your list has \"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                        + tasks.size() + \" tasks)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"        tasks.set(taskIdx, tasks.get(taskIdx).mark());","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"                + tasks.get(taskIdx));","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":42}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * A class responsible for breaking down commands into the command type,","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" * and constructing the commands to be executed.","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"public class Parser {","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     * Parses the user input into Command objects.","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * @param ui Ui for reading user input and displaying output.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    public static Command parse(String command, Ui ui) {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"        command \u003d command.strip().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        String firstWord \u003d command.split(\" \")[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"                if (!command.equals(\"bye\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"No words should be after \u0027bye\u0027.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"                return new ExitCommand(firstWord);","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        case \"list\":","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                if (!command.equals(\"list\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"No words should be after \u0027list\u0027.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"                return new ListCommand(firstWord);","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"                int taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"                return new DeleteCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Please input an integer!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"                int taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"                return new MarkCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Please input an integer!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"                int taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"                return new UnmarkCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Please input an integer!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"                description \u003d description.split(\" /by \")[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"                String time \u003d command.split(\" /by \")[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"                return new AddCommand(firstWord, description, time);","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"                System.out.println(\"Uh-oh! There\u0027s no deadline here!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Uh-oh! There is nothing to do here!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"                return new AddCommand(firstWord, description);","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"kahleongq"},"content":"        case \"event\":","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"kahleongq"},"content":"                description \u003d description.split(\" /at \")[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"kahleongq"},"content":"                String time \u003d command.split(\" /at \")[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"kahleongq"},"content":"                return new AddCommand(firstWord, description, time);","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"kahleongq"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(\"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"kahleongq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"kahleongq"},"content":"                System.out.println(\"Uh-oh! There\u0027s no event here!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"kahleongq"},"content":"        case \"find\":","lastModifiedDate":"2022-02-10"},{"lineNumber":104,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"find\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Uh-oh! There is nothing to find here!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"kahleongq"},"content":"                return new FindCommand(firstWord, description);","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"kahleongq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"kahleongq"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"kahleongq"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"kahleongq"},"content":"        return new InvalidCommand(\"Please try again!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":117}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":" * Storage handles reading from a file path for pre-existing tasks, and updates","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":" * the file whenever the tasks are updated.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"public class Storage {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    private String fileName;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    private String filePath;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the Storage class.","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     * @param filePath A string containing the file path to the saved tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        Path newFile;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\");","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"            if (!directoryExists) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                java.nio.file.Files.createDirectories(path);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            Path dukeFile \u003d path.resolve(\"tasks.txt\");","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"            newFile \u003d Files.createFile(dukeFile);","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            this.fileName \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"            newFile \u003d Paths.get(filePath);","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"            this.fileName \u003d newFile.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * Updates the save file with the new task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * @param tasks A TaskList containing the updated tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    public void update(TaskList tasks) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"            data.add(task.toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"        java.nio.file.Files.write(Paths.get(this.filePath), data, StandardCharsets.UTF_8);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"     * Provides the file path to load the saved tasks into the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * @return A string containing the file path if there is pre-existing data,","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     * an empty string if there are no pre-existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public String load() {","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return this.fileName;","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":67}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents a task.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    private final String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of a Task class, which is unmarked by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a marked or unmarked task.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     * Represents the marked status of the task as a String.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     * @return \"X\" if the task is marked, \" \" if the task is unmarked.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     * Fetches the description of the task.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * @return A string containing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"        return this.description;","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * @return A marked Task with all other attributes kept the same.","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"        return new Task(this.description, true);","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"     * Marks  the task as not done.","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     * @return An unmarked Task with all other attributes kept the same.","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return new Task(this.description, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":75}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"public class TaskList {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * Constructs a new task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * Constructs a task list from pre-existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * @param fileName A string containing the file path to the existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    public TaskList(String fileName) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        this.list \u003d TaskList.populateList(fileName);","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     * @return true if the task list is empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        return list.isEmpty();","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * Fetches the task at the given index.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the index of the task to get.","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * @return A Task at the given index of the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"        return list.get(idx);","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     * Fetches the number of tasks in the list.","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"     * @return An integer representing the number of tasks in the list.","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    public int size() {","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"        return list.size();","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     * Removes the task at the given index from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the index of the task to be removed.","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"     * @return the Task that is removed.","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"    public Task remove(int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"        return list.remove(taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"     * Replaces a task at the given index with a new task.","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the index of the task to be replaced.","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"     * @param task the Task to replace the existing Task with.","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"     * @return the Task that was replaced.","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"    public Task set(int idx, Task task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"        return list.set(idx, task);","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"     * Adds a task to the end of the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"     * @param task the Task to be added to the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"     * @return true if the task has been added.","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"kahleongq"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"kahleongq"},"content":"        return list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"kahleongq"},"content":"     * Fetches the whole task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"kahleongq"},"content":"     * @return an ArrayList of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"kahleongq"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"kahleongq"},"content":"        return this.list;","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"kahleongq"},"content":"     * Populates the task list with pre-existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"kahleongq"},"content":"     * @param fileName A string representing the file path to the saved tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"kahleongq"},"content":"     * @return an ArrayList of the saved tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"kahleongq"},"content":"    public static ArrayList\u003cTask\u003e populateList(String fileName) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"kahleongq"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"kahleongq"},"content":"        BufferedReader file \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"kahleongq"},"content":"        String line \u003d file.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"kahleongq"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"kahleongq"},"content":"            boolean isMarked \u003d String.valueOf(line.charAt(4)).equals(\"X\");","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"kahleongq"},"content":"            if (String.valueOf(line.charAt(1)).equals(\"T\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"kahleongq"},"content":"                Task task \u003d new Todo(line.substring(7));","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"kahleongq"},"content":"                if (isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"kahleongq"},"content":"                    task \u003d task.mark();","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"kahleongq"},"content":"                list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"kahleongq"},"content":"            } else if (String.valueOf(line.charAt(1)).equals(\"D\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"kahleongq"},"content":"                String tempDescription \u003d line.split(\"by: \")[0].substring(7);","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"kahleongq"},"content":"                int tempDescLength \u003d tempDescription.length();","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"kahleongq"},"content":"                String description \u003d tempDescription.substring(0, tempDescLength - 2);","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"kahleongq"},"content":"                String tempTimeBy \u003d line.split(\"by: \")[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"kahleongq"},"content":"                int endIdx \u003d tempTimeBy.lastIndexOf(\")\");","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"kahleongq"},"content":"                String timeBy \u003d tempTimeBy.substring(0, endIdx);","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"kahleongq"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"kahleongq"},"content":"                Task task \u003d new Event(description, LocalDate.parse(timeBy, formatter).toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"kahleongq"},"content":"                if (isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"kahleongq"},"content":"                    task \u003d task.mark();","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"kahleongq"},"content":"                list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"kahleongq"},"content":"            } else if (String.valueOf(line.charAt(1)).equals(\"E\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"kahleongq"},"content":"                String tempDescription \u003d line.split(\"at: \")[0].substring(7);","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"kahleongq"},"content":"                int tempDescLength \u003d tempDescription.length();","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"kahleongq"},"content":"                String description \u003d tempDescription.substring(0, tempDescLength - 2);","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"kahleongq"},"content":"                String tempTimeBy \u003d line.split(\"at: \")[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"kahleongq"},"content":"                int endIdx \u003d tempTimeBy.lastIndexOf(\")\");","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"kahleongq"},"content":"                String timeBy \u003d tempTimeBy.substring(0, endIdx);","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"kahleongq"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"kahleongq"},"content":"                Task task \u003d new Event(description, LocalDate.parse(timeBy, formatter).toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"kahleongq"},"content":"                if (isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"kahleongq"},"content":"                    task \u003d task.mark();","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"kahleongq"},"content":"                list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"kahleongq"},"content":"            line \u003d file.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"kahleongq"},"content":"        file.close();","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"kahleongq"},"content":"        return list;","lastModifiedDate":"2022-02-09"},{"lineNumber":152,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":153}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents a todo task.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the Todo class, which is unmarked by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     * @param description","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a marked or unmarked todo task.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        return new Todo(this.getDescription(), true);","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        return new Todo(this.getDescription(), false);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    ","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":40}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" * A class that reads user input and displays output to the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"public class Ui {","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Default constructor of Ui","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    public Ui() {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     * Prints a line.","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    public void showLine() {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        System.out.println(\"__________________________________________________\");","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * Prints the duke greeting.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     * Prints an error message if there is no pre-existing data found.","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        System.out.println(\"No pre-existing data found!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * Converts user input into a string.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * @return a String representing the user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"        return br.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"     * Prints out a given message.","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"     * @param message a String representing the given message to printed.","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"        System.out.println(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"     * Prints out the goodbye message.","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":70}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents an unmark command.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the UnmarkCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the \"unmark\" word.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the task number to unmark.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public UnmarkCommand(String command, int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid task! (Your list has \"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                        + tasks.size() + \" tasks)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            tasks.set(taskIdx, tasks.get(taskIdx).unmark());","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(\"Nice! I\u0027ve marked this task as not done yet:\\n  \"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"                    + tasks.get(taskIdx));","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            storage.update(tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"deadline 64 pages of readings /by 9am","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"event training session /at 7pm","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"todo this ip","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"deadline proposal /by thursday","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"deadline research /by friday","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"event briefing /at 5-6pm","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"mark 6","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"todo sleep","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"bye","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kahleongq":16}}]
