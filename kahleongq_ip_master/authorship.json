[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    String javaFxVersion \u003d \u002717.0.2\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"javafx {","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"    version \u003d \"17.0.2\"","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"kahleongq":22,"-":45}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" * Represents a todo, deadline or event command, adding to the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"    private final String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    private final String time;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddCommand class when a command is given without time.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"todo\".","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * @param description A string containing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    public AddCommand(String command, String description) {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        this.time \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddCommand class when a command is given with time.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing either the word \"deadline\" or \"event\".","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"     * @param description A string containing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"     * @param time A string representing the time, formatted as \"yyyy-mm-dd\".","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"    public AddCommand(String command, String description, String time) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"            Task task;","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"            switch (this.getFirstWord()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"                task \u003d new Todo(this.description);","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"                task \u003d new Deadline(this.description, this.time);","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"            case \"event\":","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"                task \u003d new Event(this.description, this.time);","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"            default:","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"                return \"Please try again!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"            tasks.add(task);","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"            storageTask.update(tasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"            return getOutput(taskString, tasks.size());","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"            return \"Please type a valid date! (Format: YYYY-MM-DD)\";","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"     * Generates the output based on the task and list size","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"     * @param task the String representation of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"     * @param size an integer representing the size of the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"     * @return a string representing the response to the user input after successful addition of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"    public String getOutput(String task, int size) {","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"                + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":81}},{"path":"src/main/java/duke/AddPlaceCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents an add place command","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class AddPlaceCommand extends Command {","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final String name;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"    private final String description;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddPlaceCommand class.","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param command","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     * @param name","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * @param description","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    public AddPlaceCommand(String command, String name, String description) {","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        assert !command.contains(\"[\") || !command.contains(\"]\") : \"Please don\u0027t use brackets in the place name\";","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"        Place place \u003d new Place(this.name, this.description);","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        places.add(place);","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        storagePlace.update(places);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"        return \"Got it. I\u0027ve added this place:\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                + \"  \" + place.getName() + \"\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"                + \"Now you have \" + places.size() + \" places in the list.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"kahleongq":41}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a command","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final String command;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructor for an instance of Command objects","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string representing the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    public Command(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     * Checks if the command is \"bye\".","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @return true if command is \"bye\".","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"        return this.command.equals(\"bye\");","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"     * Fetches the keyword of the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     * @return A string equal to the first word of the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    public String getFirstWord() {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        return this.command;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"     * Executes the command","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     * @param tasks TaskList to be altered.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"     * @param places PlaceList to be altered.","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * @param ui Ui for reading user input and displaying output.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * @param storageTask Storage to read pre-existing tasks, and update tasks to hard disk.","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     * @param storagePlace Storage to read pre-existing places, and update places to hard disk.","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * @return a String representing the response to the user input.","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    public abstract String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"                                   Storage storageTask, Storage storagePlace) throws IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":52}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final LocalDate by;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of a deadline, which is unmarked by default.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param by A String representing a time in the format of \"yyyy-mm-dd\"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of a marked or unmarked deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * @param by A String representing a time in the format of \"yyyy-mm-dd\".","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     * Formats the date of the deadline","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     * @return A string representation of the date in the format of \"MMM d yyyy\".","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    public String formatDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"        return new Deadline(this.getDescription(), this.by, true);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"        return new Deadline(this.getDescription(), this.by, false);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatDate() + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":67}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a delete command, which deletes tasks from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the AddCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"delete\".","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the task number to delete.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public DeleteCommand(String command, int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid task! (Your list has \"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                        + tasks.size() + \" tasks)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            Task deletedTask \u003d tasks.remove(taskIdx);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"            storageTask.update(tasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            return \"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                    + deletedTask","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"                    + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":44}},{"path":"src/main/java/duke/DeletePlaceCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a delete place command","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class DeletePlaceCommand extends Command {","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int idx;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructor of the DeletePlaceCommand class.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"delplace\".","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the place number to delete.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public DeletePlaceCommand(String command, int idx) {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            int placeIdx \u003d idx - 1;","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            if (placeIdx \u003e\u003d places.size() || placeIdx \u003c 0) {","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid place! (Your list has \"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                        + places.size() + \" places)\");","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            Place deletedPlace \u003d places.remove(placeIdx);","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"            storagePlace.update(places);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            return \"Noted. I\u0027ve removed this place:\\n  \"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                    + deletedPlace.getName()","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"                    + \"\\n Now you have \" + places.size() + \" places in the list.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"kahleongq":44}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"// Solution below adopted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":" * Represents the dialog box as part of the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    private Label text;","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the DialogBox class.","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @param l the Label representing the text to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * @param iv the ImageView representing the image to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"     * Flips the dialog box to the opposite side of the window.","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    private void flip() {","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"     * Creates a dialog box for the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"     * @param l the Label representing the text to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * @param iv the ImageView representing the image to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     * @return the DialogBox containing the label and image.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * Creates a dialog box for the system.","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     * @param l the Label representing the text to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"     * @param iv the ImageView representing the image to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"     * @return the DialogBox containing the label and image.","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"        db.flip();","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"        return db;","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"kahleongq":72}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":" * Duke runs a task tracker to help keep track of tasks. Tasks can be marked as done or not done,","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":" * and can be added and deleted from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    private Storage storageTask;","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    private Storage storagePlace;","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"    private PlaceList places;","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"     * Default duke constructor","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    public Duke() {","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of Duke.","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     * @param filePathTask A string representing the path to the file to save tasks to.","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"     * @param filePathPlace A string representing the path to the file to save places to.","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    public Duke(String filePathTask, String filePathPlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"        storageTask \u003d new Storage(filePathTask);","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"            if (storageTask.load().equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"\");","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"            tasks \u003d new TaskList(storageTask.load());","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"        storagePlace \u003d new Storage(filePathPlace);","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"            if (storagePlace.load().equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"\");","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"            places \u003d new PlaceList(storagePlace.load());","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"            places \u003d new PlaceList();","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"        //Solution below adopted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"kahleongq"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":90,"author":{"gitId":"kahleongq"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"kahleongq"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":93,"author":{"gitId":"kahleongq"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":95,"author":{"gitId":"kahleongq"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-14"},{"lineNumber":96,"author":{"gitId":"kahleongq"},"content":"        stage.show();","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"kahleongq"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"kahleongq"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"kahleongq"},"content":"        stage.setMinHeight(800.0);","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"kahleongq"},"content":"        stage.setMinWidth(600.0);","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":103,"author":{"gitId":"kahleongq"},"content":"        mainLayout.setPrefSize(600.0, 800.0);","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"kahleongq"},"content":"        scrollPane.setPrefSize(585, 735);","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"kahleongq"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-14"},{"lineNumber":107,"author":{"gitId":"kahleongq"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":109,"author":{"gitId":"kahleongq"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":110,"author":{"gitId":"kahleongq"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":112,"author":{"gitId":"kahleongq"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-14"},{"lineNumber":113,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"kahleongq"},"content":"        userInput.setPrefWidth(525.0);","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":116,"author":{"gitId":"kahleongq"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":118,"author":{"gitId":"kahleongq"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":119,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":120,"author":{"gitId":"kahleongq"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":121,"author":{"gitId":"kahleongq"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"kahleongq"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"kahleongq"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-14"},{"lineNumber":125,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":126,"author":{"gitId":"kahleongq"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-14"},{"lineNumber":127,"author":{"gitId":"kahleongq"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-14"},{"lineNumber":128,"author":{"gitId":"kahleongq"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-14"},{"lineNumber":129,"author":{"gitId":"kahleongq"},"content":"        });","lastModifiedDate":"2022-02-14"},{"lineNumber":130,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":131,"author":{"gitId":"kahleongq"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-14"},{"lineNumber":132,"author":{"gitId":"kahleongq"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-14"},{"lineNumber":133,"author":{"gitId":"kahleongq"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-14"},{"lineNumber":134,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":135,"author":{"gitId":"kahleongq"},"content":"        });","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"kahleongq"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-14"},{"lineNumber":139,"author":{"gitId":"kahleongq"},"content":"                handleUserInput();","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"kahleongq"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"kahleongq"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":143,"author":{"gitId":"kahleongq"},"content":"        });","lastModifiedDate":"2022-02-14"},{"lineNumber":144,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":145,"author":{"gitId":"kahleongq"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-14"},{"lineNumber":146,"author":{"gitId":"kahleongq"},"content":"            try {","lastModifiedDate":"2022-02-14"},{"lineNumber":147,"author":{"gitId":"kahleongq"},"content":"                handleUserInput();","lastModifiedDate":"2022-02-14"},{"lineNumber":148,"author":{"gitId":"kahleongq"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":149,"author":{"gitId":"kahleongq"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-14"},{"lineNumber":150,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":151,"author":{"gitId":"kahleongq"},"content":"        });","lastModifiedDate":"2022-02-14"},{"lineNumber":152,"author":{"gitId":"kahleongq"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-14"},{"lineNumber":153,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":154,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":155,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":156,"author":{"gitId":"kahleongq"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-14"},{"lineNumber":157,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"kahleongq"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-14"},{"lineNumber":159,"author":{"gitId":"kahleongq"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"kahleongq"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-14"},{"lineNumber":162,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"kahleongq"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-14"},{"lineNumber":164,"author":{"gitId":"kahleongq"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-14"},{"lineNumber":165,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":166,"author":{"gitId":"kahleongq"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-14"},{"lineNumber":167,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":168,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":169,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":170,"author":{"gitId":"kahleongq"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-14"},{"lineNumber":171,"author":{"gitId":"kahleongq"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-14"},{"lineNumber":172,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":173,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"kahleongq"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":176,"author":{"gitId":"kahleongq"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-14"},{"lineNumber":177,"author":{"gitId":"kahleongq"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-02-14"},{"lineNumber":178,"author":{"gitId":"kahleongq"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-14"},{"lineNumber":179,"author":{"gitId":"kahleongq"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-14"},{"lineNumber":180,"author":{"gitId":"kahleongq"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-02-14"},{"lineNumber":181,"author":{"gitId":"kahleongq"},"content":"        );","lastModifiedDate":"2022-02-14"},{"lineNumber":182,"author":{"gitId":"kahleongq"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-14"},{"lineNumber":183,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":184,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":185,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":186,"author":{"gitId":"kahleongq"},"content":"     * Generates a response to the user input.","lastModifiedDate":"2022-02-14"},{"lineNumber":187,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":188,"author":{"gitId":"kahleongq"},"content":"     * @return a String representing the response.","lastModifiedDate":"2022-02-14"},{"lineNumber":189,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-14"},{"lineNumber":190,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":191,"author":{"gitId":"kahleongq"},"content":"    private String getResponse(String input) throws IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":192,"author":{"gitId":"kahleongq"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-14"},{"lineNumber":193,"author":{"gitId":"kahleongq"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"kahleongq"},"content":"        return new Duke(\"data/tasks.txt\", \"data/places.txt\").run(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":196,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":197,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":198,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":199,"author":{"gitId":"kahleongq"},"content":"     * Runs the task tracker.","lastModifiedDate":"2022-02-14"},{"lineNumber":200,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":201,"author":{"gitId":"kahleongq"},"content":"     * @param fullCommand a string representing the user input.","lastModifiedDate":"2022-02-16"},{"lineNumber":202,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-14"},{"lineNumber":203,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":204,"author":{"gitId":"kahleongq"},"content":"    public String run(String fullCommand) throws IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":205,"author":{"gitId":"kahleongq"},"content":"        Command command \u003d Parser.parse(fullCommand, ui);","lastModifiedDate":"2022-02-14"},{"lineNumber":206,"author":{"gitId":"kahleongq"},"content":"        return command.execute(tasks, places, ui, storageTask, storagePlace);","lastModifiedDate":"2022-02-16"},{"lineNumber":207,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kahleongq":206,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents exceptions specific to Duke.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"    private String message;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of DukeException.","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * @param message A string representing the error message.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" * Represents a event task.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of an event, which is unmarked by default.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param at A String representing a time in the format of \"yyyy-mm-dd\"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of a marked or unmarked event.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * @param at A String representing a time in the format of \"yyyy-mm-dd\".","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    public Event(String description, LocalDate at, boolean isDone) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     * Formats the date of the event","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     * @return A string representation of the date in the format of \"MMM d yyyy\".","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    String formatDate() {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"        return new Event(this.getDescription(), this.at, true);","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"        return new Event(this.getDescription(), this.at, false);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.formatDate() + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":67}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents an exit command, terminating the program.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the ExitCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"bye\".","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":27}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a find command","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final String searchWord;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the FindCommand class.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A String containing the word \"find\".","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param searchWord A String representing the query.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public FindCommand(String command, String searchWord) {","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.searchWord \u003d searchWord;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"            if (task.getDescription().contains(this.searchWord)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                taskCount +\u003d 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"                output.append(\"\\n\").append(taskCount).append(\".\").append(task);","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"            return \"Uh-oh! There are no matching tasks in your list!\";","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"            return output.toString();","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"kahleongq":43}},{"path":"src/main/java/duke/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents an invalid command.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the InvalidCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the original invalid command","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    public InvalidCommand(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"        return this.getFirstWord();","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":27}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"// Solution below adopted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"public class Launcher {","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"kahleongq":15}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a list command.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the ListCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"list\".","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"            return \"Uh-oh! List is empty!\";","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"                sb.append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"            return sb.toString();","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":35}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a mark command","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the MarkCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the \"mark\" word.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the task number to mark.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public MarkCommand(String command, int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid task! (Your list has \"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                        + tasks.size() + \" tasks)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            tasks.set(taskIdx, tasks.get(taskIdx).mark());","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"            storageTask.update(tasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                    + tasks.get(taskIdx);","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":43}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * A class responsible for breaking down commands into the command type,","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" * and constructing the commands to be executed.","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"public class Parser {","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     * Parses the user input into Command objects.","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * @param ui Ui for reading user input and displaying output.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    public static Command parse(String command, Ui ui) {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"        assert !command.equals(\"\") : \"command should not be an empty string!\";","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        command \u003d command.strip().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        String firstWord \u003d command.split(\" \")[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        int taskNum;","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        String time;","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"            switch (firstWord) {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"                if (!command.equals(\"bye\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"No words should be after \u0027bye\u0027.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"                return new ExitCommand(firstWord);","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            case \"list\":","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"                if (!command.equals(\"list\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"No words should be after \u0027list\u0027.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"                return new ListCommand(firstWord);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"delete\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Please type what you want to delete!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"                taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"                return new DeleteCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"mark\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Please type what you want to mark!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"                taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"                return new MarkCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Please type what you want to unmark!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"                taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"                return new UnmarkCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"                assert !description.contains(\"(\") || !description.contains(\")\")","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"                        : \"Please don\u0027t use brackets in the deadline name\";","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"                description \u003d description.split(\" /by \")[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"                time \u003d command.split(\" /by \")[1];","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"                return new AddCommand(firstWord, description, time);","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Uh-oh! There is nothing to do here!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"                return new AddCommand(firstWord, description);","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"            case \"event\":","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"                assert !description.contains(\"(\") || !description.contains(\")\")","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"                        : \"Please don\u0027t use brackets in the event name\";","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"                description \u003d description.split(\" /at \")[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"                time \u003d command.split(\" /at \")[1];","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"                return new AddCommand(firstWord, description, time);","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"            case \"find\":","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"find\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Uh-oh! There is nothing to find here!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"                return new FindCommand(firstWord, description);","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"            case \"addplace\":","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"addplace\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Uh-oh! There is nothing to add here!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"                assert !description.contains(\"[\") || !description.contains(\"]\")","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"kahleongq"},"content":"                        : \"Please don\u0027t use brackets in the place name\";","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"kahleongq"},"content":"                String name \u003d description.split(\" /desc \")[0];","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.split(\" /desc \")[1];","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"kahleongq"},"content":"                return new AddPlaceCommand(firstWord, name, description);","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"kahleongq"},"content":"            case \"delplace\":","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"delplace\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Please type what you want to delete!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"kahleongq"},"content":"                taskNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"kahleongq"},"content":"                return new DeletePlaceCommand(firstWord, taskNum);","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"kahleongq"},"content":"            case \"viewplaces\":","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"kahleongq"},"content":"                if (!command.equals(\"viewplaces\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"No words should be after \u0027viewplaces\u0027.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"kahleongq"},"content":"                return new ViewPlacesCommand(firstWord);","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"kahleongq"},"content":"            case \"view\":","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"kahleongq"},"content":"                if (command.equals(\"view\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"kahleongq"},"content":"                    throw new DukeException(\"Please type what you want to view!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"kahleongq"},"content":"                description \u003d command.substring(firstWord.length() + 1);","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"kahleongq"},"content":"                int placeNum \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"kahleongq"},"content":"                return new ViewCommand(firstWord, placeNum);","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"kahleongq"},"content":"            default:","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"kahleongq"},"content":"                return new InvalidCommand(\"Please try again!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"kahleongq"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"kahleongq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"kahleongq"},"content":"            return new InvalidCommand(\"Please input an integer!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"kahleongq"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"kahleongq"},"content":"            return new InvalidCommand(\"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"kahleongq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"kahleongq"},"content":"            return new InvalidCommand(\"Uh-oh! There\u0027s no description here!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":124}},{"path":"src/main/java/duke/Place.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents a place","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class Place {","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    private final String name;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    private final String description;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of a place.","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     * @param name a string representing the name of the place.","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param description a string representing the description or notes about the place.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    public Place(String name, String description) {","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     * Fetches the name of the place.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * @return a string representing the name of the place.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String getName() {","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        return this.name;","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"     * Fetches the description of the place.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"     * @return a string representing the description of the place.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"        return this.description;","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"        return \"[\" + this.name + \"] \" + this.description;","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"kahleongq":47}},{"path":"src/main/java/duke/PlaceList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":" * Represents a list of places","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"public class PlaceList {","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"    private final ArrayList\u003cPlace\u003e list;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * Constructs a new place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public PlaceList() {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     * Constructs a place list from pre-existing data.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * @param fileName A string containing the file path to the existing data.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    public PlaceList(String fileName) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        this.list \u003d PlaceList.populateList(fileName);","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     * Checks if the place list is empty.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     * @return true if the place list is empty.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        return list.isEmpty();","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     * Fetches the place at the given index.","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the index of the place to get.","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * @return A Place at the given index of the place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"    public Place get(int idx) {","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"        return list.get(idx);","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"     * Fetches the number of places in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     * @return An integer representing the number of places in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"    public int size() {","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"        return list.size();","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     * Removes the place at the given index from the place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     * @param placeNum An integer representing the index of the place to be removed.","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"     * @return the Place that is removed.","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    public Place remove(int placeNum) {","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"        assert placeNum \u003c this.size() \u0026\u0026 placeNum \u003e 0 : \"Please provide a valid index\";","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"        return list.remove(placeNum);","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"     * Replaces a place at the given index with a new place.","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the index of the place to be replaced.","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"     * @param place the Place to replace the existing Place with.","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"     * @return the Place that was replaced.","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"    public Place set(int idx, Place place) {","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"        assert place !\u003d null : \"A proper place should be set!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"        return list.set(idx, place);","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"     * Adds a place to the end of the place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"     * @param place the Place to be added to the place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"     * @return true if the place has been added.","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"kahleongq"},"content":"    public boolean add(Place place) {","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"kahleongq"},"content":"        assert place !\u003d null : \"A proper place should be added!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"kahleongq"},"content":"        return list.add(place);","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"kahleongq"},"content":"     * Fetches the whole place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"kahleongq"},"content":"     * @return an ArrayList of places.","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"kahleongq"},"content":"    public ArrayList\u003cPlace\u003e getList() {","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"kahleongq"},"content":"        return this.list;","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"kahleongq"},"content":"     * Populates the place list with pre-existing data.","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"kahleongq"},"content":"     * @param fileName A string representing the file path to the saved places.","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"kahleongq"},"content":"     * @return an ArrayList of the saved places.","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"kahleongq"},"content":"    public static ArrayList\u003cPlace\u003e populateList(String fileName) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"kahleongq"},"content":"        ArrayList\u003cPlace\u003e list \u003d new ArrayList\u003cPlace\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"kahleongq"},"content":"        BufferedReader file \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"kahleongq"},"content":"        String line \u003d file.readLine();","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"kahleongq"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"kahleongq"},"content":"            String name \u003d line.substring(1, line.indexOf(\"]\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"kahleongq"},"content":"            String description \u003d line.substring(name.length() + 3);","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"kahleongq"},"content":"            Place place \u003d new Place(name, description);","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"kahleongq"},"content":"            list.add(place);","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"kahleongq"},"content":"            line \u003d file.readLine();","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"kahleongq"},"content":"        file.close();","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"kahleongq"},"content":"        return list;","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"kahleongq":124}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":" * Storage handles reading from a file path for pre-existing tasks, and updates","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":" * the file whenever the tasks are updated.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"public class Storage {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    private String fileName;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    private String filePath;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the Storage class.","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     * @param filePath A string containing the file path to the saved tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        // Solution below adopted from https://www.sghill.net/how-do-i-make-cross-platform-file-paths-in-java.html","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"        Path newFile;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\");","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            if (!directoryExists) {","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"                java.nio.file.Files.createDirectories(path);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            Path dukeFile \u003d path.resolve(filePath.substring(5));","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"            newFile \u003d Files.createFile(dukeFile);","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"            this.fileName \u003d \"\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"            newFile \u003d Paths.get(filePath);","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"            this.fileName \u003d newFile.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * Updates the save file with the new task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"     * @param tasks A TaskList containing the updated tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"    public void update(TaskList tasks) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"        // Solution below adopted from https://www.baeldung.com/java-write-to-file","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"            data.add(task.toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"        java.nio.file.Files.write(Paths.get(this.filePath), data, StandardCharsets.UTF_8);","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     * Updates the save file with the new place list.","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"     * @param places A PlaceList containing the updated places.","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"    public void update(PlaceList places) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"        //","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"        for (Place place : places.getList()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"            data.add(place.toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"        java.nio.file.Files.write(Paths.get(this.filePath), data, StandardCharsets.UTF_8);","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"     * Provides the file path to load the saved tasks into the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"     * @return A string containing the file path if there is pre-existing data,","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"     * an empty string if there are no pre-existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"    public String load() {","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"        return this.fileName;","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":87}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents a task.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    private final String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of a Task class, which is unmarked by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a marked or unmarked task.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"     * Represents the marked status of the task as a String.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     * @return \"X\" if the task is marked, \" \" if the task is unmarked.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"     * Fetches the description of the task.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * @return A string containing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"        return this.description;","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"     * @return A marked Task with all other attributes kept the same.","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"        return new Task(this.description, true);","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"     * Marks  the task as not done.","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"     * @return An unmarked Task with all other attributes kept the same.","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"        return new Task(this.description, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":75}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"public class TaskList {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     * Constructs a new task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     * Constructs a task list from pre-existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     * @param fileName A string containing the file path to the existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"    public TaskList(String fileName) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        this.list \u003d TaskList.populateList(fileName);","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"     * @return true if the task list is empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        return list.isEmpty();","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"     * Fetches the task at the given index.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the index of the task to get.","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * @return A Task at the given index of the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"        return list.get(idx);","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"     * Fetches the number of tasks in the list.","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"     * @return An integer representing the number of tasks in the list.","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"    public int size() {","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"        return list.size();","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"     * Removes the task at the given index from the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the index of the task to be removed.","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"     * @return the Task that is removed.","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"    public Task remove(int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"        assert taskNum \u003c this.size() \u0026\u0026 taskNum \u003e 0 : \"Please provide a valid index\";","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"        return list.remove(taskNum);","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"kahleongq"},"content":"     * Replaces a task at the given index with a new task.","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"kahleongq"},"content":"     * @param idx An integer representing the index of the task to be replaced.","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"kahleongq"},"content":"     * @param task the Task to replace the existing Task with.","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"kahleongq"},"content":"     * @return the Task that was replaced.","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"kahleongq"},"content":"    public Task set(int idx, Task task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"kahleongq"},"content":"        assert task !\u003d null : \"A proper task should be set!\";","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"kahleongq"},"content":"        return list.set(idx, task);","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"kahleongq"},"content":"     * Adds a task to the end of the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"kahleongq"},"content":"     * @param task the Task to be added to the task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"kahleongq"},"content":"     * @return true if the task has been added.","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"kahleongq"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"kahleongq"},"content":"        assert task !\u003d null : \"A proper task should be added!\";","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"kahleongq"},"content":"        return list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"kahleongq"},"content":"     * Fetches the whole task list.","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"kahleongq"},"content":"     * @return an ArrayList of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"kahleongq"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"kahleongq"},"content":"        return this.list;","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"kahleongq"},"content":"     * Populates the task list with pre-existing data.","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"kahleongq"},"content":"     * @param fileName A string representing the file path to the saved tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"kahleongq"},"content":"     * @return an ArrayList of the saved tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"kahleongq"},"content":"    public static ArrayList\u003cTask\u003e populateList(String fileName) throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"kahleongq"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"kahleongq"},"content":"        BufferedReader file \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"kahleongq"},"content":"        String line \u003d file.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"kahleongq"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"kahleongq"},"content":"            assert line.length() \u003e\u003d 8 : \"Please enter a valid file path\";","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"kahleongq"},"content":"            String taskType \u003d String.valueOf(line.charAt(1));","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"kahleongq"},"content":"            assert taskType.equals(\"T\") || taskType.equals(\"E\") || taskType.equals(\"D\")","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"kahleongq"},"content":"                    : \"Please enter a valid file path\";","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"kahleongq"},"content":"            boolean isMarked \u003d String.valueOf(line.charAt(4)).equals(\"X\");","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"kahleongq"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"kahleongq"},"content":"                Task task \u003d new Todo(line.substring(7));","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"kahleongq"},"content":"                if (isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"kahleongq"},"content":"                    task \u003d task.mark();","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"kahleongq"},"content":"                list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"kahleongq"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"kahleongq"},"content":"                // Solution below adopted from https://www.baeldung.com/java-string-to-date","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"kahleongq"},"content":"                String[] split \u003d TaskList.splitTask(line, \"by: \");","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"kahleongq"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"kahleongq"},"content":"                Task task \u003d new Deadline(split[0], LocalDate.parse(split[1], formatter).toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"kahleongq"},"content":"                if (isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"kahleongq"},"content":"                    task \u003d task.mark();","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"kahleongq"},"content":"                list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"kahleongq"},"content":"            } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"kahleongq"},"content":"                // Solution below adopted from https://www.baeldung.com/java-string-to-date","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"kahleongq"},"content":"                String[] split \u003d TaskList.splitTask(line, \"at: \");","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"kahleongq"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"kahleongq"},"content":"                Task task \u003d new Event(split[0], LocalDate.parse(split[1], formatter).toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"kahleongq"},"content":"                if (isMarked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"kahleongq"},"content":"                    task \u003d task.mark();","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"kahleongq"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"kahleongq"},"content":"                list.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"kahleongq"},"content":"            line \u003d file.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"kahleongq"},"content":"        file.close();","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"kahleongq"},"content":"        return list;","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":152,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"kahleongq"},"content":"     * Splits the string representing a task into its description and time","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"kahleongq"},"content":"     * @param task a string representing the task","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"kahleongq"},"content":"     * @param operator the string to split the task","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"kahleongq"},"content":"     * @return a string array consisting the description and time","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"kahleongq"},"content":"    public static String[] splitTask(String task, String operator) {","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"kahleongq"},"content":"        String tempDescription \u003d task.split(operator)[0].substring(7);","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"kahleongq"},"content":"        int tempDescLength \u003d tempDescription.length();","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"kahleongq"},"content":"        String description \u003d tempDescription.substring(0, tempDescLength - 2);","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"kahleongq"},"content":"        String tempTime \u003d task.split(operator)[1];","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"kahleongq"},"content":"        int endIdx \u003d tempTime.lastIndexOf(\")\");","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"kahleongq"},"content":"        String time \u003d tempTime.substring(0, endIdx);","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"kahleongq"},"content":"        return new String[]{description, time};","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":169}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":" * Represents a todo task.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the Todo class, which is unmarked by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     * Construct an instance of a marked or unmarked todo task.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     * @param description A string representing the task description.","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     * @param isDone A boolean representing whether the task is marked as done.","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public Task mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        return new Todo(this.getDescription(), true);","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"    public Task unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        return new Todo(this.getDescription(), false);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kahleongq":40}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":" * A class that reads user input and displays output to the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"public class Ui {","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Default constructor of Ui","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    public Ui() {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"     * Prints a line.","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    public String showLine() {","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        return \"__________________________________________________\";","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"     * Prints the duke greeting.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"    public String showGreeting() {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"        return \"Hello from\\n\" + logo;","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"     * Prints an error message if there is no pre-existing data found.","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"    public String showLoadingError() {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        return \"No pre-existing data found!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"     * Converts user input into a string.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"     * @return a String representing the user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"        return br.readLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"     * Prints out a given message.","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"kahleongq"},"content":"     * @param message a String representing the given message to printed.","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"kahleongq"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"kahleongq"},"content":"        assert !message.equals(\"\") : \"There should be a message!\";","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"kahleongq"},"content":"        return message;","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"kahleongq"},"content":"     * Prints out the goodbye message.","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"kahleongq"},"content":"    public String showGoodbye() {","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"kahleongq"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":71}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents an unmark command.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the UnmarkCommand class.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the \"unmark\" word.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param taskNum An integer representing the task number to unmark.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public UnmarkCommand(String command, int taskNum) {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid task! (Your list has \"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                        + tasks.size() + \" tasks)\");","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            tasks.set(taskIdx, tasks.get(taskIdx).unmark());","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"            storageTask.update(tasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            return \"Nice! I\u0027ve marked this task as not done yet:\\n  \"","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"                    + tasks.get(taskIdx);","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kahleongq":43}},{"path":"src/main/java/duke/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a view command","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    private final int idx;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the ViewCommand class.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"     * @param command a string containing the word \"view\".","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"     * @param idx an integer representing the place number to view.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"    public ViewCommand(String command, int idx) {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"            int placeIdx \u003d idx - 1;","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            if (placeIdx \u003e\u003d places.size() || placeIdx \u003c 0) {","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"                throw new DukeException(\"Please choose a valid place! (Your list has \"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"                        + places.size() + \" places)\");","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"            return places.get(placeIdx).getDescription();","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"kahleongq":40}},{"path":"src/main/java/duke/ViewPlacesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":" * Represents a view places command.","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"public class ViewPlacesCommand extends Command {","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"     * Constructs an instance of the ViewPlacesCommand class.","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"     * @param command A string containing the word \"viewplaces\".","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"    public ViewPlacesCommand(String command) {","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"        super(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"    public String execute(TaskList tasks, PlaceList places, Ui ui,","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"                          Storage storageTask, Storage storagePlace) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"        if (places.isEmpty()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"            return \"Uh-oh! List is empty!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"            for (int i \u003d 0; i \u003c places.size(); i++) {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"                sb.append(i + 1).append(\". \").append(places.get(i).getName()).append(\"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"            return sb.toString();","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"kahleongq":35}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"public class DukeTest {","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"    public void parserTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"list\", ui).getFirstWord(), \"list\");","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"list test\", ui).getFirstWord(), \"No words should be after \u0027list\u0027.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"todo\", ui).getFirstWord(), \"Uh-oh! There is nothing to do here!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"todo test\", ui).getFirstWord(), \"todo\");","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"deadline\", ui).getFirstWord(), \"Uh-oh! There\u0027s no description here!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"deadline /by\", ui).getFirstWord(), \"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"deadline test /by\", ui).getFirstWord(), \"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"deadline test/by 2020-03-04\", ui).getFirstWord(), \"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"deadline test /by 2020-03-04\", ui).getFirstWord(), \"deadline\");","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"deadline test /by 2020\", ui).getFirstWord(), \"deadline\");","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"event\", ui).getFirstWord(), \"Uh-oh! There\u0027s no description here!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"event /at\", ui).getFirstWord(), \"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"event test /at\", ui).getFirstWord(), \"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"event test/at 2020-03-04\", ui).getFirstWord(), \"Eh? Did you mistype the format?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"event test /at 2020-03-04\", ui).getFirstWord(), \"event\");","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"event test /at 2020\", ui).getFirstWord(), \"event\");","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"mark\", ui).getFirstWord(), \"Please type what you want to mark!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"mark test\", ui).getFirstWord(), \"Please input an integer!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"unmark\", ui).getFirstWord(), \"Please type what you want to unmark!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"unmark test\", ui).getFirstWord(), \"Please input an integer!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"mark 1\", ui).getFirstWord(), \"mark\");","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"unmark 1\", ui).getFirstWord(), \"unmark\");","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"delete\", ui).getFirstWord(), \"Please type what you want to delete!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"delete test\", ui).getFirstWord(), \"Please input an integer!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"delete 1\", ui).getFirstWord(), \"delete\");","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"find\", ui).getFirstWord(), \"Uh-oh! There is nothing to find here!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"find test\", ui).getFirstWord(), \"find\");","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"bye\", ui).getFirstWord(), \"bye\");","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"bye test\", ui).getFirstWord(), \"No words should be after \u0027bye\u0027.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kahleongq"},"content":"        assertEquals(Parser.parse(\"test\", ui).getFirstWord(), \"Please try again!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"kahleongq"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"kahleongq"},"content":"    public void taskTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Todo(\"test\").toString(), \"[T][ ] test\");","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Todo(\"test\").unmark().toString(), \"[T][ ] test\");","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Todo(\"test\").mark().toString(), \"[T][X] test\");","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Event(\"test\", \"2020-03-04\").toString(), \"[E][ ] test (at: Mar 4 2020)\");","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Event(\"test\", \"2020-03-04\").unmark().toString(), \"[E][ ] test (at: Mar 4 2020)\");","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Event(\"test\", \"2020-03-04\").mark().toString(), \"[E][X] test (at: Mar 4 2020)\");","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Deadline(\"test\", \"2020-03-04\").toString(), \"[D][ ] test (by: Mar 4 2020)\");","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Deadline(\"test\", \"2020-03-04\").unmark().toString(), \"[D][ ] test (by: Mar 4 2020)\");","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"kahleongq"},"content":"        assertEquals(new Deadline(\"test\", \"2020-03-04\").mark().toString(), \"[D][X] test (by: Mar 4 2020)\");","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"kahleongq"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"kahleongq"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"kahleongq":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kahleongq"},"content":"deadline 64 pages of readings /by 9am","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kahleongq"},"content":"event training session /at 7pm","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"kahleongq"},"content":"todo this ip","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kahleongq"},"content":"deadline proposal /by thursday","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kahleongq"},"content":"deadline research /by friday","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kahleongq"},"content":"event briefing /at 5-6pm","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kahleongq"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kahleongq"},"content":"mark 6","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kahleongq"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kahleongq"},"content":"todo sleep","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kahleongq"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kahleongq"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kahleongq"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kahleongq"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kahleongq"},"content":"bye","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kahleongq"},"content":"","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kahleongq":16}}]
