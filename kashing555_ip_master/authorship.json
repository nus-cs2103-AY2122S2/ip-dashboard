[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"T|0|help mom","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":1}},{"path":"src/main/java/commands/CreateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import myTasks.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import myTasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import myTasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":" * The CreateTask class contain methods to create new tasks for the user to track.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"public class CreateTask {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     * The method todo creates a task without restrictions.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     * @param description contains the description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    public static void todo(String description, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        list.add(new Todo(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * The method deadline creates a task that must be completed before a certain time.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     * @param description contains the description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    public static void deadline(String description, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        String[] restOfPara  \u003d description.split(\"/by \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        list.add(new Deadline(restOfPara[0], restOfPara[1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"     * The method event creates a task that will begin at a certain time.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"     * @param description contains the description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    public static void event(String description, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"        String[] restOfPara2 \u003d description.split(\"/at \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        list.add(new Event(restOfPara2[0], restOfPara2[1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":42}},{"path":"src/main/java/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * The DeleteTask class removes a task that is currently in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class DeleteTask {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * The method delete removes a task that is currently in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * @param number the task number that is going to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public static void delete(String number, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        System.out.println(list.get(taskNum).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        list.remove(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":21}},{"path":"src/main/java/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * The MarkTask class contains methods to indicate if the task is complete.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class MarkTask {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * The mark indicates that the task has been completed","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * @param number the task number that has been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public static void mark(String number, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        list.get(taskNum).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        System.out.println(list.get(taskNum).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"     * The unmark indicates that the task has not been completed","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * @param number the task number that has not been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    public static void unmark(String number, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        list.get(taskNum).markAsNotDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        System.out.println(list.get(taskNum).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":32}},{"path":"src/main/java/commands/ShowTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * ShowTasks class displays the tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class ShowTasks {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * Method showList displays all currently tracked tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * @param taskCount the number of task currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public static void showList(int taskCount, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"            System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"     * Method find finds and displays tasks that match the keyword/task the user has input.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * @param taskCount the number of task currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     * @param keyword the text/task the user wants to find,","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    public static int find(int taskCount, String keyword, List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"            for (String word : list.get(i).description.split(\" \")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"                if (word.equals(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                    count++;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"                    System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        return count;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * An application that tracks the tasks that you must complete.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     * Method Duke initializes the application by loading files and checking for errors.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     * Method run starts the application.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        String inputText \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        while (!inputText.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            inputText \u003d input.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"            ui.allTasks(inputText, tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            storage.saveTasks(tasks.list);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kashing555":43,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.util.*;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":" * The DukeException class identifies and throws Exceptions unique to Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"    String[] validInputs \u003d new String[] {\"deadline\", \"todo\", \"event\", };","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    List\u003cString\u003e inputList \u003d new ArrayList\u003c\u003e(Arrays.asList(validInputs));","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    String[] validInputs2 \u003d new String[] {\"mark\", \"unmark\", \"delete\"};","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    List\u003cString\u003e inputList2 \u003d new ArrayList\u003c\u003e(Arrays.asList(validInputs2));","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    String[] validInputs3 \u003d new String[] {\"list\", \"bye\"};","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    List\u003cString\u003e inputList3 \u003d new ArrayList\u003c\u003e(Arrays.asList(validInputs3));","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        super(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    public DukeException() {}","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * The method invalidChecker checks for any invalid input the user might have entered and throws an exception","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * indicating the error.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     * @param input contains information entered by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"     * @param tasks indicates the current number of tasks that is being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    public void invalidChecker (String[] input, int tasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            case \"list\":","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please enter a task number.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"                int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                if (!(taskNum \u003c\u003d tasks \u0026\u0026 taskNum \u003e 0)) {","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                    throw new DukeException(\"☹ OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"                }else {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"                    String[] dateTime  \u003d input[1].split(\"/by \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                    if (dateTime[0].equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                    } else if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please enter a deadline for the task using /by.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                    isValidDate(dateTime[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"            case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please enter a task to find.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"                    String[] task  \u003d input[1].split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"                    if (task.length \u003e 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\"☹ OOPS!!! Sorry you can only search for single words.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"                    String[] dateTime  \u003d input[1].split(\"/by \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"                    if (dateTime[0].equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"                    } else if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please enter a deadline for the task using /by.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"                    isValidDate(dateTime[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"            case \"event\":","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"                    String[] dateTime  \u003d input[1].split(\"/at \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"                    if (dateTime[0].equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"                    } else if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please enter a timeframe for the task using /at.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"                    isValidDate(dateTime[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"            default:","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"     * The method isValidDate checks if the user has entered a invalid format for the date and time.","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"kashing555"},"content":"     * @param dateTime contains the date and time entered by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"kashing555"},"content":"    private void isValidDate(String dateTime) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"kashing555"},"content":"        LocalDateTime d1 \u003d LocalDateTime.now();","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"kashing555"},"content":"            LocalDateTime d2 \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"            if (d2.isBefore(d1)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"☹ OOPS!!! Please enter a valid date from \"","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"                        + d1.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\")) + \" and onwards.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"☹ OOPS!!! Please enter a valid date and time in the format yyyy-mm-dd hha \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"                    \"(Example: 2022-10-10 10PM)\");","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":119}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import myTasks.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import myTasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":" * The Storage class methods to save and retrieve information from the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    String filepath;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * The CreateFile method creates a new txt file to track the list of task if the file has not been created.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    private void CreateFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"            File myObj \u003d new File(this.filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Files created\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"     * The savTasks method saves the list of tasks that are currently being tracked into a txt file.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     * @param list contains the Tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"    public void saveTasks(List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"            for (Task task : list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                String completed \u003d task.isDone ? \"1|\" : \"0|\";","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                    myWriter.write(\"D|\" + completed + task.description + \"|\" + ((Deadline) task).dateTime + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                    myWriter.write(\"E|\" + completed + task.description + \"|\" + ((Event) task).dateTime + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"                    myWriter.write(\"T|\" + completed + task.description + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"     * The loadTasks method retrieves the list of tasks that were being tracked previously by the application.","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"     * @return returns the list of task that were being tracked previously.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"    public List\u003cString\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"            File myObj \u003d new File(this.filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"                list.add(myReader.nextLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"            myReader.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"            System.out.println(\"Files Loaded Successfully\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"            CreateFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"No file found. Creating new file...\");","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        return list;","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":83}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import myTasks.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import myTasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import commands.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":" * Initializes the user interface that interacts with the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        System.out.println(logo + \"\\nHello! I\u0027m Duke\\nWhat can i do for you?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * Indicate to the user that their command has been successfully executed or if there is any error along the way.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    public void allTasks(String inputText, TaskList tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"        int taskCount \u003d tasks.list.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"        List\u003cTask\u003e list \u003d tasks.list;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        String[] tempList \u003d inputText.split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"            new DukeException().invalidChecker(tempList, taskCount);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            System.err.println(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"        switch (tempList[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"            case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                ShowTasks.showList(taskCount, list);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"            case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                ShowTasks.find(taskCount, tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                CreateTask.todo(tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                System.out.println(list.get(taskCount).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"                printAndSave(taskCount + 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"                CreateTask.deadline(tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"                System.out.println(list.get(taskCount).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"                printAndSave(taskCount + 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"            case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"                CreateTask.event(tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"                System.out.println(list.get(taskCount).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"                printAndSave(taskCount + 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"                MarkTask.mark(tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"                printAndSave(taskCount);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"                MarkTask.unmark(tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"                printAndSave(taskCount);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"                DeleteTask.delete(tempList[1], list);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"                printAndSave(taskCount - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"     * Shows the number of task being track.","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"    private static void printAndSave(int taskCount) {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"        if (taskCount + 1 \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"            System.out.println(\"You have \" + (taskCount) + \" task in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"            System.out.println(\"You have \" + (taskCount) + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":98}},{"path":"src/main/java/myTasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package myTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.time.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * Creates a task that must be completed before a certain time.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    public String dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        return \"[D]\" + super.toString() + \"(by: \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"                LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"                    .format(DateTimeFormatter.ofPattern(\"MMMM d, yyyy hha\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":23}},{"path":"src/main/java/myTasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package myTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.time.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * * Creates a task that will begin at a certain time.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    public String dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        return \"[E]\" + super.toString() + \"(by: \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"                LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"                        .format(DateTimeFormatter.ofPattern(\"MMMM d, yyyy hha\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":23}},{"path":"src/main/java/myTasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package myTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":" * Task is the parent class of Deadline, Event and Todo. Task contains information such as the task itself and whether","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":" * it has been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    public String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"    public boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * Creates a new task with the task description. Set the completion of the task to not done as default .","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     * Visual icon to show the user if the task has been completed","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * Method to indicate that the task is completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"     * Method to indicate that the task has not been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":43}},{"path":"src/main/java/myTasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package myTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * The TaskList keep tracks of the list of tasks, creates and mark tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    public List\u003cTask\u003e list\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public TaskList(List\u003cString\u003e strList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        for (String task : strList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"            String[] tempList \u003d task.split(\"\\\\|\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"            Task holder;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"            switch (tempList[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"                case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"                    holder \u003d new Todo(tempList[2]);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"                case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"                    holder \u003d new Deadline(tempList[2], tempList[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"                default:","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"                    holder \u003d new Event(tempList[2], tempList[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"            if (tempList[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"                holder.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"            list.add(holder);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"    public TaskList() {}","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":35}},{"path":"src/main/java/myTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package myTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":" * Creates a task without restrictions.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":15}},{"path":"src/test/java/myTasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"import myTasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"        Deadline d \u003d new Deadline(\"help mom\", \"2022-10-10 10PM\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[D][ ] help mom (by: October 10, 2022 10PM)\", d.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":12}},{"path":"src/test/java/myTasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"import myTasks.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class EventTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"        Event e \u003d new Event(\"help mom\", \"2022-10-10 10PM\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[E][ ] help mom (at: October 10, 2022 10PM)\", e.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":12}},{"path":"src/test/java/myTasks/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"import myTasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class MarkTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"        Todo t \u003d new Todo(\"help mom\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        t.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][X] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":13}},{"path":"src/test/java/myTasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"import myTasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"        Todo t \u003d new Todo(\"help mom\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][ ] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":12}},{"path":"src/test/java/myTasks/UnmarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"import myTasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class UnmarkTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"        Todo t \u003d new Todo(\"help mom\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        t.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][X] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        t.markAsNotDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][ ] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":7}}]
