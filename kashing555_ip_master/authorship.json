[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"# User Guide to Meow","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"Meow is a desktop application for users to keep track of various task they would like do. ","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"There are numerous functions in the application that can assist you in tracking your tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"* Features \u0026 Usage","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"   * [1. List the tasks currently tracked](#1-list-the-tasks-currently-tracked)","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"   * [2. Find a task using a keyword](#2-find-a-task-using-a-keyword)","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"   * [3. Create a Task](#3-create-a-task)","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"      * [3.1 Create a Todo](#31-create-a-todo)","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"      * [3.2 Create a Deadline](#32-create-a-deadline)","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"      * [3.3 Create an Event](#33-create-an-event)","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"   * [4. Mark \u0026 Unmark](#4-mark-and-unmark)","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"      * [4.1 Mark a Task](#41-mark-a-task)","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"      * [4.2 Unmark a Task](#42-unmark-a-task)","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"   * [5. Delete a Task](#5-delete-a-task)","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"   * [6. Exit the programme](#6-exit-the-programme)","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"## **1. List the tasks currently tracked**","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"This feature allows the user to display all task that they are currently tracking.","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"We will be able to see Task:","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"   1. Type","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"   2. Completion","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"   3. Description","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"   4. Deadline/StartTime","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"*Usage*: We would like to see what tasks we are currently tracking.","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"*Format*: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"*Examples*: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"![listImg](./docs/list.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":" ","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"## **2. Find a task using a keyword**","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"This feature allows the user to search for a group of tasks using keywords.","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"*Usage*: We would like to see if we have any task relating to mom.","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"*Format*: `find [keyword]`","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"*Examples*: `find mom`","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"![findImg](./docs/find.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":" ","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"## **3. Create a Task**","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"We are able to create tasks to keep tracks of.","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"Different tasks type will be able to keep track of different things.","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"There are 3 types of tasks we can keep track of:","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"   1. [Todo](#31-create-a-todo)","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"   2. [Deadline](#32-create-a-deadline)","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"   3. [Event](#33-create-an-event)","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"### **3.1 Create a Todo**","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"This feature allows the user to create a Todo task.","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"A Todo task stores:","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"   1. Type","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"   2. Completion","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"   3. Description","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"*Usage*: We would like to clean the house soon.","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"*Format*: `todo [Description]`","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"*Examples*: `todo clean the house`","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"![todoImg](./docs/todo.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"### **3.2 Create a Deadline**","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"This feature allows the user to create a Deadline task.","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"A Todo task stores:","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"   1. Type","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"   2. Completion","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"   3. Description","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"   4. Deadline","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"*Usage*: We have a CS2103 assignment due on 19-02-2022 11PM.","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"*Format*: `event [Description] /by YYYY-MM-DD HHA`","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"*Examples*: `deadline CS2103 assisngment /by 2022-02-19 11PM`","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"![deadlineImg](./docs/deadline.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"### **3.3 Create an Event**","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"This feature allows the user to create an Event task.","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"A Todo task stores:","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"   1. Type","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"   2. Completion","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"   3. Description","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"   4. StartTime","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"*Usage*: We have a CS2103 lecture at 19-02-2022 2PM.","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"*Format*: `event [Description] /by YYYY-MM-DD HHA`","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"kashing555"},"content":"*Examples*: `event CS2103 lecture /by 2022-02-19 2PM`","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"kashing555"},"content":"![eventImg](./docs/event.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"kashing555"},"content":"## **4. Mark and Unmark**","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"We are able to indicate if the task has been completed by marking or unmarking them.","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"   1. [Mark a Task](#41-mark-a-task)","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"   2. [Unmark a Task](#42-unmark-a-task)","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"### **4.1 Mark a Task**","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"This feature allows the user indicate that the task has been completed.","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"*Usage*: We have completed task 5 on the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"kashing555"},"content":"*Format*: `mark [task index]`","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"kashing555"},"content":"*Examples*: `mark 5`","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"kashing555"},"content":"![markImg](./docs/mark.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"kashing555"},"content":"### **4.2 Unmark a Task**","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"kashing555"},"content":"This feature allows the user indicate that the task has not been completed.","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"kashing555"},"content":"*Usage*: We realised that there is extra work on task 5.","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"kashing555"},"content":"*Format*: `unmark [task index]`","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"kashing555"},"content":"*Examples*: `unmark 5`","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"kashing555"},"content":"![unmarkImg](./docs/unmark.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"kashing555"},"content":"   ","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"kashing555"},"content":"## **5. Delete a Task**","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"kashing555"},"content":"This feature allows the user to delete a task from the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"kashing555"},"content":"*Usage*: The deadline for task 4 has pass and we no longer have to keep track of it.","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"kashing555"},"content":"*Format*: `delete [task index]`","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"kashing555"},"content":"*Examples*: `delete 4`","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"kashing555"},"content":"![deleteImg](./docs/delete.PNG)","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"kashing555"},"content":"## **6. Exit the programme**","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"kashing555"},"content":"This feature allows the user to exit the programme.","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"kashing555"},"content":"*Usage*: I have finish what I am doing and would like to exit the application","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"kashing555"},"content":"*Format*: `bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"kashing555"},"content":"*Examples*: `bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"kashing555"},"content":"![byeImg](./docs/bye.PNG)","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":161}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kashing555":16,"-":45}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"T|0|help dad","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"T|1|help sis","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"D|0|help mom |2022-10-10 10PM","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"T|1|help mom","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"T|0|clean the house","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"D|0|CS2103 assisngment |2022-02-19 11PM","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":6}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Task;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import mytasks.TaskList;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" * Initializes the user interface that interacts with the user.","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"public class Command {","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    private StringBuilder sb;","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     * Initializes the user interface.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public Command() {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        this.sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     * Indicate to the user that their command has been successfully executed or if there is any error along the way.","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    public String allTasks(String inputText, TaskList tasks) {","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"        List\u003cTask\u003e list \u003d tasks.getList();","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        int taskCount \u003d list.size();","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        String[] tempList \u003d inputText.split(\" \", 2);","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        assert !(taskCount \u003c 0);","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            new DukeException().invalidChecker(tempList, taskCount);","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            return sb.append(e).toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"        switch (tempList[0]) {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"            sb.append(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        case \"list\":","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"            sb.append(ShowTasks.showList(taskCount, list));","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        case \"find\":","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            sb.append(ShowTasks.find(taskCount, tempList[1], list));","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"            sb.append(CreateTask.createTodo(tempList[1], list, taskCount));","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"            printAndSave(taskCount + 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"            sb.append(CreateTask.createDeadline(tempList[1], list, taskCount));","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"            printAndSave(taskCount + 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        case \"event\":","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"            sb.append(CreateTask.createEvent(tempList[1], list, taskCount));","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            printAndSave(taskCount + 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"            sb.append(MarkTask.mark(tempList[1], list));","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"            sb.append(MarkTask.unmark(tempList[1], list));","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"            sb.append(DeleteTask.delete(tempList[1], list));","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"            printAndSave(taskCount - 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"        default:","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"     * Shows the number of task being track.","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"    public StringBuilder printAndSave(int taskCount) {","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        if (taskCount + 1 \u003d\u003d 1) {","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"            return sb.append(\"You have \" + (taskCount) + \" task in the list.\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"            return sb.append(\"You have \" + (taskCount) + \" tasks in the list.\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":87}},{"path":"src/main/java/commands/CreateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import mytasks.Deadline;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import mytasks.Event;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import mytasks.Todo;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":" * CreateTask class contain methods to create new tasks for the user to track.","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"public class CreateTask {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     * Creates a task without restrictions.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"     * @param list list of tasks that are currently being tracked.","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     * @param taskCount Number of tasks currently in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public static String createTodo(String description, List\u003cTask\u003e list, int taskCount) {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        list.add(new Todo(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        return printCreateTask(list, taskCount);","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * Creates a task that must be completed before a certain time.","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     * @param list list of tasks that are currently being tracked.","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"     * @param taskCount Number of tasks currently in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    public static String createDeadline(String description, List\u003cTask\u003e list, int taskCount) {","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        String[] splitDescription \u003d description.split(\"/by \", 2);","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        list.add(new Deadline(splitDescription[0], splitDescription[1]));","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        return printCreateTask(list, taskCount);","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"     * Creates a task that will begin at a certain time.","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"     * @param list list of tasks that are currently being tracked.","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"     * @param taskCount Number of tasks currently in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    public static String createEvent(String description, List\u003cTask\u003e list, int taskCount) {","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        String[] splitDescription \u003d description.split(\"/at \", 2);","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        list.add(new Event(splitDescription[0], splitDescription[1]));","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        return printCreateTask(list, taskCount);","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"     * Inform user that the task has been created.","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"     * @param list description of the task.","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"     * @param taskCount list of tasks that are currently being tracked.","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"    private static String printCreateTask(List\u003cTask\u003e list, int taskCount) {","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        sb.append(list.get(taskCount).toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":67}},{"path":"src/main/java/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import mytasks.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * The DeleteTask class removes a task that is currently in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class DeleteTask {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * Removes a task that is currently in the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * @param number the task number that is going to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public static String delete(String number, List\u003cTask\u003e list) {","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        assert !(taskNum \u003c 0);","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        list.remove(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        return printDeleteTask(list, taskNum);","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * Tells the user that the task has been deleted.","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * @param taskNum TaskNum of task that is being deleted.","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    private static String printDeleteTask(List\u003cTask\u003e list, int taskNum) {","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        sb.append(list.get(taskNum).toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":38}},{"path":"src/main/java/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import mytasks.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * The MarkTask class contains methods to indicate if the task is complete.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class MarkTask {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * Indicates that the task has been completed","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * @param number the task number that has been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public static String mark(String number, List\u003cTask\u003e list) {","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        list.get(taskNum).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        sb.append(list.get(taskNum).toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * Indicates that the task has not been completed","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * @param number the task number that has not been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    public static String unmark(String number, List\u003cTask\u003e list) {","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        list.get(taskNum).markAsNotDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        sb.append(list.get(taskNum).toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as not done:\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":38}},{"path":"src/main/java/commands/ShowTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import mytasks.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * ShowTasks class displays the tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class ShowTasks {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * Method showList displays all currently tracked tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * @param taskCount the number of task currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public static String showList(int taskCount, List\u003cTask\u003e list) {","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"            sb.append((i + 1) + \".\" + list.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * Finds and displays tasks that match the keyword/task the user has input.","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * @param taskCount the number of task currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * @param keyword the text/task the user wants to find,","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     * @param list contains the list of tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    public static String find(int taskCount, String keyword, List\u003cTask\u003e list) {","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            for (String word : list.get(i).getDescription().split(\" \")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"                if (word.equals(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"                    sb.append((i + 1) + \".\" + list.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"    public void flip() {","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        db.flip();","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        return db;","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"    public static String getResponse(String output) {","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"        return output;","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":70}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import commands.Command;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import mytasks.TaskList;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * An application that tracks the tasks that you must complete.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    private Command command;","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     * Initializes the application by loading files and checking for errors.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"            tasks.loadList(storage.loadTasks());","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * Start the application.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    public String run(String inputText) {","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        command \u003d new Command();","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        String temp \u003d command.allTasks(inputText, tasks);","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        storage.saveTasks(tasks.getList());","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        return temp;","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":36,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * The DukeException class identifies and throws Exceptions unique to Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        super(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    public DukeException() {}","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     * The method invalidChecker checks for any invalid input the user might have entered and throws an exception","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     * indicating the error.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"     * @param input information entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"     * @param tasks the current number of tasks that is being tracked.","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    public void invalidChecker (String[] input, int tasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"        assert !(input.length \u003c\u003d 0);","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"        case \"list\":","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"            checkValid(input, tasks);","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        case \"find\":","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            checkValidFind(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            checkValidTodo(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"            checkValidDeadline(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        case \"event\":","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"            checkValidEvent(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        default:","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"     * Checks if the user has entered a invalid format mark, unmark and delete.","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"     * @param input information entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"     * @param tasks the current number of tasks that is being tracked.","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"    private void checkValid(String[] input, int tasks) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! Please enter a task number.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"        int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        if (!(taskNum \u003c\u003d tasks \u0026\u0026 taskNum \u003e 0)) {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! Task number does not exist.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"     * Checks if the user has entered a invalid format Find.","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"     * @param input information entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"    private void checkValidFind(String[] input) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! Please enter a task to find.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"            String[] task \u003d input[1].split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"            if (task.length \u003e 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"MEOW!!! Sorry you can only search for single words.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"     * Checks if the user has entered a invalid format Todo.","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"     * @param input information entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"    private void checkValidTodo(String[] input) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"     * Checks if the user has entered a invalid format Deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"     * @param input information entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"    private void checkValidDeadline(String[] input) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"            String[] dateTime \u003d input[1].split(\"/by \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"            if (dateTime[0].equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"MEOW!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"            } else if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"MEOW!!! Please enter a deadline for the task using /by.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"kashing555"},"content":"            checkValidDate(dateTime[1]);","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"     * Checks if the user has entered a invalid format Event.","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"     * @param input information entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"    private void checkValidEvent(String[] input) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"            String[] dateTime \u003d input[1].split(\"/at \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"            if (dateTime[0].equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"MEOW!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"kashing555"},"content":"            } else if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"MEOW!!! Please enter a timeframe for the task using /at.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"kashing555"},"content":"            checkValidDate(dateTime[1]);","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"kashing555"},"content":"     * Checks if the user has entered a invalid format for the date and time.","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"kashing555"},"content":"     * @param dateTime contains the date and time entered by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"kashing555"},"content":"    private void checkValidDate(String dateTime) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"kashing555"},"content":"        LocalDateTime d1 \u003d LocalDateTime.now();","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"kashing555"},"content":"            LocalDateTime d2 \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"kashing555"},"content":"            if (d2.isBefore(d1)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"kashing555"},"content":"                throw new DukeException(\"MEOW!!! Please enter a valid date from \"","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"kashing555"},"content":"                        + d1.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\")) + \" and onwards.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"kashing555"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"MEOW!!! Please enter a valid date and time in the format yyyy-mm-dd hha \"","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"kashing555"},"content":"                    + \"(Example: 2022-10-10 10PM)\");","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":145}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"public class Launcher {","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"            stage.show();","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Duke. What can i do for you?\";","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        assert input !\u003d \"\";","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"        String response \u003d DialogBox.getResponse(duke.run(input));","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"        );","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":55}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import mytasks.Deadline;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import mytasks.Event;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import mytasks.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":" * The Storage class methods to save and retrieve information from the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    private String filepath;","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * Creates a new txt file to track the list of task if the file has not been created.","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    private void createFile() {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"            File myObj \u003d new File(this.filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"                System.out.println(\"Files created\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"     * Saves the list of tasks that are currently being tracked into a txt file.","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"     * @param list contains the Tasks that are currently being tracked.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"    public void saveTasks(List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            for (Task task : list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"                String completed \u003d task.getIsDone() ? \"1|\" : \"0|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                    myWriter.write(\"D|\" + completed + task.getDescription() + \"|\"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                            + ((Deadline) task).returnDateTime() + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                    myWriter.write(\"E|\" + completed + task.getDescription() + \"|\"","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                            + ((Event) task).returnDateTime() + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"                    myWriter.write(\"T|\" + completed + task.getDescription() + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"     * Retrieves the list of tasks that were being tracked previously by the application.","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"     * @return returns the list of task that were being tracked previously.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"    public List\u003cString\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"            File myObj \u003d new File(this.filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"                list.add(myReader.nextLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"            myReader.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"            System.out.println(\"Files Loaded Successfully\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"            createFile();","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"            throw new DukeException(\"No file found. Creating new file...\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"        return list;","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":84}},{"path":"src/main/java/myTasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package mytasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * Creates a task that must be completed before a certain time.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    private String dateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param description The description of a deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     * @param dateTime The date and time of a deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"     * Return the dat and time of the deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * @return date and time of the deadline","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    public String returnDateTime() {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"        return dateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                + LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\"))","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"                    .format(DateTimeFormatter.ofPattern(\"MMMM d, yyyy hha\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":36}},{"path":"src/main/java/myTasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package mytasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * * Creates a task that will begin at a certain time.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    private String dateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * Constructor for a event task.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     * @param description The description of a event.","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"     * @param dateTime The date and time of a event.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"     * Return the dat and time of an event.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * @return date and time of an event.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    public String returnDateTime() {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"        return dateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        return \"[E]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                + LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hha\"))","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"                        .format(DateTimeFormatter.ofPattern(\"MMMM d, yyyy hha\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":36}},{"path":"src/main/java/myTasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package mytasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":" * Task is the parent class of Deadline, Event and Todo. Task contains information such as the task itself and whether","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":" * it has been completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"    private String description;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"     * Creates a new task with the task description. Set the completion of the task to not done as default .","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     * Visual icon to show the user if the task has been completed","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     * Indicate that the task is completed.","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"     * Indicate that the task has not been completed.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"     * Get description for the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     * @return description of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"        return description;","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"     * Get status of whether the task has been completed.","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"     * @return status of whether the task has been completed.","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        return isDone;","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":59}},{"path":"src/main/java/myTasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package mytasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * The TaskList keep tracks of the list of tasks, creates and mark tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"     * Constructor of TaskList keep tracks of the list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     * Load the task list from a previous instance.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"     * @param strList list of tasks that were previously saved.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    public void loadList(List\u003cString\u003e strList) {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"        for (String task : strList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"            String[] tempList \u003d task.split(\"\\\\|\");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"            Task holder;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"            switch (tempList[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"            case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"                holder \u003d new Todo(tempList[2]);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"                holder \u003d new Deadline(tempList[2], tempList[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            case \"E\":","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                holder \u003d new Event(tempList[2], tempList[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"            default:","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"                return;","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"            if (tempList[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"                holder.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"            list.add(holder);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"        return list;","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":50}},{"path":"src/main/java/myTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package mytasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":" * A task without restrictions.","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":15}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"        \u003cHBox fx:id\u003d\"textBubble\" maxHeight\u003d\"-Infinity\" stylesheets\u003d\"@duke.css\" styleClass\u003d\"text-bubble\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"            \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"        \u003cTextField fx:id\u003d\"userInput\" promptText\u003d\"Please enter your command here\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" stylesheets\u003d\"@duke.css\" styleClass\u003d\"background\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"kashing555":19}},{"path":"src/test/java/taskstest/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package taskstest;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Deadline;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        Deadline d \u003d new Deadline(\"help mom\", \"2022-10-10 10PM\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[D][ ] help mom (by: October 10, 2022 10PM)\", d.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":15}},{"path":"src/test/java/taskstest/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package taskstest;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Event;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class EventTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        Event e \u003d new Event(\"help mom\", \"2022-10-10 10PM\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[E][ ] help mom (at: October 10, 2022 10PM)\", e.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":15}},{"path":"src/test/java/taskstest/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package taskstest;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Todo;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class MarkTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        Todo t \u003d new Todo(\"help mom\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        t.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][X] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":16}},{"path":"src/test/java/taskstest/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package taskstest;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Todo;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        Todo t \u003d new Todo(\"help mom\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][ ] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":15}},{"path":"src/test/java/taskstest/UnmarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package taskstest;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import mytasks.Todo;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"public class UnmarkTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    void toStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"        Todo t \u003d new Todo(\"help mom\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"        t.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][X] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"        t.markAsNotDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"        assertEquals(\"[T][ ] help mom\", t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kashing555":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kashing555":7}}]
