[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xSaints19x":1,"-":23}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"T | 0 | read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"E | 1 | project meeting | 2021-12-31","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":" * Represents a chat-bot program named Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"     * Constructor for Duke chat-bot program which initialises with a saved file (if applicable), list of tasks, and system Ui.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"        try { // Load existing task-list","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"     * Runs the Duke chat-bot program and takes in inputs","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"    public void run() {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"                if (c instanceof ByeCommand) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"                    isExit \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"xSaints19x"},"content":"                ui.showError(\"\\tI\u0027m sorry matey, that\u0027s an invalid input. Please try again :\u0027(\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"xSaints19x"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"xSaints19x"},"content":"        new Duke(\"src/main/java/Duke/data/duke.txt\").run();","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xSaints19x":63,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":" * This AddCommand class will add a task into a list of tasks when executed.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    private final Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * Constructor for AddCommand which adds the provided task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by adding task into Duke.Duke.util.TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList  List of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     * @param ui        Ui provided","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"     * @param storage   Saved history","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"        String contentToSave \u003d task.toSave() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"        Storage.append(contentToSave);","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":40}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This ByeCommand class will print the exit message when executed.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by printing exit message.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     * @param ui       Ui provided.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * @param storage  Saved history.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This Command class is the parent class for all commands to be executed.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by printing exit message.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList  List of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"     * @param ui        Ui provided","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"     * @param storage   Saved history","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This DeleteCommand class will delete a task from the list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"     * Constructor for DeleteCommand which provides an index to delete.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by printing exit message.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     * @param ui       Ui provided.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     * @param storage  Saved history.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"        taskList.delete(this.taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"        Storage.saveToFile(taskList.getCurrentList());","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This FindCommand class will find a list of added tasks that match the keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" * when executed.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * Constructor for FindCommand which finds matching tasks in the list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"     * @param keyword Keyword to find matching tasks in list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by adding task into Duke.Duke.util.TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     * @param ui       Ui provided","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"     * @param storage  Saved history","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"        taskList.findTaskMatchingKeyword(this.keyword);","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"xSaints19x":38}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This ListCommand class will show a list of added tasks when executed.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by adding task into Duke.Duke.util.TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     * @param ui       Ui provided","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * @param storage  Saved history","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"        taskList.printTaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This MarkCommand class will mark a task as done","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"     * Constructor for MarkCommand with a given task number to be marked as done in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index task number to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by marking task in TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList  List of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     * @param ui        Ui provided","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     * @param storage   Saved history","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"        Storage.saveToFile(taskList.getCurrentList());","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":37}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * This UnmarkCommand class will mark a task as undone","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"     * Constructor for MarkCommand with a given task number to be marked as done in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index task number to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"     * Executes command by unmarking task in TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     * @param ui       Ui provided","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     * @param storage  Saved history","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"        taskList.unmarkTask(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"        Storage.saveToFile(taskList.getCurrentList());","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":37}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"D | 0 | return book | 2021-04-19 | 2359hrs","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"E | 0 | project meeting | 2021-12-31 | 12-6pm","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"xSaints19x":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.exception;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":" * Print error messages","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"        super(message);","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * Represents a deadline to be fulfilled. This deadline is a task that possesses a state/status that is by default","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" * not done","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    protected String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    private final DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * Creates a task with a deadline, that is initially not done","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"     * @param description A short description of the deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"     * @param date        Date of the deadline as a String","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"        time \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"        String[] dateSplit \u003d date.split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"            this.date \u003d LocalDate.parse(dateSplit[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"            if (dateSplit.length !\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"                time \u003d dateSplit[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"            throw new DukeException(\"\\tInvalid date! Date format to be of type yyyy-mm-dd\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String representation of a Deadline task","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of a Deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(pattern) + \" \" + time +\")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String format of how the Deadline will be saved in the text file","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of deadline task to be saved","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"        return String.format(\"D | %d | %s | %s | %s\", this.isDone ? 1 : 0, this.description, this.date, this.time);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"xSaints19x":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":" * Represents an event to be done. This event is a task that possesses a state/status that is by default","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":" * not done","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    protected String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    private final DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * Creates an event with a time, that is initially not done","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"     * @param description A short description of the event","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"     * @param date        Date and time (if applicable) of the event as a String","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"    public Event(String description, String date) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"        time \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"        String[] dateSplit \u003d date.split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"            this.date \u003d LocalDate.parse(dateSplit[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"            if (dateSplit.length !\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"                time \u003d dateSplit[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"            throw new DukeException(\"\\tInvalid date! Date format to be of type yyyy-mm-dd\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String representation of an Event","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of a Deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(pattern) + \" \" + time +  \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String format of how the Event will be saved in the text file","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of the Event task to be saved","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"        return String.format(\"E | %d | %s | %s | %s\", this.isDone ? 1 : 0, this.description, this.date, this.time);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"xSaints19x":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":" * Represents a task to be done. This task possesses a state/status that is by default not done.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"    protected String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"        return this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"    abstract public String toSave();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"xSaints19x":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":" * Represents a todolist task to be done. This event is a task that possesses a state/status","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":" * that is by default not done","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"     * Creates a todolist task that is initially not done","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"     * @param description","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String representation of a todolist item","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of a todolist task","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String format of how the todolist task will be saved in the text file","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of the todolist task to be saved","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"xSaints19x":36}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.util;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":" * Utility class to parse inputs that are retrieved from user.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"     * Parses the String input and returns the appropriate command.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"     * @return Appropriate Command.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"    public static Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"        String[] splitCommand \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"        String commandWord \u003d splitCommand[0].toLowerCase();","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"        case (ByeCommand.COMMAND_WORD):","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"        case (DeleteCommand.COMMAND_WORD):","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh you can\u0027t delete nuthin\u0027 matey!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"            int taskIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new DeleteCommand(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"        case (FindCommand.COMMAND_WORD):","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh you can\u0027t find nuthin\u0027 matey!\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new FindCommand(splitCommand[1]);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"        case (ListCommand.COMMAND_WORD):","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"        case (MarkCommand.COMMAND_WORD):","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh you can\u0027t mark nuthin\u0027 matey!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"xSaints19x"},"content":"            taskIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new MarkCommand(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"xSaints19x"},"content":"        case (UnmarkCommand.COMMAND_WORD):","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh you can\u0027t unmark nuthin\u0027 matey!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"xSaints19x"},"content":"            taskIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new UnmarkCommand(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"xSaints19x"},"content":"        case (\"deadline\"):","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh deadline description can\u0027t be empty matey!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"xSaints19x"},"content":"            String[] furtherSplitCommand \u003d splitCommand[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"xSaints19x"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"xSaints19x"},"content":"                Deadline deadline \u003d new Deadline(furtherSplitCommand[0], furtherSplitCommand[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"xSaints19x"},"content":"                command \u003d new AddCommand(deadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"xSaints19x"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"xSaints19x"},"content":"                command \u003d new AddCommand(null);","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"xSaints19x"},"content":"        case (\"event\"):","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh event description can\u0027t be empty matey!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"xSaints19x"},"content":"            furtherSplitCommand \u003d splitCommand[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"xSaints19x"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"xSaints19x"},"content":"                Event event \u003d new Event(furtherSplitCommand[0], furtherSplitCommand[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"xSaints19x"},"content":"                command \u003d new AddCommand(event);","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"xSaints19x"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"xSaints19x"},"content":"                command \u003d new AddCommand(null);","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"xSaints19x"},"content":"        case (\"todo\"):","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"xSaints19x"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(\"\\tAaaarrrrgggghhhh todo description can\u0027t be empty matey!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"xSaints19x"},"content":"            command \u003d new AddCommand(new Todo(splitCommand[1]));","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"xSaints19x"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"xSaints19x"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"xSaints19x"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry matey, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"xSaints19x"},"content":"        return command;","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":104}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.util;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":" * Utility class to load a saved file, or save to a file.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"    private static String FILE_PATH;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"     * Creates a new instance of Storage that loads the history from a specific path","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"     * or creates a new file for saving tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     * Loads the current content of the file or create a new file for saving the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"    public Scanner load() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"            return new Scanner(file);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"            File fileDir \u003d new File(\"src/main/java/Duke/data\");","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"            fileDir.mkdirs();","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"            File fileToCreate \u003d new File(fileDir, \"duke.txt\");","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"            Scanner sc \u003d null;","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"                new FileWriter(fileToCreate);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"                sc \u003d new Scanner(fileToCreate);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"            } catch (IOException error) {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"                throw new DukeException(error.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"            return sc;","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"     * Appends new tasks into saved file","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"     * @param content Task to be added to saved file","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"    public static void append(String content) {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"xSaints19x"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"xSaints19x"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"xSaints19x"},"content":"            writer.write(content);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"xSaints19x"},"content":"            writer.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"xSaints19x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(\"Exception thrown:\" + e);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"xSaints19x"},"content":"     * Save all tasks into a file","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"xSaints19x"},"content":"    public static void saveToFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"xSaints19x"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"xSaints19x"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"xSaints19x"},"content":"            result \u003d result.concat(task.toSave() + \"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"xSaints19x"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"xSaints19x"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"xSaints19x"},"content":"            writer.write(result);","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"xSaints19x"},"content":"            writer.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"xSaints19x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(\"Exception thrown:\" + e);","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":84}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.util;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"import java.util.List;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":" * Utility class to keep track of list of added task.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"    private final String TASK_ADDED \u003d \"\\tTask Added, arrgh:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"     * Creates a new instance of tasklist that creates a new list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"     * Creates a new instance of tasklist that loads the saved list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"    public TaskList(Scanner sc) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"        readFromFile(sc);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"     * Loads the saved list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"    private void readFromFile(Scanner sc) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"            String[] savedData \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"            String taskType \u003d savedData[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"            Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"            taskCount++;","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"            switch (taskType) {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"            case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"                task \u003d new Todo(savedData[2]);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"            case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"                if (savedData.length \u003d\u003d 3) {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"                    task \u003d new Event(savedData[2], savedData[3]);","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"xSaints19x"},"content":"                } else { // If time is included for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"xSaints19x"},"content":"                    task \u003d new Event(savedData[2], savedData[3] + \" \" + savedData[4]);","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"xSaints19x"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"xSaints19x"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"xSaints19x"},"content":"            case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"xSaints19x"},"content":"                if (savedData.length \u003d\u003d 3) {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"xSaints19x"},"content":"                    task \u003d new Deadline(savedData[2], savedData[3]);","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"xSaints19x"},"content":"                } else { // If time is included for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"xSaints19x"},"content":"                    task \u003d new Deadline(savedData[2], savedData[3] + \" \" + savedData[4]);","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"xSaints19x"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"xSaints19x"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"xSaints19x"},"content":"            default:","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"xSaints19x"},"content":"                task \u003d new Todo(\"\");","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"xSaints19x"},"content":"            if (savedData[1].equals(\"1\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"xSaints19x"},"content":"                task.markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"xSaints19x"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"xSaints19x"},"content":"//            System.out.println(\"Task added.\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"xSaints19x"},"content":"            taskList.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"xSaints19x"},"content":"     * Adds a task into list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"xSaints19x"},"content":"     * @param task List of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"xSaints19x"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"xSaints19x"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"xSaints19x"},"content":"            this.taskList.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"xSaints19x"},"content":"            this.taskCount++;","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(TASK_ADDED + \"\\t\" + taskList.get(this.taskCount - 1).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(\"\\tNow you have \" + this.taskCount + \" tasks in your task list arrr, better get workin\u0027 aye!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"xSaints19x"},"content":"            ui.requestNextCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"xSaints19x"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"xSaints19x"},"content":"            ui.showError(\"\\tTask is invalid matey :-(, please try again!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"xSaints19x"},"content":"     * Deletes a task from list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index task number to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"xSaints19x"},"content":"    public void delete(int taskIndex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"xSaints19x"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"xSaints19x"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"xSaints19x"},"content":"            this.taskList.remove(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"xSaints19x"},"content":"            this.taskCount--;","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"xSaints19x"},"content":"            ui.deleteTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(\"\\t\" + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"xSaints19x"},"content":"            ui.requestNextCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"xSaints19x"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"xSaints19x"},"content":"            ui.showError(\"\\tAin\u0027t nuthin\u0027 to be deleted here matey! :-(\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"xSaints19x"},"content":"    public void findTaskMatchingKeyword(String keyword) {","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"xSaints19x"},"content":"        List\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"xSaints19x"},"content":"//        this.taskList.forEach(x -\u003e {","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"xSaints19x"},"content":"//            boolean hasKeyword \u003d x.getTaskDescription().contains(keyword);","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"xSaints19x"},"content":"//            keywordMatchedList.add(hasKeyword);","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"xSaints19x"},"content":"//        });","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"xSaints19x"},"content":"        matchingTask \u003d this.taskList.stream()","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"xSaints19x"},"content":"                .filter(str -\u003e str.getTaskDescription().trim().contains(keyword))","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"xSaints19x"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"xSaints19x"},"content":"        // To be modified","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"xSaints19x"},"content":"        ui.showMatchingTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"xSaints19x"},"content":"        for (int i \u003d 0; i \u003c matchingTask.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + matchingTask.get(i));","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"xSaints19x"},"content":"        ui.requestNextCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"xSaints19x"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"xSaints19x"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"xSaints19x"},"content":"    public int getCount() {","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"xSaints19x"},"content":"        return this.taskCount;","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"xSaints19x"},"content":"    public ArrayList\u003cTask\u003e getCurrentList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"xSaints19x"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"xSaints19x"},"content":"     * Returns the tasks at given index","lastModifiedDate":"2022-01-28"},{"lineNumber":148,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":149,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index of task number.","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"xSaints19x"},"content":"     * @return Task at given index.","lastModifiedDate":"2022-01-28"},{"lineNumber":151,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":152,"author":{"gitId":"xSaints19x"},"content":"    public String getTask(int taskIndex) {","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"xSaints19x"},"content":"        return taskList.get(taskIndex).getTaskDescription();","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":157,"author":{"gitId":"xSaints19x"},"content":"     * Mark a task in list of tasks as done","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index of task number.","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":161,"author":{"gitId":"xSaints19x"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":162,"author":{"gitId":"xSaints19x"},"content":"        Task curr \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":163,"author":{"gitId":"xSaints19x"},"content":"        curr.markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":164,"author":{"gitId":"xSaints19x"},"content":"        ui.markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":165,"author":{"gitId":"xSaints19x"},"content":"        System.out.println(\"\\t\" + curr);","lastModifiedDate":"2022-01-28"},{"lineNumber":166,"author":{"gitId":"xSaints19x"},"content":"        ui.requestNextCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":167,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":168,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":169,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":170,"author":{"gitId":"xSaints19x"},"content":"     * Mark a task in list of tasks as not done","lastModifiedDate":"2022-01-28"},{"lineNumber":171,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":172,"author":{"gitId":"xSaints19x"},"content":"     * @param taskIndex 0-based index of task number.","lastModifiedDate":"2022-01-28"},{"lineNumber":173,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":174,"author":{"gitId":"xSaints19x"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":175,"author":{"gitId":"xSaints19x"},"content":"        Task curr \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":176,"author":{"gitId":"xSaints19x"},"content":"        curr.markAsUndone();","lastModifiedDate":"2022-01-28"},{"lineNumber":177,"author":{"gitId":"xSaints19x"},"content":"        ui.markAsUndone();","lastModifiedDate":"2022-01-28"},{"lineNumber":178,"author":{"gitId":"xSaints19x"},"content":"        System.out.println(\"\\t\" + curr);","lastModifiedDate":"2022-01-28"},{"lineNumber":179,"author":{"gitId":"xSaints19x"},"content":"        ui.requestNextCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":180,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":181,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":182,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":183,"author":{"gitId":"xSaints19x"},"content":"     * Prints out the list of outstanding tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":184,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":185,"author":{"gitId":"xSaints19x"},"content":"    public void printTaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":186,"author":{"gitId":"xSaints19x"},"content":"        ui.printTaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":187,"author":{"gitId":"xSaints19x"},"content":"        for (int i \u003d 0; i \u003c this.taskCount; i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":188,"author":{"gitId":"xSaints19x"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":189,"author":{"gitId":"xSaints19x"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":190,"author":{"gitId":"xSaints19x"},"content":"        ui.requestNextCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":191,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":192,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":193,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":193}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.util;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":" * Utility class that provides interactivity with the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"    private final static PrintStream OUT \u003d System.out;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"    private final static Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    private final String HELP \u003d \"\\tA \u0027bye\u0027 command will exit the program, yarr.\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"    private final String LINE \u003d \"\\t___________________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    private final String REQUEST_NEXT_COMMAND \u003d \"\\tAye, Aye. Your next command:\";","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"    private final String REQUEST_NEXT_COMMAND_ANGRY \u003d \"\\tAye Aye, better get it right this time. Your next command:\";","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    private final String TASK_CALL \u003d \"\\tAvast ye Matey. Here goes your task list:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"    private final String TASK_COMPLETED \u003d \"\\tTask completed, good job matey!\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"    private final String TASK_DELETED \u003d \"\\tAlright matey, task has been deleted good on ya.\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"    private final String TASK_MATCH \u003d \"\\tAvast ye Matey. Here goes your matching tasks in your task list:\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"    private final String TASK_UNCHECKED \u003d \"\\tAlright matey, hurry up and finish up this task arrr:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    private final String WELCOME_MESSAGE \u003d \"\\tAhoy! Welcome aboard adventurer, Cap\u0027n Dave at your service.\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"    private final String WELCOME_QUESTION \u003d \"\\tWhat can I do for you? Your command:\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"     * Reads the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"     * @return User input.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"        return IN.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to inform user that task has been deleted","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"xSaints19x"},"content":"    public void deleteTask() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"xSaints19x"},"content":"        System.out.println(TASK_DELETED);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to inform user that task has been marked as done","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"xSaints19x"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(TASK_COMPLETED);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to inform user that task has been marked as undone","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"xSaints19x"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(TASK_UNCHECKED);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to inform user of the list of outstanding tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"xSaints19x"},"content":"    public void printTaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(TASK_CALL);","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to request for user to input next command","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"xSaints19x"},"content":"    public void requestNextCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(LINE + REQUEST_NEXT_COMMAND);","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"xSaints19x"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(\"\\tFair winds adventurer, till we meet next time yarr. Bye for now.\\n\" + LINE);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to inform user of the list of tasks that matches the keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"xSaints19x"},"content":"    public void showMatchingTasks() {","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(TASK_MATCH);","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to welcome the user","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"xSaints19x"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(LINE + WELCOME_MESSAGE + HELP + WELCOME_QUESTION);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"xSaints19x"},"content":"     * Prints a line separator.","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"xSaints19x"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(LINE);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"xSaints19x"},"content":"     * Prints a message to inform user of their input error","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"xSaints19x"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"xSaints19x"},"content":"        OUT.println(errorMessage + REQUEST_NEXT_COMMAND_ANGRY);","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"xSaints19x":102}},{"path":"src/test/java/duke/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"    public TaskStub(String description) {","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String representation of an Event","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of a Deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"        return \"[TEST]\" + super.toString() + \" (at: 24/7)\";","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"     * Returns the String format of how the Event will be saved in the text file","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"     * @return String format of the Event task to be saved","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"        return String.format(\"Test | %d | %s | 24/7\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"xSaints19x":27}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"package duke.util;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"import duke.task.TaskStub;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"xSaints19x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"xSaints19x"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"xSaints19x"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"xSaints19x"},"content":"    public void addTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"xSaints19x"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"xSaints19x"},"content":"        TaskStub taskStub \u003d new TaskStub(\"Coding all day\");","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"xSaints19x"},"content":"        taskList.add(taskStub);","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"xSaints19x"},"content":"        assertEquals(1, taskList.getCount());","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"xSaints19x"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"xSaints19x"},"content":"    public void deleteTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"xSaints19x"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"xSaints19x"},"content":"        taskList.delete(0);","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"xSaints19x"},"content":"        assertEquals(0, taskList.getCount());","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"xSaints19x"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"xSaints19x"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"xSaints19x"},"content":"    void getTaskTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"xSaints19x"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"xSaints19x"},"content":"        TaskStub taskStub \u003d new TaskStub(\"Coding all day\");","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"xSaints19x"},"content":"        taskList.add(taskStub);","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"xSaints19x"},"content":"        assertEquals(\"Coding all day\", taskList.getTask(0));","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"xSaints19x"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"xSaints19x"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"xSaints19x":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xSaints19x"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"xSaints19x"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"xSaints19x"},"content":"deadline return book /by 2021-04-19 2359hrs","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"xSaints19x"},"content":"event project meeting /at 2021-12-31 12-6pm","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"xSaints19x"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"xSaints19x":5}}]
