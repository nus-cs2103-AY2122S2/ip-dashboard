[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rdac0":17,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import duke.gui.Main;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":" * Duke is a simple virtual assistant typically used","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * to teach students about programming.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"     * Runs Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"     * @param args Unused.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Rdac0":18,"-":4}},{"path":"src/main/java/duke/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * The Echo class is used to automatically format what Duke says.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" * This is the other half of the analogue to the \u0027Ui\u0027 class in the example.","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":" * Anytime you see Echo, it\u0027s UI.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"public class Echo {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"     * Creates an Echo object.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    public Echo() {}","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"     * Prints Duke\u0027s message, formatted.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"     * @param temp String to be printed.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    public void echoString (String temp) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"        System.out.println(\"  \u003e \" + temp + \"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":26}},{"path":"src/main/java/duke/Memory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":" * The Memory class handles the storage and access to available Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":" * This is the equivalent to the \u0027TaskList\u0027 class on the example.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"public class Memory {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    private ArrayList\u003cTask\u003e taskMem;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    private int size;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    private Echo echo;","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    private File file;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"     * Creates a Memory object.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    public Memory() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"        this.taskMem \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"        this.size \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"        this.echo \u003d new Echo();","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"        this.file \u003d new File(\"data\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"     * Returns stored size of taskMem, not actual size.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"     * Although, they should be the same.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"     * @return Stored size of taskMem.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"        return size;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"     * Returns the String representation of a Task in Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"     * @param address The address of the Task to request.","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"     * @return The String representation of the task requested.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"    public String getString(int address) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"        // Simple error handling, should suffice but will update","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"            return \"Memory address requested out of bounds!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"            return taskMem.get(address).toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Rdac0"},"content":"     * Returns a Task in Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Rdac0"},"content":"     * @param address The address of the Task to request.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Rdac0"},"content":"     * @return The Task requested.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Rdac0"},"content":"    public Task getTask(int address) {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"Rdac0"},"content":"        return taskMem.get(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Rdac0"},"content":"     * Returns a string representation of all Tasks in Memory.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"Rdac0"},"content":"     * @return String representation.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Rdac0"},"content":"    public String listAll() {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Rdac0"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"Rdac0"},"content":"            return \"You\u0027ve got nothing to do.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"Rdac0"},"content":"            String str \u003d \"Here\u0027s what you got:\";","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"Rdac0"},"content":"            for (int i \u003d 1; i \u003c\u003d size; i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Rdac0"},"content":"                str \u003d str + \"\\n \" + i + \". \" + this.getString(i - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Rdac0"},"content":"            return str;","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Rdac0"},"content":"     * Finds all Task with specified keyword in their name.","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Rdac0"},"content":"     * @param text Specifying keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"Rdac0"},"content":"     * @return String representation of the list of found Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"Rdac0"},"content":"    public String findAll(String text) {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Rdac0"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Rdac0"},"content":"            return \"Trust me, I wont find anything.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"Rdac0"},"content":"            String str \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"Rdac0"},"content":"            for (int i \u003d 1; i \u003c\u003d size; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"Rdac0"},"content":"                Task tempTask \u003d this.getTask(i - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"Rdac0"},"content":"                if (tempTask.isFoundInName(text)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"Rdac0"},"content":"                    str \u003d str + \"\\n \" + i + \". \" + this.getString(i - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"Rdac0"},"content":"            if (str.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"Rdac0"},"content":"                return \"Unfortunately, I didn\u0027t find anything.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"Rdac0"},"content":"                str \u003d \"Here\u0027s what I found, and their ids:\" + str;","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"Rdac0"},"content":"                return str;","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Rdac0"},"content":"     * Adds a Task to memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Task to be made.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Rdac0"},"content":"     * @return String audit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"Rdac0"},"content":"    public String addTask(String name) {","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"Rdac0"},"content":"        taskMem.add(new Task(name));","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"Rdac0"},"content":"        size++;","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"Rdac0"},"content":"        parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"Rdac0"},"content":"        return \"added task: \" + getString(size - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"Rdac0"},"content":"     * Adds a Deadline to Memory.","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Deadline to be made.","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"Rdac0"},"content":"     * @param time The due time of the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"Rdac0"},"content":"     * @return String audit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"Rdac0"},"content":"    public String addDeadline(String name, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"Rdac0"},"content":"            taskMem.add(new Deadline(name, time));","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"Rdac0"},"content":"            size++;","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"Rdac0"},"content":"            parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"Rdac0"},"content":"            return \"added deadline: \" + getString(size - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"Rdac0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"Rdac0"},"content":"            return \"Please format your date in yyyy-mm-dd\";","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"Rdac0"},"content":"     * Adds an Event to Memory.","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Event to be made.","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"Rdac0"},"content":"     * @param time The time of the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"Rdac0"},"content":"     * @return String audit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"Rdac0"},"content":"    public String addEvent(String name, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"Rdac0"},"content":"            taskMem.add(new Event(name, time));","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"Rdac0"},"content":"            size++;","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"Rdac0"},"content":"            parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"Rdac0"},"content":"            return \"added event: \" + getString(size - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"Rdac0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"Rdac0"},"content":"            return \"Please format your date in yyyy-mm-dd\";","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"Rdac0"},"content":"     * Sets a Task in Memory as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"Rdac0"},"content":"     * @param fakeAddress The address of the Task to request, as shown to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"Rdac0"},"content":"     * @return String audit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"Rdac0"},"content":"    public String setDone(int fakeAddress) {","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"Rdac0"},"content":"        int address \u003d fakeAddress - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"Rdac0"},"content":"            return \"Memory address requested out of bounds!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"Rdac0"},"content":"            getTask(address).setDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"Rdac0"},"content":"            parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"Rdac0"},"content":"            return \"Cool! You\u0027ve done this task:\\n  \"","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"Rdac0"},"content":"                    + getString(address);","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"Rdac0"},"content":"     * Sets a Task in Memory as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"Rdac0"},"content":"     * @param fakeAddress The address of the Task to request, as shown to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"Rdac0"},"content":"     * @return String audit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"Rdac0"},"content":"    public String setUndone(int fakeAddress) {","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"Rdac0"},"content":"        int address \u003d fakeAddress - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":192,"author":{"gitId":"Rdac0"},"content":"            return \"Memory address requested out of bounds!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":194,"author":{"gitId":"Rdac0"},"content":"            getTask(address).setUndone();","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"Rdac0"},"content":"            parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":196,"author":{"gitId":"Rdac0"},"content":"            return \"This task is now undone:\\n  \"","lastModifiedDate":"2022-02-02"},{"lineNumber":197,"author":{"gitId":"Rdac0"},"content":"                    + getString(address);","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":200,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"Rdac0"},"content":"     * Removes a Task from Memory.","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"Rdac0"},"content":"     * @param fakeAddress The address of the Task to request, as shown to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"Rdac0"},"content":"     * @return String audit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"Rdac0"},"content":"    public String deleteTask(int fakeAddress) {","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"Rdac0"},"content":"        int address \u003d fakeAddress - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":209,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":210,"author":{"gitId":"Rdac0"},"content":"            return \"Memory address requested out of bounds!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":212,"author":{"gitId":"Rdac0"},"content":"            String temp \u003d getString(address);","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"Rdac0"},"content":"            taskMem.remove(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":214,"author":{"gitId":"Rdac0"},"content":"            size--;","lastModifiedDate":"2022-01-20"},{"lineNumber":215,"author":{"gitId":"Rdac0"},"content":"            parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"Rdac0"},"content":"            return \"removed: \" + temp;","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":219,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":220,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"Rdac0"},"content":"     * Sets up the data file and Parser.","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":223,"author":{"gitId":"Rdac0"},"content":"    public void setup() {","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":225,"author":{"gitId":"Rdac0"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":226,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"Data folder does not exist. Creating folder...\");","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"Rdac0"},"content":"            file.mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":228,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"Rdac0"},"content":"        file \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":231,"author":{"gitId":"Rdac0"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":232,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"Task data file does not exist. Creating file...\");","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"Rdac0"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":234,"author":{"gitId":"Rdac0"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":235,"author":{"gitId":"Rdac0"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":236,"author":{"gitId":"Rdac0"},"content":"                echo.echoString(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":238,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":240,"author":{"gitId":"Rdac0"},"content":"        parser \u003d new Parser(file, this);","lastModifiedDate":"2022-01-26"},{"lineNumber":241,"author":{"gitId":"Rdac0"},"content":"        parser.load();","lastModifiedDate":"2022-01-26"},{"lineNumber":242,"author":{"gitId":"Rdac0"},"content":"        parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":243,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":244,"author":{"gitId":"Rdac0"},"content":"        assert file.exists();","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"Setup Complete!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":247,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":248,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":249,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":250,"author":{"gitId":"Rdac0"},"content":"     * Updates the entire data file, writing from taskMem.","lastModifiedDate":"2022-01-26"},{"lineNumber":251,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":252,"author":{"gitId":"Rdac0"},"content":"    public void parseUpdateAll() {","lastModifiedDate":"2022-01-26"},{"lineNumber":253,"author":{"gitId":"Rdac0"},"content":"        parser.updateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":254,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":255,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":255}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":" * The Parser class handles the parsing and interaction between Duke and files on the disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":" * This is the equivalent to the \u0027Storage\u0027 class on the example.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    private Echo echo \u003d new Echo();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    private File file;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    private Memory memory;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    private FileWriter fileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    private String loadError \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"    private String regex \u003d \" ~~ \";","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"     * Creates a Parser that is connected to a Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"     * @param file File object to be passed to Scanner and FileWriter.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"     * @param memory Memory object to access.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    public Parser(File file, Memory memory) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"        this.file \u003d file;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"            this.scanner \u003d new Scanner(file);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"        this.memory \u003d memory;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"        assert this.file.exists()","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"     * Loads the data file onto Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"    public void load() {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"Loading data...\");","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"        String errorMessage \u003d \"These lines have been skipped:\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"        int loadUnsuccess \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Rdac0"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Rdac0"},"content":"            String temp \u003d scanner.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Rdac0"},"content":"            String[] tempStrArray \u003d temp.split(regex, 0);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Rdac0"},"content":"            switch(tempStrArray[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Rdac0"},"content":"            case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003c 3) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Rdac0"},"content":"                    errorMessage \u003d errorMessage + temp + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Rdac0"},"content":"                    loadUnsuccess++;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Rdac0"},"content":"                    memory.addTask(tempStrArray[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Rdac0"},"content":"                    if (tempStrArray[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Rdac0"},"content":"                        memory.setDone(memory.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Rdac0"},"content":"            case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003c 4) {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Rdac0"},"content":"                    errorMessage \u003d errorMessage + temp + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Rdac0"},"content":"                    loadUnsuccess++;","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Rdac0"},"content":"                    memory.addDeadline(tempStrArray[2], tempStrArray[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Rdac0"},"content":"                    if (tempStrArray[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Rdac0"},"content":"                        memory.setDone(memory.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Rdac0"},"content":"            case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003c 4) {","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"Rdac0"},"content":"                    errorMessage \u003d errorMessage + temp + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"Rdac0"},"content":"                    loadUnsuccess++;","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Rdac0"},"content":"                    memory.addEvent(tempStrArray[2], tempStrArray[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Rdac0"},"content":"                    if (tempStrArray[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Rdac0"},"content":"                        memory.setDone(memory.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Rdac0"},"content":"            default:","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Rdac0"},"content":"                errorMessage \u003d errorMessage + temp + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Rdac0"},"content":"                loadUnsuccess++;","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Rdac0"},"content":"        if (loadUnsuccess \u003e 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(errorMessage);","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Rdac0"},"content":"     * Updates the data file from Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Rdac0"},"content":"    public void updateAll() {","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"Rdac0"},"content":"            fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"Rdac0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"Rdac0"},"content":"        String toAdd \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"Rdac0"},"content":"        int size \u003d memory.getSize();","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"Rdac0"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"Rdac0"},"content":"            Task task \u003d memory.getTask(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"Rdac0"},"content":"            String tempName;","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"Rdac0"},"content":"            LocalDate tempTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"Rdac0"},"content":"            String tempDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"Rdac0"},"content":"            tempName \u003d task.getName();","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"Rdac0"},"content":"            if (task.getDone()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"Rdac0"},"content":"                tempDone \u003d \"1\";","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"Rdac0"},"content":"                tempDone \u003d \"0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"Rdac0"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"Rdac0"},"content":"                tempTime \u003d task.getTime();","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"Rdac0"},"content":"                toAdd \u003d toAdd + \"D\" + regex + tempDone + regex","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"Rdac0"},"content":"                        + tempName + regex + tempTime + System.lineSeparator();","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"Rdac0"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"Rdac0"},"content":"                tempTime \u003d task.getTime();","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"Rdac0"},"content":"                toAdd \u003d toAdd + \"E\" + regex + tempDone + regex","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"Rdac0"},"content":"                        + tempName + regex + tempTime + System.lineSeparator();","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"Rdac0"},"content":"                toAdd \u003d toAdd + \"T\" + regex + tempDone + regex","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"Rdac0"},"content":"                        + tempName + System.lineSeparator();","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"Rdac0"},"content":"            fileWriter.write(toAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"Rdac0"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"Rdac0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Rdac0":164}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":" * The UserInterface class connects the user to Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":" * This is the equivalent to the \u0027Parser\u0027 class on the example,","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * and is half of the \u0027Ui\u0027 class.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"public class UserInterface {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    private Echo echo \u003d new Echo();","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    private Memory memory;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    private String tempString;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    private boolean isLooping \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    // Strings","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    private String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"    private String textGreeting \u003d \"Heya! I\u0027m Duke! You can see me now!\\nWhat can I do for ya?\";","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    private String guiGreeting \u003d \"Heya! I\u0027m Duke! You can see me now!\\nWhat can I do for ya?\";","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"    private String nothing \u003d \"I can\u0027t read your mind, doc! Not yet, anyway.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"    private String saving \u003d \"Saving data...\";","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"    private String specific \u003d \"You\u0027re gonna need to be more specific.\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"    private String tryFind \u003d \"Try \u0027find keyword\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    private String tryTodo \u003d \"Try \u0027todo An exciting human task\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"    private String tryDeadline \u003d \"Try \u0027deadline A task /by Sunday\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"    private String tryEvent \u003d \"Try \u0027event An event /at 7PM\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"    private String tryMark \u003d \"Try \u0027mark 2\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"    private String tryUnmark \u003d \"Try \u0027unmark 1\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"    private String tryDelete \u003d \"Try \u0027delete 3\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"    private String dontForgetTaskName \u003d \"Don\u0027t forget the task\u0027s name\";","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"    private String dontForgetTaskDate \u003d \"Don\u0027t forget the task\u0027s deadline\";","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"    private String dontForgetEventName \u003d \"Don\u0027t forget the Event\u0027s name\";","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"    private String dontForgetEventDate \u003d \"Don\u0027t forget the Event\u0027s date\";","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"    private String whichMark \u003d \"Which task do you want me to mark as done?\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"    private String whichUnmark \u003d \"Which task do you want me to mark as undone?\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"    private String whichDelete \u003d \"Which task do you want me to delete?\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"    private String giveNumber \u003d \"You need to give me a number doc!\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"    private String unknown \u003d \"Sorry, I don\u0027t quite understand what you mean by \u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"    private String exitGoodbye \u003d \"Ok then, see ya!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"     * Creates a UserInterface object.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"     * @param memory Memory to interface with.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Rdac0"},"content":"    public UserInterface(Memory memory) {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Rdac0"},"content":"        this.memory \u003d memory;","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Rdac0"},"content":"     * Runs the main loop for UserInterface in CLI.","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"Rdac0"},"content":"     * Not used, but useful for debugging maybe.","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Rdac0"},"content":"    public void uiStart() {","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"Rdac0"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Rdac0"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Rdac0"},"content":"        // First line","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(textGreeting);","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Rdac0"},"content":"        while (isLooping) {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Rdac0"},"content":"            tempString \u003d scanner.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(uiParse(tempString));","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"Rdac0"},"content":"     * Returns Duke\u0027s greeting for GUI.","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"Rdac0"},"content":"     * @return Greeting message.","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"Rdac0"},"content":"    public String guiStart() {","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"Rdac0"},"content":"        return guiGreeting;","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"Rdac0"},"content":"    public boolean getIsLooping() {","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"Rdac0"},"content":"        return isLooping;","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"Rdac0"},"content":"     * Parses user input and executes actions accordingly.","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"Rdac0"},"content":"     * Not to be confused with the Parser class, which parses the save file.","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"Rdac0"},"content":"     * @param tempString Raw input string, probably from the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"Rdac0"},"content":"     * @return Duke\u0027s response upon succeeding or failing to execute the action.","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"Rdac0"},"content":"    public String uiParse(String tempString) {","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"Rdac0"},"content":"        String[] tempStrArray \u003d tempString.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Rdac0"},"content":"        String retStr;","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Rdac0"},"content":"        switch (tempStrArray[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Rdac0"},"content":"        case \"\":","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Rdac0"},"content":"            return nothing;","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Rdac0"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Rdac0"},"content":"            memory.parseUpdateAll();","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Rdac0"},"content":"            isLooping \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Rdac0"},"content":"            return saving + \"\\n\" + exitGoodbye;","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Rdac0"},"content":"        case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Rdac0"},"content":"            return memory.listAll();","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"Rdac0"},"content":"        case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"Rdac0"},"content":"                return specific + tryFind;","lastModifiedDate":"2022-02-03"},{"lineNumber":126,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"Rdac0"},"content":"                //Empty to-do","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray[1].equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"Rdac0"},"content":"                    return specific + tryFind;","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"Rdac0"},"content":"                    return memory.findAll(tempStrArray[1]);","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"Rdac0"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"Rdac0"},"content":"                return specific + tryTodo;","lastModifiedDate":"2022-02-03"},{"lineNumber":138,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"Rdac0"},"content":"                //Empty to-do","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray[1].equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"Rdac0"},"content":"                    return specific + tryTodo;","lastModifiedDate":"2022-02-03"},{"lineNumber":142,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"Rdac0"},"content":"                    retStr \u003d memory.addTask(tempStrArray[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Rdac0"},"content":"                    return retStr;","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"Rdac0"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"Rdac0"},"content":"                return specific + tryDeadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"Rdac0"},"content":"                String[] tempDeadArray \u003d tempStrArray[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"Rdac0"},"content":"                if (tempDeadArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"Rdac0"},"content":"                    return specific + tryDeadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":156,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"Rdac0"},"content":"                    if (tempDeadArray[0].equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"Rdac0"},"content":"                        return specific + dontForgetTaskName;","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"Rdac0"},"content":"                    } else if (tempDeadArray[1].equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"Rdac0"},"content":"                        return specific + dontForgetTaskDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":161,"author":{"gitId":"Rdac0"},"content":"                    } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"Rdac0"},"content":"                        retStr \u003d memory.addDeadline(tempDeadArray[0], tempDeadArray[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"Rdac0"},"content":"                        return retStr;","lastModifiedDate":"2022-02-03"},{"lineNumber":164,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"Rdac0"},"content":"        case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"Rdac0"},"content":"                return specific + tryEvent;","lastModifiedDate":"2022-02-03"},{"lineNumber":171,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"Rdac0"},"content":"                String[] tempEventArray \u003d tempStrArray[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"Rdac0"},"content":"                if (tempEventArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"Rdac0"},"content":"                    return specific + tryEvent;","lastModifiedDate":"2022-02-03"},{"lineNumber":176,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"Rdac0"},"content":"                    if (tempEventArray[0].equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"Rdac0"},"content":"                        return specific + dontForgetEventName;","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"Rdac0"},"content":"                    } else if (tempEventArray[1].equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"Rdac0"},"content":"                        return specific + dontForgetEventDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":181,"author":{"gitId":"Rdac0"},"content":"                    } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"Rdac0"},"content":"                        retStr \u003d memory.addEvent(tempEventArray[0], tempEventArray[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"Rdac0"},"content":"                        return retStr;","lastModifiedDate":"2022-02-03"},{"lineNumber":184,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"Rdac0"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"Rdac0"},"content":"                return specific + whichMark + tryMark;","lastModifiedDate":"2022-02-03"},{"lineNumber":191,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"Rdac0"},"content":"                String testString \u003d tempStrArray[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":194,"author":{"gitId":"Rdac0"},"content":"                // Test if single number after \u0027mark\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":195,"author":{"gitId":"Rdac0"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":196,"author":{"gitId":"Rdac0"},"content":"                    int address \u003d Integer.parseInt(testString);","lastModifiedDate":"2022-01-26"},{"lineNumber":197,"author":{"gitId":"Rdac0"},"content":"                    return memory.setDone(address);","lastModifiedDate":"2022-02-03"},{"lineNumber":198,"author":{"gitId":"Rdac0"},"content":"                } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"Rdac0"},"content":"                    return giveNumber + tryMark;","lastModifiedDate":"2022-02-03"},{"lineNumber":200,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"Rdac0"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"Rdac0"},"content":"                return specific + whichUnmark + tryUnmark;","lastModifiedDate":"2022-02-03"},{"lineNumber":206,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"Rdac0"},"content":"                String testString \u003d tempStrArray[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"Rdac0"},"content":"                // Test if single number after \u0027unmark\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"Rdac0"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"Rdac0"},"content":"                    int address \u003d Integer.parseInt(testString);","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"Rdac0"},"content":"                    return memory.setUndone(address);","lastModifiedDate":"2022-02-03"},{"lineNumber":213,"author":{"gitId":"Rdac0"},"content":"                } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":214,"author":{"gitId":"Rdac0"},"content":"                    return giveNumber + tryUnmark;","lastModifiedDate":"2022-02-03"},{"lineNumber":215,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":217,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":218,"author":{"gitId":"Rdac0"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":219,"author":{"gitId":"Rdac0"},"content":"            if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":220,"author":{"gitId":"Rdac0"},"content":"                return specific + whichDelete + tryDelete;","lastModifiedDate":"2022-02-03"},{"lineNumber":221,"author":{"gitId":"Rdac0"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":222,"author":{"gitId":"Rdac0"},"content":"                String testString \u003d tempStrArray[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":223,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"Rdac0"},"content":"                // Test if single number after \u0027delete\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":225,"author":{"gitId":"Rdac0"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":226,"author":{"gitId":"Rdac0"},"content":"                    int address \u003d Integer.parseInt(testString);","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"Rdac0"},"content":"                    return memory.deleteTask(address);","lastModifiedDate":"2022-02-03"},{"lineNumber":228,"author":{"gitId":"Rdac0"},"content":"                } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"Rdac0"},"content":"                    return giveNumber + tryDelete;","lastModifiedDate":"2022-02-03"},{"lineNumber":230,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":231,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":232,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"Rdac0"},"content":"        // If input is unexpected","lastModifiedDate":"2022-01-26"},{"lineNumber":234,"author":{"gitId":"Rdac0"},"content":"        default:","lastModifiedDate":"2022-01-26"},{"lineNumber":235,"author":{"gitId":"Rdac0"},"content":"            return unknown + tempStrArray[0] + \"\u0027\";","lastModifiedDate":"2022-02-03"},{"lineNumber":236,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":238,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Rdac0":238}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"    protected void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Rdac0":61}},{"path":"src/main/java/duke/gui/GuiDukeInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import duke.UserInterface;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":" * Interfaces MainWindow to Duke\u0027s command processing logic.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"public class GuiDukeInterface {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"    private UserInterface userInterface;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"    public GuiDukeInterface(UserInterface ui) {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"        userInterface \u003d ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"     * Returns Duke\u0027s greeting.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"     * @return String of Duke\u0027s greeting.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    protected String handleGuiStart() {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"        return userInterface.guiStart();","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"     * Returns appropriate String response from UserInterface class.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"     * @param input Raw text input from user.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"     * @return Duke\u0027s response.","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"        return userInterface.uiParse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Rdac0":34}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import duke.Memory;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"import duke.UserInterface;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    private Memory memory \u003d new Memory();","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    private UserInterface ui \u003d new UserInterface(memory);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    private GuiDukeInterface guiDukeInterface \u003d new GuiDukeInterface(ui);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"            // Setup Disk","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"            memory.setup();","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"            // Setup GUI","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"            stage.setTitle(\"Duke Duder\");","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRenderer(guiDukeInterface);","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().handleGuiStart();","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Rdac0":42}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    private GuiDukeInterface guiDukeInterface;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"    public void setRenderer(GuiDukeInterface r) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"        guiDukeInterface \u003d r;","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"        String response \u003d guiDukeInterface.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"    protected void handleGuiStart() {","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"                DialogBox.getDukeDialog(guiDukeInterface.handleGuiStart(), dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Rdac0":58}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * The Deadline class extends the Task class by adding a due time.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"    private LocalDate time;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"     * @param time The due time of the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    public Deadline(String name, String time) throws DateTimeParseException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"        return time;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"     * Returns a formatted String representation of this Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"        String mark;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[X] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[ ] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"        return \"[D]\" + mark + getName()","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"                + \" (by: \" + this.time.format(formatter) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * The Event class extends the Task class by adding an event time.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"    private LocalDate time;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"     * @param time The time of the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    public Event(String name, String time) throws DateTimeParseException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"        return time;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"     * Returns a formatted String representation of this Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"        String mark;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[X] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[ ] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"        return \"[E]\" + mark + getName()","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"                + \" (at: \" + this.time.format(formatter) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":" * The Task class handles the interaction and form of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"    private String name;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"     * @param text The name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    public Task(String text) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"        this.name \u003d text;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"     * Returns null. Only here to be inherited.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"     * Should never be called.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"     * @return null.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"        return null;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"    public String getName() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"        return name;","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        return isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"     * Sets the task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"     * Sets the task as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"     * Checks if specified keyword is in the Task name.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"     * @param text Specifying keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"     * @return True if keyword found, false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Rdac0"},"content":"    public boolean isFoundInName(String text) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Rdac0"},"content":"        if (name.contains(text)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Rdac0"},"content":"            return true;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Rdac0"},"content":"            return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Rdac0"},"content":"     * Returns a formatted String representation of this Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Rdac0"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Rdac0"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Rdac0"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"Rdac0"},"content":"        String mark;","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"Rdac0"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[X] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[ ] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Rdac0"},"content":"        return \"[T]\" + mark + this.name;","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":85}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Rdac0":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Rdac0":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":" * The DeadlineTest class tests the functionality of the Deadline class.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"    private Deadline deadline \u003d new Deadline(\"test\", \"2000-01-01\");","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"     * Tests getName functionality.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    public void getName() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"        assertEquals(\"test\", deadline.getName());","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"     * Tests getTime functionality. should return a LocalDate","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"    public void getTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"        assertEquals(LocalDate.parse(\"2000-01-01\"), deadline.getTime());","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"     * Tests whether Deadline accepts incorrect format.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"     * It should throw an exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"    public void invalidDate_wrongFormat_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"            deadline \u003d new Deadline(\"test2\", \"02-12-2000\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"            // fail","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"            assertEquals(1, 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"            // pass","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"            assertEquals(2, 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Rdac0":49}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":" * The TaskTest class tests the functionality of the Task class.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"    private Task task \u003d new Task(\"test\");","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"     * DummyTest, always passes.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"     * Tests getName functionality.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    public void getName() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"        assertEquals(\"test\", task.getName());","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"     * Tests the functionality of getTime.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"     * It shouldn\u0027t cause an error but will return null,","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"     * as Tasks don\u0027t have time.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"     * Normally, Task.getTime() shouldn\u0027t be called.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"    public void getTime_nullReturn() {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        assertEquals(null, task.getTime());","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Rdac0":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"todo Task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"deadline Task 2","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"deadline Task 2 /by 8 pm","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"event Event 3 /at","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"event  /at 4 pm, Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"event Event 3 /at 4 pm, Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"mark","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"mark task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"list please","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"delete","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"delete 4","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"pause","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":2,"-":21}}]
