[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":" * The Deadline class extends the Task class by adding a due time.","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"    private String time;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"     * @param time The due time of the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    public Deadline(String name, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"        String mark;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[X] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[ ] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"        return \"[D]\" + mark + getName() +","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"                \" (by: \" + this.time + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * Duke is a simple virtual assistant typically used","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" * to teach students about programming.","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"     * Runs Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"     * @param args Unused.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        String nothing \u003d \"I can\u0027t read your mind, doc! Not yet, anyway.\";","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"        String specific \u003d \"You\u0027re gonna need to be more specific.\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"        String tryTodo \u003d \"Try \u0027todo An exciting human task\u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"        String tryDeadline \u003d \"Try \u0027deadline A task /by Sunday\u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"        String tryEvent \u003d \"Try \u0027event An event /at 7PM\u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"        String tryMark \u003d \"Try \u0027mark 2\u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"        String tryUnmark \u003d \"Try \u0027unmark 1\u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"        String tryDelete \u003d \"Try \u0027delete 3\u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"        String unknown \u003d \"Sorry, I don\u0027t quite understand what you mean by \u0027\";","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"        // Create new variables","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"        String tempString;","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"        Echo echo \u003d new Echo();","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        Memory memory \u003d new Memory();","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"        boolean looping \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"Heya! I\u0027m Duke!\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"                \"What can I do for ya?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"        // While loop","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"        while(looping) {","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"            tempString \u003d scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"            String[] tempStrArray \u003d tempString.split(\" \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"            switch (tempStrArray[0]) {","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"            case \"\":","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"                echo.echoString(nothing);","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"                looping \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"            case \"list\":","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"                memory.listAll();","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"Rdac0"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"Rdac0"},"content":"                    echo.echoString(specific + tryTodo);","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"Rdac0"},"content":"                    //Empty to-do","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"Rdac0"},"content":"                    if (tempStrArray[1] \u003d\u003d \"\") {","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"Rdac0"},"content":"                        echo.echoString(specific + tryTodo);","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"Rdac0"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"Rdac0"},"content":"                            memory.addTask(tempStrArray[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"Rdac0"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"Rdac0"},"content":"                    echo.echoString(specific + tryDeadline);","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"Rdac0"},"content":"                    String[] tempDeadArray \u003d tempStrArray[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Rdac0"},"content":"                    if (tempDeadArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Rdac0"},"content":"                        echo.echoString(specific + tryDeadline);","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Rdac0"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Rdac0"},"content":"                        if (tempDeadArray[0].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"Rdac0"},"content":"                            echo.echoString(specific + \"Don\u0027t forget the task\u0027s name\");","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"Rdac0"},"content":"                        } else if (tempDeadArray[1].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"Rdac0"},"content":"                            echo.echoString(specific + \"Don\u0027t forget the task\u0027s deadline\");","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"Rdac0"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"Rdac0"},"content":"                            memory.addDeadline(tempDeadArray[0], tempDeadArray[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"Rdac0"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"Rdac0"},"content":"            case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"Rdac0"},"content":"                    echo.echoString(specific + tryEvent);","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"Rdac0"},"content":"                    String[] tempEventArray \u003d tempStrArray[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"Rdac0"},"content":"                    if (tempEventArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"Rdac0"},"content":"                        echo.echoString(specific + tryEvent);","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"Rdac0"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"Rdac0"},"content":"                        if (tempEventArray[0].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"Rdac0"},"content":"                            echo.echoString(specific + \"Don\u0027t forget the event\u0027s name\");","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"Rdac0"},"content":"                        } else if (tempEventArray[1].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"Rdac0"},"content":"                            echo.echoString(specific + \"Don\u0027t forget the event\u0027s time\");","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"Rdac0"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"Rdac0"},"content":"                            memory.addEvent(tempEventArray[0], tempEventArray[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"Rdac0"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"Rdac0"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"Rdac0"},"content":"                    echo.echoString(specific + \"Which task do you want me to mark as done?\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"Rdac0"},"content":"                            tryMark);","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"Rdac0"},"content":"                    String testString \u003d tempStrArray[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"Rdac0"},"content":"                    // Test if single number after \u0027mark\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"Rdac0"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"Rdac0"},"content":"                        int address \u003d Integer.parseInt(testString);","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"Rdac0"},"content":"                        memory.setDone(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"Rdac0"},"content":"                    catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"Rdac0"},"content":"                        echo.echoString(\"You need to give me a number doc!\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"Rdac0"},"content":"                                tryMark);","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"Rdac0"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"Rdac0"},"content":"                    echo.echoString(specific + \"Which task do you want me to mark as undone?\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"Rdac0"},"content":"                            tryUnmark);","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"Rdac0"},"content":"                    String testString \u003d tempStrArray[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"Rdac0"},"content":"                    // Test if single number after \u0027unmark\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"Rdac0"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"Rdac0"},"content":"                        int address \u003d Integer.parseInt(testString);","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"Rdac0"},"content":"                        memory.setUndone(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"Rdac0"},"content":"                    catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"Rdac0"},"content":"                        echo.echoString(\"You need to give me a number doc!\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"Rdac0"},"content":"                                tryUnmark);","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"Rdac0"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"Rdac0"},"content":"                if (tempStrArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"Rdac0"},"content":"                    echo.echoString(specific + \"Which task do you want me to delete?\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"Rdac0"},"content":"                            tryDelete);","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"Rdac0"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"Rdac0"},"content":"                    String testString \u003d tempStrArray[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"Rdac0"},"content":"                    // Test if single number after \u0027delete\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"Rdac0"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"Rdac0"},"content":"                        int address \u003d Integer.parseInt(testString);","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"Rdac0"},"content":"                        memory.deleteTask(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"Rdac0"},"content":"                    catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"Rdac0"},"content":"                        echo.echoString(\"You need to give me a number doc!\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"Rdac0"},"content":"                                tryDelete);","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"Rdac0"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"Rdac0"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"Rdac0"},"content":"                // If input is unexpected","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"Rdac0"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"Rdac0"},"content":"                echo.echoString(unknown + tempStrArray[0] + \"\u0027\");","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"Rdac0"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":181,"author":{"gitId":"Rdac0"},"content":"        // The last thing Duke says","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"Ok then, see ya!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Rdac0":174,"-":10}},{"path":"src/main/java/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":" * The Echo class is used to automatically format what Duke says.","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"public class Echo {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"     * Creates an Echo object.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"    public Echo() {}","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"     * Prints Duke\u0027s message, formatted.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"     * @param temp String to be printed.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    public void echoString (String temp) {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"        System.out.println(\"  \u003e \" + temp + \"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":" * The Event class extends the Task class by adding an event time.","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"    private String time;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"     * @param time The time of the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"        String mark;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[X] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[ ] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"        return \"[E]\" + mark + getName() +","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"                \" (at: \" + this.time + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":30}},{"path":"src/main/java/Memory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * The Memory class handles the storage and access to available Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"public class Memory {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"    private ArrayList\u003cTask\u003e taskMem;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"    private int size;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"    private Echo echo;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"     * Creates a Memory object.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"    public Memory() {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"        this.taskMem \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"        this.size \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"        this.echo \u003d new Echo();","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"        return size;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"     * Returns the String representation of a Task in Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"     * @param address The address of the Task to request.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"     * @return The String representation of the task requested.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"    public String getString(int address) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"        // Simple error handling, should suffice but will update","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"            return \"Memory address requested out of bounds!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"            return taskMem.get(address).toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"     * Returns a Task in Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"     * @param address The address of the Task to request.","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"     * @return The Task requested.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"    public Task getTask(int address) {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"        return taskMem.get(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Rdac0"},"content":"     * Echoes all Tasks in Memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Rdac0"},"content":"    public void listAll() {","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Rdac0"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"You\u0027ve got nothing to do.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Rdac0"},"content":"            for (int i \u003d 1; i \u003c\u003d size; i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"Rdac0"},"content":"                echo.echoString(i + \". \" + this.getString(i-1));","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Rdac0"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Rdac0"},"content":"     * Adds a Task to memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Task to be made.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Rdac0"},"content":"    public void addTask(String name) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Rdac0"},"content":"        taskMem.add(new Task(name));","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Rdac0"},"content":"        size++;","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"added task: \" + getString(size - 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Rdac0"},"content":"     * Adds a Deadline to memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Deadline to be made.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Rdac0"},"content":"     * @param time The due time of the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Rdac0"},"content":"    public void addDeadline(String name, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"Rdac0"},"content":"        taskMem.add(new Deadline(name, time));","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"Rdac0"},"content":"        size++;","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"added deadline: \" + getString(size - 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Rdac0"},"content":"     * Adds an Event to memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Rdac0"},"content":"     * @param name The name of the Event to be made.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Rdac0"},"content":"     * @param time The time of the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"Rdac0"},"content":"    public void addEvent(String name, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"Rdac0"},"content":"        taskMem.add(new Event(name, time));","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"Rdac0"},"content":"        size++;","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"Rdac0"},"content":"        echo.echoString(\"added event: \" + getString(size - 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Rdac0"},"content":"     * Sets a Task in Memory as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Rdac0"},"content":"     * @param fakeAddress The address of the Task to request, as shown to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Rdac0"},"content":"    public void setDone(int fakeAddress) {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"Rdac0"},"content":"        int address \u003d fakeAddress - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"Memory address requested out of bounds!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"Rdac0"},"content":"            getTask(address).setDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"Cool! You\u0027ve done this task:\\n  \" +","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"Rdac0"},"content":"                    getString(address));","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Rdac0"},"content":"     * Sets a Task in Memory as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Rdac0"},"content":"     * @param fakeAddress The address of the Task to request, as shown to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Rdac0"},"content":"    public void setUndone(int fakeAddress) {","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"Rdac0"},"content":"        int address \u003d fakeAddress - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"Memory address requested out of bounds!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"Rdac0"},"content":"            getTask(address).setUndone();","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"This task is now undone:\\n  \" +","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"Rdac0"},"content":"                    getString(address));","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"Rdac0"},"content":"     * Removes a Task from memory.","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"Rdac0"},"content":"     * @param fakeAddress The address of the Task to request, as shown to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"Rdac0"},"content":"    public void deleteTask(int fakeAddress) {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"Rdac0"},"content":"        int address \u003d fakeAddress - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"Rdac0"},"content":"        if (address \u003e\u003d size || address \u003c 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"Memory address requested out of bounds!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"Rdac0"},"content":"            echo.echoString(\"removed: \" + getString(address));","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"Rdac0"},"content":"            taskMem.remove(address);","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"Rdac0"},"content":"            size--;","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":147}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":" * The Task class handles the interaction and form of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":" * @author Rdac0","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"    private String name;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"    private boolean done;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"     * @param text The name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"    public Task(String text) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"        this.name \u003d text;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"    public String getName() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"        return name;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Rdac0"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Rdac0"},"content":"        return done;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Rdac0"},"content":"     * Sets the task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Rdac0"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Rdac0"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Rdac0"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Rdac0"},"content":"     * Sets the task as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Rdac0"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Rdac0"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Rdac0"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Rdac0"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Rdac0"},"content":"        String mark;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"Rdac0"},"content":"        if (this.done) {","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[X] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Rdac0"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Rdac0"},"content":"            mark \u003d \"[ ] \";","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"Rdac0"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"Rdac0"},"content":"        return \"[T]\" + mark + this.name;","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"Rdac0"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"Rdac0"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rdac0"},"content":"task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Rdac0"},"content":"todo Task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Rdac0"},"content":"deadline Task 2","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Rdac0"},"content":"deadline Task 2 /by 8 pm","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Rdac0"},"content":"event Event 3 /at","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Rdac0"},"content":"event  /at 4 pm, Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Rdac0"},"content":"event Event 3 /at 4 pm, Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Rdac0"},"content":"mark","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Rdac0"},"content":"mark task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Rdac0"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Rdac0"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Rdac0"},"content":"unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Rdac0"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Rdac0"},"content":"list please","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Rdac0"},"content":"delete","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Rdac0"},"content":"delete 4","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Rdac0"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Rdac0"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Rdac0"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Rdac0"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Rdac0"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Rdac0"},"content":"pause","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Rdac0":2,"-":21}}]
