[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":" * Represents a Deadline which is a subclass of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":" * Includes a dueDate attribute. Overrides toString() from Task","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"    private String dueDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"    public Deadline(String name, String time) {super(name); this.dueDate \u003d time;}","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"     * @override","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"     * @return String of Deadline task, eg [D][X] Deadline (by:XX)","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"    public String toString() { return \"[D]\" + super.toString() + \"(by:\" + this.dueDate + \")\"; }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"brian16600":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"import java.util.Scanner; //import Scanner","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"import java.util.ArrayList; //import ArrayList","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"import java.util.Arrays; //import Arrays","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"        String dukeGreeting \u003d \"Hello! I\u0027m Duke \\nWhat can I do for you?\";","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"        String endMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"        System.out.println(dukeGreeting);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"        InputHandler inputHandler \u003d new InputHandler();","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"        boolean isChatEnded \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"        while (!isChatEnded) {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"                isChatEnded \u003d inputHandler.handleInput(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"        System.out.println(endMessage);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brian16600":31,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"    private String errorMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"    public DukeException (String errorMessage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"     * @override","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"     * @return String errorMessage","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"    public String getMessage() {return this.errorMessage;}","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"brian16600":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":" * Represents a Event which is a subclass of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":" * Overrides toString() from Task","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"    private String dueDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"    public Event (String name, String time) { super(name); this.dueDate \u003d time;}","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"     * @override","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"     * @return String of Event task, eg: [E][X] Event","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"    public String toString() { return \"[E]\" + super.toString() + \"(at:\" + this.dueDate + \")\"; }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"brian16600":18}},{"path":"src/main/java/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":" * Handles input in main in Duke.java. Receives String from Scanner in main","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":" * Processes the input into 7 categories: Todo, Event, Deadline, list, mark, unmark, bye and throws error","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"public class InputHandler {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"    private ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"    public InputHandler() {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"        this.arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"     * @param input String input from main in Duke.java, from user input","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"     * @return boolean representing isChatEnded variable in main. If \"bye\" command is given, a true boolean is returned, else false is returned","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"     * @throws DukeException Invalid input types, or unrecognisable commands","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"    public boolean handleInput(String input) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"        String inputCommand \u003d splitInput[0];","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"        switch (inputCommand) {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003e 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"                    String[] nameArray \u003d Arrays.copyOfRange(splitInput, 1, splitInput.length);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"brian16600"},"content":"                    String name \u003d String.join(\" \", nameArray);","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"                    Todo newTodo \u003d new Todo(name);","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"                    arr.add(newTodo);","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"                    printAddTaskMessage(newTodo);","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\":( OOPS!!! The description of a todo cannot be empty. Correct usage: todo [task]\");","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"            case \"event\":","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003e 3) {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"                    String[] stringArrayExcludingEvent \u003d Arrays.copyOfRange(splitInput, 1, splitInput.length);","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"                    String stringExcludingEvent \u003d String.join(\" \", stringArrayExcludingEvent);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"                    String[] nameAndTimeArray \u003d stringExcludingEvent.split(\"/at\");","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"                    String name \u003d nameAndTimeArray[0];","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"                    String time \u003d nameAndTimeArray[1];","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"                    Event newEvent \u003d new Event(name, time);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"                    arr.add(newEvent);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"                    printAddTaskMessage(newEvent);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\":( OOPS!!! The description of a event cannot be empty. Correct usage: event [task] /at [time]\");","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"brian16600"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003e 3) {","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"brian16600"},"content":"                    String[] stringArrayExcludingDeadline \u003d Arrays.copyOfRange(splitInput, 1, splitInput.length);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"brian16600"},"content":"                    String stringExcludingDeadline \u003d String.join(\" \", stringArrayExcludingDeadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"brian16600"},"content":"                    String[] nameAndTimeArray \u003d stringExcludingDeadline.split(\"/by\");","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"brian16600"},"content":"                    String name \u003d nameAndTimeArray[0];","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"brian16600"},"content":"                    String time \u003d nameAndTimeArray[1];","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"brian16600"},"content":"                    Deadline newDeadline \u003d new Deadline(name, time);","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"brian16600"},"content":"                    arr.add(newDeadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"brian16600"},"content":"                    printAddTaskMessage(newDeadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\":( OOPS!!! The description of a deadline cannot be empty. Correct usage: deadline [task] /by [time]\");","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"brian16600"},"content":"            case \"list\":","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"brian16600"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"brian16600"},"content":"                    int i \u003d 0;","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"brian16600"},"content":"                    for (Task item : arr) {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"brian16600"},"content":"                        i +\u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"brian16600"},"content":"                        if (item.isMark()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"brian16600"},"content":"                            System.out.println(i + \". \" + item);","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"                        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"                            System.out.println(i + \". \" + item);","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"                        }","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"brian16600"},"content":"                    }","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\"Wrong usage of list! Correct usage: list\");","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"brian16600"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"brian16600"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"brian16600"},"content":"                    int idx \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"                    Task taskToBeMarked \u003d arr.get(idx);","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"                    taskToBeMarked.markTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\"Wrong usage of mark! Correct usage: mark [index]\");","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"brian16600"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"brian16600"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"brian16600"},"content":"                    int idx \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"                    Task taskToBeUnmarked \u003d arr.get(idx);","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"brian16600"},"content":"                    taskToBeUnmarked.unmarkTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\"Wrong usage of unmark! Correct usage: unmark [index]\");","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"brian16600"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"brian16600"},"content":"                if (splitInput.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"brian16600"},"content":"                    int idx \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"brian16600"},"content":"                    Task taskToBeDeleted \u003d arr.get(idx);","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"brian16600"},"content":"                    arr.remove(idx);","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"brian16600"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskToBeDeleted + \"\\nNow you have \" + arr.size() + \" tasks in the list\");","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"brian16600"},"content":"                    return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"brian16600"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"brian16600"},"content":"                    throw new DukeException(\"Wrong usage of delete! Correct usage: delete [index]\");","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"brian16600"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"brian16600"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"brian16600"},"content":"                return true;","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"brian16600"},"content":"            default:","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"brian16600"},"content":"                throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means! Possible commands: todo [task], event [task] /at [time],\"","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"brian16600"},"content":"                + \" deadline [task] /by [time], mark [index], unmark [index], delete [index], bye\");","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"brian16600"},"content":"     * Prints out the task name that has been added as well as the number of tasks in the list","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"brian16600"},"content":"     * @param task The task that has been added","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"brian16600"},"content":"    public void printAddTaskMessage(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"brian16600"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + arr.size() + \" tasks in the list.\" );","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"brian16600":127}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":" * Represents a Task. Contains a Task constructor, two methods to mark and unmark tasks, toString() method as well as a isMark() method to check if Task is marked","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"    private boolean mark;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"    public String name;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"     * Constructor","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"     * @param name name of the task","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"    public Task (String name) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"        this.mark \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"     * markTask as done","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"    public void markTask () {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"        String markedMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"brian16600"},"content":"        this.mark \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"        System.out.println(markedMessage + \"  \" + this);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"     * unmarkTask","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"        String unmarkedMessage \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"        this.mark \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"        System.out.println(unmarkedMessage + \"  \" + this);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"     * @return boolean on whether task is marked","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"    public boolean isMark() {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"        return this.mark;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"brian16600"},"content":"     * @override","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"     * @return String version of task, with marked and name. E.g. [X] Task","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"brian16600"},"content":"        if (this.mark) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"brian16600"},"content":"            String marked \u003d \"[X] \";","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"brian16600"},"content":"            return marked + this.name;","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"brian16600"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"brian16600"},"content":"            String unmarked \u003d \"[ ] \";","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"brian16600"},"content":"            return unmarked + this.name;","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"brian16600":60}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":" * Represents a Todo which is a subclass of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":" * Includes a dueDate attribute. Overrides toString() from Task","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"    public Todo (String name) {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"        super(name);","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"     * @override","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"     * @return String of Todo task, eg: [T][X] Todo","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"brian16600":23}}]
