[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"1. After that, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"jltham":1,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    testImplementation(\u0027org.junit.platform:junit-platform-launcher:1.5.2\u0027)","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.6.0\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"jar {","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    manifest {","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        attributes(","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"        )","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"javafx {","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    version \u003d \"11\"","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,  \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    configFile \u003d file(\u0027./config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltham":18,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"# **User Guide** _for Jin Lin\u0027s Duke_","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"#### _Duke manages your list of tasks for you. Be it to-dos, deadlines or events, Duke\u0027s got you._","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"## **Capabilities**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"### Track your list of tasks with their details!","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"- Note down the tasks that you need to do and the relevant date and time applicable to them!","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"  The types of tasks supported are:","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"  - To-dos _(with no date time details)_","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"  - Deadlines _(with details on the date and time of the deadline)_","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"  - Events (with details on the date and time of the event)","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"- Manage the individual tasks in the list of tasks through the following actions:","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"  - Marking the task as completed","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"  - Updating the task description","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"  - Updating the task date and line _(if applicable)_","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"  - Deleting the task","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"- Store the tasks in a local file to be loaded the next time the application is launched.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"## **Usage**","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"### **`list` - shows the list of tasks**","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"_Prints out the list of tasks recorded. The message is limited to the first 4 tasks recorded._","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"`list`","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"A message listing the list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"If there are no tasks, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"There are currently no elements in the list!","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"otherwise, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"1. Todo - Cut hair","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"2. Deadline - CS2103/T iP (by Feb 18 2022 11.59pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"3. ...","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"### **`todo (description)` - logs a new To-do**","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"_Records a new To-do task to the list of tasks._","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"`todo Cut hair`","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"A new To-do task to be added to the list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"Todo - Cut hair","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"1. ...","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"2. Todo - Cut Hair","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"### **`deadline (description) /by (date) (time)` - logs a new Deadline**","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"_Records a new Deadline task to the list of tasks._","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"_Date input has to be in the format: yyyy-mm-dd e.g. 2022-04-18._","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"_Time input has to be in the 24-hour format: hh:mm e.g. 19:33._","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"`deadline Homework Submission /by 2022-01-13 23:59`","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"A new Deadline task to be added to the list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"jltham"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"jltham"},"content":"Deadline - Homework Submission (by Jan 13 2022 11.59pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"jltham"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"jltham"},"content":"1. Deadline - Homework Submission (by Jan 13 2022 11.59pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"jltham"},"content":"### **`event (description) /at (date) (time)` - logs a new Event**","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"jltham"},"content":"_Records a new Event task to the list of tasks._","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"jltham"},"content":"_Date input has to be in the format: yyyy-mm-dd e.g. 2022-04-18._","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"jltham"},"content":"_Time input has to be in the 24-hour format: hh:mm e.g. 19:33._","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"jltham"},"content":"`event Module Briefing /at 2022-02-21 09:00`","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"jltham"},"content":"A new Event task to be added to the list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"jltham"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"jltham"},"content":"Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"jltham"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":147,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"jltham"},"content":"1. Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"jltham"},"content":"### **`delete (index)` - deletes the indexed task**","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"jltham"},"content":"_Deletes the task at the given index._","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"jltham"},"content":"`delete 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"jltham"},"content":"The task at index 1 will be deleted.","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":170,"author":{"gitId":"jltham"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-16"},{"lineNumber":171,"author":{"gitId":"jltham"},"content":"Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":172,"author":{"gitId":"jltham"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":173,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":174,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":175,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":176,"author":{"gitId":"jltham"},"content":"There are currently no elements in the list!","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":178,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":179,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":180,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":181,"author":{"gitId":"jltham"},"content":"### **`mark (index)` - marks the indexed task as done**","lastModifiedDate":"2022-02-16"},{"lineNumber":182,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":183,"author":{"gitId":"jltham"},"content":"_Marks the task at the given index as Done._","lastModifiedDate":"2022-02-16"},{"lineNumber":184,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":185,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":186,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":187,"author":{"gitId":"jltham"},"content":"`mark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":188,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":189,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":190,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":191,"author":{"gitId":"jltham"},"content":"The task at index 1 will be marked as done.","lastModifiedDate":"2022-02-16"},{"lineNumber":192,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":193,"author":{"gitId":"jltham"},"content":"If the task has been previously marked as done, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":194,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":195,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":196,"author":{"gitId":"jltham"},"content":"The task is already marked.","lastModifiedDate":"2022-02-16"},{"lineNumber":197,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":198,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":199,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":200,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":201,"author":{"gitId":"jltham"},"content":"1. !!!DONE!!! Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":202,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":203,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":204,"author":{"gitId":"jltham"},"content":"else, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":205,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":206,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":207,"author":{"gitId":"jltham"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-16"},{"lineNumber":208,"author":{"gitId":"jltham"},"content":"!!!DONE!!! Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":209,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":210,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":211,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":212,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":213,"author":{"gitId":"jltham"},"content":"1. !!!DONE!!! Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":214,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":215,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":216,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":217,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":218,"author":{"gitId":"jltham"},"content":"### **`unmark (index)` - marks the indexed task as not yet done**","lastModifiedDate":"2022-02-16"},{"lineNumber":219,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":220,"author":{"gitId":"jltham"},"content":"_Marks the task at the given index as not yet done._","lastModifiedDate":"2022-02-16"},{"lineNumber":221,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":222,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":223,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":224,"author":{"gitId":"jltham"},"content":"`unmark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":225,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":226,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":227,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":228,"author":{"gitId":"jltham"},"content":"The task at index 1 will be marked as not yet done.","lastModifiedDate":"2022-02-16"},{"lineNumber":229,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":230,"author":{"gitId":"jltham"},"content":"If the task has been previously marked as not yet done, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":231,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":232,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":233,"author":{"gitId":"jltham"},"content":"The task is already unmarked.","lastModifiedDate":"2022-02-16"},{"lineNumber":234,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":235,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":236,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":237,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":238,"author":{"gitId":"jltham"},"content":"1. Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":239,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":240,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":241,"author":{"gitId":"jltham"},"content":"else, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":242,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":243,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":244,"author":{"gitId":"jltham"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-16"},{"lineNumber":245,"author":{"gitId":"jltham"},"content":"Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":246,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":247,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":248,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":249,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":250,"author":{"gitId":"jltham"},"content":"1. Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":251,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":252,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":253,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":254,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":255,"author":{"gitId":"jltham"},"content":"### **`clone (index)` - clones the indexed task**","lastModifiedDate":"2022-02-16"},{"lineNumber":256,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":257,"author":{"gitId":"jltham"},"content":"_Clones the task at the given index._","lastModifiedDate":"2022-02-16"},{"lineNumber":258,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":259,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":260,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":261,"author":{"gitId":"jltham"},"content":"`clone 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":262,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":263,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":264,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":265,"author":{"gitId":"jltham"},"content":"The task at index 1 will be cloned.","lastModifiedDate":"2022-02-16"},{"lineNumber":266,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":267,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":268,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":269,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":270,"author":{"gitId":"jltham"},"content":"I have cloned the task and added it to the end of the task list! This is the cloned task:","lastModifiedDate":"2022-02-16"},{"lineNumber":271,"author":{"gitId":"jltham"},"content":"Todo - Walk the dog","lastModifiedDate":"2022-02-16"},{"lineNumber":272,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":273,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":274,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":275,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":276,"author":{"gitId":"jltham"},"content":"1. Todo - Walk the dog","lastModifiedDate":"2022-02-16"},{"lineNumber":277,"author":{"gitId":"jltham"},"content":"2. Event - Module Briefing (at Feb 21 2022 09.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":278,"author":{"gitId":"jltham"},"content":"3. Todo - Walk the dog","lastModifiedDate":"2022-02-16"},{"lineNumber":279,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":280,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":281,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":282,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":283,"author":{"gitId":"jltham"},"content":"### **`update (what to update) (index) (new value)` - updates the indexed task**","lastModifiedDate":"2022-02-16"},{"lineNumber":284,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":285,"author":{"gitId":"jltham"},"content":"_Updates the specified detail of the task at the given index to the new value._","lastModifiedDate":"2022-02-16"},{"lineNumber":286,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":287,"author":{"gitId":"jltham"},"content":"_If date is to be updated, new value must follow the format: yyyy-mm-dd e.g. 2019-04-20._","lastModifiedDate":"2022-02-16"},{"lineNumber":288,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":289,"author":{"gitId":"jltham"},"content":"_If time is to be updated, new value must follow the format: hh:mm e.g. 23:59._","lastModifiedDate":"2022-02-16"},{"lineNumber":290,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":291,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":292,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":293,"author":{"gitId":"jltham"},"content":"`update time 1 23:00`","lastModifiedDate":"2022-02-16"},{"lineNumber":294,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":295,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":296,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":297,"author":{"gitId":"jltham"},"content":"The time of the task at index 1 will be updated.","lastModifiedDate":"2022-02-16"},{"lineNumber":298,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":299,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":300,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":301,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":302,"author":{"gitId":"jltham"},"content":"I have updated the task as per your request! This is the updated task:","lastModifiedDate":"2022-02-16"},{"lineNumber":303,"author":{"gitId":"jltham"},"content":"Event - Module Briefing (at Feb 21 2022 11.00pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":304,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":305,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":306,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":307,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":308,"author":{"gitId":"jltham"},"content":"1. Event - Module Briefing (at Feb 21 2022 11.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":309,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":310,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":311,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":312,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":313,"author":{"gitId":"jltham"},"content":"### **`find (keyword)` - searches for keyword**","lastModifiedDate":"2022-02-16"},{"lineNumber":314,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":315,"author":{"gitId":"jltham"},"content":"_Searches the list of tasks for tasks that contains the keyword._","lastModifiedDate":"2022-02-16"},{"lineNumber":316,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":317,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":318,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":319,"author":{"gitId":"jltham"},"content":"`find Bidding`","lastModifiedDate":"2022-02-16"},{"lineNumber":320,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":321,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":322,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":323,"author":{"gitId":"jltham"},"content":"The tasks that contains the keyword will be filtered out.","lastModifiedDate":"2022-02-16"},{"lineNumber":324,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":325,"author":{"gitId":"jltham"},"content":"If there are no tasks that contains the keyword, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":326,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":327,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":328,"author":{"gitId":"jltham"},"content":"There\u0027s nothing that contains the keyword!","lastModifiedDate":"2022-02-16"},{"lineNumber":329,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":330,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":331,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":332,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":333,"author":{"gitId":"jltham"},"content":"1. Event - Module Briefing (at Feb 21 2022 11.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":334,"author":{"gitId":"jltham"},"content":"2. Deadline - Module Bidding (by August 20 2022, 12:00pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":335,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":336,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":337,"author":{"gitId":"jltham"},"content":"else, this will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":338,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":339,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":340,"author":{"gitId":"jltham"},"content":"These are the matching tasks:","lastModifiedDate":"2022-02-16"},{"lineNumber":341,"author":{"gitId":"jltham"},"content":"1. Deadline - Module Bidding (by: Aug 20 2022 12:00pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":342,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":343,"author":{"gitId":"jltham"},"content":"\u003e list","lastModifiedDate":"2022-02-16"},{"lineNumber":344,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":345,"author":{"gitId":"jltham"},"content":"These are the tasks currently stored in the list:","lastModifiedDate":"2022-02-16"},{"lineNumber":346,"author":{"gitId":"jltham"},"content":"1. Event - Module Briefing (at Feb 21 2022 11.00am)","lastModifiedDate":"2022-02-16"},{"lineNumber":347,"author":{"gitId":"jltham"},"content":"2. Deadline - Module Bidding (by Aug 20 2022 12:00pm)","lastModifiedDate":"2022-02-16"},{"lineNumber":348,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":349,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":350,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"},{"lineNumber":351,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":352,"author":{"gitId":"jltham"},"content":"### **`bye` - exits program**","lastModifiedDate":"2022-02-16"},{"lineNumber":353,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":354,"author":{"gitId":"jltham"},"content":"_Exits the program._","lastModifiedDate":"2022-02-16"},{"lineNumber":355,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":356,"author":{"gitId":"jltham"},"content":"#### **Example of usage:**","lastModifiedDate":"2022-02-16"},{"lineNumber":357,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":358,"author":{"gitId":"jltham"},"content":"`bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":359,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":360,"author":{"gitId":"jltham"},"content":"#### **Example outcome:**","lastModifiedDate":"2022-02-16"},{"lineNumber":361,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":362,"author":{"gitId":"jltham"},"content":"A farewell message will be printed.","lastModifiedDate":"2022-02-16"},{"lineNumber":363,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":364,"author":{"gitId":"jltham"},"content":"This will be expected:","lastModifiedDate":"2022-02-16"},{"lineNumber":365,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":366,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":367,"author":{"gitId":"jltham"},"content":"Sayonara!! Hope to see you again soon heh! :-)","lastModifiedDate":"2022-02-16"},{"lineNumber":368,"author":{"gitId":"jltham"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":369,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":370,"author":{"gitId":"jltham"},"content":"#","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"jltham":355,"-":15}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltham":4,"-":85}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Parser;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":" * Duke class is the main class of the program.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\duke.txt\";","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"     * Constructor of Duke that uses a default file path as the specified location of the storage file.","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    public Duke() {","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        storage \u003d new Storage(DEFAULT_FILE_PATH);","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"     * Constructor of Duke that takes in a file path specifying the location of the","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"     * storage file.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"     * @param filePath string specifying location of storage file","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"        assert filePath !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"    public String getResponse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"        assert fullCommand !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"            String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"            return response;","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"            return Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jltham":53,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"public class Launcher {","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"            stage.show();","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":33}},{"path":"src/main/java/duke/admin/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.admin;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.commands.ChangeMarkCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.commands.CloneCommand;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"import duke.commands.UpdateCommand;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":" * Parser class parses the command passed in as a String and represents it as a","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":" * Command that the program can manage.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"public class Parser {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    private static String description;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * Returns the relevent Command object to be executed from the string input.","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * @param fullCommand the command as a String","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * @return Command object that triggers an action from the program based on the","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     *         command","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when command is invalid or improper","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2); //splits command into action and details","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"        String action \u003d splitCommand[0];","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"        boolean descriptionExists \u003d splitCommand.length \u003e 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"        if (descriptionExists) {","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"            description \u003d splitCommand[1];","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        switch (action) {","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"        case \"list\":","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"            if (descriptionExists) {","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"There should not be anything else after list.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"                return new ListCommand();","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"I don\u0027t know what to mark!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"                return new ChangeMarkCommand(index, true);","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"I don\u0027t know what to unmark!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"                return new ChangeMarkCommand(index, false);","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"                return new AddCommand(\"T\", description);","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"                return new AddCommand(\"D\", description);","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"        case \"event\":","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"                return new AddCommand(\"E\", description);","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"I don\u0027t know what to delete!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"        case \"find\":","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"The keyword to search for cannot be empty.\");","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"jltham"},"content":"                return new FindCommand(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"        case \"update\":","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"Improper format to request for an update.\");","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"                return new UpdateCommand(description);","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"        case \"clone\":","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"            if (!(descriptionExists)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"I don\u0027t know which task to clone!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"                return new CloneCommand(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"        default:","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Invalid command :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":108}},{"path":"src/main/java/duke/admin/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.admin;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":" * Storage class manages the storage file and the actions on the storage file.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"public class Storage {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    private static String buffer \u003d \" xxx \";","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    private File storageFile;","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"     * Constructor for Storage that takes in a file path that points to the storage","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * file","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * @param filePath","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"        this.storageFile \u003d new File(filePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"     * Reads the content of the storage file and passes the data to be processed by","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"     * the program.","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"     * @return an array of Strings each representing the tasks stored in the storage","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"     *         file","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when file cannot be found or is","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"     *                       corrupted","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"    public String[] load() throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"            BufferedReader storageFileReader \u003d new BufferedReader(new FileReader(this.storageFile));","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"            String fileContent \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"            String dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"            while (dataLine !\u003d null) {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"                fileContent \u003d fileContent + dataLine + System.lineSeparator();","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"                dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"            String[] tasksArr \u003d fileContent.split(System.lineSeparator());","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"            storageFileReader.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"            return tasksArr;","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"File not found!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Issue reading file!! D:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"     * Reflects the addition of the task in the storage list.","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"     * @param task the task that has just been added to the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when there is an error accessing or","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"     *                       writing to the storage file","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"    public void updateAfterAdd(Task task, String description) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"            int isMarked \u003d task.isDone() ? 1 : 0; // isMarked is the integer representation of task.isDone();","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"            FileWriter storageFileWriter \u003d new FileWriter(storageFile, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"            storageFileWriter.write(task.getType() + buffer + isMarked + buffer + description + \"\\n\");","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"            storageFileWriter.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Cannot update addition in save file!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"jltham"},"content":"     * Updates the storage file after details of tasks have been updated.","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"jltham"},"content":"     * @param typeOfTask type of task that has been updated","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"     * @param typeOfUpdate what details has been updated: description, date or time","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"     * @param index index of task that has been updated","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"     * @param updateValue value to be updated to","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when there is an error accessing or writing to the storage file","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"    public void updateAfterEdits(String typeOfTask, String typeOfUpdate, int index, String updateValue)","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"            throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"            int dataLineCounter \u003d 0; //initializing the counter","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"jltham"},"content":"            BufferedReader storageFileReader \u003d new BufferedReader(new FileReader(storageFile));","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"            String contentToBeWritten \u003d \"\";","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"            String dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"            while (dataLine !\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"                if (dataLineCounter \u003d\u003d index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"                    int startCharIndex \u003d 0;","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"                    if (typeOfTask.equals(\"D\") || typeOfTask.equals(\"E\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"                        switch (typeOfUpdate) {","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"                        case \"description\":","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"                            int numOfCharsBeforeDescription \u003d 12;","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"                            int numOfCharsAfterDescription \u003d 21;","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"                            String prefix \u003d dataLine.substring(startCharIndex, numOfCharsBeforeDescription);","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"                            String suffix \u003d dataLine.substring(dataLine.length() - numOfCharsAfterDescription);","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"                            dataLine \u003d prefix + updateValue + suffix;","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"                            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"                        case \"date\":","lastModifiedDate":"2022-02-12"},{"lineNumber":109,"author":{"gitId":"jltham"},"content":"                            int numOfCharsFromDate \u003d 16;","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"jltham"},"content":"                            int numOfCharsAfterDate \u003d 6;","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"jltham"},"content":"                            int indexOfDate \u003d dataLine.length() - numOfCharsFromDate;","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"jltham"},"content":"                            String dateToBeUpdated \u003d dataLine.substring(indexOfDate,","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"jltham"},"content":"                                    dataLine.length() - numOfCharsAfterDate);","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"jltham"},"content":"                            dataLine \u003d dataLine.replaceFirst(dateToBeUpdated, updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"jltham"},"content":"                            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"jltham"},"content":"                        case \"time\":","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"jltham"},"content":"                            int numOfCharsFromTime \u003d 5;","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"jltham"},"content":"                            String timeToBeUpdated \u003d dataLine.substring(dataLine.length() - numOfCharsFromTime);","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"jltham"},"content":"                            dataLine \u003d dataLine.replaceFirst(timeToBeUpdated, updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"jltham"},"content":"                            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"jltham"},"content":"                        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":126,"author":{"gitId":"jltham"},"content":"                            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":127,"author":{"gitId":"jltham"},"content":"                        }","lastModifiedDate":"2022-02-12"},{"lineNumber":128,"author":{"gitId":"jltham"},"content":"                    } else if (typeOfTask.equals(\"T\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":129,"author":{"gitId":"jltham"},"content":"                        switch (typeOfUpdate) {","lastModifiedDate":"2022-02-12"},{"lineNumber":130,"author":{"gitId":"jltham"},"content":"                        case \"description\":","lastModifiedDate":"2022-02-12"},{"lineNumber":131,"author":{"gitId":"jltham"},"content":"                            int numOfCharsBeforeDescription \u003d 12;","lastModifiedDate":"2022-02-12"},{"lineNumber":132,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":133,"author":{"gitId":"jltham"},"content":"                            String prefix \u003d dataLine.substring(startCharIndex, numOfCharsBeforeDescription);","lastModifiedDate":"2022-02-12"},{"lineNumber":134,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"jltham"},"content":"                            dataLine \u003d prefix + updateValue;","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"jltham"},"content":"                            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":137,"author":{"gitId":"jltham"},"content":"                        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":138,"author":{"gitId":"jltham"},"content":"                            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":139,"author":{"gitId":"jltham"},"content":"                        }","lastModifiedDate":"2022-02-12"},{"lineNumber":140,"author":{"gitId":"jltham"},"content":"                    }","lastModifiedDate":"2022-02-12"},{"lineNumber":141,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":142,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":143,"author":{"gitId":"jltham"},"content":"                contentToBeWritten \u003d contentToBeWritten + dataLine + System.lineSeparator();","lastModifiedDate":"2022-02-12"},{"lineNumber":144,"author":{"gitId":"jltham"},"content":"                dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":145,"author":{"gitId":"jltham"},"content":"                dataLineCounter++;","lastModifiedDate":"2022-02-12"},{"lineNumber":146,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":147,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":148,"author":{"gitId":"jltham"},"content":"            FileWriter storageFileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2022-02-12"},{"lineNumber":149,"author":{"gitId":"jltham"},"content":"            storageFileWriter.write(contentToBeWritten);","lastModifiedDate":"2022-02-12"},{"lineNumber":150,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":151,"author":{"gitId":"jltham"},"content":"            storageFileReader.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":152,"author":{"gitId":"jltham"},"content":"            storageFileWriter.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":153,"author":{"gitId":"jltham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":154,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Save file not found!! :-(\");","lastModifiedDate":"2022-02-12"},{"lineNumber":155,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":156,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Cannot update edits in save file!! D:\");","lastModifiedDate":"2022-02-12"},{"lineNumber":157,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":158,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":159,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":160,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":161,"author":{"gitId":"jltham"},"content":"     * Updates the storage list after a clone action has been performed.","lastModifiedDate":"2022-02-12"},{"lineNumber":162,"author":{"gitId":"jltham"},"content":"     * @param index index of task to be cloned","lastModifiedDate":"2022-02-12"},{"lineNumber":163,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when there is an error accessing or writing to the storage file","lastModifiedDate":"2022-02-12"},{"lineNumber":164,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":165,"author":{"gitId":"jltham"},"content":"    public void updateAfterClone(int index) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"jltham"},"content":"            int dataLineCounter \u003d 0;","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"jltham"},"content":"            BufferedReader storageFileReader \u003d new BufferedReader(new FileReader(storageFile));","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"jltham"},"content":"            String contentToBeWritten \u003d \"\";","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"jltham"},"content":"            String dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":171,"author":{"gitId":"jltham"},"content":"            String clone \u003d \"\";","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"jltham"},"content":"            while (dataLine !\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"jltham"},"content":"                if (dataLineCounter \u003d\u003d index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":175,"author":{"gitId":"jltham"},"content":"                    clone \u003d clone + dataLine;","lastModifiedDate":"2022-02-12"},{"lineNumber":176,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":177,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":178,"author":{"gitId":"jltham"},"content":"                contentToBeWritten \u003d contentToBeWritten + dataLine + System.lineSeparator();","lastModifiedDate":"2022-02-12"},{"lineNumber":179,"author":{"gitId":"jltham"},"content":"                dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":180,"author":{"gitId":"jltham"},"content":"                dataLineCounter++;","lastModifiedDate":"2022-02-12"},{"lineNumber":181,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":182,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"jltham"},"content":"            contentToBeWritten \u003d contentToBeWritten + clone + System.lineSeparator();","lastModifiedDate":"2022-02-12"},{"lineNumber":184,"author":{"gitId":"jltham"},"content":"            FileWriter storageFileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"jltham"},"content":"            storageFileWriter.write(contentToBeWritten);","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"jltham"},"content":"            storageFileReader.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":188,"author":{"gitId":"jltham"},"content":"            storageFileWriter.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":189,"author":{"gitId":"jltham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":190,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Save file not found!! :-(\");","lastModifiedDate":"2022-02-12"},{"lineNumber":191,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":192,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Cannot update clone action in save file!! D:\");","lastModifiedDate":"2022-02-12"},{"lineNumber":193,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":194,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":197,"author":{"gitId":"jltham"},"content":"     * Reflects the deleted task in the storage list.","lastModifiedDate":"2022-02-04"},{"lineNumber":198,"author":{"gitId":"jltham"},"content":"     * @param index the index of the task that has just been deleted","lastModifiedDate":"2022-02-04"},{"lineNumber":199,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when there is an error accessing or","lastModifiedDate":"2022-02-03"},{"lineNumber":200,"author":{"gitId":"jltham"},"content":"     *                       writing to the storage file","lastModifiedDate":"2022-02-03"},{"lineNumber":201,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":202,"author":{"gitId":"jltham"},"content":"    public void updateAfterDelete(int index) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":203,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":204,"author":{"gitId":"jltham"},"content":"            int dataLineCounter \u003d 0; //initializing the counter","lastModifiedDate":"2022-02-11"},{"lineNumber":205,"author":{"gitId":"jltham"},"content":"            BufferedReader storageFileReader \u003d new BufferedReader(new FileReader(storageFile));","lastModifiedDate":"2022-02-04"},{"lineNumber":206,"author":{"gitId":"jltham"},"content":"            String contentToBeWritten \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":207,"author":{"gitId":"jltham"},"content":"            String dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":208,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"jltham"},"content":"            while (dataLine !\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":210,"author":{"gitId":"jltham"},"content":"                if (dataLineCounter !\u003d index) {","lastModifiedDate":"2022-02-04"},{"lineNumber":211,"author":{"gitId":"jltham"},"content":"                    contentToBeWritten \u003d contentToBeWritten + dataLine + System.lineSeparator();","lastModifiedDate":"2022-02-12"},{"lineNumber":212,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":214,"author":{"gitId":"jltham"},"content":"                dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":215,"author":{"gitId":"jltham"},"content":"                dataLineCounter++;","lastModifiedDate":"2022-02-04"},{"lineNumber":216,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":217,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":218,"author":{"gitId":"jltham"},"content":"            FileWriter storageFileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2022-02-04"},{"lineNumber":219,"author":{"gitId":"jltham"},"content":"            storageFileWriter.write(contentToBeWritten);","lastModifiedDate":"2022-02-04"},{"lineNumber":220,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":221,"author":{"gitId":"jltham"},"content":"            storageFileReader.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":222,"author":{"gitId":"jltham"},"content":"            storageFileWriter.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":223,"author":{"gitId":"jltham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":224,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Save file not found!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":225,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":226,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Cannot update deletion in save file!! D:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":227,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":228,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":229,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":230,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":231,"author":{"gitId":"jltham"},"content":"     * Updates the storage file when there has just been a change to whether a task","lastModifiedDate":"2022-02-04"},{"lineNumber":232,"author":{"gitId":"jltham"},"content":"     * has been marked as done or not yet done.","lastModifiedDate":"2022-02-04"},{"lineNumber":233,"author":{"gitId":"jltham"},"content":"     * @param index        index of the task which the action is performed on","lastModifiedDate":"2022-02-04"},{"lineNumber":234,"author":{"gitId":"jltham"},"content":"     * @param toMark true if the action marked the task as done, otherwise","lastModifiedDate":"2022-02-11"},{"lineNumber":235,"author":{"gitId":"jltham"},"content":"     *                     false","lastModifiedDate":"2022-02-04"},{"lineNumber":236,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when there is an error accessing or","lastModifiedDate":"2022-02-03"},{"lineNumber":237,"author":{"gitId":"jltham"},"content":"     *                       writing to the storage file","lastModifiedDate":"2022-02-03"},{"lineNumber":238,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":239,"author":{"gitId":"jltham"},"content":"    public void updateAfterChangeMark(int index, boolean toMark) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":240,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":241,"author":{"gitId":"jltham"},"content":"            int dataLineCounter \u003d 0; //initializing the counter","lastModifiedDate":"2022-02-11"},{"lineNumber":242,"author":{"gitId":"jltham"},"content":"            BufferedReader storageFileReader \u003d new BufferedReader(new FileReader(storageFile));","lastModifiedDate":"2022-02-04"},{"lineNumber":243,"author":{"gitId":"jltham"},"content":"            String contentToBeWritten \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":244,"author":{"gitId":"jltham"},"content":"            String dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":245,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":246,"author":{"gitId":"jltham"},"content":"            while (dataLine !\u003d null) {","lastModifiedDate":"2022-02-04"},{"lineNumber":247,"author":{"gitId":"jltham"},"content":"                if (dataLineCounter \u003d\u003d index) {","lastModifiedDate":"2022-02-04"},{"lineNumber":248,"author":{"gitId":"jltham"},"content":"                    if (dataLine.charAt(6) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2022-02-04"},{"lineNumber":249,"author":{"gitId":"jltham"},"content":"                        if (!(toMark)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":250,"author":{"gitId":"jltham"},"content":"                            dataLine \u003d dataLine.replaceFirst(\"xxx 1 xxx\", \"xxx 0 xxx\");","lastModifiedDate":"2022-02-04"},{"lineNumber":251,"author":{"gitId":"jltham"},"content":"                        }","lastModifiedDate":"2022-02-02"},{"lineNumber":252,"author":{"gitId":"jltham"},"content":"                    } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":253,"author":{"gitId":"jltham"},"content":"                        if (toMark) {","lastModifiedDate":"2022-02-11"},{"lineNumber":254,"author":{"gitId":"jltham"},"content":"                            dataLine \u003d dataLine.replaceFirst(\"xxx 0 xxx\", \"xxx 1 xxx\");","lastModifiedDate":"2022-02-04"},{"lineNumber":255,"author":{"gitId":"jltham"},"content":"                        }","lastModifiedDate":"2022-02-02"},{"lineNumber":256,"author":{"gitId":"jltham"},"content":"                    }","lastModifiedDate":"2022-02-02"},{"lineNumber":257,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":258,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":259,"author":{"gitId":"jltham"},"content":"                contentToBeWritten \u003d contentToBeWritten + dataLine + System.lineSeparator();","lastModifiedDate":"2022-02-04"},{"lineNumber":260,"author":{"gitId":"jltham"},"content":"                dataLine \u003d storageFileReader.readLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":261,"author":{"gitId":"jltham"},"content":"                dataLineCounter++;","lastModifiedDate":"2022-02-04"},{"lineNumber":262,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":263,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":264,"author":{"gitId":"jltham"},"content":"            FileWriter storageFileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2022-02-04"},{"lineNumber":265,"author":{"gitId":"jltham"},"content":"            storageFileWriter.write(contentToBeWritten);","lastModifiedDate":"2022-02-04"},{"lineNumber":266,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":267,"author":{"gitId":"jltham"},"content":"            storageFileReader.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":268,"author":{"gitId":"jltham"},"content":"            storageFileWriter.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":269,"author":{"gitId":"jltham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":270,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Save file not found!! :-(\");","lastModifiedDate":"2022-02-02"},{"lineNumber":271,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":272,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Cannot update edits in save file!! D:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":273,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":274,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":275,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":276,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":277,"author":{"gitId":"jltham"},"content":"     * Wipes the storage file of all its data.","lastModifiedDate":"2022-02-04"},{"lineNumber":278,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when there is an error accessing or","lastModifiedDate":"2022-02-03"},{"lineNumber":279,"author":{"gitId":"jltham"},"content":"     *                       writing to the storage file","lastModifiedDate":"2022-02-03"},{"lineNumber":280,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":281,"author":{"gitId":"jltham"},"content":"    public void resetFile() throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":282,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":283,"author":{"gitId":"jltham"},"content":"            FileWriter storageFileWriter \u003d new FileWriter(storageFile, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":284,"author":{"gitId":"jltham"},"content":"            storageFileWriter.write(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":285,"author":{"gitId":"jltham"},"content":"            storageFileWriter.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":286,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":287,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Cannot reset the save file!! D:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":288,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":289,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":290,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":290}},{"path":"src/main/java/duke/admin/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.admin;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import duke.tasks.Trigger;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":" * TaskList class manages the task list and the actions that can be performed on","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":" * the task list.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"public class TaskList {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    private static final String BUFFER \u003d \" xxx \";","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    private static final Trigger noChangeTrigger \u003d new Trigger(\"n0 cH4Ng3$ d#t3CtEd\");","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * Constructor for TaskList that takes in data from the storage file and","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * constructs a task list from there.","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * @param tasksArr data read from the storage file","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception when data is corrupted or task list cannot be","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"     *                       created as intended","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    public TaskList(String[] tasksArr) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"            for (String task : tasksArr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"                String[] taskDetails \u003d task.split(BUFFER);","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"                String type \u003d taskDetails[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"                Boolean isMarked \u003d (Integer.parseInt(taskDetails[1]) \u003e 0);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"                String description \u003d taskDetails[2];","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"                switch (type) {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"                case \"T\":","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"                    tasks.add(new ToDo(description, isMarked));","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"                    break;","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"                case \"D\":","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"                    tasks.add(new Deadline(description, isMarked));","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"                    break;","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"                case \"E\":","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"                    tasks.add(new Event(description, isMarked));","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"                    break;","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"                default:","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"                    break;","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"     * Constructor for TaskList when storage file data is unavailable.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"     * Adds the task specified to the task list.","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"     * @param task the task to be added","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"     * Deletes the task indexed by the index specified.","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"     * @param index the index of the task that is to be deleted","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"     * @return the task after it is deleted from the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"jltham"},"content":"    public Task delete(int index) {","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"jltham"},"content":"        assert index \u003c\u003d tasks.size();","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"        Task deletedTask \u003d tasks.get(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"        return deletedTask;","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"     * Prints out all the tasks in the task list and their index.","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"     * @return task list as a string","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"    public String list() {","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"            String listElement \u003d i + \". \" + task.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"            listString \u003d listString + listElement + System.lineSeparator();","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"        return listString;","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"     * Prints out all the tasks in the task list that contains the keyword.","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"     * @param keyword keyword to be contained by the tasks","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"     * @return result as a string","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"jltham"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"jltham"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"jltham"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"jltham"},"content":"            String taskAsString \u003d task.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"jltham"},"content":"            if (taskAsString.contains(keyword)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"jltham"},"content":"                searchResults.add(task);","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"jltham"},"content":"        String searchResultString \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":121,"author":{"gitId":"jltham"},"content":"        for (int j \u003d 1; j \u003c\u003d searchResults.size(); j++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"jltham"},"content":"            Task matchedTask \u003d searchResults.get(j - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"jltham"},"content":"            String result \u003d j + \". \" + matchedTask.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":124,"author":{"gitId":"jltham"},"content":"            searchResultString \u003d searchResultString + result + System.lineSeparator();","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"jltham"},"content":"        if (searchResultString.equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"jltham"},"content":"            return \"There\u0027s nothing that contains the keyword!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"jltham"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"jltham"},"content":"            return \"These are the matching tasks:\\n\" + searchResultString;","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":135,"author":{"gitId":"jltham"},"content":"     * Changes the mark of the task if the command requests for a change in mark and returns the task that has been","lastModifiedDate":"2022-02-11"},{"lineNumber":136,"author":{"gitId":"jltham"},"content":"     * changed. If not, return a trigger task to trigger the system to inform the user that the command does not","lastModifiedDate":"2022-02-11"},{"lineNumber":137,"author":{"gitId":"jltham"},"content":"     * change the task.","lastModifiedDate":"2022-02-11"},{"lineNumber":138,"author":{"gitId":"jltham"},"content":"     * @param index index of task to be marked","lastModifiedDate":"2022-02-11"},{"lineNumber":139,"author":{"gitId":"jltham"},"content":"     * @param toMark if the command wishes the indexed task to be marked or not","lastModifiedDate":"2022-02-11"},{"lineNumber":140,"author":{"gitId":"jltham"},"content":"     * @return the changed task or a trigger task","lastModifiedDate":"2022-02-11"},{"lineNumber":141,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":142,"author":{"gitId":"jltham"},"content":"    public Task changeMark(int index, boolean toMark) {","lastModifiedDate":"2022-02-11"},{"lineNumber":143,"author":{"gitId":"jltham"},"content":"        assert index \u003c\u003d tasks.size();","lastModifiedDate":"2022-02-11"},{"lineNumber":144,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"jltham"},"content":"        Task taskToChange \u003d tasks.get(index);","lastModifiedDate":"2022-02-11"},{"lineNumber":146,"author":{"gitId":"jltham"},"content":"        boolean isMarked \u003d taskToChange.isDone();","lastModifiedDate":"2022-02-11"},{"lineNumber":147,"author":{"gitId":"jltham"},"content":"        boolean isChangingMark \u003d isMarked ^ toMark;","lastModifiedDate":"2022-02-11"},{"lineNumber":148,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"jltham"},"content":"        if (isChangingMark) {","lastModifiedDate":"2022-02-11"},{"lineNumber":150,"author":{"gitId":"jltham"},"content":"            taskToChange.toggleMark();","lastModifiedDate":"2022-02-11"},{"lineNumber":151,"author":{"gitId":"jltham"},"content":"            return taskToChange;","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"jltham"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"jltham"},"content":"            return noChangeTrigger;","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":155,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":156,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":158,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"jltham"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-02-04"},{"lineNumber":160,"author":{"gitId":"jltham"},"content":"     * @return number of tasks in the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":161,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":162,"author":{"gitId":"jltham"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-02-04"},{"lineNumber":163,"author":{"gitId":"jltham"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-03"},{"lineNumber":164,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":165,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"jltham"},"content":"     * Updates the details of the indexed task and returns the resulting task.","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"jltham"},"content":"     * @param type details to be updated: description, date or time","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"jltham"},"content":"     * @param index index of task to be updated","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"jltham"},"content":"     * @param updateValue value to be updated to","lastModifiedDate":"2022-02-12"},{"lineNumber":171,"author":{"gitId":"jltham"},"content":"     * @return task that has been updated","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"jltham"},"content":"     * @throws DukeException when there is an error trying to update the date or time value","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"jltham"},"content":"    public Task update(String type, int index, String updateValue) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":175,"author":{"gitId":"jltham"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":176,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":177,"author":{"gitId":"jltham"},"content":"        switch (type) {","lastModifiedDate":"2022-02-12"},{"lineNumber":178,"author":{"gitId":"jltham"},"content":"        case \"description\":","lastModifiedDate":"2022-02-12"},{"lineNumber":179,"author":{"gitId":"jltham"},"content":"            task.updateDescription(updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":180,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":181,"author":{"gitId":"jltham"},"content":"        case \"date\":","lastModifiedDate":"2022-02-12"},{"lineNumber":182,"author":{"gitId":"jltham"},"content":"            task.updateDate(updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":184,"author":{"gitId":"jltham"},"content":"        case \"time\":","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"jltham"},"content":"            task.updateTime(updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"jltham"},"content":"        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":188,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":189,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":190,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":191,"author":{"gitId":"jltham"},"content":"        return task;","lastModifiedDate":"2022-02-12"},{"lineNumber":192,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":193,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":194,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"jltham"},"content":"     * Clones the indexed task and adds to the the end of the task list. Returns the cloned task at the end.","lastModifiedDate":"2022-02-12"},{"lineNumber":196,"author":{"gitId":"jltham"},"content":"     * @param index index of the task to be cloned","lastModifiedDate":"2022-02-12"},{"lineNumber":197,"author":{"gitId":"jltham"},"content":"     * @return the task that is cloned","lastModifiedDate":"2022-02-12"},{"lineNumber":198,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":199,"author":{"gitId":"jltham"},"content":"    public Task clone(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":200,"author":{"gitId":"jltham"},"content":"        Task taskToBeCloned \u003d tasks.get(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":201,"author":{"gitId":"jltham"},"content":"        tasks.add(taskToBeCloned);","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"jltham"},"content":"        return taskToBeCloned;","lastModifiedDate":"2022-02-12"},{"lineNumber":204,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":205,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":205}},{"path":"src/main/java/duke/admin/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.admin;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.tasks.Trigger;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":" * Ui is a class that manages the bulk of the user interaction required by the","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":" * program.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"public class Ui {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    private static final Trigger noChangeTrigger \u003d new Trigger(\"n0 cH4Ng3$ d#t3CtEd\");","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"     * Prints out a welcome message when the user boots the program.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"        return \"Welcome to Duke, your friendly task manager!\\n What do you want to do today?\";","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"     * Prints out a farewell message when the user leaves the","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * program.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    public static String showGoodByeMessage() {","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"        return \"Sayonara!! Hope to see you again soon hehe! :-)\";","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"     * Prints out a message to let the user know what task has","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"     * been added and how many tasks there are currently in the task list.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"     * @param task the task that has just been added into the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"     * @param tasks the list of task being managed by Duke","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    public static String showAddedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.toString()","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"                + \"\\nNow you have \" + tasks.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"     * Prints out a message to let the user know what task has","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"     * been deleted and how many tasks there are remaining in the task list.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"     * @param task the task that has just been deleted into the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"     * @param tasks the list of task being managed by Duke","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"    public static String showDeletedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"                + \"\\nNow you have \" + tasks.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"    // /**","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"    //  * Prints out a message to let the user know which task has","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"    //  * just been marked as done.","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"    //  * @param task the task that has just been marked as done","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"    //  */","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"    // public static String showMarkedMessage(Task task) {","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    //     return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"    // }","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"    // /**","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"    //  * Prints out a message to let the user know which task has","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"    //  * just been marked as not yet done.","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"    //  * @param task the task that has just been marked as not yet done","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"    //  */","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"    // public static String showUnmarkedMessage(Task task) {","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"    //     return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"    // }","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"     * Returns a string to inform the user that the mark is changed.","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"     * @param task task to be changed","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"     * @param toMark if the command wishes for the task to be marked or not.","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"     * @return a string to inform the user that the mark is changed.","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"    public static String showChangeMarkMessage(Task task, boolean toMark) {","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"        if (task.toString().equals(noChangeTrigger.toString())) {","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"            String message \u003d \"The task is already \";","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"            String messageSuffix \u003d toMark ? \"marked.\" : \"unmarked.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"jltham"},"content":"            return message + messageSuffix;","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"            String taskDescription \u003d task.toString();","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"            String messagePrefix \u003d toMark ? \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"                    : \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"            return messagePrefix + taskDescription;","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"     * Prints out the error message to the user to let the user","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"     * know why the program cannot run as intended","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"     * @param errorMessage a message describing the fault","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"    public static String showErrorMessage(String errorMessage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"        return \"Uh oh... We ran into an error: \" + errorMessage;","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"     * Returns the list of tasks as a String to be printed out in response to user\u0027s request to print the task list.","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"     * @param tasks list of tasks to be printed","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"     * @return the list of tasks as a String with Ui features included","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"    public static String listTasks(TaskList tasks) {","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"        String listResult \u003d tasks.list();","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"        if (listResult.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"            return \"There are currently no elements in the list!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"jltham"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":110,"author":{"gitId":"jltham"},"content":"            String listResultPrefix \u003d \"These are the tasks currently stored in the list:\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"jltham"},"content":"            return listResultPrefix + listResult;","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"jltham"},"content":"     * Returns a string of tasks containing the keyword.","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"jltham"},"content":"     * @param tasks list of tasks to be searched","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"jltham"},"content":"     * @param keyword the keyword that the results have to contain","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"jltham"},"content":"     * @return the list of matching tasks as a String to be printed","lastModifiedDate":"2022-02-11"},{"lineNumber":121,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"jltham"},"content":"    public static String findTasks(TaskList tasks, String keyword) {","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"jltham"},"content":"        String findResult \u003d tasks.find(keyword);","lastModifiedDate":"2022-02-11"},{"lineNumber":124,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"jltham"},"content":"        if (findResult.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"jltham"},"content":"            return \"No results containing the keyword found!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"jltham"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"jltham"},"content":"            String findResultPrefix \u003d \"Here are the matching tasks in your list:\" + System.lineSeparator();","lastModifiedDate":"2022-02-11"},{"lineNumber":129,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":130,"author":{"gitId":"jltham"},"content":"            return findResultPrefix + findResult;","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":134,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"jltham"},"content":"     * Returns a string informing user that update has been completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"jltham"},"content":"     * @param task task to be updated","lastModifiedDate":"2022-02-12"},{"lineNumber":137,"author":{"gitId":"jltham"},"content":"     * @return a string informing user that the task is updated and shows the user the updated task","lastModifiedDate":"2022-02-12"},{"lineNumber":138,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":139,"author":{"gitId":"jltham"},"content":"    public static String showUpdatedMessage(Task task) {","lastModifiedDate":"2022-02-12"},{"lineNumber":140,"author":{"gitId":"jltham"},"content":"        return \"I have updated the task as per your request! This is the updated task:\\n\" + task.toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":141,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":142,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":143,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":144,"author":{"gitId":"jltham"},"content":"     * Returns a string informing user that the cloning action is completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":145,"author":{"gitId":"jltham"},"content":"     * @param task the cloned task","lastModifiedDate":"2022-02-12"},{"lineNumber":146,"author":{"gitId":"jltham"},"content":"     * @return a string detailing the cloned task and that cloning is complete.","lastModifiedDate":"2022-02-12"},{"lineNumber":147,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":148,"author":{"gitId":"jltham"},"content":"    public static String showClonedMessage(Task task) {","lastModifiedDate":"2022-02-12"},{"lineNumber":149,"author":{"gitId":"jltham"},"content":"        return \"I have cloned the task and added it to the end of the task list! This is the cloned task:\\n\"","lastModifiedDate":"2022-02-12"},{"lineNumber":150,"author":{"gitId":"jltham"},"content":"                + task.toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":151,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":152,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":152}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":" * AddCommand is a Command that adds a task that is either a ToDo task, Deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":" * task or Event task to the program.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    private String description;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    private String type;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    private Task taskToBeAdded;","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * Constructor for AddCommand which takes in the type of task and description of","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * task that is to be added.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     * @param type        type of task to be added","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"     * @param description description of task to be added","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    public AddCommand(String type, String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"        assert type !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"        assert description !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"     * Adds the task to TaskList, updates the storage file and notifies the user","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"     * when it\u0027s done","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"     * @param tasks   task list local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"     * @param storage storage instance local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"        switch (type) {","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"        case \"T\":","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"            taskToBeAdded \u003d new ToDo(description);","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"        case \"D\":","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"            taskToBeAdded \u003d new Deadline(description);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"        case \"E\":","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"            taskToBeAdded \u003d new Event(description);","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"        default:","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"        tasks.add(taskToBeAdded);","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"        storage.updateAfterAdd(taskToBeAdded, description);","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"        return Ui.showAddedMessage(taskToBeAdded, tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"     * Checks if this is an exit command, and only returns true for an exit command.","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":70}},{"path":"src/main/java/duke/commands/ChangeMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"public class ChangeMarkCommand extends Command {","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"    private int index;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    private boolean isMarkRequest;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"     * Constructor for ChangeMarkCommand","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     * @param index index of task to be changed","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"     * @param isMarkRequest whether the command wants to mark the task or unmark the task","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    public ChangeMarkCommand(int index, boolean isMarkRequest) {","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"        assert index \u003e 0;","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        this.isMarkRequest \u003d isMarkRequest;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"        assert index \u003c\u003d tasks.getNumberOfTasks();","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"        Task task \u003d tasks.changeMark(index, isMarkRequest);","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"        storage.updateAfterChangeMark(index, isMarkRequest);","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"        return Ui.showChangeMarkMessage(task, isMarkRequest);","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":37}},{"path":"src/main/java/duke/commands/CloneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"public class CloneCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"    private int index;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"    public CloneCommand(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"        Task task \u003d tasks.clone(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"        storage.updateAfterClone(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        return Ui.showClonedMessage(task);","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"jltham":28}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":" * Command is an abstract class that specifies 2 methods that has to be","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":" * implemented by all the different commands, namely isExit and execute.","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":16}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":" * DeleteCommand is a Command that deletes the task at the index specified from","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":" * the program.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    private int index;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"     * Constructor for DeleteCommand that takes in the index of the task to be","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"     * deleted from the program.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"        assert index \u003e 0;","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"     * Deletes the indexed task from task list and storage file and updates the user","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"     * when the task is deleted.","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"     * @param tasks   task list local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"     * @param storage storage instance local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"        assert tasks.getNumberOfTasks() \u003e\u003d this.index;","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"        Task deletedTask \u003d tasks.delete(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        storage.updateAfterDelete(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"        return Ui.showDeletedMessage(deletedTask, tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"     * Checks if this is an exit command, and only returns true for an exit command.","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":49}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":" * ExitCommand is a Command that terminates the program.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"     * Checks if this is an exit command, and only returns yes for an","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"     * exit command.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"        return true;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * Prints a farewell message to the user and exits the program.","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * @param tasks   task list local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * @param storage storage instance local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"        return Ui.showGoodByeMessage();","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":30}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"    private String keyword;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"     * Constructor for FindCommand that takes in a keyword to be used to filter the matching results.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"     * @param keyword","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        return tasks.find(keyword);","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"jltham":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":" * ListCommand is a Command that triggers the program to print out the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":" * with proper indexing according to chronological order of when the task was","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":" * added into the task list.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     * Lists out the tasks stored in the tasks list.","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"     * @param tasks   task list local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"     * @param storage storage instance local to user","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        return Ui.listTasks(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     * Checks if this is an exit command, and only returns true for an exit command.","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jltham":31}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.commands;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.admin.Storage;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.TaskList;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"    private int index;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    private String typeOfUpdate;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"    private String updateValue;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     * Constructor for UpdateCommand","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"     * @param description description of the command that contains the type of update, index of task to be updated,","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"     * and value to be updated to","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    public UpdateCommand(String description) {","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"        String[] splitDescription \u003d description.split(\" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"        assert splitDescription.length \u003e\u003d 3;","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"        this.typeOfUpdate \u003d splitDescription[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"        this.index \u003d Integer.parseInt(splitDescription[1]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"        this.updateValue \u003d splitDescription[2];","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"        return false;","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"        Task taskToBeUpdated \u003d tasks.update(typeOfUpdate, index, updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"        String typeOfTask \u003d taskToBeUpdated.getType();","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        storage.updateAfterEdits(typeOfTask, typeOfUpdate, index, updateValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"        return Ui.showUpdatedMessage(taskToBeUpdated);","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"jltham":41}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.controllers;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"    private void flip() {","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"        db.flip();","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"        return db;","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":61}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.controllers;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import duke.admin.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Aladdin.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Genie.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"                    DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"            System.out.println(Ui.showErrorMessage(e.getMessage()));","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":57}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"E xxx 0 xxx Module Briefing /at 2022-02-21 23:00","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"D xxx 0 xxx Module Bidding /by 2022-08-20 12:00","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"jltham":2}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":" * DukeException is an Exception unique to Duke.","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"     * Constructs a DukeException instance with the inputted error message","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"     * @param errorMessage message describing the fault","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jltham":15}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":" * Deadline is a Task that should be done by a certain date and time.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    private static String type \u003d \"D\";","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"    private String printedString;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    private String descriptionWithoutDateTime;","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"     * Constructor for Deadline that takes in a description of the Deadline task and","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * whether it is marked as done.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * @param description the description of the deadline task, containing the date","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     *                    and time of deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     * @param isDone      true if the deadline task has been marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when the deadline is invalid due to","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"     *                       missing deadline or improper input format","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    public Deadline(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"            String[] splitDescription \u003d description.split(\"/by \");","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"            descriptionWithoutDateTime \u003d splitDescription[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"            boolean containsDateTimeSpecification \u003d splitDescription.length \u003e 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"            if (containsDateTimeSpecification) {","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"                String dateAndTime \u003d splitDescription[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"                String[] splitDateTime \u003d dateAndTime.split(\" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"                boolean containsTimeSpecification \u003d splitDateTime.length \u003e 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"                if (containsTimeSpecification) {","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"                    this.deadlineDate \u003d LocalDate.parse(splitDateTime[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"                    this.deadlineTime \u003d LocalTime.parse(splitDateTime[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"                    updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"                    throw new DukeException(","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"                            \"Please include the time in the deadline in the following manner: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"Please input a deadline in the following manner: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Please input the deadline in the proper manner: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"     * Constructor for Deadline that takes in a description of the Deadline task","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"     * @param description the description of the deadline task, containing the date","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"     *                    and time of deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when the deadline is invalid due to","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"     *                       missing deadline or improper input format","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"        this(description, false);","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"    private void updatePrintedString() {","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"        assert descriptionWithoutDateTime !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"        assert deadlineDate !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"        assert deadlineTime !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"        this.printedString \u003d descriptionWithoutDateTime + \" (by: \"","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"                + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"jltham"},"content":"                + this.deadlineTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"    public void updateDate(String dateString) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"            this.deadlineDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"            updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Unable to update deadline date due to improper input\");","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"    public void updateTime(String timeString) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"            this.deadlineTime \u003d LocalTime.parse(timeString);","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"            updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Unable to update deadline time due to improper input\");","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"    public void updateDescription(String newDescription) {","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"        this.descriptionWithoutDateTime \u003d newDescription;","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"        updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"     * Returns the String representation of deadline task.","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"jltham"},"content":"     * @return string representation of deadline task","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"jltham"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"jltham"},"content":"        assert this.printedString !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"jltham"},"content":"        return this.isDone ? \"!!!DONE!!! Deadline - \" + this.printedString","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"jltham"},"content":"                : \"Deadline - \" + this.printedString;","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"jltham"},"content":"    public String getType() {","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"jltham"},"content":"        return type;","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jltham":123}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":" * Event is a Task that should be attended at a certain date and time.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    private static String type \u003d \"E\";","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"    private String printedString;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    private String descriptionWithoutDateTime;","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    private LocalTime eventTime;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"     * Constructor for Event that takes in a description of the Event task and","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * whether it is marked as done.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * @param description the description of the event task, containing the date and","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     *                    time of the event","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     * @param isDone      true if the event task has been marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when the event datetime is invalid due","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"     *                       to missing input or improper input format","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"    public Event(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"            String[] splitDescription \u003d description.split(\"/at \");","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"            descriptionWithoutDateTime \u003d splitDescription[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"            boolean containsDateTimeSpecification \u003d splitDescription.length \u003e 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"            if (containsDateTimeSpecification) {","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"                String dateAndTime \u003d splitDescription[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"                String[] splitDateTime \u003d dateAndTime.split(\" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"                boolean containsTimeSpecification \u003d splitDateTime.length \u003e 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"                if (containsTimeSpecification) {","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"                    this.eventDate \u003d LocalDate.parse(splitDateTime[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"                    this.eventTime \u003d LocalTime.parse(splitDateTime[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"                    updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"                    throw new DukeException(","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"                            \"Please include the time in the deadline in the following manner: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"                throw new DukeException(\"Please input a deadline in the following manner: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Please input the deadline in the proper manner: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"     * Constructor for Event that takes in a description of the Event task.","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"jltham"},"content":"     * @param description the description of the event task, containing the date and","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"jltham"},"content":"     *                    time of the event","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"jltham"},"content":"     * @throws DukeException exception thrown when the event datetime is invalid due","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"jltham"},"content":"     *                       to missing input or improper input format","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"jltham"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"jltham"},"content":"        this(description, false);","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"jltham"},"content":"    private void updatePrintedString() {","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"jltham"},"content":"        assert descriptionWithoutDateTime !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"jltham"},"content":"        assert eventDate !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"jltham"},"content":"        assert eventTime !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"jltham"},"content":"        this.printedString \u003d descriptionWithoutDateTime + \" (at: \"","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"jltham"},"content":"                + this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"jltham"},"content":"                + this.eventTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"jltham"},"content":"    public void updateDate(String dateString) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"jltham"},"content":"            this.eventDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"jltham"},"content":"            updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"jltham"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Unable to update deadline date due to improper input\");","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"jltham"},"content":"    public void updateTime(String timeString) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"jltham"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"jltham"},"content":"            this.eventTime \u003d LocalTime.parse(timeString);","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"jltham"},"content":"            updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"jltham"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"jltham"},"content":"            throw new DukeException(\"Unable to update deadline time due to improper input\");","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"jltham"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"jltham"},"content":"    public void updateDescription(String newDescription) {","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"jltham"},"content":"        this.descriptionWithoutDateTime \u003d newDescription;","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"jltham"},"content":"        updatePrintedString();","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"jltham"},"content":"     * Returns the String representation of event task.","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"jltham"},"content":"     * @return string representation of event task","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"jltham"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"jltham"},"content":"        assert this.printedString !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"jltham"},"content":"        return this.isDone ? \"!!!DONE!!! Event - \" + this.printedString","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"jltham"},"content":"                : \"Event - \" + this.printedString;","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"jltham"},"content":"    public String getType() {","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"jltham"},"content":"        return type;","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jltham":122}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":" * Task is a class that manages the actions that a Task can do such as marking","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":" * itself as done etc.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"    protected String type;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     * Toggles the isDone value.","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    public void toggleMark() {","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"        this.isDone \u003d !(this.isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"     * Returns a boolean value depending on whether the task is done,","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * if it is then the method returns true.","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * @return true if the task has been marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"        return isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"    public abstract String getType();","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"    public abstract void updateDescription(String description);","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    public abstract void updateDate(String newDate) throws DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"    public abstract void updateTime(String newTime) throws DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jltham":37}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":" * ToDo is a Task with no specific start or end date or time.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"    private static String type \u003d \"T\";","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"     * Constructor for ToDo task takes in the description of the task and whether it","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"     * has been marked as done.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"     * @param description the description of the ToDo task","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     * @param isDone      true if the task has been marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * Constructor for ToDo task takes in the description of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * @param description the description of the ToDo task","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"        this(description, false);","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"     * Returns the String representation of todo task.","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"     * @return string representation of todo task","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        return this.isDone ? \"!!!DONE!!! To do - \" + this.description","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"                : \"To do - \" + this.description;","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"    public void updateDate(String newDate) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"        System.out.println(\"No date value for Todo task\");","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"    public void updateTime(String newTime) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"        System.out.println(\"No time value for Todo task\");","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"    public String getType() {","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"        return type;","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"    public void updateDescription(String description) {","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"jltham":60}},{"path":"src/main/java/duke/tasks/Trigger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":" * Trigger is a Task to trigger a message.","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"public class Trigger extends Task {","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"    private static String type \u003d \"TRG\";","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"     * Constructor for Trigger task takes in the description of the task and whether it","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"     * has been marked as done.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"     * @param description the description of the Trigger task","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"     * @param isDone      true if the task has been marked as done","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    public Trigger(String description, boolean isDone) {","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"     * Constructor for Trigger task takes in the description of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"     * @param description the description of the Trigger task","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"    public Trigger(String description) {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"jltham"},"content":"        this(description, false);","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"jltham"},"content":"     * Returns the String representation of todo task.","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"jltham"},"content":"     * @return string representation of todo task","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"jltham"},"content":"    public String toString() {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"jltham"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"jltham"},"content":"        return this.description;","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"jltham"},"content":"    public void updateDate(String newDate) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"jltham"},"content":"        System.out.println(\"No date value for Todo task\");","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"jltham"},"content":"    public void updateTime(String newTime) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"jltham"},"content":"        System.out.println(\"No time value for Todo task\");","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"jltham"},"content":"    public String getType() {","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"jltham"},"content":"        return type;","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"jltham"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"jltham"},"content":"    public void updateDescription(String description) {","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"jltham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"jltham":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"59.0\" prefWidth\u003d\"395.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"TOP\" prefHeight\u003d\"78.0\" prefWidth\u003d\"303.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"            \u003cFont name\u003d\"Baskerville Old Face\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"69.0\" fitWidth\u003d\"69.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"            \u003cInsets bottom\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"jltham"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"jltham"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"jltham"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"jltham"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"1.0\" layoutY\u003d\"572.4\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"15.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"328.0\" layoutY\u003d\"573.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"26.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"570.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"578.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"jltham":19}},{"path":"src/test/java/duke/admin/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.admin;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"public class TaskListTest {","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"    private TaskList test \u003d new TaskList();","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"     * Tests the getNumberOfTasks method in Task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    public void taskCountTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"        assertEquals(0, test.getNumberOfTasks(), \"Failed\");","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"jltham":17}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltham"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"jltham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"jltham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"jltham"},"content":"public class TaskTest {","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"jltham"},"content":"    private Task test \u003d new ToDo(\"Test\", false);","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"jltham"},"content":"     * Tests the toggleMark method adopted by all Tasks subclasses","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"jltham"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"jltham"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"jltham"},"content":"    public void toggleMarkTest() {","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"jltham"},"content":"        assertEquals(\"To do - Test\", test.toString(), \"Failed creation\");","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"jltham"},"content":"        test.toggleMark();","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"jltham"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"jltham"},"content":"        assertEquals(\"!!!DONE!!! To do - Test\", test.toString(), \"Failed toggle\");","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"jltham"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"jltham"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"jltham":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jltham"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltham":1,"-":20}}]
