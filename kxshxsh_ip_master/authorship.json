[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"kxshxsh":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"# Welcome to Duke\u0027s User Guide!","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"*It is said that everyday, if you know that you need to eat an ugly frog, make sure eating it is the first thing that you do! It gives you the greatest sense of accomplishment and relief - knowing that the toughest task of the day is out of your way :muscle:*","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"**Let\u0027s guide you through all the steps that you need to know in order to tackle your ugly frogs :frog:!**","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"## Features:","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"### 1. Feature adding tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"When it comes to adding tasks (AKA some froggies:frog:), we have 3 different types of tasks for you to choose from:","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"1. Todo tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"2. Deadline tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"3. Events","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"Since they serve different purposes, they have different requirements. Let\u0027s go through them:","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"#### Adding a todo task to the list:","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"Simply type `todo \u003cdescription\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"eg: todo email prof  ","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155743776-2f661cb4-2624-482e-be20-fab49ff192a3.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"#### Adding a deadline task to the list:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"Type `deadline \u003cdescription\u003e /by \u003cdate\u003e \u003cend-time\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"eg: deadline finish assignment 1 /by 26/02/2022 2359  ","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155744557-ce325667-1f48-4569-bc52-d55597a3f225.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"#### Adding an event task to the list:","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"Type `event \u003cdescription\u003e /at \u003cdate\u003e \u003cstart-time\u003e - \u003cend-time\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"eg: event attend NYE Bash /at 31/12/2022 2000 - 2400  ","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155744696-7241bace-73d3-45f5-a327-1f206cc8bb5a.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"### 2. Listing all the tasks in your logs","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"If you need an overview of all your tasks, their agendas, deadlines and completion statuses, use  ","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"`list`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155744912-ef07354a-0c9a-46a1-b5ab-b3dd03abd2f3.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"### 3. Deleting a task","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"If you need to delete a task, just note down it\u0027s index in the list and use the following command  ","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"`delete \u003ctask-index\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155745353-b6dd4998-c796-47cb-a34d-4aa7eda1234c.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"### 4. Marking a task done","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"If you have successfully eaten a frog and want to mark it done, simply use the following command  ","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"`mark \u003ctask-index\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155745607-1bd22dd8-c14d-4837-a695-8a56bcdf752d.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"### 5. Unmarking a task or Marking a task as \u0027not done\u0027","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"If you need to reverse the marking on a task, use  ","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"`unmark \u003ctask-index\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155745651-6228c0db-9cdc-4682-8b73-8eea07aaf8b4.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"### 6. Snoozing a task","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"NOTE: this function is only compatible with deadline and event tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"The general format of the command is `snooze \u003ctask-index\u003e \u003cfield-to-change\u003e \u003cinformation\u003e`","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"#### if you want to only change the time associated with a task deadline:","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"command: `snooze \u003ctask-index\u003e time \u003cnew-time\u003e`","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"in the case of an event task, replace `\u003cnew-time\u003e` with `\u003cstart-time\u003e - \u003cend-time\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155747922-dd03a7df-6826-4677-b55f-89db99df362f.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"#### if you want to change both the dates and times associated with a task deadline:","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"command: `snooze \u003ctask-index\u003e both \u003cnew-date\u003e \u003cnew-time\u003e`","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"in the case of an event task, replace `\u003cnew-time\u003e` with `\u003cstart-time\u003e - \u003cend-time\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155748014-9e63fb1e-71a1-4f92-b179-4ff56b67c9dc.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"### 7. Finding tasks with keywords","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"kxshxsh"},"content":"If you want to find all the tasks that contain at least one of the keywords in their task descriptions, use the command  ","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"`find \u003ckeyword1\u003e, \u003ckeyword2\u003e, ... \u003ckeywordn\u003e`  ","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"\u003cimg width\u003d\"500\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/92561253/155748245-59cbaf0e-1479-43ad-b059-ed761327abcf.png\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"## Exiting the program","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"Simply type `bye` to terminate the program:)","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"-":21,"kxshxsh":65}},{"path":"src/main/java/duke/CustomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":" * A custom exception class for Duke.","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"public class CustomException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    public CustomException(String mssg) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"        super(mssg);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kxshxsh":10}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":" * A subclass of Task class.","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":" * Denotes a task that is meant to be done by a specific day and time","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    protected String date;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"        this.time \u003d LocalDateTime.parse(time, inputFormatter);","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        this.date \u003d time.split(\" \",2)[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"     * Outputs the formatted time related to the task","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"     * @return a String in  MMM dd yyyy, HH:mm format","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"    public String outputTime() {","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        return time.format(outputFormatter);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"     * Outputs the time related to the task in the format that it was initially entered by the user.","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"     * @return a String in format: dd/MM/yyyy HHmm","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"    public String displayTimeInOriginalFormat() {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"        return time.format(inputFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"    public void setTime(String newTime) {","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"        String currDate \u003d this.date;","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"        String snoozedTime \u003d this.date.trim() + \" \" + newTime.trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"        this.time \u003d LocalDateTime.parse(snoozedTime, inputFormatter);","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"    public void setDate(String newDate) {","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"        this.date \u003d newDate.trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + outputTime() + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":52}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    public Duke() {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"            storage.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"     * Simply outputs the initial Duke logo to indicate running of program","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"     * @param args","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"        new Duke().run();","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"     * Greets and accepts commands from users. Also parses commands to create appropriate objects and call necessary","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"     * functions.","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        ui.greet();","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        ui.addLineBreak();","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"            String instruct \u003d br.readLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"                if (instruct.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"                    storage.addToFile();","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"                    ui.endSession();","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"                } else if (instruct.equals(\"list\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"                    TaskList.reportList();","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"                    String[] details \u003d instruct.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                    String command \u003d details[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"                    if (command.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"                        TaskList.markAsDone(Integer.parseInt(details[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"                    } else if (command.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"                        TaskList.markNotDone(Integer.parseInt(details[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"                    } else if (command.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"                        TaskList.deleteTask(Integer.parseInt(details[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"                    } else if (command.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"                        TaskList.findTasks(details[1]);","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"                    } else if (command.equalsIgnoreCase(\"snooze\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"                        TaskList.snooze(details[1]);","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"                    } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"                        String taskType \u003d details[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"                        if (!parser.isValidCommand(taskType)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"                            ui.showInvalidCommandError();","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"                            TaskList.addTask(taskType, instruct);","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"kxshxsh"},"content":"                        }","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"                ui.addLineBreak();","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"            } catch (CustomException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"                ui.addLineBreak();","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"kxshxsh":90}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":" * A subclass of Task class.","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":" * Denotes a task that is meant to be done during a time duration at a specific day","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter inputFormatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter inputFormatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter outputFormatterStart \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm -\");","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter outputFormatterEnd \u003d DateTimeFormatter.ofPattern(\" HH:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    protected LocalDateTime dateAndStartTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"    private String date;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    private String startTime;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    public Event(String description, String dateAndStartTime, String endTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"        this.date \u003d dateAndStartTime.split(\" \")[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"        this.dateAndStartTime \u003d LocalDateTime.parse(dateAndStartTime, inputFormatterStart);","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"        this.endTime \u003d LocalTime.parse(endTime, inputFormatterEnd);","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"     * Outputs the formatted time related to the task","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"     * @return a String in format: MMM dd yyyy, HH:mm - HH:mm","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"    public String outputTime() {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        return dateAndStartTime.format(outputFormatterStart)","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"                + endTime.format(outputFormatterEnd);","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"     * Outputs the time related to the task in the format that it was initially entered by the user.","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"     * @return a String in format: dd/MM/yyyy HHmm - HHmm","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"    public String displayTimeInOriginalFormat() {","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"        return dateAndStartTime.format(inputFormatterStart) + \" - \"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"                + endTime.format(inputFormatterEnd);","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"    public void setTime(String newTime) {","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"        String currDate \u003d this.date;","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"        String[] details \u003d newTime.split(\"-\");","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"        String newStart \u003d details[0].trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        String newEnd \u003d details[1].trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        this.startTime \u003d newStart;","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        String updatedDateAndStartTime \u003d currDate + \" \" + newStart;","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"        this.dateAndStartTime \u003d LocalDateTime.parse(updatedDateAndStartTime, inputFormatterStart);","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"        this.endTime \u003d LocalTime.parse(newEnd, inputFormatterEnd);","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"    public void setDate(String newDate) {","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"        this.date \u003d newDate;","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + outputTime() + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":" * Parses commands from users and also commands read from tasks.txt","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"public class Parser {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"     * Parses commands read from tasks.txt to create appropriate task objects","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"     * @param details an array of Strings that contain all the relevant information about the command.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"     * @return currTask, the appropriate Task object for the commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    public static Task parseCommandFromFile(String[] details) {","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        details[0] \u003d details[0].trim();","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        int status \u003d Integer.parseInt(details[1].trim());","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        Task currTask;","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        if (details[0].equals(\"T\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"            currTask \u003d new Todo(details[2].trim());","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        } else if (details[0].equals(\"D\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"            currTask \u003d new Deadline(details[2].trim(), details[3].trim());","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"            String eventInformation \u003d details[3];","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"            int indexOfDifferentiator \u003d eventInformation.indexOf(\"-\");","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"            String dateAndStartTime \u003d eventInformation.substring(0, indexOfDifferentiator).trim();","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"            String endTime \u003d eventInformation.substring(indexOfDifferentiator + 1).trim();","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"            currTask \u003d new Event(details[2].replaceAll(\"^\\\\s+\", \"\"), dateAndStartTime, endTime);","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"        if (status \u003d\u003d 1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"            currTask.markDone();","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        return currTask;","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"     * Parses commands inputted by the user to create appropriate task objects","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"     * @param taskType, a String, that indicates which particular Task object needs to be created.","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"     * @param instruction contains the description of the task alongside the date and time(situational).","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"     * @return taskParsed, the appropriate Task object for the commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"    public static Task parseCommandFromUser(String taskType, String instruction) throws CustomException {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        Task taskParsed;","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"            String description \u003d instruction.substring(4);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"todo description cannot be blank! Please add task details\");","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"                taskParsed \u003d new Todo(description.substring(1));","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"            int index \u003d instruction.indexOf(\"/by\");","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"                String description \u003d instruction.substring(9, index);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"                String time \u003d instruction.substring(index + 4);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"                taskParsed \u003d new Deadline(description, time);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"Incorrect time format: ensure to prefix time with \u0027/by\u0027\");","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"            int index \u003d instruction.indexOf(\"/at\");","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                String description \u003d instruction.substring(6, index);","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"                String time \u003d instruction.substring(index + 4);","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"                int indexOfDifferentiator \u003d time.indexOf(\"-\");","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"                String dateAndStartTime \u003d time.substring(0, indexOfDifferentiator).trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"                String endTime \u003d time.substring(indexOfDifferentiator + 1).trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"                taskParsed \u003d new Event(description, dateAndStartTime, endTime);","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"Incorrect time format: ensure to prefix time with \u0027/at\u0027\");","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"        return taskParsed;","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"     * Checks if the command is meant to be understood by the program","lastModifiedDate":"2022-02-22"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"     * @param taskType, a String, that indicates command type","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"kxshxsh"},"content":"     * @return boolean.","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"    public Boolean isValidCommand(String taskType) {","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"        return taskType.equals(\"todo\") || taskType.equals(\"deadline\")","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"                || taskType.equals(\"event\");","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"kxshxsh":87}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":" * A class that focuses on creating data/tasks.txt on the users hard disk alongside reading from and writing to it.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"public class Storage {","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    private File f;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        this.f \u003d new File(filePath);","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"    public boolean isExistFile(File f) {","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        return f.exists() \u0026\u0026 !f.isDirectory();","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    public File createFile(File f) throws IOException {","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"        f.createNewFile();","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"        return f;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"     * Firstly, checks if the data/tasks.txt file already exists on the user\u0027s system. If not, it creates the file in","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"     * the appropriate location.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"     * It mainly, then, reads the file\u0027s data and calls the appropriate parsing functions to add the appropriate task","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"     * objects the tasklist manager.","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException if the file cannot be created on the user\u0027s system","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    public void load() throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"            if (!(isExistFile(this.f))) {","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"                this.f \u003d createFile(this.f);","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"            assert f.exists();","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"                String[] details \u003d input.split(\";\", 4);","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"                Task currTask \u003d Parser.parseCommandFromFile(details);","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"                TaskList.manager.add(currTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"            sc.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"File cannot be created\");","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"     * Does an initial check for existence of the file. If not, it creates the file in the desired location.","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"     * Then writes all the tasks from the Tasklist manager to the file in it\u0027s appropriate format","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"    public void addToFile() {","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"            if (!(isExistFile(this.f))) {","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"                this.f \u003d createFile(this.f);","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"            assert f.exists(): \"file exists!\";","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"            System.out.println(\"writing to the file!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"            FileWriter writer \u003d new FileWriter(f);","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"            for (Task t : TaskList.manager) {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"                String output;","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"                if (t instanceof Todo) {","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"                    output \u003d \"T ; \" + (t.isDone ? \"1 ; \" : \"0 ; \") + t.description;","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"                    output \u003d \"D ; \" + (t.isDone ? \"1 ; \" : \"0 ; \") + t.description + \" ; \"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"                            + ((Deadline) t).displayTimeInOriginalFormat();","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"                } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"                    output \u003d \"E ; \" + (t.isDone ? \"1 ; \" : \"0 ; \") + t.description + \" ; \"","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"                            + ((Event) t).displayTimeInOriginalFormat();","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"                writer.write(output + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"                writer.flush();","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"kxshxsh"},"content":"            writer.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kxshxsh":86}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":" * A class that identifies a task that is required to be completed","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    protected String type \u003d \"GENERAL\";","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    protected Boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"     * marks a task as completed/done","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"     * marks a task as incomplete/undone","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"    public void undo() {","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        String status \u003d \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"        return status + \" \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":34}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import java.util.List;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":" * A class that stores a list of tasks and provides complementary functionalities such as add, find, delete and mark","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":" * tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"public class TaskList {","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    protected static ArrayList\u003cTask\u003e manager;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    private static Parser parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        manager \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"     * displays all the elements of the task list to the user.","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException if the task list is currently empty and has nothing to display.","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    public static void reportList() throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"        int len \u003d manager.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        if (len !\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"                System.out.println((i + 1) + \". \" + manager.get(i).toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"your task list is currently empty. \" + \"Add a task first:)\");","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"     * finds the task, at a specific index, in the task list.","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"     * @param num is the integer referring to the list index.","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"     * @return desiredTask, which is the task that the user was looking for.","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException if the list is empty or if the index supplied is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"    public static Task findTask(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"        Task desiredTask \u003d new Task(\"empty task\");","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        int len \u003d manager.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"        if (num \u003c 0) {","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: number must be a positive integer:)\");","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"        } else if (num \u003e len) {","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: this task number does not exist as of now.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        } else if (len \u003d\u003d 0){","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"your task list is currently empty. \" + \"Add a task first:)\");","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        } else { //default, normal case","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"            for (int i \u003d 1; i \u003c\u003d len; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"                if (i \u003d\u003d num) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"                    desiredTask \u003d manager.get(i - 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"            return desiredTask;","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"     * adds a task object to the tasklist","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"     * @param taskType a String that highlights type of task object required to be created.","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"     * @param instruction a String that contains details pertaining to the task.","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"    public static void addTask(String taskType, String instruction) {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"            Task toAdd \u003d Parser.parseCommandFromUser(taskType, instruction);","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"            manager.add(toAdd);","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"            Ui.showSuccessfulMessage(\"Rodger that! Task item added:\");","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"            Ui.displayTask(toAdd);","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"            Ui.displayError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"     * deletes the task at a particular index in the task list.","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"     * @param num the integer index.","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException if the index inputted is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"    public static void deleteTask(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: number must be a positive integer:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"        } else if (num \u003e manager.size()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: this task number does not exist as of now.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"kxshxsh"},"content":"        } else { //normal case","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"kxshxsh"},"content":"            manager.remove(num - 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"kxshxsh"},"content":"            System.out.println(\"Sure! Task item \" + num + \" has now been deleted:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"kxshxsh"},"content":"     * marks a task, on a specific index, as done.","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"kxshxsh"},"content":"     * @param num integer index.","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException if index is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"kxshxsh"},"content":"    public static void markAsDone(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"kxshxsh"},"content":"        Task t \u003d findTask(num);","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"kxshxsh"},"content":"        t.markDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Congrats! Keep going:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"kxshxsh"},"content":"     * marks a task, on a specific index, as not done.","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"kxshxsh"},"content":"     * @param num integer index.","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"kxshxsh"},"content":"     * @throws CustomException if index is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"kxshxsh"},"content":"    public static void markNotDone(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"kxshxsh"},"content":"        Task t \u003d findTask(num);","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"kxshxsh"},"content":"        t.undo();","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"No worries:) Stay motivated!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"kxshxsh"},"content":"     * finds and displays all the tasks that contain either one or some keywords as listed by the user.","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"kxshxsh"},"content":"     * @param keywords a String containing at least one keyword.","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"kxshxsh"},"content":"    public static void findTasks(String keywords) {","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"kxshxsh"},"content":"        List\u003cString\u003e allKeywords \u003d Arrays.stream(keywords.split(\",\")).sequential()","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"kxshxsh"},"content":"                .map(String::trim)","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"kxshxsh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"kxshxsh"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d manager.stream()","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"kxshxsh"},"content":"                .filter(x -\u003e allKeywords.stream()","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"kxshxsh"},"content":"                        .anyMatch(y -\u003e x.description.contains(y)))","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"kxshxsh"},"content":"                .collect(Collectors.toCollection(ArrayList\u003cTask\u003e::new));","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Here are the matching tasks found~ \");","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"kxshxsh"},"content":"        matchingTasks.forEach(System.out::println);","lastModifiedDate":"2022-02-12"},{"lineNumber":134,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":136,"author":{"gitId":"kxshxsh"},"content":"    public static void snooze(String details) throws CustomException {","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"kxshxsh"},"content":"        String[] information \u003d details.split(\" \", 3);","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"kxshxsh"},"content":"        int taskIndex \u003d Integer.parseInt(information[0]);","lastModifiedDate":"2022-02-25"},{"lineNumber":139,"author":{"gitId":"kxshxsh"},"content":"        String changeField \u003d information[1];","lastModifiedDate":"2022-02-25"},{"lineNumber":140,"author":{"gitId":"kxshxsh"},"content":"        Task taskInConsideration \u003d findTask(taskIndex);","lastModifiedDate":"2022-02-25"},{"lineNumber":141,"author":{"gitId":"kxshxsh"},"content":"        String newTime \u003d information[2];","lastModifiedDate":"2022-02-26"},{"lineNumber":142,"author":{"gitId":"kxshxsh"},"content":"        if (changeField.equalsIgnoreCase(\"both\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":143,"author":{"gitId":"kxshxsh"},"content":"            String[] data \u003d information[2].split(\" \", 2);","lastModifiedDate":"2022-02-25"},{"lineNumber":144,"author":{"gitId":"kxshxsh"},"content":"            String date \u003d data[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":145,"author":{"gitId":"kxshxsh"},"content":"            newTime \u003d data[1];","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"kxshxsh"},"content":"            if (taskInConsideration instanceof Todo) {","lastModifiedDate":"2022-02-25"},{"lineNumber":147,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"todo tasks are not associated with dates and times- please recheck!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"kxshxsh"},"content":"            } else if (taskInConsideration instanceof Deadline) {","lastModifiedDate":"2022-02-25"},{"lineNumber":149,"author":{"gitId":"kxshxsh"},"content":"                ((Deadline) taskInConsideration).setDate(date);","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"kxshxsh"},"content":"                ((Event) taskInConsideration).setDate(date);","lastModifiedDate":"2022-02-25"},{"lineNumber":152,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"kxshxsh"},"content":"            System.out.println(\"Date updated!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":154,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":156,"author":{"gitId":"kxshxsh"},"content":"        if (taskInConsideration instanceof Todo) {","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"todo tasks are not associated with times- please recheck!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":158,"author":{"gitId":"kxshxsh"},"content":"        } else if (taskInConsideration instanceof Deadline) {","lastModifiedDate":"2022-02-25"},{"lineNumber":159,"author":{"gitId":"kxshxsh"},"content":"            ((Deadline) taskInConsideration).setTime(newTime);","lastModifiedDate":"2022-02-25"},{"lineNumber":160,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":161,"author":{"gitId":"kxshxsh"},"content":"            ((Event) taskInConsideration).setTime(newTime);","lastModifiedDate":"2022-02-25"},{"lineNumber":162,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":163,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"task snoozed as desired! Check it out:  \");","lastModifiedDate":"2022-02-25"},{"lineNumber":164,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(taskInConsideration);","lastModifiedDate":"2022-02-25"},{"lineNumber":165,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kxshxsh":166}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":" * A subclass of Task class.","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":" * Denotes a task that is meant to happen with no specific date or time deadline","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    protected static String type \u003d \"TODO\";","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"public class Ui {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"    public static void displayError(String message) {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    public static void showSuccessfulMessage(String mssg) {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(mssg);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    public static void displayTask(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(task);","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    public void greet() {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"        String welcome \u003d \"Hi my name is Duke!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        String assist \u003d \"How may I help you today?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(welcome);","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(assist);","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    public void endSession() {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"        String goodbye \u003d \"Adios! See you soon:)\";","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"    public void addLineBreak() {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"---------------------xx-------------------------\");","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Oops! I had problem creating/loading logs.txt\");","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"    public void showInvalidCommandError() {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"sorry, this isn\u0027t a valid command yet!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kxshxsh":40}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"public class DukeTest {","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"kxshxsh":13}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    public void checkCorrectnessOfParsing() {","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"        String commandFromFile \u003d \"E ; 0 ; sleep ; 06/02/2022 0000 - 0530\";","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"        String[] commandFromFileDetails \u003d commandFromFile.split(\";\", 4);","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"        Task parsedTaskFile \u003d Parser.parseCommandFromFile(commandFromFileDetails);","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"        String commandFromCli \u003d \"event sleep /at 06/02/2022 0000 - 0530\";","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        Task parsedTaskCli \u003d null;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"            parsedTaskCli \u003d Parser.parseCommandFromUser(\"event\", commandFromCli);","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        assertEquals(parsedTaskFile.toString(), parsedTaskCli.toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"kxshxsh":22}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"public class TaskTest {","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    @DisplayName(\"String representation of Task is appropriate.\")","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    public void checkDisplayFormat() {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"        Task curr \u003d new Deadline(\"finish iP tasks\", \"18/02/2022 1400\");","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        curr.markDone();","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        String expected \u003d \"[D][X] finish iP tasks(by: Feb 18 2022, 14:00)\";","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        String output \u003d curr.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"kxshxsh":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kxshxsh":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"javac  -cp C:\\2103T\\iP\\src\\main\\java -Xlint:none -d C:\\Users\\kashi\\.jdks\\corretto-11.0.13\\bin C:\\2103T\\iP\\src\\main\\java\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"java -classpath C:\\Users\\kashi\\.jdks\\corretto-11.0.13\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"kxshxsh":2}}]
