[{"path":"src/main/java/CustomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"public class CustomException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"    public CustomException(String mssg) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"        super(mssg);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kxshxsh":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"        this.time \u003d LocalDateTime.parse(time, inputFormatter);","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    public String outputTime() {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        return time.format(outputFormatter);","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + outputTime() + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    public Duke() {","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"            storage.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"        ui.greet();","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"        ui.addLineBreak();","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"            String instruct \u003d br.readLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"                if (instruct.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"                    storage.addToFile();","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"                    ui.endSession();","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"                } else if (instruct.equals(\"list\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"                    tasks.reportList();","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"                    String[] details \u003d instruct.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"                    if (details[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"                        tasks.markAsDone(Integer.parseInt(details[1]));","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"                    } else if (details[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"                        tasks.markNotDone(Integer.parseInt(details[1]));","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"                    } else if (details[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"                        tasks.deleteTask(Integer.parseInt(details[1]));","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"                    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"                        String taskType \u003d details[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"                        if (!(taskType.equals(\"todo\") || taskType.equals(\"deadline\")","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"                                || taskType.equals(\"event\"))) {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"                            throw new CustomException(\"sorry, this isn\u0027t a valid command yet!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"                            tasks.addTask(taskType, instruct);","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"                        }","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"                ui.addLineBreak();","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"            } catch (CustomException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"                ui.addLineBreak();","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"        new Duke().run();","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"kxshxsh":64}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter inputFormatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter inputFormatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter outputFormatterStart \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm -\");","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    private final DateTimeFormatter outputFormatterEnd \u003d DateTimeFormatter.ofPattern(\" HH:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    protected LocalDateTime dateAndStartTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    public Event(String description, String dateAndStartTime, String endTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"        this.dateAndStartTime \u003d LocalDateTime.parse(dateAndStartTime, inputFormatterStart);","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        this.endTime \u003d LocalTime.parse(endTime, inputFormatterEnd);","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    public String outputTime() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        return dateAndStartTime.format(outputFormatterStart)","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"                + endTime.format(outputFormatterEnd);","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + outputTime() + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":28}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"public class Storage {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    private final File f;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"        this.f \u003d new File(filePath);","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    public void load() throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"            if (!(f.exists() \u0026\u0026 !f.isDirectory())) {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"                f.createNewFile();","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"                String[] details \u003d input.split(\";\", 4);","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"                details[0] \u003d details[0].trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"                int status \u003d Integer.parseInt(details[1].trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"                Task currTask;","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"                if (details[0].equals(\"T\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"                    currTask \u003d new Todo(details[2].trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"                } else if (details[0].equals(\"D\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"                    currTask \u003d new Deadline(details[2].trim(), details[3].trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"                } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"                    String eventInformation \u003d details[3];","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"                    int indexOfDifferentiator \u003d eventInformation.indexOf(\"-\");","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"                    String dateAndStartTime \u003d eventInformation.substring(0, indexOfDifferentiator).trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"                    String endTime \u003d eventInformation.substring(indexOfDifferentiator + 1).trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"                    currTask \u003d new Event(details[2].trim(), dateAndStartTime, endTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"                if (status \u003d\u003d 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"                    currTask.markDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"                TaskList.MANAGER.add(currTask);","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"            sc.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"File cannot be created\");","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"    public void addToFile() {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"            if (!(f.exists() \u0026\u0026 !f.isDirectory())) {","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"                f.createNewFile();","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"            FileWriter writer \u003d new FileWriter(f);","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"            for (Task t : TaskList.MANAGER) {","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"                String output;","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"                if (t instanceof Todo) {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"                    output \u003d \"T ; \" + (t.isDone ? \"1 ; \" : \"0 ; \") + t.description;","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"                    output \u003d \"D ; \" + (t.isDone ? \"1 ; \" : \"0 ; \") + t.description + \" ; \" + ((Deadline) t).outputTime();","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"                    output \u003d \"E ; \" + (t.isDone ? \"1 ; \" : \"0 ; \") + t.description + \" ; \" + ((Event) t).outputTime();","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"                writer.write(output + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"                writer.flush();","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"            writer.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kxshxsh":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"    protected String type \u003d \"GENERAL\";","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"    protected Boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    public void undo() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        String status \u003d \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        return status + \" \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":23}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"public class TaskList {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"    protected static ArrayList\u003cTask\u003e MANAGER;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"        MANAGER \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"//    public TaskList(ArrayList\u003cTask\u003e manager) {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"//        this.MANAGER \u003d manager;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"//","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"//    }","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    public static void reportList() throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        int len \u003d MANAGER.size();","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"        if (len !\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"                System.out.println((i + 1) + \". \" + MANAGER.get(i).toString());","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"your task list is currently empty. \" +","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"                    \"Add a task first:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    public static Task findTask(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"        Task desiredTask \u003d new Task(\"empty task\");","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"        int len \u003d MANAGER.size();","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        if ((num \u003c\u003d len) \u0026\u0026 (len \u003e 0) \u0026\u0026 (num \u003e 0)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"            for (int i \u003d 1; i \u003c\u003d len; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"                if (i \u003d\u003d num) {","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"                    desiredTask \u003d MANAGER.get(i - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"            return desiredTask;","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        } else if (num \u003c 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: number must be a positive integer:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"        } else if (num \u003e len) {","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: this task number does not exist as of now.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"        } else { // length of task list \u003d\u003d 0","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"your task list is currently empty. \" +","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"                    \"Add a task first:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"    public static void addTask(String taskType, String instruction) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"        Task toAdd \u003d new Task(\"empty task\");","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"            String description \u003d instruction.substring(4);","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"todo description cannot be blank! Please add task details\");","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"                toAdd \u003d new Todo(description.substring(1));","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"            int index \u003d instruction.indexOf(\"/by\");","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"                String description \u003d instruction.substring(9, index);","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"                String time \u003d instruction.substring(index + 4);","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"                toAdd \u003d new Deadline(description, time);","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"Incorrect time format: ensure to prefix time with \u0027/by\u0027\");","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"            int index \u003d instruction.indexOf(\"/at\");","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"                String description \u003d instruction.substring(6, index);","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"                String time \u003d instruction.substring(index + 4);","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"                int indexOfDifferentiator \u003d time.indexOf(\"-\");","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"                String dateAndStartTime \u003d time.substring(0, indexOfDifferentiator).trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"                String endTime \u003d time.substring(indexOfDifferentiator + 1).trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"                toAdd \u003d new Event(description, dateAndStartTime, endTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"                throw new CustomException(\"Incorrect time format: ensure to prefix time with \u0027/at\u0027\");","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"        MANAGER.add(toAdd);","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Rodger that! Task item added:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(toAdd);","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"    public static void deleteTask(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: number must be a positive integer:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"kxshxsh"},"content":"        } else if (num \u003e MANAGER.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"kxshxsh"},"content":"            throw new CustomException(\"Invalid task ID: this task number does not exist as of now.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"kxshxsh"},"content":"            MANAGER.remove(num - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"kxshxsh"},"content":"            System.out.println(\"Sure! Task item \" + num + \" has now been deleted:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"kxshxsh"},"content":"    public static void markAsDone(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"kxshxsh"},"content":"        Task t \u003d findTask(num);","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"kxshxsh"},"content":"        t.markDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Congrats! Keep going:)\");","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"kxshxsh"},"content":"    public static void markNotDone(int num) throws CustomException {","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"kxshxsh"},"content":"        Task t \u003d findTask(num);","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"kxshxsh"},"content":"        t.undo();","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"No worries:) Stay motivated!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kxshxsh":109}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"    protected static String type \u003d \"TODO\";","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"    ","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"kxshxsh":11}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"public class Ui {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"    public void greet() {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"        String welcome \u003d \"Hi my name is Duke!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"        String assist \u003d \"How may I help you today?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(welcome);","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(assist);","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    public void endSession() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"        String goodbye \u003d \"Adios! See you soon:)\";","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    public void addLineBreak() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"---------------------xx-------------------------\");","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"        System.out.println(\"Oops! I had problem creating/loading logs.txt\");","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kxshxsh":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"kxshxsh":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"javac  -cp C:\\2103T\\iP\\src\\main\\java -Xlint:none -d C:\\Users\\kashi\\.jdks\\corretto-11.0.13\\bin C:\\2103T\\iP\\src\\main\\java\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"java -classpath C:\\Users\\kashi\\.jdks\\corretto-11.0.13\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"kxshxsh":2}}]
