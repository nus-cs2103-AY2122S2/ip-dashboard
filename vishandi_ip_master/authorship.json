[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import parser.Parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.IStorage;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public final IStorage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Ui ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public Parser parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructor for Duke that takes in saveFileDirectory and saveFileName and parsing it to Storage class.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param saveFileDirectory","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param saveFileName","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Duke(String saveFileDirectory, String saveFileName) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.storage \u003d new Storage(saveFileDirectory, saveFileName);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Another constructor for Duke which directly parse the input to storage attribute.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param storage","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Duke(IStorage storage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The main logic of the process of Duke.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param args","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Duke duke \u003d new Duke(\"./data/\", \"TaskList.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        duke.initialize();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        duke.run();","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initialize Duke by reading from the default file.","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Greet Users.","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void initialize() throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.ui.greet();","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.taskList \u003d storage.readFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.printTasks();","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The main process of how Duke runs.","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        while (true) {","lastModifiedDate":"2022-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            String userInput \u003d this.ui.readUserInput();","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (!processUserInput(userInput)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Says goodbye to user.","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.ui.sayGoodbye();","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Method to print all the tasks currently recorded on Duke.","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void printTasks() {","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.ui.printMessage(this.taskList.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Method to write all current tasks to the default file via Storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void writeTasks() throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.storage.writeToFile(this.taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Method to process user input and get what it means.","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param userInput","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @return false if bye, true otherwise.","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean processUserInput(String userInput) {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"        String[] userInputs \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"        String command \u003d userInputs[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"            switch (command) {","lastModifiedDate":"2022-01-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    sayGoodbye();","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    printTasks();","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":125,"author":{"gitId":"vishandi"},"content":"                try {","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"vishandi"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    this.taskList.markTaskAsDone(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    writeTasks();","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"vishandi"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidIndex();","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidIndex();","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    throw d;","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"vishandi"},"content":"                }","lastModifiedDate":"2022-01-16"},{"lineNumber":137,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":139,"author":{"gitId":"vishandi"},"content":"                try {","lastModifiedDate":"2022-01-16"},{"lineNumber":140,"author":{"gitId":"vishandi"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    this.taskList.unmarkTaskAsDone(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    writeTasks();","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"vishandi"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidIndex();","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidIndex();","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    throw d;","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"                }","lastModifiedDate":"2022-01-16"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-16"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"                try {","lastModifiedDate":"2022-01-16"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    this.taskList.deleteTaskAtIndex(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throw DukeException.DukeInvalidIndex();","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"                }","lastModifiedDate":"2022-01-16"},{"lineNumber":160,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            case \"find\":","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    ArrayList\u003cTask\u003e matchTasks \u003d this.parser.findTasksByKeyword(userInput,","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                            this.taskList.getTasks());","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    this.ui.printMatchTasks(matchTasks);","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    throw d;","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                Task task \u003d this.parser.parseFromUi(command, userInput);","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                this.taskList.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":176,"author":{"gitId":"vishandi"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2022-01-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"             this.ui.printErrorMessage(d);","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"             return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"vishandi":40,"-":141}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     * @param msg","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"        super(msg);","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * A type of DukeException to handle IOException.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static DukeException DukeIOException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new DukeException(\"cannot handle the file, sorry :(\");","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * A type of DukeException to handle FileNotFoundException.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static DukeException DukeFileNotFoundException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new DukeException(\"No file found :(\");","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * A type of DukeException to handle Incomplete lines on the file.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static DukeException DukeFileIncomplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new DukeException(\"Please check your file, some of its lines are corrupted :(\");","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * A type of DukeException to handle invalid command.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static DukeException DukeInvalidCommand() {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new DukeException(\"Sorry, I don\u0027t understand your command :(\");","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * A type of DukeException to handle IndexOutOfBoundException.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static DukeException DukeInvalidIndex() {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new DukeException(\"Sorry, I don\u0027t understand which task you\u0027re talking about :(\");","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * A type of DukeException to handle Invalid todo command.","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static DukeException DukeTodoEmpty() {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"vishandi":5,"-":55}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import task.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String[] COMMANDS \u003d new String[] {\"todo\", \"deadline\", \"event\"};","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructor for Parser.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Parser() {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Making sense of user input","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param command","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param userInput","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return Task","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Task parseFromUi(String command, String userInput) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        switch (command) {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String description \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                return new Todo(description);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                throw DukeException.DukeTodoEmpty();","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                String[] descriptionAndTime \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String description \u003d descriptionAndTime[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                LocalDate deadlineTime \u003d LocalDate.parse(descriptionAndTime[1].trim());","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                return new Deadline(description, deadlineTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                String[] descriptionAndTime \u003d userInput.substring(6).split(\" /at \");","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                String description \u003d descriptionAndTime[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                LocalDate eventTime \u003d LocalDate.parse(descriptionAndTime[1].trim());","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                return new Event(description, eventTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Finds tasks that match the keyword.","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param userInput","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @return ArrayList\\\u003cTask\\\u003e of all tasks that match the keyword","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String userInput, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            String keyword \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            if (keyword.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                keyword \u003d keyword.trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            ArrayList\u003cTask\u003e matchTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    matchTasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return matchTasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw DukeException.DukeInvalidCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"vishandi":1,"-":92}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected LocalDate deadlineTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param isDone","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param deadlineTime","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Deadline(String description, boolean isDone, LocalDate deadlineTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Another constructor for Deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param DeadlineTime","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Deadline(String description, LocalDate DeadlineTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"        this(description, false, DeadlineTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Get the saved message corresponding to this task.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return save message for the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getSaveMessage() {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return String.format(\"D / 1 / %s / %s\", this.description, this.deadlineTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return String.format(\"D / 0 / %s / %s\", this.description, this.deadlineTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return String.format(\"[D][X] %s (by: %s)\", this.description,","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    this.deadlineTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return String.format(\"[D][ ] %s (by: %s)\", this.description,","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    this.deadlineTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":16,"-":36}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected LocalDate eventTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param isDone","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param eventTime","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Event(String description, boolean isDone, LocalDate eventTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Another constructor for Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param eventTime","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Event(String description, LocalDate eventTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"        this(description, false, eventTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Get the saved message corresponding to this task.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return save message for the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getSaveMessage() {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return String.format(\"E / 1 / %s / %s\", this.description, this.eventTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return String.format(\"E / 0 / %s / %s\", this.description, this.eventTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return String.format(\"[E][X] %s (at: %s)\", this.description,","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return String.format(\"[E][ ] %s (at: %s)\", this.description,","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":16,"-":36}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"    protected String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * @param isDone","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Gets String that corresponds to the Task to be saved.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return String","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public abstract String getSaveMessage();","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Marks the Task as Done.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Unmark the Task as Done.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the processed status of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return true if the task is done.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Getter function for the task\u0027s description.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return description of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":17,"-":35}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Get all tasks that is stored in this instance.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Getter function for tasks at index.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param index","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @return task at specified index","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Task getTaskAtIndex(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Marks task at specified index as done.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param index","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    public void markTaskAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Unmarks task at specified index as done.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param index","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    public void unmarkTaskAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.tasks.get(index).unmarkAsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Deletes task at specified index.","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"    public void deleteTaskAtIndex(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Task deleted \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        System.out.println(deleted);","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        System.out.printf(\"Now you have %s tasks in the list.\\n\", this.tasks.size());","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Add specified task to the list.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param task","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        System.out.printf(\"Now you have %s tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Add specified task to the list, but prints no message.","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param task","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void addTaskNoMessage(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return \"You don\u0027t have any task at the moment.\";","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            msg.append(\"Here are your current tasks:\");","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                msg.append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                msg.append(i + 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                msg.append(\". \");","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                msg.append(this.tasks.get(i)","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                        .toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return msg.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"vishandi":23,"-":83}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * Constructor for Todo Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param isDone","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Another constructor for Todo Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param description","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        this(description, false);","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Get the saved message corresponding to this task.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return save message for the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getSaveMessage() {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return String.format(\"T / 1 / %s\", this.description);","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return String.format(\"T / 0 / %s\", this.description);","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[T][X] %s\", this.description);","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[T][ ] %s\", this.description);","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":19,"-":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"todo read book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"todo return book","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"mark 3","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"vishandi":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vishandi":1,"-":33}}]
