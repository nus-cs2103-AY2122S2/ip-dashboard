[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"    protected String deadlineTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"    public Deadline(String description, boolean isDone, String deadlineTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"    public Deadline(String description, String DeadlineTime) {","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"        this(description, false, DeadlineTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[D][X] %s (by: %s)\", this.description, this.deadlineTime);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[D][ ] %s (by: %s)\", this.description, this.deadlineTime);","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"    private static final String[] COMMANDS \u003d new String[] {\"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\"};","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    private static final TaskList TASK_LIST \u003d new TaskList();","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"        initialize();","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"        while (true) {","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"                bye();","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"            processUserInput(userInput);","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"    public static void initialize() {","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Hello! I\u0027m Dr.Kafka!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"    public static void bye() {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    public static void processUserInput(String userInput) {","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"         if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"             System.out.println(TASK_LIST);","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"         } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"             String[] userInputs \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"             String command \u003d userInputs[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"             try {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"                 if (Arrays.stream(COMMANDS).noneMatch(command::equals)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"                     throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"                 }","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"                 switch (command) {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"                 case \"mark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"                     try {","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"                         int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"                         TASK_LIST.markTaskAsDone(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"                     } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(\"Sorry, I don\u0027t understand which task should I mark as done :(\");","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"                     } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"                         int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(String.format(\"Sorry, there is no no.%d task\", index));","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"                     }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"                     break;","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"                 case \"unmark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"                     try {","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"                         int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"                         TASK_LIST.unmarkTaskAsDone(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"                     } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(\"Sorry, I don\u0027t understand which task should I unmark as done :(\");","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"                     } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"                         int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(String.format(\"Sorry, there is no no.%d task\", index));","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"                     }","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"                     break;","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"                 case \"delete\":","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"                     try {","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"                         int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"                         TASK_LIST.deleteTaskAtIndex(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"                     } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(\"Sorry, I don\u0027t understand which task should I delete :(\");","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"                     } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"                         int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(String.format(\"Sorry, there is no no.%d task\", index));","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"                     }","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"                     break;","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"                 case \"todo\":","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"                     try {","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"                         String description \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"                         TASK_LIST.addTask(new Todo(description));","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"                     } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"                     }","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"                     break;","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"                 case \"deadline\":","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"                     try {","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"                         String[] descriptionAndTime \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2022-01-15"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"                         String description \u003d descriptionAndTime[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"                         String deadlineTime \u003d descriptionAndTime[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"                         TASK_LIST.addTask(new Deadline(description, deadlineTime));","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"                     } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(\"OOPS!!! Your command is incomplete :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"                     }","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"                     break;","lastModifiedDate":"2022-01-16"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"                 case \"event\":","lastModifiedDate":"2022-01-16"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"                     try {","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"                         String[] descriptionAndTime \u003d userInput.substring(6).split(\" /at \");","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"                         String description \u003d descriptionAndTime[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"                         String eventTime \u003d descriptionAndTime[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"                         TASK_LIST.addTask(new Event(description, eventTime));","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"                     } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"                         throw new DukeException(\"OOPS!!! Your command is incomplete :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"                     }","lastModifiedDate":"2022-01-16"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"                     break;","lastModifiedDate":"2022-01-16"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"                 }","lastModifiedDate":"2022-01-16"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"             } catch (DukeException d) {","lastModifiedDate":"2022-01-16"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"                 System.out.println(d.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"             }","lastModifiedDate":"2022-01-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         }","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"vishandi":110,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"        super(msg);","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"vishandi":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"    protected String eventTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"    public Event(String description, boolean isDone, String eventTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"        this(description, false, eventTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[E][X] %s (at: %s)\", this.description, this.eventTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[E][ ] %s (at: %s)\", this.description, this.eventTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"    protected String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":17}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"    public void markTaskAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"        System.out.println(taskList.get(index));","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    public void unmarkTaskAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        this.taskList.get(index).unmarkAsDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        System.out.println(taskList.get(index));","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    public void deleteTaskAtIndex(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"        Task deleted \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        System.out.println(deleted);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        System.out.printf(\"Now you have %s tasks in the list.\\n\", this.taskList.size());","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"        System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        System.out.printf(\"Now you have %s tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (this.taskList.isEmpty()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return \"You don\u0027t have any task at the moment.\";","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            msg.append(\"Here are your current tasks:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                msg.append(i + 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                msg.append(\". \");","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                msg.append(this.taskList.get(i).toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return msg.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"vishandi":35,"-":17}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"        this(description, false);","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[T][X] %s\", this.description);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"            return String.format(\"[T][ ] %s\", this.description);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"vishandi":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"todo read book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"todo return book","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"mark 3","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"vishandi":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vishandi":1,"-":33}}]
