[{"path":"src/main/java/siri/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":" * Class for the deadline items of the tasklist, with int done to be indicative of whether the task had been completed, String item to be the name of the task,","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":" * LocalDate eventDate as the due date for the deadline task (and LocalTime eventTime as due time for the deadline task).","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"    private static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-LLL-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    ","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"     * @param item a String to description of the Deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"     * @param done an int to indicate whether the item is done. 0 indicates not completed and 1 indicates completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"     * @param eventDate a LocalDate to represent the Deadline task due date.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"    public Deadline(String item, boolean isDone, LocalDate dueDate) {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"        super(item, isDone);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"     * Constructor for Event class.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"     * @param item a String to description of the Deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"     * @param done an int to indicate whether the item is done. 0 indicates not completed and 1 indicates completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"     * @param dlDate a LocalDate to represent the Deadline task due date.","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"     * @param dlTime a LocalTime to represent the Deadline task due time.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"    public Deadline(String item, boolean isDone, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"        super(item, isDone);","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"     * Compares date passed with the event task occurance.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"     * @param date the date that the Deadline task date is comparing to.","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"     * @return true if date is the same as the Deadline task date and false if the date is not the same as the Deadline task date (ignores format).","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"    public boolean dateCompare(LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"        return this.dueDate.equals(date);","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"     * Returns the String consisting details of Deadline task.","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"     * @return String representation of the event task details, including E to represent event task, whether it is done and task name, and date and time of event occurance.","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"lamwj98"},"content":"        String taskDetails;","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"lamwj98"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"lamwj98"},"content":"            taskDetails \u003d \"[D]\" + super.getTaskDetails() + \" (by: \" + this.dueDate.format(Deadline.dtf)+ \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"lamwj98"},"content":"            taskDetails \u003d \"[D]\" + super.getTaskDetails() + \" (by: \" + this.dueDate.format(Deadline.dtf) + \" \" + this.dueTime + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"lamwj98"},"content":"        return taskDetails;","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lamwj98"},"content":"     * Returns the string representation of the data for saving.","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"lamwj98"},"content":"     * @return a string representation of the task for saving.","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lamwj98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lamwj98"},"content":"    public String saveData() {","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lamwj98"},"content":"        String dataString;","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"lamwj98"},"content":"        if (this.dueTime \u003d\u003d null) {","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"lamwj98"},"content":"            dataString \u003d \"D \" + String.valueOf(this.isDone) + \" \" + this.item + \" /by \" + this.dueDate.format(dateFormat);","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"lamwj98"},"content":"            dataString \u003d \"D \" + String.valueOf(this.isDone) + \" \" + this.item + \" /by \" + this.dueDate.format(dateFormat) + \" \" + this.dueTime.format(timeFormat);","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"lamwj98"},"content":"        return dataString;","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lamwj98":89}},{"path":"src/main/java/siri/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":" * Class for the event items of the tasklist, with int done to be indicative of whether the task had been completed, String item to be the name of the task,","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":" * LocalDate eventDate as the date for the event, and LocalTime eventTime as time for the event.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    ","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    private static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-LLL-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"    private LocalTime eventTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"     * Constructor for Event class.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"     * @param item a String to description of the Event task.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"     * @param done an int to indicate whether the item is done. 0 indicates not completed and 1 indicates completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"     * @param eventDate a LocalDate to represent the Event task date.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"     * @param eventTime a LocalTime to represent the Event task time.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"    public Event(String item, boolean isDone, LocalDate eventDate, LocalTime eventTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"        super(item, isDone);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"     * Compares date passed with the Event task occurance.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"     * @param date the date that the Event task date is comparing to.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"     * @return true if date is the same as the Event task date and false if the date is not the same as the Task task date (ignores format).","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"    public boolean dateCompare(LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"        return this.eventDate.equals(date);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"     * Returns the String consisting details of Event task.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"     * @return String representation of the event task details, including E to represent event task, whether it is done and task name, and date and time of event occurance.","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"        String taskDetails \u003d \"[E]\" + super.getTaskDetails() + \" (at: \" + this.eventDate.format(Event.dtf) + \" \" + this.eventTime + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"        return taskDetails;","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"     * Returns the string representation of the data for saving.","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"     * @return a string representation of the task for saving.","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"    public String saveData() {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"lamwj98"},"content":"        String dataString \u003d \"E \" + String.valueOf(this.isDone) + \" \" + this.item + \" /at \" + this.eventDate.format(dateFormat) + \" \" + this.eventTime.format(timeFormat);","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"lamwj98"},"content":"        return dataString;","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lamwj98":66}},{"path":"src/main/java/siri/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":" * Class to make sense of user commands and execute the commands.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"class Parser {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"     * Constructor of Parser class.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"     * @param taskList TaskList object in which execution of the commands will be carried out on.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"    Parser(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"    ","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"     * Method to handle the command being passed in.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"     * @param command String representation of the command that is passed in.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"     * @return true to indicate further acceptance of command is allowed and false to indicate further acceptance of command is not allowed.","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"     * @throws SiriException if command structure is invalid, command is not recognised or if there are missing or extra fields in command.","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"    public boolean handleCommand(String command) throws SiriException{","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"        String[] inputSplit \u003d command.split(\" \", 2);","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"        boolean continueExecution \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"        if (inputSplit[0].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"            throw new SiriException(\"Please ENTER something!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"            switch (inputSplit[0]) {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"Please ENTER the item number to mark!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"                } else if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"There is currently no tasks!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"                        int index \u003d Integer.parseInt(inputSplit[1].trim());","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"                        index--;","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"                        if (index \u003e\u003d this.taskList.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"                            throw new SiriException(\"Please ENTER a number within the number of tasks!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"                        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"                            this.taskList.markItem(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"                            break;","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"                        ","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"                    } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"Please ENTER a valid item number to mark!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"Please ENTER the item number to unmark!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"lamwj98"},"content":"                } else if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"There is currently no tasks!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"lamwj98"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"lamwj98"},"content":"                        int index \u003d Integer.parseInt(inputSplit[1].trim());","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lamwj98"},"content":"                        index--;","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"lamwj98"},"content":"                        if (index \u003e\u003d this.taskList.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"lamwj98"},"content":"                            throw new SiriException(\"Please ENTER a number within the number of tasks!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"lamwj98"},"content":"                        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"lamwj98"},"content":"                            this.taskList.unmarkItem(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"lamwj98"},"content":"                            break;","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"lamwj98"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"lamwj98"},"content":"                        ","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"lamwj98"},"content":"                    } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"Please ENTER a valid item number to unmark!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"lamwj98"},"content":"            case \"list\":","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"lamwj98"},"content":"                    this.taskList.print();","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"lamwj98"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"OPPS!! list does not take in any parameter!!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"lamwj98"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"todo cannot be EMPTY!! Please ENTER something for todo!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"lamwj98"},"content":"                    ToDos todoTask \u003d new ToDos(inputSplit[1].trim(), false);","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"lamwj98"},"content":"                    this.taskList.addItem(todoTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"lamwj98"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"lamwj98"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"deadline cannot be EMPTY!! Please ENTER something for deadline!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"lamwj98"},"content":"                    String[] dlSplit \u003d inputSplit[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"lamwj98"},"content":"                    if (dlSplit.length \u003d\u003d 1 || dlSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"deadline has no date/time!! Please ENTER a date/time for deadline!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"lamwj98"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"lamwj98"},"content":"                        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"lamwj98"},"content":"                            Deadline dlTask;","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"lamwj98"},"content":"                            String[] dlDateTime \u003d dlSplit[1].split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"lamwj98"},"content":"                            LocalDate dlDate \u003d Parser.stringToDate(dlDateTime[0].trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":109,"author":{"gitId":"lamwj98"},"content":"                            if (dlDateTime.length \u003d\u003d 1 || dlDateTime[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"lamwj98"},"content":"                                dlTask \u003d new Deadline(dlSplit[0], false, dlDate);","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"lamwj98"},"content":"                            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"lamwj98"},"content":"                                LocalTime dlTime \u003d Parser.stringToTime(dlDateTime[1].trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":113,"author":{"gitId":"lamwj98"},"content":"                                dlTask \u003d new Deadline(dlSplit[0], false, dlDate, dlTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"lamwj98"},"content":"                            }                        ","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"lamwj98"},"content":"                            this.taskList.addItem(dlTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"lamwj98"},"content":"                            break;","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"lamwj98"},"content":"                        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"lamwj98"},"content":"                            throw new SiriException(\"deadline date/time format is wrong!!\\nPlease ENTER your date time in DD-MM-YYYY HH:MM (if applicable) format!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"lamwj98"},"content":"                        }","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"lamwj98"},"content":"            case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"event cannot be EMPTY!! Please ENTER something for event!!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"lamwj98"},"content":"                    String[] eventSplit \u003d inputSplit[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"lamwj98"},"content":"                    if (eventSplit.length \u003d\u003d 1 || eventSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"event has no date/time!! Please ENTER a date and time for event!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"lamwj98"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"lamwj98"},"content":"                        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"lamwj98"},"content":"                            String[] eventDateTime \u003d eventSplit[1].split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"lamwj98"},"content":"                            LocalDate eDate \u003d Parser.stringToDate(eventDateTime[0].trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":134,"author":{"gitId":"lamwj98"},"content":"                            Event eventTask;","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"lamwj98"},"content":"                            if (eventDateTime.length \u003d\u003d 1 || eventDateTime[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"lamwj98"},"content":"                                throw new SiriException(\"Missing date/time field!! Please ENTER date your date time in DD-MM-YYYY HH:MM format!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"lamwj98"},"content":"                            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"lamwj98"},"content":"                                LocalTime eTime \u003d Parser.stringToTime(eventDateTime[1].trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"lamwj98"},"content":"                                eventTask \u003d new Event(eventSplit[0], false, eDate, eTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"lamwj98"},"content":"                            }","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"lamwj98"},"content":"                            this.taskList.addItem(eventTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"lamwj98"},"content":"                            break;","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"lamwj98"},"content":"                        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"lamwj98"},"content":"                            throw new SiriException(\"event date/time format is wrong!!\\nPlease ENTER your date time in DD-MM-YYYY  HH:MM format!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"lamwj98"},"content":"                        }","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"lamwj98"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-21"},{"lineNumber":149,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":150,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"Please ENTER the item number to delete!!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"lamwj98"},"content":"                } else if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":152,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"There is currently no tasks!!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":153,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":154,"author":{"gitId":"lamwj98"},"content":"                    try {","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"lamwj98"},"content":"                        int index \u003d Integer.parseInt(inputSplit[1].trim());","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"lamwj98"},"content":"                        index--;","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":158,"author":{"gitId":"lamwj98"},"content":"                        if (index \u003e\u003d this.taskList.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"lamwj98"},"content":"                            throw new SiriException(\"Please ENTER a number within the number of tasks!!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":160,"author":{"gitId":"lamwj98"},"content":"                        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":161,"author":{"gitId":"lamwj98"},"content":"                            this.taskList.deleteTask(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":162,"author":{"gitId":"lamwj98"},"content":"                            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":163,"author":{"gitId":"lamwj98"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":164,"author":{"gitId":"lamwj98"},"content":"                        ","lastModifiedDate":"2022-01-21"},{"lineNumber":165,"author":{"gitId":"lamwj98"},"content":"                    } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-21"},{"lineNumber":166,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"Please ENTER a valid item number to unmark!!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":167,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":168,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":169,"author":{"gitId":"lamwj98"},"content":"            case \"eprint\":","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"Please ENTER a date!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"lamwj98"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"lamwj98"},"content":"                        LocalDate eCheckedDate \u003d Parser.stringToDate(inputSplit[1].trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":175,"author":{"gitId":"lamwj98"},"content":"                        this.taskList.printEventOn(eCheckedDate);","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"lamwj98"},"content":"                    } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"Please ENTER your date in DD-MM-YYYY format!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"lamwj98"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"lamwj98"},"content":"            case \"dlprint\":","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"Please ENTER a date!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"lamwj98"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"lamwj98"},"content":"                        LocalDate dlCheckedDate \u003d Parser.stringToDate(inputSplit[1].trim());","lastModifiedDate":"2022-02-01"},{"lineNumber":187,"author":{"gitId":"lamwj98"},"content":"                        this.taskList.printDeadlineOn(dlCheckedDate);","lastModifiedDate":"2022-01-30"},{"lineNumber":188,"author":{"gitId":"lamwj98"},"content":"                    } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"lamwj98"},"content":"                        throw new SiriException(\"Please ENTER your date in DD-MM-YYYY format!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"lamwj98"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"lamwj98"},"content":"            case \"find\":","lastModifiedDate":"2022-02-02"},{"lineNumber":194,"author":{"gitId":"lamwj98"},"content":"                if (inputSplit.length \u003d\u003d 1 || inputSplit[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":195,"author":{"gitId":"lamwj98"},"content":"                    throw new SiriException(\"Please ENTER a word to find!!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"lamwj98"},"content":"                } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":197,"author":{"gitId":"lamwj98"},"content":"                    this.taskList.find(inputSplit[1].trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":199,"author":{"gitId":"lamwj98"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":200,"author":{"gitId":"lamwj98"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-30"},{"lineNumber":201,"author":{"gitId":"lamwj98"},"content":"                continueExecution \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":202,"author":{"gitId":"lamwj98"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":203,"author":{"gitId":"lamwj98"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":204,"author":{"gitId":"lamwj98"},"content":"                throw new SiriException(\"OPPS!! I did not understand what you had keyed!! Please try again!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":205,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":206,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":208,"author":{"gitId":"lamwj98"},"content":"        return continueExecution;","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":210,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":211,"author":{"gitId":"lamwj98"},"content":"    private static LocalDate stringToDate(String dateString) {","lastModifiedDate":"2022-02-01"},{"lineNumber":212,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-25"},{"lineNumber":213,"author":{"gitId":"lamwj98"},"content":"        LocalDate ld \u003d LocalDate.parse(dateString, dtf);","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":215,"author":{"gitId":"lamwj98"},"content":"        return ld;","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"lamwj98"},"content":"    private static LocalTime stringToTime(String timeString) {","lastModifiedDate":"2022-02-01"},{"lineNumber":219,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":220,"author":{"gitId":"lamwj98"},"content":"        LocalTime lt \u003d LocalTime.parse(timeString, dtf);","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":222,"author":{"gitId":"lamwj98"},"content":"        return lt;","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":224,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":225,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lamwj98":225}},{"path":"src/main/java/siri/Siri.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":" * Public class for the main program execution.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"public class Siri {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"    private Ui ui; ","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"     * Constructor for Siri class.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"     * @param filePath in which data is to be loaded and saved.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"    public Siri(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"        ui \u003d new Ui(\"   -----      O    -----      O\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"                + \" /   _   \\\\   __   |       \\\\   __\\n\" ","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"                + \" |  | |__|  |  |  |   O   |  |  |\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"                + \" |   ----\\\\  |  |  |       /  |  |\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"                + \"  \\\\ __   |  |  |  |   ---    |  |\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"                + \" |---|   |  |  |  |       \\\\  |  |\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"                + \"  \\\\______/  |__|  |___|\\\\___\\\\ |__|\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"            Ui.startUpSavedData();","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"            ui.startUp();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"        } catch (SiriException se) {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"            ui.startUp();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"        new Siri(\"../data/data.txt\").runApp();","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"    private void runApp() {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"        boolean continueExecution \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"        while (continueExecution) {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"                continueExecution \u003d parser.handleCommand(Ui.takeInput());","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"            } catch (SiriException se) {","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"                System.out.println(se.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"            Ui.separator();","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"        ","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"        storage.save(tasks.saveData());","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"        Ui.exit();","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lamwj98":61}},{"path":"src/main/java/siri/SiriException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":" * This class represents an exception that is thrown by the program. Exceptions thrown are exclusive to the program.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"class SiriException extends RuntimeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"     * Constructor for the class.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"     * @param errMsg message to describe the exception faced.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"    public SiriException(String errMsg) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"        super(errMsg);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lamwj98":15}},{"path":"src/main/java/siri/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":" * Class that deals with storing and loading of data.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"class Storage {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    private File directory;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    private File dataFile;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"    private String fileDirectoryPath;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"    private String filePath;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"     * Constructor of Storage class.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"     * @param filePath string representation of the file path to allow loading from the file. If file doesn\u0027t exist, file will be created based on the path provided. ","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"     * If empty String is provided, cwd will create a data folder and a data.txt file inside to be saved.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"        if (filePath \u003d\u003d \"\") {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"            this.filePath \u003d \"data/data.txt\";","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"        this.fileDirectoryPath \u003d this.filePath.substring(0, filePath.lastIndexOf(\u0027/\u0027));","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"        this.directory \u003d new File(fileDirectoryPath);","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"        this.dataFile \u003d new File(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"     * Loads the file data (if there is a valid data file).","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"     * @return String representation of the data being loaded.","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"     * @throws SiriException if file doesn\u0027t exist, directory doesn\u0027t exist, or when file consist no data.","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"    public String load() throws SiriException {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"        String loadedData \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"        if (directory.exists()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"            if (dataFile.exists()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"                try {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"                    Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"                    while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"                        loadedData \u003d loadedData + sc.nextLine() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"                    sc.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"                } catch (IOException ioe) {","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"                    ioe.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"lamwj98"},"content":"                throw new SiriException(\"File does not exist!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"lamwj98"},"content":"            //dirFile don\u0027t exist","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"lamwj98"},"content":"            directory.mkdir();","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"lamwj98"},"content":"            throw new SiriException(\"Directory and file does not exist!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"lamwj98"},"content":"        if (loadedData.trim() \u003d\u003d \"\") {","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"lamwj98"},"content":"            throw new SiriException(\"No data found!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"lamwj98"},"content":"            return loadedData;","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"lamwj98"},"content":"     * Saves data passed into the destination as stated when Storage instance is being initialised.","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"lamwj98"},"content":"     * @param dataToSave String representation of data to be saved.","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"lamwj98"},"content":"    public void save(String dataToSave) {","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"lamwj98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"lamwj98"},"content":"            if (dataFile.exists() \u003d\u003d false) {","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"lamwj98"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"lamwj98"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"lamwj98"},"content":"                dataFile.delete();","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"lamwj98"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"lamwj98"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"lamwj98"},"content":"                System.out.println(\"Error creating data file!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"lamwj98"},"content":"                System.out.println(ioe.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"lamwj98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"lamwj98"},"content":"            FileWriter fileWriter \u003d new FileWriter(dataFile);","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"lamwj98"},"content":"            fileWriter.write(dataToSave);","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"lamwj98"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"lamwj98"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"lamwj98"},"content":"            System.out.println(\"Error writing to file!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lamwj98":104}},{"path":"src/main/java/siri/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":" * Class for the individual items of the task list, with int done to be indicative of whether the task had been completed and String item to be the name of the task.  ","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"    protected String item;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"     * Constructor for Task class.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"     * @param item a String to description of the Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"     * @param done an int to indicate whether the item is done. 0 indicates not completed and 1 indicates completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"    Task(String item, boolean isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"     * Returns a symbol the doneness of the task. ","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"     * If task is done, return \u0027X\u0027, else return empty space to indicate task not done.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"     * @param done integer to indicate whether done or undone. 1 represents the done and 0 represents undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"     * @return a string \" \" to indicate the task had not been completed and \"X\" to indicate the task had be completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"    private String doneSymbol(boolean isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"            return \"X\";","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"            return \" \";","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"     * Changes isDone to true (mark task as done).","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"    public void markTaskDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"        System.out.printf(\"Great job for completing task:\\n%s\\n\", this.getTaskDetails());","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"     * Changes isDone to false (mark task as undone).","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"    public void markTaskUndone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"        System.out.printf(\"Task marked as uncompleted:\\n%s\\n\", this.getTaskDetails());","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"     * Returns the String consisting details of Task.","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"     * @return String representation of the task details, including whether it is done and task name.","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"        String taskDetails \u003d \"[\" + doneSymbol(this.isDone) + \"] \" + this.item;","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"        return taskDetails;","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"lamwj98"},"content":"     * Returns the String representation of the data for saving.","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"lamwj98"},"content":"     * @return a string representation of the task for saving.","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"lamwj98"},"content":"    public String saveData() {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lamwj98"},"content":"        String dataString \u003d String.valueOf(this.isDone) + \" \" + this.item;","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"lamwj98"},"content":"        return dataString;","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lamwj98":71}},{"path":"src/main/java/siri/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"class TaskList {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    private ArrayList\u003cDeadline\u003e deadlineList;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"    private ArrayList\u003cEvent\u003e eventList;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"        list \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"        deadlineList \u003d new ArrayList\u003cDeadline\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"        eventList \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"    public TaskList(String loadData) {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"        list \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"        deadlineList \u003d new ArrayList\u003cDeadline\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"        eventList \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"        ","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"        String[] loadDataSplit \u003d loadData.split(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"        ","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"        for (int i \u003d 0; i \u003c loadDataSplit.length; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"            String curr \u003d loadDataSplit[i].trim();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"            startUpAddTask(curr);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"        System.out.printf(\"Data had been loaded!! Current number of task: %d\\n\", this.list.size());","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"     * Adds the passed task into the TaskList.","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"     * @param task to be added.","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"        list.add(task);","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"            Deadline tmp \u003d (Deadline) task;","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"            deadlineList.add(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"            Event tmp \u003d (Event) task;","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"            eventList.add(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lamwj98"},"content":"        System.out.printf(\"Got it! I\u0027ve added this task:\\n%s\\nTotal tasks on the list: %d\\n\",","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lamwj98"},"content":"                            task.getTaskDetails(), this.list.size());","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lamwj98"},"content":"     * Deletes item of the given index from TaskList.","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"lamwj98"},"content":"     * @param index integer to indicate the index of the item that is selected to be deleted.","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lamwj98"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"lamwj98"},"content":"        Task removedTask \u003d list.remove(index);","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"lamwj98"},"content":"        if (removedTask instanceof Deadline) {","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lamwj98"},"content":"            Deadline tmp \u003d (Deadline) removedTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"lamwj98"},"content":"            deadlineList.remove(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"lamwj98"},"content":"        } else if (removedTask instanceof Event) {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"lamwj98"},"content":"            Event tmp \u003d (Event) removedTask;","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"lamwj98"},"content":"            eventList.remove(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"lamwj98"},"content":"        System.out.printf(\"Successfully removed the following task:\\n%s\\nYou have %d tasks remaining!!\\n\", removedTask.getTaskDetails(), this.list.size());","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"lamwj98"},"content":"     * Prints the TaskList out in order with status of each task.","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"lamwj98"},"content":"    public void print() {","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"lamwj98"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"lamwj98"},"content":"            System.out.println(\"There is currently no item on the list!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"lamwj98"},"content":"            System.out.println(\"Task List:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"lamwj98"},"content":"            list.forEach((item) -\u003e System.out.println((list.indexOf(item)+1) + \". \" + item.getTaskDetails()));","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"lamwj98"},"content":"     * Marks item of the given index of tasklist done.","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"lamwj98"},"content":"    public void markItem(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"lamwj98"},"content":"        list.get(index).markTaskDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"lamwj98"},"content":"     * Marks item of the given index of tasklist undone.","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"lamwj98"},"content":"     * @param index integer to indicate the item index to be unmarked.","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"lamwj98"},"content":"    public void unmarkItem(int index) {","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"lamwj98"},"content":"        list.get(index).markTaskUndone();","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"lamwj98"},"content":"     * Prints the events in the tasklist that falls on the date that is passed in as parameter.","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"lamwj98"},"content":"     * @param date the date that the is being referenced to.","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":106,"author":{"gitId":"lamwj98"},"content":"    public void printEventOn(LocalDate date) {","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"lamwj98"},"content":"        ArrayList\u003cEvent\u003e tmp \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-LLL-yyyy\");","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"lamwj98"},"content":"        if (eventList.size() !\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":111,"author":{"gitId":"lamwj98"},"content":"            for (int i \u003d 0; i \u003c eventList.size(); i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"lamwj98"},"content":"                if (eventList.get(i).dateCompare(date)) {","lastModifiedDate":"2022-02-01"},{"lineNumber":113,"author":{"gitId":"lamwj98"},"content":"                    tmp.add(eventList.get(i));","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"lamwj98"},"content":"            if (tmp.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"lamwj98"},"content":"                System.out.printf(\"No event on %s!!\\n\", date.format(dtf));","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"lamwj98"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"lamwj98"},"content":"                System.out.printf(\"%d events on %s:\\n\", tmp.size(), date.format(dtf));","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"lamwj98"},"content":"                tmp.forEach((item) -\u003e System.out.println((tmp.indexOf(item) + 1) + \". \" + item.getTaskDetails()));","lastModifiedDate":"2022-02-01"},{"lineNumber":122,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"lamwj98"},"content":"                System.out.printf(\"No event on %s!!\\n\", date.format(dtf));","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":129,"author":{"gitId":"lamwj98"},"content":"     * Prints the deadlines in the tasklist that falls on the date that is passed in as parameter.","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":131,"author":{"gitId":"lamwj98"},"content":"     * @param date the date that the is being referenced to.","lastModifiedDate":"2022-02-01"},{"lineNumber":132,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":133,"author":{"gitId":"lamwj98"},"content":"    public void printDeadlineOn(LocalDate date) {","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"lamwj98"},"content":"        ArrayList\u003cDeadline\u003e tmp \u003d new ArrayList\u003cDeadline\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-LLL-yyyy\");","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"lamwj98"},"content":"        if (deadlineList.size() !\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"lamwj98"},"content":"            for (int i \u003d 0; i \u003c deadlineList.size(); i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"lamwj98"},"content":"                if (deadlineList.get(i).dateCompare(date)) {","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"lamwj98"},"content":"                    tmp.add(deadlineList.get(i));","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":143,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":144,"author":{"gitId":"lamwj98"},"content":"            if (tmp.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":145,"author":{"gitId":"lamwj98"},"content":"                System.out.printf(\"No deadline on %s!!\\n\", date.format(dtf));","lastModifiedDate":"2022-01-30"},{"lineNumber":146,"author":{"gitId":"lamwj98"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":147,"author":{"gitId":"lamwj98"},"content":"                System.out.printf(\"%d deadline item(s) on %s:\\n\", tmp.size(), date.format(dtf));","lastModifiedDate":"2022-01-30"},{"lineNumber":148,"author":{"gitId":"lamwj98"},"content":"                tmp.forEach((item) -\u003e System.out.println((tmp.indexOf(item) + 1) + \". \" + item.getTaskDetails()));","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":150,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":151,"author":{"gitId":"lamwj98"},"content":"            System.out.printf(\"No deadline on %s!!\\n\", date.format(dtf));","lastModifiedDate":"2022-01-30"},{"lineNumber":152,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":153,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":154,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"lamwj98"},"content":"    public void find(String keyword) {","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"lamwj98"},"content":"        ArrayList\u003cTask\u003e tmp \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":158,"author":{"gitId":"lamwj98"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":159,"author":{"gitId":"lamwj98"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"lamwj98"},"content":"                if (list.get(i).item.contains(keyword)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":161,"author":{"gitId":"lamwj98"},"content":"                    tmp.add(list.get(i));","lastModifiedDate":"2022-02-02"},{"lineNumber":162,"author":{"gitId":"lamwj98"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":163,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":164,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"lamwj98"},"content":"            if (tmp.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"lamwj98"},"content":"                System.out.printf(\"No item on the list contains \\\"%s\\\"!!\\n\", keyword);","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"lamwj98"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"lamwj98"},"content":"                System.out.println(\"Here are the matching tasks in you list:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"lamwj98"},"content":"                tmp.forEach((item) -\u003e System.out.println((tmp.indexOf(item) + 1) + \". \" + item.getTaskDetails()));","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"lamwj98"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"lamwj98"},"content":"            System.out.println(\"There are currently no item on the list!!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":173,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"lamwj98"},"content":"    } ","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"lamwj98"},"content":"    private void startUpAddTask(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":177,"author":{"gitId":"lamwj98"},"content":"        String[] inputSplit \u003d input.split(\" \", 3);","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"lamwj98"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":180,"author":{"gitId":"lamwj98"},"content":"            switch (inputSplit[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":181,"author":{"gitId":"lamwj98"},"content":"                case \"T\":","lastModifiedDate":"2022-01-30"},{"lineNumber":182,"author":{"gitId":"lamwj98"},"content":"                    ToDos todo \u003d new ToDos(inputSplit[2].trim(), Boolean.valueOf(inputSplit[1].trim()));","lastModifiedDate":"2022-02-02"},{"lineNumber":183,"author":{"gitId":"lamwj98"},"content":"                    list.add(todo);","lastModifiedDate":"2022-02-01"},{"lineNumber":184,"author":{"gitId":"lamwj98"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":185,"author":{"gitId":"lamwj98"},"content":"                case \"D\":","lastModifiedDate":"2022-01-30"},{"lineNumber":186,"author":{"gitId":"lamwj98"},"content":"                    String[] dlSubSplit \u003d inputSplit[2].split(\" /by \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":187,"author":{"gitId":"lamwj98"},"content":"                    String[] dlSubSplit2 \u003d dlSubSplit[1].split(\" \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":188,"author":{"gitId":"lamwj98"},"content":"                    Deadline dl;","lastModifiedDate":"2022-01-30"},{"lineNumber":189,"author":{"gitId":"lamwj98"},"content":"                    if (dlSubSplit2.length \u003d\u003d 1 || dlSubSplit2[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":190,"author":{"gitId":"lamwj98"},"content":"                        dl \u003d new Deadline(dlSubSplit[0].trim(), Boolean.valueOf(inputSplit[1].trim()), TaskList.stringToDate(dlSubSplit[1].trim()));","lastModifiedDate":"2022-02-02"},{"lineNumber":191,"author":{"gitId":"lamwj98"},"content":"                    } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":192,"author":{"gitId":"lamwj98"},"content":"                        dl \u003d new Deadline(dlSubSplit[0].trim(), Boolean.valueOf(inputSplit[1].trim()), TaskList.stringToDate(dlSubSplit2[0]), TaskList.stringToTime(dlSubSplit2[1]));","lastModifiedDate":"2022-02-02"},{"lineNumber":193,"author":{"gitId":"lamwj98"},"content":"                    }","lastModifiedDate":"2022-01-30"},{"lineNumber":194,"author":{"gitId":"lamwj98"},"content":"                    list.add(dl);","lastModifiedDate":"2022-02-01"},{"lineNumber":195,"author":{"gitId":"lamwj98"},"content":"                    deadlineList.add(dl);","lastModifiedDate":"2022-02-01"},{"lineNumber":196,"author":{"gitId":"lamwj98"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":197,"author":{"gitId":"lamwj98"},"content":"                case \"E\":","lastModifiedDate":"2022-01-30"},{"lineNumber":198,"author":{"gitId":"lamwj98"},"content":"                    String[] eSubSplit \u003d inputSplit[2].split(\" /at \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"lamwj98"},"content":"                    String[] eSubSplit2 \u003d eSubSplit[1].split(\" \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":200,"author":{"gitId":"lamwj98"},"content":"                    Event e \u003d new Event(eSubSplit[0].trim(), Boolean.valueOf(inputSplit[1].trim()), TaskList.stringToDate(eSubSplit2[0].trim()), TaskList.stringToTime(eSubSplit2[1].trim()));","lastModifiedDate":"2022-02-02"},{"lineNumber":201,"author":{"gitId":"lamwj98"},"content":"                    list.add(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":202,"author":{"gitId":"lamwj98"},"content":"                    eventList.add(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":203,"author":{"gitId":"lamwj98"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":204,"author":{"gitId":"lamwj98"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":205,"author":{"gitId":"lamwj98"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-01-30"},{"lineNumber":206,"author":{"gitId":"lamwj98"},"content":"            throw new SiriException(\"Error LOADING data!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":207,"author":{"gitId":"lamwj98"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":208,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":209,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":210,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":211,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":212,"author":{"gitId":"lamwj98"},"content":"     * Returns the number of items in the tasklist.","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":214,"author":{"gitId":"lamwj98"},"content":"     * @return the number of items in the tasklist.","lastModifiedDate":"2022-02-01"},{"lineNumber":215,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":216,"author":{"gitId":"lamwj98"},"content":"    public int size() {","lastModifiedDate":"2022-01-30"},{"lineNumber":217,"author":{"gitId":"lamwj98"},"content":"        return this.list.size();","lastModifiedDate":"2022-02-01"},{"lineNumber":218,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":219,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":220,"author":{"gitId":"lamwj98"},"content":"    public String saveData() {","lastModifiedDate":"2022-01-30"},{"lineNumber":221,"author":{"gitId":"lamwj98"},"content":"        StringBuilder returned \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":222,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":223,"author":{"gitId":"lamwj98"},"content":"        list.forEach((item) -\u003e returned.append(item.saveData() + \"\\n\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":224,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":225,"author":{"gitId":"lamwj98"},"content":"        return returned.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":226,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":227,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":228,"author":{"gitId":"lamwj98"},"content":"    private static LocalDate stringToDate(String dateString) {","lastModifiedDate":"2022-02-01"},{"lineNumber":229,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-30"},{"lineNumber":230,"author":{"gitId":"lamwj98"},"content":"        LocalDate ld \u003d LocalDate.parse(dateString, dtf);","lastModifiedDate":"2022-01-30"},{"lineNumber":231,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":232,"author":{"gitId":"lamwj98"},"content":"        return ld;","lastModifiedDate":"2022-01-30"},{"lineNumber":233,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":234,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":235,"author":{"gitId":"lamwj98"},"content":"    private static LocalTime stringToTime(String timeString) {","lastModifiedDate":"2022-02-01"},{"lineNumber":236,"author":{"gitId":"lamwj98"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-30"},{"lineNumber":237,"author":{"gitId":"lamwj98"},"content":"        LocalTime lt \u003d LocalTime.parse(timeString, dtf);","lastModifiedDate":"2022-01-30"},{"lineNumber":238,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":239,"author":{"gitId":"lamwj98"},"content":"        return lt;","lastModifiedDate":"2022-01-30"},{"lineNumber":240,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":241,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lamwj98":241}},{"path":"src/main/java/siri/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"class ToDos extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"     * Constructor for ToDos class.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"     * @param item a String to description of the ToDos task.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"     * @param done an int to indicate whether the item is done. 0 indicates not completed and 1 indicates completed.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"    ToDos (String item, boolean isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"        super(item, isDone);","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"     * Method to get String of task category, status and task name.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"        String taskDetails \u003d \"[T]\" + super.getTaskDetails();","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"        return taskDetails;","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"     * Method to return the string representation of the data for saving.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"     * @return a string representation of the task for saving.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"    public String saveData() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"        String dataString \u003d \"T \" + String.valueOf(this.isDone) + \" \" + this.item;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"        return dataString;","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lamwj98":34}},{"path":"src/main/java/siri/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"class Ui {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"    private String logo;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"    public Ui(String logo) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"        this.logo \u003d logo;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"    public static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"     * Class method to print the start up message.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"    public void startUp() {","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"        System.out.println(\"Hello from\\n\" + this.logo);","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"     * Class method to print additional message if there is a backlog data.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"    public static void startUpSavedData() {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"lamwj98"},"content":"        System.out.println(\"Welcome back!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"lamwj98"},"content":"     * Class method to allow for input to be taken in.","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lamwj98"},"content":"     * ","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"lamwj98"},"content":"     * @return String of the input that is taken in.","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"lamwj98"},"content":"    public static String takeInput() {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lamwj98"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lamwj98"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lamwj98"},"content":"     * Class method to print a separator between different commands.","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"lamwj98"},"content":"    public static void separator() {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"lamwj98"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"lamwj98"},"content":"    ","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"lamwj98"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"lamwj98"},"content":"     * Class method to be printed when exiting the application.","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"lamwj98"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"lamwj98"},"content":"    public static void exit() {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lamwj98"},"content":"        sc.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"lamwj98"},"content":"        System.out.println(\"Bye!! Hope to see you again soon!!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"lamwj98":51}},{"path":"src/test/java/siri/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"class DeadlineTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"    void getItemAndStatus() {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"        Deadline dlTask \u003d new Deadline(\"return book\", false, LocalDate.now());","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"        String expectedOutput \u003d \"[D][ ] return book\" + \" (by: \" + LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd-LLL-yyyy\"))+ \")\";","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"        assertEquals(expectedOutput, dlTask.getItemAndStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lamwj98":17}},{"path":"src/test/java/siri/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"public class ToDosTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"    void saveDataTest() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"        ToDos todo \u003d new ToDos(\"return book\", false);","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"        String expectedOuput \u003d \"T false return book\";","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"        assertEquals(expectedOuput, todo.saveData());","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lamwj98":15}},{"path":"src/test/java/siri/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"package siri;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"public class UiTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"    public void separatorTest() {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"        ByteArrayOutputStream outputContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"        System.setOut(new PrintStream(outputContent));","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lamwj98"},"content":"        new Ui().separator();","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lamwj98"},"content":"        assertEquals(expectedOutput, outputContent.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lamwj98"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lamwj98"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lamwj98"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lamwj98":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lamwj98"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lamwj98"},"content":"deadline return book /by 5 Mar","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lamwj98"},"content":"event project meeting /at 6 Mar 5pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lamwj98"},"content":"mark 0","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"lamwj98"},"content":"mark 5","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"lamwj98"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lamwj98"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lamwj98"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lamwj98"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"lamwj98"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"lamwj98"},"content":"deadline hi","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"lamwj98"},"content":"unmark","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"lamwj98"},"content":"unmark abc","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"lamwj98"},"content":"list 123","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"lamwj98"},"content":"delete 1","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"lamwj98"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"lamwj98"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lamwj98":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lamwj98"},"content":"java -classpath ../bin Siri \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamwj98":1,"-":37}}]
