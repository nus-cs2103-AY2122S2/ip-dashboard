[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    String javaFxVersion \u003d \u002714\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.7.1\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tsumian":16,"-":44}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"ret\u003d0","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    fi","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"done","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"exit $ret","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tsumian":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"awk \u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    BEGIN {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"        ret \u003d 1","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    END {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"        exit ret","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"\u0027","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tsumian":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"awk \u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"    BEGIN {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    {","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"            ret \u003d 1","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    END {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        exit ret","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"\u0027","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tsumian":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    fi","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"done","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"exit $ret","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tsumian":11}},{"path":"src/main/java/Duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.EmptyMessageException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.WrongDateFormatException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"public class Commands {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    private final ListStorage myStorage;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    private final Printer myPrinter;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    private final UiPrinter myUiPrinter \u003d new UiPrinter();","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"     * Constructor for Commands. Commands contain a ListStorage","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"     * and Printer class.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * @param listStorage Specifies a ListStorage to store commands","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * @param printer Printer to print commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    public Commands(ListStorage listStorage, Printer printer) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"        this.myStorage \u003d listStorage;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        this.myPrinter \u003d printer;","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"     * Prints goodbye message.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    public String cmdBye() {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"        myPrinter.printBye();","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printBye();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"     * Parses ToDo command. Parses command and description.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"     * @param cmd Command to be parsed.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"     * @throws EmptyMessageException Throws exception when there is no description.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    public String cmdTodo(String cmd) throws EmptyMessageException {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        String[] parsedCmd \u003d Parser.parseCmdAndDes(cmd);","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"        if (cmd.length() \u003d\u003d 4) {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"            throw new EmptyMessageException(\"Todo Error\");","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        Task newTask \u003d new ToDo(parsedCmd[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        assert myStorage.length() !\u003d 0 : \"Task was not added successfully\";","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        myPrinter.printTask(newTask, myStorage.length());","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printTask(newTask, myStorage.length());","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     * Parses Deadline command. Parses description and deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"     * @param cmd Command to be parsed.","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"     * @throws EmptyMessageException Thrown when there is no description.","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"     * @throws WrongDateFormatException Thrown when date format is wrong.","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"    public String cmdDeadline(String cmd) throws EmptyMessageException, WrongDateFormatException {","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        if (cmd.length() \u003d\u003d 8) {","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"            throw new EmptyMessageException(\"Deadline Error\");","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        String[] parsedCmd \u003d Parser.parseCmdAndDes(cmd);","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        String[] deadline \u003d Parser.splitDeadlineAndTime(parsedCmd[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        String[] checkException \u003d deadline[1].split(\"-\", 3);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        if ((deadline[1].length() !\u003d 10 \u0026\u0026 deadline[1].length() \u003c 17) || deadline[1].length() \u003e 18) {","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"            //not of correct length","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong date format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"        } else if (checkException[0].length() !\u003d 4) {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"            //year was not put first","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong date format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        } else if (deadline[1].length() !\u003d 10 \u0026\u0026 !deadline[1].contains(\":\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong time format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        } else if (deadline[1].length() !\u003d 10 \u0026\u0026 !deadline[1].contains(\"AM\") \u0026\u0026 !deadline[1].contains(\"PM\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong time format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        //think about how to handle missing deadline exceptions","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        Task newTask \u003d new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        assert myStorage.length() !\u003d 0 : \"Task was not added successfully\";","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"        myPrinter.printTask(newTask, myStorage.length());","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printTask(newTask, myStorage.length());","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"     * Parses Event command. Parses description and event timing.","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"     * @param cmd Command to be parsed","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"     * @throws EmptyMessageException Thrown when there is no description.","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"     * @throws WrongDateFormatException Thwon when date format is wrong.","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"    public String cmdEvent(String cmd) throws EmptyMessageException, WrongDateFormatException {","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"        if (cmd.length() \u003d\u003d 5) {","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"            throw new EmptyMessageException(\"Event Error\");","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"        String[] parsedCmd \u003d Parser.parseCmdAndDes(cmd);","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"        String[] event \u003d Parser.splitEventAndTime(parsedCmd[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"        String[] checkException \u003d event[1].split(\"-\", 3);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"        //think about how to handle missing at exceptions","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"        if ((event[1].length() !\u003d 10 \u0026\u0026 event[1].length() \u003c 17) || event[1].length() \u003e 18) {","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"            //not of correct length","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong date format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"tsumian"},"content":"        } else if (checkException[0].length() !\u003d 4) {","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"tsumian"},"content":"            //year was not put first","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong date format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"tsumian"},"content":"        } else if (event[1].length() !\u003d 10 \u0026\u0026 !event[1].contains(\":\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong time format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"tsumian"},"content":"        } else if (event[1].length() !\u003d 10 \u0026\u0026 !event[1].contains(\"AM\") \u0026\u0026 !event[1].contains(\"PM\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"            throw new WrongDateFormatException(\"Wrong time format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"tsumian"},"content":"        Task newTask \u003d new Event(event[0], event[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"        assert myStorage.length() !\u003d 0 : \"Task was not added successfully\";","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"tsumian"},"content":"        myPrinter.printTask(newTask, myStorage.length());","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printTask(newTask, myStorage.length());","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"tsumian"},"content":"     * Parses list command. Handles empty lists and","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"     * lists with multiple tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"tsumian"},"content":"    public String cmdList() {","lastModifiedDate":"2022-02-04"},{"lineNumber":121,"author":{"gitId":"tsumian"},"content":"        if (myStorage.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"tsumian"},"content":"            myPrinter.printEmptyList();","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"            return myUiPrinter.printEmptyList();","lastModifiedDate":"2022-02-04"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"            myPrinter.printList(myStorage);","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"tsumian"},"content":"            return myUiPrinter.printList(myStorage);","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"     * Handles Unmark command.","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be unmarked.","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"tsumian"},"content":"    public String cmdUnmark(int taskNumber) {","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"tsumian"},"content":"        myStorage.findTask(taskNumber).unmark();","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"tsumian"},"content":"        myPrinter.printUnmark(myStorage, taskNumber);","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printUnmark(myStorage, taskNumber);","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"tsumian"},"content":"     * Handles mark command.","lastModifiedDate":"2022-01-30"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be marked.","lastModifiedDate":"2022-01-30"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"    public String cmdMark(int taskNumber) {","lastModifiedDate":"2022-02-04"},{"lineNumber":147,"author":{"gitId":"tsumian"},"content":"        myStorage.findTask(taskNumber).markAsDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"tsumian"},"content":"        myPrinter.printMark(myStorage, taskNumber);","lastModifiedDate":"2022-01-21"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printMark(myStorage, taskNumber);","lastModifiedDate":"2022-02-04"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"     * Handles delete command.","lastModifiedDate":"2022-01-30"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"    public String cmdDelete(int taskNumber) {","lastModifiedDate":"2022-02-04"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"        myPrinter.printDelete(myStorage, taskNumber);","lastModifiedDate":"2022-01-21"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"        String result \u003d myUiPrinter.printDelete(myStorage, taskNumber);","lastModifiedDate":"2022-02-04"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"        myStorage.deleteTask(taskNumber);","lastModifiedDate":"2022-01-21"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"        return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"     * Handles find command. Prints our a list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"     * with keyword in description.","lastModifiedDate":"2022-01-30"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"     * @param cmd Command to find.","lastModifiedDate":"2022-01-30"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"    public String cmdFind(String cmd) {","lastModifiedDate":"2022-02-04"},{"lineNumber":171,"author":{"gitId":"tsumian"},"content":"        String[] keyword \u003d Parser.parseCmdAndDes(cmd);","lastModifiedDate":"2022-01-30"},{"lineNumber":172,"author":{"gitId":"tsumian"},"content":"        ListStorage tempStorage \u003d new ListStorage();","lastModifiedDate":"2022-01-30"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"        for (int i \u003d 1; i \u003c\u003d myStorage.length(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":174,"author":{"gitId":"tsumian"},"content":"            if (myStorage.findTask(i).description.contains(keyword[1])) {","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"tsumian"},"content":"                tempStorage.addToList(myStorage.findTask(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"        myPrinter.printList(tempStorage);","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"        return myUiPrinter.printList(tempStorage);","lastModifiedDate":"2022-02-04"},{"lineNumber":180,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":181,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"tsumian":181}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    /* Variables to store deadline of task */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    protected String by;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    protected LocalTime localTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    protected LocalDate atLocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    protected DateTimeFormatter dTF;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * Constructor for Deadline. Parses Deadline from String to LocalDate","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * and LocalTime format.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * @param description String description of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     * @param by String containing deadline of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        if (this.by.length() \u003e 10) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"            DateTimeFormatter twelveHourFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\", Locale.ENGLISH);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            String[] dateAndTime \u003d Parser.splitDateAndTime(this.by);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            this.localTime \u003d LocalTime.parse(dateAndTime[1], twelveHourFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"            this.atLocalDate \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"            this.dTF \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            this.atLocalDate \u003d LocalDate.parse(this.by);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            this.dTF \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"     * Checks if Deadline has a LocalTime.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"     * @return True if Deadline has LocalTime, else false.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    public boolean hasTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        return this.localTime !\u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     * Returns a description of task with deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     * @return Description of task with status icon, date and time.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        return \"[D]\"","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"                + super.toString()","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"                + \" (by: \" + dTF.format(atLocalDate)","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                + (hasTime() ? \", \" + localTime.toString() + \")\" : \")\");","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tsumian":59}},{"path":"src/main/java/Duke/Disk.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"public class Disk {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    /** String to store path of where data will be stored */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    private final String path;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    /** ListStorage to store tasks */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    private final ListStorage myStorage;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * Constructor for Disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * @param path File path.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage where Tasks are stored.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    public Disk(String path, ListStorage myStorage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        this.myStorage \u003d myStorage;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"     * Saves contents in ListStorage to Disk specified in","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"     * file path.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    public void saveToDisk() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"            BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            String tasks \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            for (Task task : this.myStorage.getMyTasks()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"                    Event currEvent \u003d (Event) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"                    tasks +\u003d \u0027E\u0027 + \",\" + task.isDone() + \",\" + task.description + \",\" + currEvent.at + \u0027\\n\u0027;","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"                    Deadline currDeadline \u003d (Deadline) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"                    tasks +\u003d \u0027D\u0027 + \",\" + task.isDone() + \",\" + task.description + \",\" + currDeadline.by + \u0027\\n\u0027;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"                } else if (task instanceof ToDo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"                    tasks +\u003d \u0027T\u0027 + \",\" + task.isDone() + \",\" + task.description + \u0027\\n\u0027;","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            taskWriter.write(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"            taskWriter.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"            System.out.println(\"Unable to save task\");","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"     * Restores contents of file from disk to Duke","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"     * when it is run.","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"     * @throws IOException If file already exists.","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"    public void loadFromDisk() throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        file.getParentFile().mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"            file.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"            String cmd \u003d fileScanner.nextLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"            String [] separator \u003d cmd.split(\",\", 4);","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            Task currTask \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"            switch(separator[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"                currTask \u003d new ToDo(separator[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"            case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"                currTask \u003d new Deadline(separator[2], separator[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"            case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"                currTask \u003d new Event(separator[2], separator[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"            if (separator[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"                assert currTask !\u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"            assert currTask !\u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"            myStorage.addToList(currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        fileScanner.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"tsumian":87}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.EmptyMessageException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.WrongCommandException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.WrongDateFormatException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":" * Driver class of Duke","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    private static final ListStorage myListStorage \u003d new ListStorage();","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private static final Printer myPrinter \u003d new Printer();","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    private static final UiPrinter myUiPrinter \u003d new UiPrinter();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    private static Disk myDisk;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * Empty constructor for Duke","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    public Duke() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        myDisk \u003d new Disk(\"src/main/java/data/savedTasks.txt\", myListStorage);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            myDisk.loadFromDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"            myPrinter.printExceptions(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"     * Constructor for Duke","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"     * Loads existing ListStorage in Disk","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"     * @param filePath filePath","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        myDisk \u003d new Disk(filePath, myListStorage);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"            myDisk.loadFromDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            myPrinter.printExceptions(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        new Duke(\"src/main/java/data/savedTasks.txt\").dukeRunner();","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     * Runner method for Duke","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public void dukeRunner() {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        myPrinter.printGreeting();","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        while (true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"                parseCommand();","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"            } catch (WrongCommandException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"                myPrinter.printExceptions(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"     * Method to parse commands entered by user","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"     * @throws WrongCommandException if user enters invalid commands","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"    public static void parseCommand() throws WrongCommandException {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"        int taskNumber;","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        Scanner myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        Commands commands \u003d new Commands(myListStorage, myPrinter);","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"        while (myScanner.hasNextLine()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"            String cmd \u003d myScanner.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"                String[] cmds \u003d Parser.parseCmdAndDes(cmd);","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"                switch (cmds[0]) {","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"                case \"todo\":","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"                    commands.cmdTodo(cmd);","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"                    myDisk.saveToDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"                case \"deadline\":","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"                    commands.cmdDeadline(cmd);","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"                    myDisk.saveToDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"                case \"event\":","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"                    commands.cmdEvent(cmd);","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"                    myDisk.saveToDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"                case \"mark\":","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"                    taskNumber \u003d Character.getNumericValue(cmd.charAt(cmd.length() - 1));","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"                    commands.cmdMark(taskNumber);","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"                    myDisk.saveToDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"                case \"unmark\":","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"                    taskNumber \u003d Character.getNumericValue(cmd.charAt(cmd.length() - 1));","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"                    commands.cmdUnmark(taskNumber);","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"                    myDisk.saveToDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"                case \"delete\":","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"tsumian"},"content":"                    taskNumber \u003d Character.getNumericValue(cmd.charAt(cmd.length() - 1));","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"tsumian"},"content":"                    commands.cmdDelete(taskNumber);","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"tsumian"},"content":"                    myDisk.saveToDisk();","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"tsumian"},"content":"                case \"find\":","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"tsumian"},"content":"                    commands.cmdFind(cmd);","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"tsumian"},"content":"                case \"list\":","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"tsumian"},"content":"                    commands.cmdList();","lastModifiedDate":"2022-02-11"},{"lineNumber":110,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"                case \"bye\":","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"tsumian"},"content":"                    commands.cmdBye();","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"tsumian"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"tsumian"},"content":"                default:","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"tsumian"},"content":"                    throw new WrongCommandException(\"Invalid Command\");","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"tsumian"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"tsumian"},"content":"            } catch (EmptyMessageException | WrongDateFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"                myPrinter.printExceptions(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":120,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"tsumian"},"content":"    public String getResponse(String input) throws EmptyMessageException, WrongDateFormatException {","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"        String result;","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"tsumian"},"content":"        int taskNumber;","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"        String[] cmds \u003d Parser.parseCmdAndDes(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"        Commands commands \u003d new Commands(myListStorage, myPrinter);","lastModifiedDate":"2022-02-04"},{"lineNumber":132,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"tsumian"},"content":"            switch (cmds[0]) {","lastModifiedDate":"2022-02-04"},{"lineNumber":134,"author":{"gitId":"tsumian"},"content":"            case \"hi\":","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"tsumian"},"content":"                return myUiPrinter.printGreeting();","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"tsumian"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-04"},{"lineNumber":137,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdTodo(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":138,"author":{"gitId":"tsumian"},"content":"                myDisk.saveToDisk();","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":140,"author":{"gitId":"tsumian"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-04"},{"lineNumber":141,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdDeadline(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":142,"author":{"gitId":"tsumian"},"content":"                myDisk.saveToDisk();","lastModifiedDate":"2022-02-04"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"            case \"event\":","lastModifiedDate":"2022-02-04"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdEvent(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"                myDisk.saveToDisk();","lastModifiedDate":"2022-02-04"},{"lineNumber":147,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":148,"author":{"gitId":"tsumian"},"content":"            case \"find\":","lastModifiedDate":"2022-02-04"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdFind(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-04"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"                taskNumber \u003d Character.getNumericValue(input.charAt(input.length() - 1));","lastModifiedDate":"2022-02-04"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdMark(taskNumber);","lastModifiedDate":"2022-02-04"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"                myDisk.saveToDisk();","lastModifiedDate":"2022-02-04"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-04"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"                taskNumber \u003d Character.getNumericValue(input.charAt(input.length() - 1));","lastModifiedDate":"2022-02-04"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdUnmark(taskNumber);","lastModifiedDate":"2022-02-04"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"                myDisk.saveToDisk();","lastModifiedDate":"2022-02-04"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"            case \"list\":","lastModifiedDate":"2022-02-04"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdList();","lastModifiedDate":"2022-02-04"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-04"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"                taskNumber \u003d Character.getNumericValue(input.charAt(input.length() - 1));","lastModifiedDate":"2022-02-04"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdDelete(taskNumber);","lastModifiedDate":"2022-02-04"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"                myDisk.saveToDisk();","lastModifiedDate":"2022-02-04"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-04"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"                result \u003d commands.cmdBye();","lastModifiedDate":"2022-02-04"},{"lineNumber":171,"author":{"gitId":"tsumian"},"content":"                return result;","lastModifiedDate":"2022-02-04"},{"lineNumber":172,"author":{"gitId":"tsumian"},"content":"            default:","lastModifiedDate":"2022-02-04"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"                return \"That is not in my defined features! Try again please!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":174,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":175,"author":{"gitId":"tsumian"},"content":"        } catch (EmptyMessageException | WrongDateFormatException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":176,"author":{"gitId":"tsumian"},"content":"            myPrinter.printExceptions(e);","lastModifiedDate":"2022-02-04"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"            return myUiPrinter.printExceptions(e);","lastModifiedDate":"2022-02-04"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tsumian":177,"-":3}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    /** Variables to store Event time */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    protected String at;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    protected LocalTime localTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    protected LocalDate atLocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    protected DateTimeFormatter dTF;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * Constructor of Event. Parses a String at into LocalDate","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * and LocalTime.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * @param description Description of Event.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     * @param at String description of date and time of Event.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        if (this.at.length() \u003e 10) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"            DateTimeFormatter twelveHourFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\", Locale.ENGLISH);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            String[] dateAndTime \u003d Parser.splitDateAndTime(this.at);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            this.localTime \u003d LocalTime.parse(dateAndTime[1], twelveHourFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"            this.atLocalDate \u003d LocalDate.parse(dateAndTime[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"            this.dTF \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            this.atLocalDate \u003d LocalDate.parse(at);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            this.dTF \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"     * Checks if Event has time.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"     * @return True if Event has time, else false.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    public boolean hasTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        return this.localTime !\u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     * Returns a description of Event.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     * @return description of Event with status icon, time and date.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        return \"[E]\"","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"                + super.toString()","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"                + \" (at: \" + dTF.format(atLocalDate)","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                + (hasTime() ? \", \" + localTime.toString() + \")\" : \")\");","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"//testing","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tsumian":60}},{"path":"src/main/java/Duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke.Exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"    public DukeException(String exceptionMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"        super(exceptionMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"tsumian":7}},{"path":"src/main/java/Duke/Exceptions/EmptyMessageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke.Exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class EmptyMessageException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"    public EmptyMessageException(String exceptionMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"        super(\"Oops! I\u0027m afraid you missed out a description for the task!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"tsumian":8}},{"path":"src/main/java/Duke/Exceptions/WrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke.Exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class WrongCommandException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"    public WrongCommandException(String exceptionMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"        super(\"Sorry! I\u0027m afraid I didnt understand that command...\");","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"tsumian":7}},{"path":"src/main/java/Duke/Exceptions/WrongDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke.Exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class WrongDateFormatException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"    public WrongDateFormatException (String exceptionMessage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"        super (\"Wrong date format detected! Make sure it is in \u0027yyyy-mm-dd\u0027 format!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"tsumian":8}},{"path":"src/main/java/Duke/ListStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.util.List;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"public class ListStorage {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    /** Single List to store Tasks */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    private List\u003cTask\u003e myTasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    private final String SPACING \u003d \"    \";","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"     * Constructor for ListStorage","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    public ListStorage() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"        myTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * Returns length of ListStorage.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"     * @return number of Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    public int length() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        return myTasks.size();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"     * Returns list of tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    public List\u003cTask\u003e getMyTasks() {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        return this.myTasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"     * Adds a Task to storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"     * @param task task to be added.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"     * @return message to indicate success.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    public String addToList(Task task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        myTasks.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        return \"added: \" + task.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"     * Prints a list of tasks in storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     * @return list of tasks in storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public String printList() {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        StringBuilder toPrint \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        for (Task item : myTasks) {","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"            toPrint.append(SPACING)","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"                    .append(i)","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                    .append(\".\")","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"                    .append(item.toString())","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"            i++;","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        return toPrint.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"     * Prints a specific task with description.","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber task number with reference to list.","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"     * @return description of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    public String printTask(int taskNumber) {","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        Task currentTask \u003d myTasks.get(taskNumber - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"        return SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"                + currentTask.toString()","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"                + \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"     * Finds a specific task in storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber task number with reference to list.","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"     * @return a specified task in list.","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"    public Task findTask(int taskNumber) {","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        return myTasks.get(taskNumber - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"     * Deletes a task in storage","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber task number with reference to list.","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"        myTasks.remove(taskNumber - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"tsumian":97}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class Parser {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"     * Splits command and description.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"     * @param cmd Command to be split.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"     * @return String array containing command and description.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    public static String[] parseCmdAndDes(String cmd) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        return cmd.split(\" \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Splits description and deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * @param cmd Description to be split.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * @return String array containing description and deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    public static String[] splitDeadlineAndTime(String cmd) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        return cmd.split(\" /by \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"     * Splits description and event time.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"     * @param cmd Description to be split.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"     * @return String array containing description and event time.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    public static String[] splitEventAndTime(String cmd) {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        return cmd.split(\" /at \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"     * Splits date and time.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"     * @param dateTime Date and time to be split.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"     * @return String array containing date and time.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    public static String[] splitDateAndTime(String dateTime) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        return dateTime.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tsumian":43}},{"path":"src/main/java/Duke/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class Printer {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    private static final String BORDER \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    private static final String SPACING \u003d \"    \";","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"     * Prints default greeting from Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER + SPACING","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"                + \"Hello! I\u0027m Duke\\n\" + SPACING","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"                + BORDER);","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"     * Prints default goodbye from Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    public void printBye() {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER + SPACING + \"Bye. Hope to see you again soon!\\n\" + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"     * Prints task added to storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"     * @param task Task added to storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"     * @param numberOfTasks Number of Tasks in storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    public void printTask(Task task, int numberOfTasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"                + task.toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"                + \"\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"                + \"Now you have \" + numberOfTasks + \" tasks in the list.\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"                + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     * Prints exception with error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"     * @param e Exception thrown with error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"    public void printExceptions(Exception e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"                + e.getMessage() + \"\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"                + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"     * Prints message if ListStorage is empty.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"    public void printEmptyList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                + \"There is currently nothing in your list!\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"                + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"     * Prints items in ListStorage.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"    public void printList(ListStorage myStorage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"                        + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"                        + myStorage.printList()","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"                        + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"     * Prints message when task is unmarked.","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be unmarked.","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"    public void printUnmark(ListStorage myStorage, int taskNumber) {","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"                + myStorage.printTask(taskNumber) + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"     * Prints message when task is marked.","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be marked","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"tsumian"},"content":"    public void printMark(ListStorage myStorage, int taskNumber) {","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"tsumian"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"                + myStorage.printTask(taskNumber) + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"     * Prints message when task is deleted","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"tsumian"},"content":"    public void printDelete(ListStorage myStorage, int taskNumber) {","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"tsumian"},"content":"        System.out.println(BORDER","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"tsumian"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"tsumian"},"content":"                + myStorage.printTask(taskNumber)","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"tsumian"},"content":"                + SPACING","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"tsumian"},"content":"                + \"Now you have \" + (myStorage.length() - 1) + \" tasks in the list.\\n\"","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"                + BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"tsumian":125}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"     * Costructor method for Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"     * @param description description of a task to be added.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * Checks status of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * @return 1 if it is done, 0 if not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    public char isDone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        return this.isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"     * Marks task as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"     * Unmark a task.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"     * Gets status icon of a task.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"     * @return X is it is done, blank if it is not done,","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     * Returns a description of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"     * @return description of task with status icon.","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"tsumian":58}},{"path":"src/main/java/Duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"     * @param description description of Todo.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Returns a description of Todo.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * @return description of ToDo with status icon.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tsumian":23}},{"path":"src/main/java/Duke/UiPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"public class UiPrinter {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"     * Prints default greeting from Duke.","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    public String printGreeting() {","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"        return (\"Hello from\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"                + \"Hello! I\u0027m Duke the blue wizard cat!\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"                + \"What can I do for you?\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     * Prints default goodbye from Duke.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public String printBye() {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        return (\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"     * Prints task added to storage.","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"     * @param task Task added to storage.","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"     * @param numberOfTasks Number of Tasks in storage.","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    public String printTask(Task task, int numberOfTasks) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"        return (","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"                \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"                + task.toString()","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"                + \"Now you have \" + numberOfTasks + \" tasks in the list.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     * Prints exception with error message.","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"     * @param e Exception thrown with error message.","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    public String printExceptions(Exception e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        return (e.getMessage() + \"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     * Prints message if ListStorage is empty.","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"    public String printEmptyList() {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        return (\"There is currently nothing in your list!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"     * Prints items in ListStorage.","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    public String printList(ListStorage myStorage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        return (\"Here are the tasks in your list:\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"                + myStorage.printList());","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"     * Prints message when task is unmarked.","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be unmarked.","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    public String printUnmark(ListStorage myStorage, int taskNumber) {","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"                + myStorage.printTask(taskNumber));","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"     * Prints message when task is marked.","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be marked","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"    public String printMark(ListStorage myStorage, int taskNumber) {","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"                + myStorage.printTask(taskNumber));","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"     * Prints message when task is deleted","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"     * @param myStorage ListStorage with Tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"     * @param taskNumber Task number of task to be deleted.","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"    public String printDelete(ListStorage myStorage, int taskNumber) {","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"                + myStorage.printTask(taskNumber));","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":99}},{"path":"src/main/java/Gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":60}},{"path":"src/main/java/Gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import Duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":13}},{"path":"src/main/java/Gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import Duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":32}},{"path":"src/main/java/Gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import Duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.EmptyMessageException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import Duke.Exceptions.WrongDateFormatException;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user_cat.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke_cat.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    private void handleUserInput() throws EmptyMessageException, WrongDateFormatException {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":58}},{"path":"src/main/java/data/savedTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"D,0,assignment 1,2022-02-09","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"D,0,jog,2022-02-09 09:00PM","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"tsumian":2}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tsumian":19}},{"path":"src/test/java/Duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"tsumian":11}},{"path":"src/test/java/Duke/ListStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"public class ListStorageTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    public void lengthTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        assertEquals(0, new ListStorage().length());","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    public void addToListTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"added: run 10km\", new ListStorage().addToList(new Task(\"run 10km\")));","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public void printListTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        ListStorage myStorage \u003d new ListStorage();","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(new ToDo(\"run 10km\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"    1.[T][ ] run 10km\\n\", myStorage.printList());","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    public void printTaskTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        ListStorage myStorage \u003d new ListStorage();","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(new ToDo(\"run 10km\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"    [T][ ] run 10km\\n\", myStorage.printTask(1));","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    public void findTaskTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        ListStorage myStorage \u003d new ListStorage();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(new ToDo(\"run 10km\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"[T][ ] run 10km\", myStorage.findTask(1).toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        ListStorage myStorage \u003d new ListStorage();","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        myStorage.addToList(new ToDo(\"run 10km\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        assertEquals(1, myStorage.length());","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"        myStorage.deleteTask(1);","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        assertEquals(0, myStorage.length());","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"tsumian":43}},{"path":"src/test/java/Duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package Duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    public void taskToStringTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"[ ] run 10km\", new Task(\"run 10km\").toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    public void taskMarkAsDoneTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"        Task testTask \u003d new Task(\"run 10km\");","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"        testTask.markAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"        assertTrue(testTask.isDone);","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    public void taskUnmarkTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        Task testTask \u003d new Task(\"run 10km\");","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        testTask.markAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        testTask.unmark();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        assertFalse(testTask.isDone);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    public void taskGetStatusIconTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        assertEquals(\" \", new Task(\"run 10km\").getStatusIcon());","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    public void taskIsDoneTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        Task testTask \u003d new Task(\"run 10km\");","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        assertEquals(\u00270\u0027, testTask.isDone());","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        testTask.markAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        assertEquals(\u00271\u0027, testTask.isDone());","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"tsumian":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"todo Run 10km","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"deadline Assignment 1 due /by Sunday 2359","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"event Dinner at Grandma\u0027s /at Saturday 1800","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"unmark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"bye","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"tsumian":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tsumian":1,"-":37}}]
