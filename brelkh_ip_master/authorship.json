[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"# Mike","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"\u003e ‚ÄúThe bad news is time flies. The good news is you‚Äôre the pilot‚Äù","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"Mike is a *simple task manager* bot. It is","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"- Easy to learn and use","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"- Fast (if you can type fast)","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"- FREE üíµ","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"It can:","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"1. Add tasks (3 types - todos, deadlines, events) to a list","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"2. Perform basic functions on the list","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"3. Store the list in hard drive for future reference.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"To use it,","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"- [x] Download the jar file","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"- [ ] Run the jar file with java","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"- [ ] Add your tasks!","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"Know [Java](https://docs.oracle.com/en/java/)? Feel free to fork it and edit code as you please!","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"```java","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"public class Main {","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"        //Your code here","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brelkh":22,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"    mainClassName \u003d \"mike.Main\"","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brelkh":1,"-":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"brelkh":2,"-":10}},{"path":"src/main/java/mike/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":" * Represents a deadline (subclass of task).","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    private final String endDate;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    private static final String taskType \u003d \"D\";","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    private static LocalDate convertToDate(String endDate) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"        return LocalDate.parse(endDate);","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"    public Deadline(String name, String endDate) {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"        this.date \u003d convertToDate(endDate);","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"    public Deadline(String name, String endDate, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"        super(name, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"        this.date \u003d convertToDate(endDate);","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"     * Returns a new deadline object with the isDone field set to true.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"     * @return Deadline object with isDone set to true.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"        return new Deadline(this.name, this.endDate, true);","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"     * Returns a new deadline object with the isDone field set to false.","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"     * @return Deadline object with isDone set to false.","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    public Deadline markAsUndone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"        return new Deadline(this.name, this.endDate, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"     * Returns a string representing the deadline that can be stored in the hard drive.","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"     * @return String representation of deadline for storage.","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"    public String convertToStoredTaskFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"        String doneIndicator \u003d \"false\";","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"            doneIndicator \u003d \"true\";","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"        String storedListFormat \u003d String.format(\"%s|%s|%s|%s\", taskType,","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"                doneIndicator, super.name, this.date);","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"        return storedListFormat;","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"        String doneMark;","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"            doneMark \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"            doneMark \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"        String dateOutput \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"                taskType, doneMark, super.name, dateOutput);","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"brelkh":76}},{"path":"src/main/java/mike/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":" * Represents an event (subclass of task).","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    private final String eventTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"    private static final String taskType \u003d \"E\";","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    private static LocalDate convertToDate(String endDate) {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"        return LocalDate.parse(endDate);","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    public Event(String name, String eventTime) {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"        this.date \u003d convertToDate(eventTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    public Event(String name, String eventTime, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"        super(name, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"        this.date \u003d convertToDate(eventTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"     * Returns a new event object with the isDone field set to true.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"     * @return Event object with isDone set to true.","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"    public Event markAsDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"        return new Event(this.name, this.eventTime, true);","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"     * Returns a new event object with the isDone field set to false.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"     * @return Event object with isDone set to false.","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"    public Event markAsUndone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"        return new Event(this.name, this.eventTime, false);","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"    public String convertToStoredTaskFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"        String doneIndicator \u003d \"false\";","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"            doneIndicator \u003d \"true\";","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"        String storedListFormat \u003d String.format(\"%s|%s|%s|%s\", taskType,","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"                doneIndicator, super.name, this.date);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"        return storedListFormat;","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"        String doneMark;","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"            doneMark \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"            doneMark \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"        String dateOutput \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\",","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"                taskType, doneMark, super.name, dateOutput);","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"brelkh":70}},{"path":"src/main/java/mike/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"public class Main {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"        new Mike().run();","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"        //Todo: if have time, make it new Mike(\"data/tasks.txt\").run(); ie. include filepath","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"brelkh":9}},{"path":"src/main/java/mike/Mike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":" * Represents an instance of \"Mike\" - a simple task tracking bot.","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"public class Mike {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    //TODO: consider making Mike immutable (return Mike with new list each time)","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"     * Constructor for Mike.","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    public Mike() {","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"        this.storage \u003d new Storage(\"storedList.txt\"); //hardcoded for now","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"     * Calls various methods relevant to initiating Mike.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"     * These include printing a greeting, loading a previously used list from the hard drive","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"     * and initialising the Scanner to read in user inputs.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    public void run() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"        ui.printStartingInstruction();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"        loadStoredList();","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"        while (true) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"            requestNextInput();","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"            String inputString \u003d sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"            if (isExitCommand(inputString)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"                processInput(inputString);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"            saveToStoredList(); //store the current list in hard drive","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"        sc.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"        this.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"    private void close() {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"    private void noCharactersEnteredResponse() {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"        ui.printNoCharactersMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"    private void requestNextInput() {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"        ui.printNextCommandInstruction();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"    private void printList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"        String listForPrint \u003d taskList.getListForPrint();","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"        ui.printReply(listForPrint);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"     * Returns true if user has input the exit command (\"bye\").","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"     * @param userInput","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"     * @return true if userInput is \"bye\"; else returns false","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"    public boolean isExitCommand(String userInput) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"        Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"        return parser.isBye();","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"    private void addToListWithoutReply(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"        taskList.addToList(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"    private void addToListWithReply(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"brelkh"},"content":"        taskList.addToList(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"brelkh"},"content":"        ui.printReply(taskList.addToListReply(task));","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"    private void removeTask(int removeIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"        ui.printReply(taskList.removeFromListWithMessage(removeIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"brelkh"},"content":"     * Adds a task of type \"To-do\" to the list","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"brelkh"},"content":"     * @param str The name of the task to be added to the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"brelkh"},"content":"    private void addTodo(String str) {","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"brelkh"},"content":"        Todo todo \u003d new Todo(str);","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"brelkh"},"content":"        addToListWithReply(todo);","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"brelkh"},"content":"     * Adds a task of type \"Deadline\" to the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"brelkh"},"content":"     * @param name The name of the task and its deadline in the format \"taskName /by deadline\".","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"     * @param date The date of the deadline represented as a String.","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"brelkh"},"content":"    private void addDeadline(String name, String date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"brelkh"},"content":"            Deadline deadline \u003d new Deadline(name, date);","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"brelkh"},"content":"            addToListWithReply(deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"brelkh"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"brelkh"},"content":"            System.out.println(\"**Enter dates in the format yyyy-mm-dd**\");","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"brelkh"},"content":"     * Adds a task of type \"Event\" to the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":120,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"brelkh"},"content":"     * @param name The name of the task and the time of the event in the format \"taskName /at eventTime\".","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"brelkh"},"content":"     * @param scheduledDate The date of the event represented as a String.","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"brelkh"},"content":"    private void addEvent(String name, String scheduledDate) {","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"brelkh"},"content":"            Event event \u003d new Event(name, scheduledDate);","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"brelkh"},"content":"            addToListWithReply(event);","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"brelkh"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"brelkh"},"content":"            System.out.println(\"**Enter dates in the format yyyy-mm-dd**\");","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":133,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":134,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"brelkh"},"content":"     * Marks the task (specified by its index in the list) as \"done\".","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":137,"author":{"gitId":"brelkh"},"content":"     * @param indexFromUser The index of the task (as seen by the user) to be marked in the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"brelkh"},"content":"    private void mark(int indexFromUser) {","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"brelkh"},"content":"        ui.printReply(taskList.markInListWithMessage(indexFromUser));","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":142,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":143,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":144,"author":{"gitId":"brelkh"},"content":"     * Marks the task (specified by its index in the list) as \"not done\".","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"brelkh"},"content":"     * @param indexFromUser The index of the task (as seen by the user) to be unmarked in the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":148,"author":{"gitId":"brelkh"},"content":"    private void unmark(int indexFromUser) {","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"brelkh"},"content":"        ui.printReply(taskList.unmarkInListWithMessage(indexFromUser));","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":151,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"brelkh"},"content":"    private void findInList(String searchWords) {","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"brelkh"},"content":"        String listForPrint \u003d taskList.findTasksInListForPrint(searchWords);","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"brelkh"},"content":"        ui.printReply(listForPrint);","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":158,"author":{"gitId":"brelkh"},"content":"     * Processes the user\u0027s input then and responds accordingly.","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"     * @param userInput String input from user as scanned in by Scanner.","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":162,"author":{"gitId":"brelkh"},"content":"    private void processInput(String userInput) {","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"brelkh"},"content":"        Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"brelkh"},"content":"        if (parser.isBlank()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"brelkh"},"content":"            noCharactersEnteredResponse();","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"brelkh"},"content":"        String command \u003d parser.getCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":171,"author":{"gitId":"brelkh"},"content":"            switch (command) {","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"brelkh"},"content":"            case \"list\":","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"brelkh"},"content":"                printList();","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"brelkh"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"brelkh"},"content":"                int markIndex \u003d parser.getIndex();","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"brelkh"},"content":"                mark(markIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"brelkh"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"brelkh"},"content":"                int unmarkIndex \u003d parser.getIndex();","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"brelkh"},"content":"                unmark(unmarkIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"brelkh"},"content":"            case \"remove\":","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"brelkh"},"content":"                int removeIndex \u003d parser.getIndex();","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"brelkh"},"content":"                removeTask(removeIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"brelkh"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"brelkh"},"content":"                String todoName \u003d parser.getTodoName();","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"brelkh"},"content":"                addTodo(todoName);","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"brelkh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"brelkh"},"content":"                String deadlineName \u003d parser.getDeadlineName();","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"brelkh"},"content":"                String deadlineDate \u003d parser.getDeadlineDate();","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"brelkh"},"content":"                addDeadline(deadlineName, deadlineDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"brelkh"},"content":"            case \"event\":","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"brelkh"},"content":"                String eventName \u003d parser.getEventName();","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"brelkh"},"content":"                String eventDate \u003d parser.getEventDate();","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"                addEvent(eventName, eventDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":201,"author":{"gitId":"brelkh"},"content":"            case \"find\":","lastModifiedDate":"2022-01-25"},{"lineNumber":202,"author":{"gitId":"brelkh"},"content":"                String searchWords \u003d parser.getSearchWords();","lastModifiedDate":"2022-01-25"},{"lineNumber":203,"author":{"gitId":"brelkh"},"content":"                findInList(searchWords);","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"brelkh"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":205,"author":{"gitId":"brelkh"},"content":"            default:","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"brelkh"},"content":"                String invalidCommandMessage \u003d","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"brelkh"},"content":"                        String.format(\"\\n**Mike: I don\u0027t understand the command \\\"%s\\\"**\",","lastModifiedDate":"2022-01-25"},{"lineNumber":208,"author":{"gitId":"brelkh"},"content":"                                parser.getUserInput());","lastModifiedDate":"2022-01-25"},{"lineNumber":209,"author":{"gitId":"brelkh"},"content":"                throw new UnsupportedOperationException(invalidCommandMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":210,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":211,"author":{"gitId":"brelkh"},"content":"        } catch(UnsupportedOperationException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":212,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":213,"author":{"gitId":"brelkh"},"content":"        } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":215,"author":{"gitId":"brelkh"},"content":"            System.out.println(\"**Mike: Hmm, you may have entered the command arguments incorrectly.**\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"brelkh"},"content":"                    + \"**Tip: Enter dates in the format yyyy-mm-dd**\");","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"brelkh"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":219,"author":{"gitId":"brelkh"},"content":"            System.out.println(\"**Mike: That item number doesn\u0027t exist on your list :/**\");","lastModifiedDate":"2022-01-25"},{"lineNumber":220,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":221,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":222,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":223,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":224,"author":{"gitId":"brelkh"},"content":"     * Stores the current list in the hard drive to be accessed on reboot of Mike.","lastModifiedDate":"2022-01-25"},{"lineNumber":225,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":226,"author":{"gitId":"brelkh"},"content":"    private void saveToStoredList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":227,"author":{"gitId":"brelkh"},"content":"        String listInStorageFormat \u003d taskList.convertToStoredListFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":228,"author":{"gitId":"brelkh"},"content":"        storage.storeList(listInStorageFormat);","lastModifiedDate":"2022-01-25"},{"lineNumber":229,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":230,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":231,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":232,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":233,"author":{"gitId":"brelkh"},"content":"     * Loads the list from a previous session that is stored in the hard drive.","lastModifiedDate":"2022-01-25"},{"lineNumber":234,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":235,"author":{"gitId":"brelkh"},"content":"    private void loadStoredList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":236,"author":{"gitId":"brelkh"},"content":"        this.taskList \u003d this.taskList.convertFromStoredList(storage.loadFile());","lastModifiedDate":"2022-01-25"},{"lineNumber":237,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":238,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"brelkh":238}},{"path":"src/main/java/mike/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"    private final String userInput;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"    private final String[] splitString;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"     * Constructor for Parser.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"     * @param userInput The String input by the user to be parsed.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"        this.userInput \u003d userInput.trim(); //Parser trims userInput automatically","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"        this.splitString \u003d this.userInput.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"     * Returns the user input (after it has been trimmed).","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"     * @return String representing trimmed user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    public String getUserInput() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"        return userInput;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"     * Returns the command portion of the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"     * @return String representing the command from a user\u0027s input.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    public String getCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"        return this.splitString[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"     * Returns the index portion (referencing the list of tasks) of the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"     * @return An integer representing the index of a task in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"    public int getIndex() {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"        return Integer.parseInt(this.splitString[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"     * Returns true if the user input is the exit command (\"bye\").","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"     * @return boolean representing whether the user has input the exit command.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"    public boolean isBye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"        return getUserInput().equals(\"bye\");","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"     * Returns true if the user input does not contain any characters.","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"     * @return boolean representing whether the user has input a String without characters.","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"    public boolean isBlank() {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"        return getUserInput().isEmpty();","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"     * Trims the \"command\" portion out from the input string and returns the remainder of the string.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"     * This is a helper function for the processInput method.","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"     * @return The input string from the user with the \"command\" portion removed.","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"    public String removeCommandFromString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"        int indexOfFirstSpace \u003d this.userInput.indexOf(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"        int indexOfTaskParameters \u003d indexOfFirstSpace + 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"        return this.userInput.substring(indexOfTaskParameters);","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"     * Returns the name of a to-do after processing the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"     * @return String representing the name of a to-do.","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"    String getTodoName() {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"        return removeCommandFromString();","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"brelkh"},"content":"     * Returns the name of a deadline after processing the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"brelkh"},"content":"     * @return String representing the name of a deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"    String getDeadlineName() {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"        String userInputCommandRemoved \u003d removeCommandFromString();","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"        int indexOfBy \u003d userInputCommandRemoved.indexOf(\"/by\");","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"brelkh"},"content":"        String name \u003d userInputCommandRemoved.substring(0, indexOfBy - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"brelkh"},"content":"        return name;","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"     * Returns the date of a deadline after processing the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"brelkh"},"content":"     * @return String representing the date of a deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"brelkh"},"content":"    String getDeadlineDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"brelkh"},"content":"        String userInputCommandRemoved \u003d removeCommandFromString();","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"brelkh"},"content":"        int indexOfBy \u003d userInputCommandRemoved.indexOf(\"/by\");","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"brelkh"},"content":"        int indexOfEndDate \u003d indexOfBy + 4;","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"        String endDate \u003d userInputCommandRemoved.substring(indexOfEndDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"brelkh"},"content":"        return endDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"brelkh"},"content":"     * Returns the name of an event after processing the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"brelkh"},"content":"     * @return String representing the name of an event.","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"brelkh"},"content":"    String getEventName() {","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"brelkh"},"content":"        String userInputCommandRemoved \u003d removeCommandFromString();","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"        int indexOfBy \u003d userInputCommandRemoved.indexOf(\"/at\");","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"        String name \u003d userInputCommandRemoved.substring(0, indexOfBy - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"        return name;","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"brelkh"},"content":"     * Returns the date of an event after processing the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"brelkh"},"content":"     * @return String representing the date of an event.","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"brelkh"},"content":"    String getEventDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"brelkh"},"content":"        String userInputCommandRemoved \u003d removeCommandFromString();","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"brelkh"},"content":"        int indexOfBy \u003d userInputCommandRemoved.indexOf(\"/at\");","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"brelkh"},"content":"        int indexOfEndDate \u003d indexOfBy + 4;","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"brelkh"},"content":"        String date \u003d userInputCommandRemoved.substring(indexOfEndDate);","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"brelkh"},"content":"        return date;","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"brelkh"},"content":"    String getSearchWords() {","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"brelkh"},"content":"        return removeCommandFromString();","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"brelkh"},"content":"        //Todo:fix bug where if user inputs \"find\", it searches for occurrences of \"find\".","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":137}},{"path":"src/main/java/mike/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"     * @param filePath FilePath of the file that should be stored or retrieved.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"     * Loads the file for use by other methods.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"     * @return File object (namely storedList.txt).","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    public File loadFile() {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"        return file;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"     * Stores the list according to the specified filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"     * @param listInStorageFormat A String representation of the entire list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"    void storeList(String listInStorageFormat) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"            fw.write(listInStorageFormat);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"            fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"        } catch(IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":46}},{"path":"src/main/java/mike/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"abstract class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"    protected final String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"    protected final boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"        this(name, false);","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"     * Returns the name of the task as in the name field.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"     * @return Name of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    abstract Task markAsDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    abstract Task markAsUndone();","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    abstract String convertToStoredTaskFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"     * Returns true if the task name contains the specified search words.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"     * @param searchWords Words to be searched for as specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"     * @return true if the task name contains the search words; else returns false.","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"    public boolean containsSearchWords(String searchWords) {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"        String taskName \u003d this.name.toLowerCase();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"        String search \u003d searchWords.toLowerCase();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"        return taskName.indexOf(search) !\u003d -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"        return String.format(\"name of task: %s\", this.name);","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"brelkh":49}},{"path":"src/main/java/mike/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"    private final List\u003cTask\u003e listOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    public TaskList(List\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"     * Returns a string representation of the tasks to be printed for the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"     * @return String representing the full list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    String getListForPrint() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"        sb.append(\"Behold, your list!\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"            sb.append(String.format(\"%d. %s\\n\", counter, task));","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"            counter++;","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"     * Adds the specified task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"    void addToList(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"     * Returns a String to be printed acknowledging that the user has added a task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"     * @param task Task that has been added to the list","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"     * @return String to be printed that acknowledges the new list item.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"    String addToListReply(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"        String taskName \u003d task.getTaskName();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"        String addTaskOutput \u003d \"Added \\\"\" + taskName + \"\\\" to the list!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"        int noOfTasks \u003d this.listOfTasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"        String noOfTasksOutput \u003d String.format(\"You now have *%d* task(s) in your list.\", noOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"        return String.format(\"%s\\n%s\", addTaskOutput, noOfTasksOutput);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"     * Removes the task (specified by its index) from the list and returns a String message.","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"     * @param removeIndex The index of the task to be removed from the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"     * @return String to be printed that acknowledges the removal of the list item.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"    String removeFromListWithMessage(int removeIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"        Task removedTask \u003d this.listOfTasks.remove(removeIndex - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"        String taskName \u003d removedTask.getTaskName();","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"        String removeTaskOutput \u003d \"Removed \\\"\" + taskName + \"\\\" from the list!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"        int noOfTasks \u003d this.listOfTasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"        String noOfTasksOutput \u003d String.format(\"You now have *%d* task(s) in your list.\", noOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"        return String.format(\"%s\\n%s\", removeTaskOutput, noOfTasksOutput);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"     * Marks the task (specified by its index) as done and returns a String message.","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"     * @param indexFromUser The index of the task to be marked in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"     * @return String to be printed that acknowledges the marking of the list item.","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"    String markInListWithMessage(int indexFromUser) {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"        int indexInList \u003d indexFromUser - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"brelkh"},"content":"        Task oldTask \u003d this.listOfTasks.get(indexInList);","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"brelkh"},"content":"        Task newTask \u003d oldTask.markAsDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"brelkh"},"content":"        this.listOfTasks.set(indexInList, newTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"        String outputMessage \u003d","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"                String.format(\"Great job, \\\"%s\\\" marked as done!\", newTask.getTaskName());","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"        return outputMessage;","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"brelkh"},"content":"     * Marks the task (specified by its index) as undone and returns a String message.","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"     * @param indexFromUser The index of the task to be marked in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"brelkh"},"content":"     * @return String to be printed that acknowledges the unmarking of the list item.","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"brelkh"},"content":"    String unmarkInListWithMessage(int indexFromUser) {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"brelkh"},"content":"        int indexInList \u003d indexFromUser - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"brelkh"},"content":"        Task oldTask \u003d this.listOfTasks.get(indexInList);","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"brelkh"},"content":"        Task newTask \u003d oldTask.markAsUndone();","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"brelkh"},"content":"        this.listOfTasks.set(indexInList, newTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"brelkh"},"content":"        String outputMessage \u003d","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"                String.format(\"Sure thing, \\\"%s\\\" marked as undone!\", newTask.getTaskName());","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"brelkh"},"content":"        return outputMessage;","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"brelkh"},"content":"     * Returns a String representing the tasks that the user is searching for.","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"brelkh"},"content":"     * @return String with the tasks the user is looking for.","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"brelkh"},"content":"    String findTasksInListForPrint(String searchWords) {","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"        sb.append(String.format(\"Behold, the items containing \\\"%s\\\"!\\n\", searchWords));","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"brelkh"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"brelkh"},"content":"            if (task.containsSearchWords(searchWords)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"brelkh"},"content":"                sb.append(String.format(\"%d. %s\\n\", counter, task));","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"brelkh"},"content":"            counter++;","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"brelkh"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"brelkh"},"content":"    String convertToStoredListFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"brelkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"brelkh"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"brelkh"},"content":"            sb.append(task.convertToStoredTaskFormat());","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"brelkh"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"brelkh"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"brelkh"},"content":"     * Returns a new TaskList from the information in storedList.txt stored in the hard drive.","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"brelkh"},"content":"     * @param file The file in which data about the list of tasks is stored.","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"brelkh"},"content":"     * @return A new TaskList based on the information in the storedList.txt file.","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"brelkh"},"content":"    TaskList convertFromStoredList(File file) {","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"brelkh"},"content":"        List\u003cTask\u003e storedListOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"brelkh"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"brelkh"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"brelkh"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"brelkh"},"content":"                if (input.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"brelkh"},"content":"                    break; //Todo: this might cause problems later","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"brelkh"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"brelkh"},"content":"                    storedListOfTasks.add(convertStringToTask(input));","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"brelkh"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"brelkh"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"brelkh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"brelkh"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"brelkh"},"content":"                //create a new file for storedList","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"                File newFile \u003d new File(\"storedList.txt\");","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"                FileWriter fw \u003d new FileWriter(newFile);","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"brelkh"},"content":"                fw.write(\"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"brelkh"},"content":"                fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"brelkh"},"content":"            } catch(IOException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"brelkh"},"content":"                ex.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"brelkh"},"content":"            System.out.println(\"**storedList.txt not found. \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"brelkh"},"content":"                    \"New file \\\"storedList.txt\\\" has been created for you.**\");","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"brelkh"},"content":"        return new TaskList(storedListOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"brelkh"},"content":"     * Returns a task object after processing a string from storedList.txt.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"brelkh"},"content":"     * @param input String (from storedList.txt) containing details of the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"brelkh"},"content":"     * @return A task object instantiated with parameters provided by the input string.","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"brelkh"},"content":"    Task convertStringToTask(String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"brelkh"},"content":"        String[] splitString \u003d input.split(\"\\\\|\");","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"brelkh"},"content":"        String taskType \u003d splitString[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"brelkh"},"content":"        boolean isDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"brelkh"},"content":"        switch(taskType) {","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"brelkh"},"content":"        case \"T\":","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"brelkh"},"content":"            isDone \u003d Boolean.parseBoolean(splitString[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"brelkh"},"content":"            String todoName \u003d splitString[2];","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"brelkh"},"content":"            Todo todo \u003d new Todo(todoName, isDone);","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"brelkh"},"content":"            return todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"brelkh"},"content":"        //break;","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"brelkh"},"content":"        case \"D\":","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"brelkh"},"content":"            isDone \u003d Boolean.parseBoolean(splitString[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"brelkh"},"content":"            String deadlineName \u003d splitString[2];","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"brelkh"},"content":"            String endDate \u003d splitString[3];","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"brelkh"},"content":"            Deadline deadline \u003d new Deadline(deadlineName, endDate, isDone);","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"brelkh"},"content":"            return deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"brelkh"},"content":"        //break;","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"brelkh"},"content":"        case \"E\":","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"brelkh"},"content":"            isDone \u003d Boolean.parseBoolean(splitString[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"            String eventName \u003d splitString[2];","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"            String eventTime \u003d splitString[3];","lastModifiedDate":"2022-01-25"},{"lineNumber":201,"author":{"gitId":"brelkh"},"content":"            Event event \u003d new Event(eventName, eventTime, isDone);","lastModifiedDate":"2022-01-25"},{"lineNumber":202,"author":{"gitId":"brelkh"},"content":"            return event;","lastModifiedDate":"2022-01-25"},{"lineNumber":203,"author":{"gitId":"brelkh"},"content":"        //break;","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"brelkh"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":205,"author":{"gitId":"brelkh"},"content":"            return new Todo(\"Fallthrough occurred!!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"brelkh"},"content":"        //break;","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":208,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":209,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":209}},{"path":"src/main/java/mike/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":" * Represents a to-do (subclass of task).","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"    private static final String taskType \u003d \"T\";","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"     * Constructor for to-do.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"     * @param name Name of to-do.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"     * Constructor for to-do including isDone field.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"     * @param name Name of to-do.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"     * @param isDone Whether to-do is to be marked as done.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"        super(name, isDone);","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"     * Returns a new to-do object with the isDone field set to true.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"     * @return to-do object with isDone set to true.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"    public Todo markAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"        return new Todo(this.name, true);","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"     * Returns a new to-do object with the isDone field set to false.","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"     * @return to-do object with isDone set to false.","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"    public Todo markAsUndone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"        return new Todo(this.name, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"     * Returns a string representing the to-do that can be stored in the hard drive.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"     * @return String representation of to-do for storage.","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"    public String convertToStoredTaskFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"        String doneIndicator \u003d \"false\";","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"            doneIndicator \u003d \"true\";","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"        String storedListFormat \u003d String.format(\"%s|%s|%s|\", taskType,","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"                doneIndicator, super.name);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"        return storedListFormat;","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"        String doneMark;","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"            doneMark \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"            doneMark \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"        return String.format(\"[%s][%s] %s\", taskType, doneMark, super.name);","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"brelkh":72}},{"path":"src/main/java/mike/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"     * Prints a greeting from \"Mike\" with an accompanying text banner.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"        String textBanner \u003d \"\"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"                + \"  _     _   _\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"                + \" | |   (_) (_)\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"                + \" | |__  _   _    __ _ _ __ ___\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"                + \" | \u0027_ \\\\| | | |  / _` | \u0027_ ` _ \\\\\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"                + \" | | | | | | | | (_| | | | | | |\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"                + \" |_| |_|_| |_|_ \\\\__,_|_| |_| |_|\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"                + \"           (_) |\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"                + \"  _ __ ___  _| | _____\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"                + \" | \u0027_ ` _ \\\\| | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"                + \" | | | | | | |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"                + \" |_| |_| |_|_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"        System.out.println(\"Welcome!\\n\" + textBanner);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"     * Prints instructions to guide a user on how to use \"Mike\".","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    public void printStartingInstruction() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"        String tip \u003d \"**Tip 1: type bye to end conversation**\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"                + \"**Tip 2: enter dates in the format yyyy-mm-dd**\";","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"        System.out.println(tip);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"     * Prints a string with line separators to make it","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"     * visually appealing","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"     * @param str The string that is to be printed","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"    public void printReply(String str) {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"        System.out.println(\"Mike: \" + str);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"     * Prints instructions to ask a user for the next command.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"    public void printNextCommandInstruction() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"        System.out.println(\"Enter next command:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"     * Prints a goodbye message from \"Mike\".","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"        String goodbyeMessage \u003d \"Goodbye and see you again :)\";","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"        printReply(goodbyeMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"     * Prints a message informing the user that their input does not contain any characters.","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"    public void printNoCharactersMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"        printReply(\"Hey! You didn\u0027t enter any characters!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":66}},{"path":"src/test/java/mike/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package test.java;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import mike.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    public void convertToStoredTaskFormatTest() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"        assertEquals(\"D|false|Do homework|2022-01-02\",","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"                new Deadline(\"Do homework\", \"2022-01-02\").convertToStoredTaskFormat());","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":15}},{"path":"src/test/java/mike/MikeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package test.java;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import mike.Mike;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"public class MikeTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    public void isExitCommandTest() {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"        assertEquals(true, new Mike().isExitCommand(\"bye\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"        assertEquals(false, new Mike().isExitCommand(\"todo Go to school\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":14}},{"path":"src/test/java/mike/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package test.java;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import mike.Parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    public void removeCommandFromInput_normalTestInput_inputWithoutCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"        assertEquals(\"eat and sleep\",","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"                new Parser(\"todo eat and sleep\").removeCommandFromString());","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"        assertEquals(\"Do homework /by 2022-10-10\",","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"                new Parser(\"deadline Do homework /by 2022-10-10\").removeCommandFromString());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"    public void removeCommandFromInput_emptyTestInput_emptyString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"        assertEquals(\"\",","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"                new Parser(\"\").removeCommandFromString());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":24}},{"path":"src/test/java/mike/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package test.java;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":7}},{"path":"src/test/java/mike/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package test.java;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"public class UiTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"brelkh":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"todo todo1","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"brelkh":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brelkh":1,"-":20}}]
