[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    archiveBaseName \u003d \"hashira_duke\"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"albertsutz":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"**Duke Chatbot** is a desktop application for managing your","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"tasks. Even though it provides GUI, the application is optimized","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"to be used with CLI (Command Line Interface).","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"* [Features](#features)","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"## Quick start","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"1. Ensure you have Java `11` that supports `JavaFx` or above installed in your","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"   computer.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"2. Download the latest `hashira-duke.jar` from [here](https://github.com/albertsutz/ip/releases/tag/v0.2).","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"3. Copy the file to the folder you want to use as the","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"   *home folder* for your Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"4. Double-click the file to start the app. The GUI","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"   similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"![Duke GUI](Ui.png)","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"5. Folder `data` will be created as the local Duke storage in your home folder.","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"6. Type the command in the command box and press `Enter/Send` to","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"   execute it.","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"7. Refer to the [Features](#features) below for details of each","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"   command.","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"### Listing all tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"List all your tasks available. ","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"Tasks may include:","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"- todos, ","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"- deadlines, ","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"- and events.","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"Command example:","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"`list`","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"Here\u0027s the list of task!","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"     1. [T][X] train with Rengoku","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"     2. [E][ ] Dinner with parents (at: parent\u0027s house)","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"### Add a Todo Task","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"Add a Todo Task with description.","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"`todo [description]`","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"`todo code ip project`","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"  [T][ ] code ip project","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"### Add a Deadline Task","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"Add a Deadline Task with description and deadline in d/M/yyyy format.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"`deadline [description] /by [deadline]`","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"`deadline submit assignment /by 20/2/2022`","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"  [D][ ] submit assignment (by: February 20 2022)","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"### Add an Event Task","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"Add an Event Task with description and place in `String` format.","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"`event [description] /at [place]`","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"`event finish hackathon /at RC4 L1`","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"  [E][ ] attend workshop (at: RC4 L1)","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"You have 1 tasks in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"### Mark a Task as done","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"Mark a task of given the index as done \u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"Note: Task needs to be set into done manually by user, by giving the Task index.","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"`mark [index]`","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"`mark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"  [E][] finish hackathon (at: RC4 L1)","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"### Unmark a Task as not done","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"Mark a task of given the index as not done \u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"Note: Task can be set into undone by giving the Task index.","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"`unmark [index]`","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"`unmark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"OK, I\u0027ve unmarked this task as not done:","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"  [E][X] finish hackathon (at: RC4 L1)","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"albertsutz"},"content":"### Delete a Task","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"albertsutz"},"content":"Delete a task given the index.","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"albertsutz"},"content":"`delete [index]`","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"albertsutz"},"content":"`delete 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"Ok, I will remove this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"albertsutz"},"content":"   [T][X] Submit CS2103 Assignment","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"albertsutz"},"content":"### Save the tasks to external file","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"albertsutz"},"content":"Save your tasks deliberately for future uses","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"albertsutz"},"content":"`save`\u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":162,"author":{"gitId":"albertsutz"},"content":"Note: The tasks will automatically be saved on every changes. this command serves as a way for the user to deliberately save.","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"albertsutz"},"content":"Example","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"albertsutz"},"content":"`save`","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":167,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"albertsutz"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"albertsutz"},"content":"The following tasks will be saved:","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"albertsutz"},"content":"Here\u0027s the list of task!","lastModifiedDate":"2022-02-18"},{"lineNumber":171,"author":{"gitId":"albertsutz"},"content":"1. [T][] coding","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":173,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"albertsutz"},"content":"### Get a Simple Reminder of Upcoming Task","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"albertsutz"},"content":"Get a list of upcoming task before a specified time range.","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"albertsutz"},"content":"Format:","lastModifiedDate":"2022-02-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"albertsutz"},"content":"`reminder [num] [timeId]`\u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"albertsutz"},"content":"Note: timeId consists of :","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"albertsutz"},"content":"- \"day\" or \"days\"","lastModifiedDate":"2022-02-18"},{"lineNumber":182,"author":{"gitId":"albertsutz"},"content":"- \"week\" or \"weeks\"","lastModifiedDate":"2022-02-18"},{"lineNumber":183,"author":{"gitId":"albertsutz"},"content":"- \"month\" or \"months\"","lastModifiedDate":"2022-02-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"albertsutz"},"content":"Example","lastModifiedDate":"2022-02-18"},{"lineNumber":186,"author":{"gitId":"albertsutz"},"content":"`reminder 1 day`","lastModifiedDate":"2022-02-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":189,"author":{"gitId":"albertsutz"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":190,"author":{"gitId":"albertsutz"},"content":"Reminder! Here\u0027s your task that is due in under 1 day","lastModifiedDate":"2022-02-18"},{"lineNumber":191,"author":{"gitId":"albertsutz"},"content":"1. [D][] help mother(by:February 18 2022)","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"albertsutz"},"content":"### Exiting the application","lastModifiedDate":"2022-02-18"},{"lineNumber":195,"author":{"gitId":"albertsutz"},"content":"Terminate Duke Chatbot.","lastModifiedDate":"2022-02-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"albertsutz"},"content":"Example:","lastModifiedDate":"2022-02-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"albertsutz"},"content":"`bye`","lastModifiedDate":"2022-02-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":201,"author":{"gitId":"albertsutz"},"content":"Output:\u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":202,"author":{"gitId":"albertsutz"},"content":"```Bye. Hope to see you again soon!\u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":203,"author":{"gitId":"albertsutz"},"content":"Let your heart ablaze!","lastModifiedDate":"2022-02-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":205,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":206,"author":{"gitId":"albertsutz"},"content":"### View Help Page","lastModifiedDate":"2022-02-18"},{"lineNumber":207,"author":{"gitId":"albertsutz"},"content":"User can view all the commands using the help command.\u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":208,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":209,"author":{"gitId":"albertsutz"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":210,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":211,"author":{"gitId":"albertsutz"},"content":"`help`","lastModifiedDate":"2022-02-18"},{"lineNumber":212,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":213,"author":{"gitId":"albertsutz"},"content":"Output:","lastModifiedDate":"2022-02-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":215,"author":{"gitId":"albertsutz"},"content":"      Here are the list of all commands I can do!","lastModifiedDate":"2022-02-18"},{"lineNumber":216,"author":{"gitId":"albertsutz"},"content":"      1. list: List all of your task","lastModifiedDate":"2022-02-18"},{"lineNumber":217,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":218,"author":{"gitId":"albertsutz"},"content":"      2. todo \u003ctask info\u003e: Add a common todo task","lastModifiedDate":"2022-02-18"},{"lineNumber":219,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":220,"author":{"gitId":"albertsutz"},"content":"      3. event \u003cevent info\u003e /at \u003cevent place\u003e: Add an event task with its place","lastModifiedDate":"2022-02-18"},{"lineNumber":221,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":222,"author":{"gitId":"albertsutz"},"content":"      4. deadline \u003cdeadline info\u003e /by \u003cdate\u003e: Add a deadline task with a date","lastModifiedDate":"2022-02-18"},{"lineNumber":223,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":224,"author":{"gitId":"albertsutz"},"content":"      5. delete \u003cint:index\u003e: Delete a task of index given","lastModifiedDate":"2022-02-18"},{"lineNumber":225,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":226,"author":{"gitId":"albertsutz"},"content":"      6. mark \u003cint:index\u003e: Mark a task of index given as done","lastModifiedDate":"2022-02-18"},{"lineNumber":227,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":228,"author":{"gitId":"albertsutz"},"content":"      7. unmark \u003cint:index\u003e: Mark a task of index given as not done","lastModifiedDate":"2022-02-18"},{"lineNumber":229,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":230,"author":{"gitId":"albertsutz"},"content":"      8. find \u003ckeyword\u003e: Find all tasks with reference to the keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":231,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":232,"author":{"gitId":"albertsutz"},"content":"      9. save: Save your tasks deliberately for future uses","lastModifiedDate":"2022-02-18"},{"lineNumber":233,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":234,"author":{"gitId":"albertsutz"},"content":"      10. reminder \u003cint:num\u003e \u003cString:id\u003e: Get the list of tasks that are due before a time range","lastModifiedDate":"2022-02-18"},{"lineNumber":235,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":236,"author":{"gitId":"albertsutz"},"content":"      Note: id can be in `days`, `weeks` or `months`","lastModifiedDate":"2022-02-18"},{"lineNumber":237,"author":{"gitId":"albertsutz"},"content":"      ","lastModifiedDate":"2022-02-18"},{"lineNumber":238,"author":{"gitId":"albertsutz"},"content":"      10. bye: Terminate the program","lastModifiedDate":"2022-02-18"},{"lineNumber":239,"author":{"gitId":"albertsutz"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":240,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":241,"author":{"gitId":"albertsutz"},"content":"## Command summary","lastModifiedDate":"2022-02-18"},{"lineNumber":242,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":243,"author":{"gitId":"albertsutz"},"content":"| action   | Format, Examples                                                                                  |","lastModifiedDate":"2022-02-18"},{"lineNumber":244,"author":{"gitId":"albertsutz"},"content":"|----------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-18"},{"lineNumber":245,"author":{"gitId":"albertsutz"},"content":"| list     | `list`                                                                                            |","lastModifiedDate":"2022-02-18"},{"lineNumber":246,"author":{"gitId":"albertsutz"},"content":"| help     | `help`                                                                                             |","lastModifiedDate":"2022-02-18"},{"lineNumber":247,"author":{"gitId":"albertsutz"},"content":"| deadline | `deadline [description] /by [deadline]`\u003cbr\u003ee.g.,`deadline submit cs2103 IP /by 18/2/2022`         |","lastModifiedDate":"2022-02-18"},{"lineNumber":248,"author":{"gitId":"albertsutz"},"content":"| event    | `event [description] /at [place]`\u003cbr\u003ee.g.,`event hackathon /at SoC COM2`                          |","lastModifiedDate":"2022-02-18"},{"lineNumber":249,"author":{"gitId":"albertsutz"},"content":"| todo     | `todo [description]`\u003cbr\u003ee.g.,`todo coding with friends`                                           |","lastModifiedDate":"2022-02-18"},{"lineNumber":250,"author":{"gitId":"albertsutz"},"content":"| delete   | `delete [index]`\u003cbr\u003ee.g., `delete 1`                                                              |","lastModifiedDate":"2022-02-18"},{"lineNumber":251,"author":{"gitId":"albertsutz"},"content":"| mark     | `mark [index]`\u003cbr\u003ee.g., `mark 1`                                                                  |","lastModifiedDate":"2022-02-18"},{"lineNumber":252,"author":{"gitId":"albertsutz"},"content":"| unmark   | `unmark [index]`\u003cbr\u003ee.g., `unmark 1`                                                              |","lastModifiedDate":"2022-02-18"},{"lineNumber":253,"author":{"gitId":"albertsutz"},"content":"| reminder | `reminder [num] [timeid]`\u003cbr\u003ee.g., `reminder 1 day`\u003cbr/\u003e`reminder 2 week`\u003cbr/\u003e `reminder 3 month` |","lastModifiedDate":"2022-02-18"},{"lineNumber":254,"author":{"gitId":"albertsutz"},"content":"| bye      | `bye`                                                                                             |","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"albertsutz":237,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import duke.util.Constants;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":" * Main logic of the bot.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    private TasksList taskslist;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"     * Constructs Duke object.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"     * Initializes the UI, TasksList, Storage, and Parser for use.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    public Duke() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        this.taskslist \u003d new TasksList();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"            taskslist.importStorageStrings(storage.importData());","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     * Runs the main logic of Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"     * Stops after user input \u003d\u003d \"bye\".","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        this.ui.greetUser();","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"            String response \u003d taskslist.importStorageStrings(storage.importData());","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"            ui.print(response);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        while (true) {","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"            String instruction \u003d sc.nextLine();","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"            String log \u003d parser.parse(instruction, taskslist, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"            ui.print(log);","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"            if (log.equals(Constants.BYE)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"                return;","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        String output \u003d parser.parse(input, taskslist, storage);","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        return output;","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"        new Duke().run();","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"albertsutz":65,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import duke.util.Constants;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Main logic to parse and translate user inputs.","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"public class Parser {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"     * Translates user inputs and performs the supposed actions.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"     * @param data      User input.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"     * @param tasksList TasksList variable from Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"     * @param storage   Storage variable from Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed by the UI.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    public String parse(String data, TasksList tasksList, Storage storage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"            String[] instruction \u003d data.split(\" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"            if (instruction.length \u003d\u003d 0 || !Constants.COMMANDS.contains(instruction[0])) {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            //variables needed for switch case.","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            String response;","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            int taskNum;","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            switch(instruction[0]) {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                return Constants.BYE;","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"            case \"list\":","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.list();","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"                return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            case \"help\":","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"                response \u003d Constants.HELP;","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"                return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"            case \"event\":","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.addTask(Arrays.asList(instruction));","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"                break;","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"            case \"save\":","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"                response \u003d storage.exportData(tasksList.toStorageStrings(), tasksList.list());","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"                break;","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"            case \"find\":","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.findMatchingTasks(Arrays.asList(instruction));","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"                return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"                taskNum \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.mark(taskNum);","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"                break;","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"                taskNum \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.unmark(taskNum);","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"                break;","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"                taskNum \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.deleteTask(taskNum);","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"                break;","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"            case \"reminder\":","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"                response \u003d tasksList.getTasksUnder(Arrays.asList(instruction));","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"                return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"            default:","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"                throw new DukeException(\"Something is wrong!\");","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"            //save after every command","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"            storage.exportData(tasksList.toStorageStrings(), tasksList.list());","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"            return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"albertsutz":90}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import duke.util.Constants;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":" * Main logic for storing data to filesystem.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"     * Saves current tasks snapshot to a file.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * The file is stored in \"data/duke.txt\".","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     * @param storageStrings List of texts to be saved. Each text represents 1 task.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     * @param taskListString Text from Task.list method. For printing purposes.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    public String exportData(List\u003cString\u003e storageStrings, String taskListString) {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        String response \u003d \"The following tasks will be saved: \\n\" + taskListString;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        Path dir \u003d Paths.get(Constants.DIR_PATH);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        Path store \u003d Paths.get(Constants.STORAGE_PATH);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            if (!Files.exists(dir)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                Files.createDirectory(dir);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"                Files.createFile(store);","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"            } else if (!Files.exists(store)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"                Files.createFile(store);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            FileWriter writer \u003d new FileWriter(Constants.STORAGE_PATH);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"            for (String task : storageStrings) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"                writer.write(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"            writer.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"            return response;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"     * Imports previous tasks snapshot from a file if present.","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"     * The file is stored in \"data/duke.txt\".","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    public List\u003cString\u003e importData() {","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        List\u003cString\u003e storageStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        if (Files.exists(Paths.get(Constants.STORAGE_PATH))) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"            File f \u003d new File(Constants.STORAGE_PATH);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"            try {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"                Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"                    storageStrings.add(fileScanner.nextLine());","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"                return storageStrings;","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        return storageStrings;","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"albertsutz":77}},{"path":"src/main/java/duke/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" * Main layer of abstraction as a container of Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"public class TasksList {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"     * TasksList constructor method.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     * Uses ArrayList as its core.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    public TasksList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * Adds user input task to the taskslist.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     * @param instructions List of user input words.","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If user input argument format is unknown/invalid.","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    public String addTask(List\u003cString\u003e instructions) throws InvalidArgumentException {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        Task newTask \u003d Task.createTask(instructions);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"        String response;","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        response \u003d String.format(\"Got it. I\u0027ve added this task\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"                + \"You have %d tasks in the list\", this.tasks.size());","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        return response;","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"     * Deletes task of certain index from the taskslist.","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"     * @param index Index of the task (1 based).","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidIndexException If index is out of bounds.","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"    public String deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        if (index \u003e this.tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"        String response \u003d String.format(\"Ok, I will remove this task: \\n %s\", tasks.get(index - 1));","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        assert getSize() \u003e 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"        return response;","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"     * Returns the list of tasks in the form of String / text.","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"     * @return List of tasks with numberings in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    public String list() {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here\u0027s the list of task!\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"            return \"You have 0 task\";","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"            response.append(String.format((i + 1) + \". \" + tasks.get(i) + \"\\n\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        return response.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"    public String getTasksUnder(List\u003cString\u003e instructions) throws InvalidArgumentException {","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"        if (instructions.size() !\u003d 3) {","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"        int inputNumber \u003d Integer.parseInt(instructions.get(1));","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"        String timeIdentifier \u003d instructions.get(2);","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"        StringBuilder response \u003d new StringBuilder(\"Reminder! Here\u0027s your task that is due in under \");","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"        response.append(inputNumber + \" \");","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"        response.append(timeIdentifier + \"\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"        StringBuilder deadlineString \u003d new StringBuilder();","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"            if (tasks.get(i).getType() \u003d\u003d \"Deadline\") {","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"                assert tasks.get(i) instanceof Deadline;","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"                Deadline deadline \u003d (Deadline) tasks.get(i);","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"                if (deadline.happensBefore(inputNumber, timeIdentifier)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"                    deadlineString.append(String.format((counter) + \". \" + deadline + \"\\n\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"                    counter++;","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"                }","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"        if (deadlineString.toString().equals(\"\")) {","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"            return String.format(\"Congratulations! You do not have any tasks due in under \"","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"albertsutz"},"content":"                    + inputNumber","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"                    + \" \"","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"                    + timeIdentifier);","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"        return response.toString() + deadlineString.toString();","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"     * Changes task status to marked.","lastModifiedDate":"2022-02-01"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"     * @param index Index of the task (1 based).","lastModifiedDate":"2022-02-01"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidIndexException If index is out of bounds.","lastModifiedDate":"2022-02-01"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"    public String mark(int index) throws InvalidIndexException {","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"        if (index \u003e this.tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"        assert getSize() \u003e 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"        String response \u003d tasks.get(index - 1).markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"albertsutz"},"content":"        return response;","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"     * Changes task status to unmarked.","lastModifiedDate":"2022-02-01"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"     * @param index Index of the task (1 based).","lastModifiedDate":"2022-02-01"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidIndexException If index is out of bounds.","lastModifiedDate":"2022-02-01"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"    public String unmark(int index) throws InvalidIndexException {","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"albertsutz"},"content":"        if (index \u003e this.tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"albertsutz"},"content":"        assert getSize() \u003e 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"albertsutz"},"content":"        String response \u003d tasks.get(index - 1).markAsNotDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"albertsutz"},"content":"        return response;","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":148,"author":{"gitId":"albertsutz"},"content":"     * Returns the tasks list in text format for storage.","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"albertsutz"},"content":"     * The text format follows the initial user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":150,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":151,"author":{"gitId":"albertsutz"},"content":"     * @return List of texts. Each text represents 1 task.","lastModifiedDate":"2022-02-01"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":153,"author":{"gitId":"albertsutz"},"content":"    public List\u003cString\u003e toStorageStrings() {","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"albertsutz"},"content":"        List\u003cString\u003e responses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"albertsutz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"albertsutz"},"content":"            responses.add(task.toStorageString() + \"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":157,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"albertsutz"},"content":"        return responses;","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":161,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":162,"author":{"gitId":"albertsutz"},"content":"     * Gets the number of tasks in the taskslists.","lastModifiedDate":"2022-02-01"},{"lineNumber":163,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":164,"author":{"gitId":"albertsutz"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":165,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":166,"author":{"gitId":"albertsutz"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"albertsutz"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-02-01"},{"lineNumber":168,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":169,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":170,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":171,"author":{"gitId":"albertsutz"},"content":"     * Imports tasks from a list of strings (each representing 1 task).","lastModifiedDate":"2022-02-01"},{"lineNumber":172,"author":{"gitId":"albertsutz"},"content":"     * The tasksStrings is from history storage.","lastModifiedDate":"2022-02-01"},{"lineNumber":173,"author":{"gitId":"albertsutz"},"content":"     * This method is the counterpart of toStorageStrings().","lastModifiedDate":"2022-02-01"},{"lineNumber":174,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":175,"author":{"gitId":"albertsutz"},"content":"     * @param tasksStrings List of tasks in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":176,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":177,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If any of the task\u0027s format is unknown/invalid.","lastModifiedDate":"2022-02-01"},{"lineNumber":178,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":179,"author":{"gitId":"albertsutz"},"content":"    public String importStorageStrings(List\u003cString\u003e tasksStrings) throws InvalidArgumentException {","lastModifiedDate":"2022-01-28"},{"lineNumber":180,"author":{"gitId":"albertsutz"},"content":"        for (String taskString : tasksStrings) {","lastModifiedDate":"2022-01-28"},{"lineNumber":181,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e description \u003d Arrays.asList(taskString.split(\" \"));","lastModifiedDate":"2022-01-28"},{"lineNumber":182,"author":{"gitId":"albertsutz"},"content":"            Boolean isDone \u003d description.get(0).equals(\"X\");","lastModifiedDate":"2022-01-28"},{"lineNumber":183,"author":{"gitId":"albertsutz"},"content":"            Task task \u003d Task.createTask(description.subList(1, description.size()));","lastModifiedDate":"2022-01-28"},{"lineNumber":184,"author":{"gitId":"albertsutz"},"content":"            if (isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":185,"author":{"gitId":"albertsutz"},"content":"                task.markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":186,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":187,"author":{"gitId":"albertsutz"},"content":"            tasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":188,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":189,"author":{"gitId":"albertsutz"},"content":"        String response;","lastModifiedDate":"2022-01-28"},{"lineNumber":190,"author":{"gitId":"albertsutz"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":191,"author":{"gitId":"albertsutz"},"content":"            response \u003d \"I managed to retrieve your previous data!\\nHere it is: \\n\" + this.list();","lastModifiedDate":"2022-01-28"},{"lineNumber":192,"author":{"gitId":"albertsutz"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":193,"author":{"gitId":"albertsutz"},"content":"            response \u003d \"As a new user, try to add task and I will store them for you!\";","lastModifiedDate":"2022-01-28"},{"lineNumber":194,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":195,"author":{"gitId":"albertsutz"},"content":"        return response;","lastModifiedDate":"2022-01-28"},{"lineNumber":196,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":197,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":198,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":199,"author":{"gitId":"albertsutz"},"content":"     * Finds all tasks that contain a certain keyword.","lastModifiedDate":"2022-02-01"},{"lineNumber":200,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":201,"author":{"gitId":"albertsutz"},"content":"     * @param instruction User input.","lastModifiedDate":"2022-02-01"},{"lineNumber":202,"author":{"gitId":"albertsutz"},"content":"     * @return Tasks in text format that contains keyword to be found.","lastModifiedDate":"2022-02-01"},{"lineNumber":203,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no keyword inputted.","lastModifiedDate":"2022-02-01"},{"lineNumber":204,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":205,"author":{"gitId":"albertsutz"},"content":"    public String findMatchingTasks(List\u003cString\u003e instruction) throws InvalidArgumentException {","lastModifiedDate":"2022-02-07"},{"lineNumber":206,"author":{"gitId":"albertsutz"},"content":"        if (instruction.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-01"},{"lineNumber":207,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-02-01"},{"lineNumber":208,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":209,"author":{"gitId":"albertsutz"},"content":"        StringBuilder response \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-02-01"},{"lineNumber":210,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":211,"author":{"gitId":"albertsutz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":212,"author":{"gitId":"albertsutz"},"content":"            if (tasks.get(i).getName().contains(instruction.get(1))) {","lastModifiedDate":"2022-02-07"},{"lineNumber":213,"author":{"gitId":"albertsutz"},"content":"                response.append(String.format((i + 1) + \". \" + tasks.get(i) + \"\\n\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":214,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":215,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":216,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":217,"author":{"gitId":"albertsutz"},"content":"        if (response.toString().equals(\"\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":218,"author":{"gitId":"albertsutz"},"content":"            return \"I did not find anything related to your search: \" + instruction.get(1);","lastModifiedDate":"2022-02-01"},{"lineNumber":219,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":220,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":221,"author":{"gitId":"albertsutz"},"content":"        return \"Found some tasks related to your search: \" + instruction.get(1) + \"\\n\" + response.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":222,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":223,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"albertsutz":223}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import duke.util.Constants;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":" * Main UI logic of the bot.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"     * Prints a GAP added text for differentiating user and app texts.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"     * @param text Text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    public void print(String text) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"        List\u003cString\u003e lines \u003d Arrays.asList(text.split(\"\\n\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"            System.out.println(Constants.GAP + line);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        System.out.println(Constants.LINE);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * Prints initial greetings when the app starts.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    public void greetUser() {","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        System.out.println(Constants.LINE);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        print(\"Hello from\\n\" + Constants.LOGO);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        print(\"I am a chat bot and I\u0027m here to help you be productive :)\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"                + \"What can I do for you today?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * Prints goodbye message before the app ends.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    public void finalBye() {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        print(Constants.BYE);","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"albertsutz":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":" * Main Logic of basic exception for Duke.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"     * Constructs the DukeException objects.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"     * This class is to group Duke related exceptions together.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"     * @param err error message.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    public DukeException(String err) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"        super(err);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":17}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":" * A specialised exception for invalid argument.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"     * Constructs the InvalidArgumentException class.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"     * This exception occurs when the user input format is invalid but with some known parts.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    public InvalidArgumentException() {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"        super(\"Hmm, I recognized your command but it seems like the arguments are not complete / invalid.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":15}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":" * A specialised exception for invalid/unknown command.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"     * Constructs the InvalidCommandException class.","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"     * This exception occurs when the user input format is unknown.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"        super(\"Sorry, I did not recognize your command.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":15}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":" * A specialised exception for invalid index.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":" * Triggered if index \u003c 0 or \u003e\u003d size.","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"     * Constructs the InvalidIndexException class.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"     * This exception occurs when user input index is out of bounds.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"        super(\"Sorry, your argument has invalid Index. Hint: Use \\\"list\\\" command to help you\");","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"albertsutz":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.gui;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        //Solution below adapted from","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"        //https://stackoverflow.com/questions/45258138/round-corners-in-java-fx-pane","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        Rectangle clip \u003d new Rectangle();","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        clip.setWidth(150);","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        clip.setHeight(80);","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        clip.setArcHeight(30);","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        clip.setArcWidth(30);","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    private void flip() {","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"        db.flip();","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        return db;","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"albertsutz":67}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.gui;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"public class Launcher {","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"albertsutz":9}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.gui;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"            stage.setTitle(\"DUKE\");","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"            stage.show();","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"albertsutz":30}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.gui;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Timer;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import duke.util.Constants;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"     * Initializes the main window.","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Constants.GREETINGS_GUI, dukeImage));","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        );","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"        //Solution below adapted from","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        //https://stackoverflow.com/questions/2258066/java-run-a-function-after-a-specific-number-of-seconds","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        if (response.equals(Constants.BYE)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"            new Timer().schedule(","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                    new TimerTask() {","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"                        @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"                        public void run() {","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"                            System.exit(0);","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"                        }","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"                    }, 5000","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"            );","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"albertsutz":74}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" * A Deadline is a specialization of a Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"    private final LocalDate by;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"     * Constructs Deadline class.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     * Event constructor accepts the description of the task and when the task\u0027s deadline.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"     * @param name Description of the deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * @param by   Time indicator of the deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    Deadline(String name, String by) {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"        if (isValid(by)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"            this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            this.by \u003d LocalDate.now();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     * Validates whether the input is a date.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * @param date Input value to validate.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     * @return True if the input value is a date, false otherwise.","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    private Boolean isValid(String date) {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"            LocalDate.parse(date, formatter);","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"            return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        return true;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"     * Checks whether this deadline is within the time range given.","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"     * This is to categorize whether deadline should be reminded or not.","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"     * @param inputNumber User input number.","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"     * @param timeIdentifier time id which consists of day, week, or month.","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"     * @return True if deadline is within the time range given.","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException if timeIdentifier is invalid.","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    public Boolean happensBefore(int inputNumber, String timeIdentifier) throws InvalidArgumentException {","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"            return false;","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        int timeMultiplier;","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"        switch(timeIdentifier) {","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        case \"day\":","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"        case \"days\":","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"            timeMultiplier \u003d 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        case \"week\":","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"        case \"weeks\":","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"            timeMultiplier \u003d 7;","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        case \"month\":","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        case \"months\":","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"            timeMultiplier \u003d 30;","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"        default:","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"        int numOfDays \u003d inputNumber * timeMultiplier;","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        return ChronoUnit.DAYS.between(LocalDate.now(), by) \u003c\u003d numOfDays;","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"     * Constructs a Deadline object as a factory constructor.","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"     * @param description Description of the Deadline task in array format.","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"     * @return the Deadline object.","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no description or time indicator.","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"    public static Deadline of(String[] description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"        return Deadline.of(Arrays.asList(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"     * Constructs a Deadline object as a factory constructor.","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"     * @param description Description of the deadline task in List format.","lastModifiedDate":"2022-02-01"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"     * @return the Deadline object.","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no description or time indicator.","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"    public static Deadline of(List\u003cString\u003e description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"        if (description.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"        int index \u003d description.indexOf(\"/by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"        String name \u003d String.join(\" \", description.subList(1, index));","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"albertsutz"},"content":"        String by \u003d String.join(\" \", description.subList(index + 1, description.size()));","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"        return new Deadline(name, by);","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"albertsutz"},"content":"     * This method is used for storing deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"        String status \u003d getStatus() ? \"X\" : \".\";","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"        return String.format(status + \" deadline \" + getName() + \" /by \" + by);","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"    public String getType() {","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"        return \"Deadline\";","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the deadline task for User.","lastModifiedDate":"2022-02-01"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"        return String.format(\"[D]\"","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"                + super.toString()","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"                + \"(by: \"","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"albertsutz"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\")) + \")\");","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":141}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":" * An Event is a specialization of a Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    private final String at;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"     * Constructs Event class.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"     * Event constructor accepts the description of the task and when the task will be done.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"     * @param name Description of the event task.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"     * @param at   Time indicator of the event task.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    Event(String name, String at) {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * Constructs an Event object as a factory constructor.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     * @param description Description of the Event task in array format.","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     * @return the Event object.","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no description or time indicator.","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    public static Event of(String[] description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        return Event.of(Arrays.asList(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     * Constructs an Event object as a factory constructor.","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"     * @param description Description of the event task in List format.","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"     * @return the Event object.","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no description or time indicator.","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"    public static Event of(List\u003cString\u003e description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        if (description.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        int index \u003d description.indexOf(\"/at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        String name \u003d String.join(\" \", description.subList(1, index));","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        String at \u003d String.join(\" \", description.subList(index + 1, description.size()));","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        return new Event(name, at);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the event task.","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"     * This method is used for storing event task.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        String status \u003d getStatus() ? \"X\" : \".\";","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        return String.format(status + \" event \" + getName() + \" /at \" + at);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"    public String getType() {","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"        return \"Event\";","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the event task for User.","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"        return String.format(\"[E]\" + super.toString() + \"(at: \" + at + \")\");","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":80}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":" * Main abstraction of a Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"    private final String name;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    //can make isDone final for good practice","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"     * Constructs Task class.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"     * The constructor takes in the description of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"     * The default isDone status of the object is false.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     * @param name description of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     * Switches task isDone status.","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    public void switchStatus() {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     * Switches task isDone status to true.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to indicate whether the action is successful.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    public String markAsDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        String output;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            output \u003d \"Sorry, the task is actually done!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"            output \u003d String.format(\"Nice!, I have marked this task as done: \\n      %s\", this);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        return output;","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"     * Switches task isDone status to false.","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"     * @return Response text to indicate whether the action is successful.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    public String markAsNotDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        String output;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"            output \u003d \"Sorry, the task has not been done!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"            output \u003d String.format(\"Ok, I have marked this task as not done: \\n      %s\", this);","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        return output;","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"     * This is a factory constructor that calls the factor constructor of its appropriate child classes.","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"     * @param description Task description from user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"     * @return Response Text to be printed.","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If the user input format is invalid/unknown.","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"    public static Task createTask(List\u003cString\u003e description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        switch(description.get(0)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"            return Todo.of(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"            return Deadline.of(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        case \"event\":","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"            return Event.of(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"        default:","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"     * Gets the isDone status in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"     * @return isDone status in text.","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"     * Gets the name variable.","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"     * The name is the description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"     * @return name variable.","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"    public String getName() {","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"        return this.name;","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"     * Gets the isDone status.","lastModifiedDate":"2022-02-01"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"     * @return isDone status.","lastModifiedDate":"2022-02-01"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"albertsutz"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"    public String getType() {","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"        return \"Task\";","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"     * Returns the tasks in text format for storage.","lastModifiedDate":"2022-02-01"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"     * The text format follows the initial user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"        String status \u003d isDone ? \"X\" : \".\";","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"albertsutz"},"content":"        return String.format(status + \" task \" + name);","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the task for User.","lastModifiedDate":"2022-02-01"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.name);","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":140}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":" * An Todo is a specialization of a Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"     * Constructs Todo class.","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"     * Todo constructor accepts the description of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"     * @param name Description of the task.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     * Constructs a Todo object as a factory constructor.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     * @param description Description of the todo task in array format.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * @return the Todo object.","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no description.","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    public static Todo of(String[] description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        return Todo.of(Arrays.asList(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     * Constructs a Todo object as a factory constructor.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * @param description Description of the todo task in List format.","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     * @return the Todo object.","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"     * @throws InvalidArgumentException If there is no description.","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    public static Todo of(List\u003cString\u003e description) throws InvalidArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        if (description.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        String name \u003d String.join(\" \", description.subList(1, description.size()));","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        return new Todo(name);","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the todo task.","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"     * This method is used for storing todo task.","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        String status \u003d getStatus() ? \"X\" : \".\";","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"        return String.format(status + \" todo \" + getName());","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"    public String getType() {","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        return \"Todo\";","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"     * Returns text representing the todo task for User.","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"     * @return Task in text format.","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":75}},{"path":"src/main/java/duke/util/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.util;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":" * Utility class to hold all common constants.","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"public class Constants {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"    public static final String LINE \u003d \"___________________________________________________________________________\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"    public static final String GAP \u003d \"      \";","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"            \"████████▄  ███    █▄     ▄█   ▄█▄    ▄████████ \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"                    + \"███   ▀███ ███    ███   ███ ▄███▀   ███    ███ \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"                    + \"███    ███ ███    ███   ███▐██▀     ███    █▀  \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"                    + \"███    ███ ███    ███  ▄█████▀     ▄███▄▄▄     \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"                    + \"███    ███ ███    ███ ▀▀█████▄    ▀▀███▀▀▀     \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"                    + \"███    ███ ███    ███   ███▐██▄     ███    █▄  \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"                    + \"███   ▄███ ███    ███   ███ ▀███▄   ███    ███ \\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"                    + \"████████▀  ████████▀    ███   ▀█▀   ██████████\";","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public static final String DIR_PATH \u003d \"./data\";","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    public static final String STORAGE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    public static final List\u003cString\u003e COMMANDS \u003d List.of(\"list\", \"bye\", \"mark\", \"unmark\", \"delete\",","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"            \"todo\", \"event\", \"deadline\", \"save\", \"find\", \"reminder\", \"help\");","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    public static final String GREETINGS_GUI \u003d \"Hello There, my name is none other than \\nDUKE!\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"            + \"I am a chat bot and I\u0027m here to help you be productive :)\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"            + \"What can I do for you today?\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            + \"Let your heart ablaze!\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    public static final String HELP \u003d \"Here are the list of all commands I can do!\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            + \"1. list: List all of your task\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            + \"2. todo \u003ctask info\u003e: Add a common todo task\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"            + \"3. event \u003cevent info\u003e /at \u003cevent place\u003e: Add an event task with its place\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            + \"4. deadline \u003cdeadline info\u003e /by \u003cdate\u003e: Add a deadline task with a date\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            + \"5. delete \u003cint:index\u003e: Delete a task of index given\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"            + \"6. mark \u003cint:index\u003e: Mark a task of index given as done\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            + \"7. unmark \u003cint:index\u003e: Mark a task of index given as not done\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"            + \"8. find \u003ckeyword\u003e: Find all tasks with reference to the keyword\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"            + \"9. save: Save your tasks deliberately for future uses\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"            + \"10. reminder \u003cint:num\u003e \u003cString:id\u003e: Get the list of tasks that are due before a time range\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"            + \"Note: id can be in `days`, `weeks` or `months`\\n\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            + \"10. bye: Terminate the program\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"albertsutz":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!--@@author albertsutz-reused","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    inspiration from github.com/zunedz/ip","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    with some medium amount of changes--\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #D3D3D3;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"320.0\" style\u003d\"-fx-background-color: #606060#606060; -fx-background-radius: 6;\" textFill\u003d\"WHITE\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cFont name\u003d\"Allerta Stencil\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cInsets bottom\u003d\"7.0\" left\u003d\"10.0\" right\u003d\"9.0\" top\u003d\"7.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"150.0\" fitWidth\u003d\"150.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"albertsutz":10,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" \u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"        \u003c/padding\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"654.0\" prefWidth\u003d\"502.0\" style\u003d\"-fx-background-color: #BEBEBE#BEBEBE ;\"/\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"albertsutz":23}},{"path":"src/test/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"class ParserTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"    void parse_byeInstruction() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"        TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"        String log \u003d parser.parse(\"bye\", tasksList, storage);","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\"BYE\", log);","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    void parse_listZeroInstruction() {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"        TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        String log \u003d parser.parse(\"list\", tasksList, storage);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\"You have 0 task\", log);","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"albertsutz":28}},{"path":"src/test/duke/TasksListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"class TasksListTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    void addTask() {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"            TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"            for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"                tasksList.addTask(Arrays.asList(\"todo\", \"Coding\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"                tasksList.addTask(Arrays.asList(\"deadline\", \"Coding\", \"/by\", \"2022-12-10\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"                tasksList.addTask(Arrays.asList(\"event\", \"Coding\", \"/at\", \"my house\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"            assertEquals(30, tasksList.getSize());","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        catch(DukeException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"            fail();","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    void deleteTask() {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"                tasksList.addTask(Arrays.asList(\"todo\", \"Coding\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                tasksList.deleteTask(1);","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"            assertEquals(0, tasksList.getSize());","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        catch(DukeException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"            fail();","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"albertsutz":44}},{"path":"src/test/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"class TaskTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"    void switchStatus() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"        task.switchStatus();","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"        assertEquals(true, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"        task.switchStatus();","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    void markAsDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        task.markAsDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        assertEquals(true, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"        task.markAsDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        assertEquals(true, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    void markAsNotDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"    void getStatusIcon() {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        task.switchStatus();","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        task.switchStatus();","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    void getName() {","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        Task task \u003d new Task (\"Test task\");","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\"Test task\", task.getName());","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        task \u003d new Task (\"Test task 1 2 3\");","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        assertEquals(\"Test task 1 2 3\", task.getName());","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"albertsutz":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"todo Task 1 testing","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"deadline Task 2 testing /by Monday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"event Task 3 testing /at Tuesday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"list","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"albertsutz":9}}]
