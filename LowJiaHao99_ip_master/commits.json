{"authorDailyContributionsMap":{"LowJiaHao99":[{"date":"2022-01-14","commitResults":[{"hash":"327171f9f3c7a2290e5e9af6d6b61374bd4c40bc","messageTitle":"added echo,exit and greet function","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":6}}}]},{"date":"2022-01-15","commitResults":[{"hash":"9141ef8acf0884f8a4f7fe6c5fa1a40b4e528bde","messageTitle":"Unable to keep track of commands","messageBody":"Keep track of commands so users can see past inputs\n\nAdded array in Command class to keep track of past input and list when called\n\nlist and bye command are not added in tracking of past commands\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"0eb17e28afcfe6cf83ad323243f587c229f69972","messageTitle":"created a Task class","messageBody":"majority of commands is a form of task and they have similar behavior(e.g. isDone and have a description)\n\nTo allow for future polymorphisms where there are different types of tasks that is being tracked\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"0e3a9886bc9dfae1f7425458144a78bbd05f18f1","messageTitle":"commands now are handled directly by Duke instead of the Commands class","messageBody":"commands can be directly processed by Duke class\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":4}}},{"hash":"c58837f785fbbe987f1b90997cc650251c38189b","messageTitle":"Removed command class","messageBody":"commands are now processed by Duke class\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":33}}},{"hash":"b21397750af0ed7a78e6c545db392328ef1d9485","messageTitle":"Added text to match expected output when calling list. Changed to print \"added input\" where input is the whole input and not only the first word. Simplified some logic in the program","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":7}}},{"hash":"29df7ccbf04fc49158e983e7f465dc375241774c","messageTitle":"added Task class","messageBody":"To allow future classes to inherit from\n\nadded way to identify type of task and indicate whether is completed\n\nto allow printing of output just by calling identity method\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"3ab3d5779da7b5f74be21731b975fa07ade3a4a1","messageTitle":"added Deadline class","messageBody":"Deadline inherits from Task. Deadline is a task with extra fields(e.g. the due date of said task)\n\nOverrided identify so as differentiate deadline from tasks\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"7743bd8fedb416d44246a4d60b49e4766ed9adf0","messageTitle":"Added ToDo class","messageBody":"ToDo is a form of task. Similar fields and behavior\n\nOverrided identify so as to  differentiate ToDo from Task\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"ea8a6ceee19bea2272995683b472b4cd9f7bf62d","messageTitle":"Added Event class","messageBody":"Event class is a Task thus it inherits from Task\nOverride identify class to differentiate Task from Events.\nExtra field of deadline to indicate the due date of event\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"f8c952ca84cae83fbc3efea9a877fe813231d4c8","messageTitle":"Added extensions to commands so as to accomodate new classes(i.e. Task, ToDo, Event and Deadline)","messageBody":"processedCommand is further processed to obtain deadline and description which are used to create Event and/or Deadline instances\nLogic of printing whether task is marked or unmarked is now handle by the individual classes(Event,Deadline,ToDo,Task)\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":7}}}]},{"date":"2022-01-16","commitResults":[{"hash":"7bfcb2997950fc815c5af0d3b540882af1e2dbe5","messageTitle":"Modify expected.txt and input.txt for testing of level-4","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}},{"hash":"b21aabe2aefdd62f28dfad97120550de0817d562","messageTitle":"Add DukeException class","messageBody":"DukeException prints message whenever called\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"9d776ad2d5e423dfcd929d97c8a06f854c6335be","messageTitle":"Modify DukeException","messageBody":"DukeException prints error message\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"7b5e4cad53ef7a21499515094bcbc129b89ad66f","messageTitle":"Modify Duke class","messageBody":"Change print statements to easily identify what is printed\nAdd exception handling for commands where exception may occur due to invalid input\n","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":10}}},{"hash":"fcf1d8f4ee81a5986ce3ae6fc26f40437bd0bc34","messageTitle":"Modify Duke class","messageBody":"Handle \"hi\" command\nInvalid message for invalid commands\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"7f315962660b6a2f6d225c2f85208f61cd462366","messageTitle":"Change task array to task arraylist remove numOfTask and use arraylist.size() to get number of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":18}}},{"hash":"4c00e78c7ae405b9efbfd32013828f8f56193981","messageTitle":"Added delete command Modify presentation of print statement for unmark command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"fcdc1067958a39bda934d709f6531ba9c805db23","messageTitle":"Modify input.txt and expected.txt to match new delete command","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"d679e68879aed09c2cdd77e6ff5661f7d6c43322","messageTitle":"Add delete command Modify string output by removing unecessary whitespace","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"8889a324e9eb44b5af52524dbcabe18a572b8a3d","messageTitle":"Add commands as enum","messageBody":"Now string that are associated with the command is printed via the enum Commands\nChange print statements in Duke class to reflect enums\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":12}}}]},{"date":"2022-01-21","commitResults":[{"hash":"f156f2ee75ecf6863a78334e12e5932b97aabf83","messageTitle":"Modify coding standard for switch statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":116}}}]},{"date":"2022-01-22","commitResults":[{"hash":"7a1409d954a40fa09bdd9c92885f1c2f02e8075b","messageTitle":"add save feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":131,"deletions":11}}},{"hash":"606150773bc9bd8e3558de400bf39da79429fc85","messageTitle":"Update deadlines to be kept as a LocalDate class instead of a string","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":20}}},{"hash":"a6accf292bf77b42bb297b75dbd47d3d2de77366","messageTitle":"Remove uneccessary import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}}]},{"date":"2022-01-23","commitResults":[{"hash":"91efbafb62ab7267140dbf0f4fbdf85e026f307a","messageTitle":"Refactor code.","messageBody":"Parser parses user input and return parsedCommand to Duke\nStorage deals with interaction with the storage file\nTaskList contains data in storage file\nUI deals with output to users\nDuke coordinate interaction with all the Storage,Tasklist,Parser and Ui\n","fileTypesAndContributionMap":{"java":{"insertions":396,"deletions":243}}},{"hash":"557104231218532b96e27a55fadbc1c8bbac4581","messageTitle":"Shift all classes to DukeClasses package","messageBody":"","tags":["Level-7","A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}},{"hash":"3bd1afe28a68f69c255d82fb9e35984069e639a5","messageTitle":"Update deadlines to be kept as a LocalDate instead of a String","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":22}}},{"hash":"f6df3f4f021aec6e5556c1686181f92320917c61","messageTitle":"Remove duplicate files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":328}}},{"hash":"9212477cd4fbc0e00d80f62abd9744285a05f74c","messageTitle":"Change string output of Event identity method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"6882883538a2c7e4a87609b020db562797f69367","messageTitle":"Add JUnit tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":264,"deletions":0}}}]},{"date":"2022-01-24","commitResults":[{"hash":"b8125a91ef210f03d06c10eac1923550624e0b46","messageTitle":"Add StorageTest class","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":0}}},{"hash":"32e3753a66bc0cdecd77681dd6e0f90ab778c15b","messageTitle":"Refactor code","messageBody":"Parser parses user input and return parsedCommand to Duke\nStorage deals with interaction with the storage file\nTaskList contains data in storage file\nUI deals with output to users\nDuke coordinate interaction with all the Storage,Tasklist,Parser and Ui\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":446,"deletions":0}}},{"hash":"0dcb5056786cf2b2ecacfecc2ff7b1d96100cd0c","messageTitle":"Shift all classes to DukeClasses package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":446}}},{"hash":"03a2bc4d7c1d1eae1d8a681f03e349b85546eded","messageTitle":"Modify Event,Duke and Deadline classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":207,"deletions":0}}},{"hash":"90d0d3c28a6bfd0c04d09792c782d3e5f6e41b65","messageTitle":"Remove Deadline and Event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":42}}},{"hash":"eaf12e285292c4902c71d63e2833bf47060f498f","messageTitle":"Modify Duke, Storage and Ui classes","messageBody":"Add calls to close Scanner\nChange storageFilePath to a static String\nModify method to throw DukeException\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":11}}},{"hash":"e43aa6dd1e3b629a87019d7bbba05b0afa1f1a3e","messageTitle":"Fix bug for delete command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"d3aaca1427130d0718c75c7089f106e7a5c5ea0a","messageTitle":"Update Ui and TaskList to run modified deleted command","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"6388a1078095cbeff6ec731f7e611517d3cef517","messageTitle":"Add new files into .gitignore","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":165}}},{"hash":"e8c854dfc7706a7e209c9ac90c2ac4c5b9087d66","messageTitle":"Add JavaDocs for classes","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":268,"deletions":2}}},{"hash":"3bde132a3144c67516d2bc3571f22e871f9a7b77","messageTitle":"Modify code and pacakges to fit coding standards","messageBody":"","tags":["A-CodingStandards"],"fileTypesAndContributionMap":{"java":{"insertions":155,"deletions":123}}},{"hash":"521647be5cdbd8bd401c0d735d2fd6f841bc9c37","messageTitle":"Add find feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"f2a5eb4787d3887c3b9649d6a7fc56a8d5088f79","messageTitle":"Change output for find feature","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"0d76aa2335977021fe51f37fd93c311c310e066e","messageTitle":"Modify Commands and Ui to fix find and delete feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":113}}}]},{"date":"2022-01-31","commitResults":[{"hash":"1924eb62cac5bef34ab1c0683231c575e2d3c1b1","messageTitle":"Implement gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":2},"java":{"insertions":168,"deletions":14}}}]},{"date":"2022-02-01","commitResults":[{"hash":"5acd04d1fe9f9a34bdfea2361598dbac62fca943","messageTitle":"Create GUI for Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"java":{"insertions":337,"deletions":161}}},{"hash":"5a012b5da12bbe3db4ebabc3b76ed03f13964c99","messageTitle":"Improve feature of GUI and add new background for GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":18}}},{"hash":"5128f207fbf1976c9125cd6259c06c1db1d986e7","messageTitle":"Fixes bug for delete command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":17}}}]},{"date":"2022-02-08","commitResults":[{"hash":"4ac6d349565b35f78360101413bc9cc0f2fda0ed","messageTitle":"Fix bug for Parser class where negative index will crash the client","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}}]},{"date":"2022-02-09","commitResults":[{"hash":"95587d6b88e3388f0eb38a1cfcf13dc6f25d7ada","messageTitle":"Refactor classes in dukeclasses package","messageBody":"classes in dukeclasses package does not follow code quality standards.\n\nLet\u0027s pull up and group behaviors as new methods in the class.\n\nThis is to ensure code follow code quality standards by enforcing single\nlevel of abstraction and prevent deep nesting in a method to enhance\nreadability.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":372,"deletions":242}}},{"hash":"9e94ac26280b9198734d57f718cc13ccc459c561","messageTitle":"Update test classes to most recent output","messageBody":"Test classes are not up to date.\n\nThis ensures future testing can be done when new features are added.\n\nLet\u0027s edit the expected cases in the test classes to fit the new output.\n\nActual output contains a new line character at the end of a toString\nmethod of a task. The change modifies expected to meet the new change\nin the actual output.\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":32}}},{"hash":"3a367e82e9e1413aac6745953d4cba800d03e565","messageTitle":"Modify the Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}}]},{"date":"2022-02-10","commitResults":[{"hash":"4c80cca22fbbda8305f80f26ef5ce36fad8ca155","messageTitle":"Refactor Parser and Storage classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":60}}},{"hash":"f03df9ae1c2ccf3f1fcc2dd6a106b8c23ee808bb","messageTitle":"Add assert statements","messageBody":"Classes contain assumptions.\n\nAssumptions does not always hold true and when it does not, it causes\nunexpected behavior.\n\nLet\u0027s add assert statements in the code when there is an assumption in\nall the classes.\n\nAssert statements crashes the program if the assumption fails,thus\nprevents unexpected behavior.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"2fd0ed05dca46a7b931dbf03f469ea7565531ead","messageTitle":"Remove unused variable in Duke and Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":10}}},{"hash":"0cf2a0312a37f3cd80ed6e7b2c7cbcfdba055ccc","messageTitle":"Fix bug for Parser that affects creating deadlines and events","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"LowJiaHao99":{"java":1916,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":20,"txt":6}},"authorContributionVariance":{"LowJiaHao99":231036.25},"authorDisplayNameMap":{"LowJiaHao99":"CS2103T-W15-3 LOW .. HAO"}}
