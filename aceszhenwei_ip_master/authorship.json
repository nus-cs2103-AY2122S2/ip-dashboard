[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"    archiveBaseName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aceszhenwei":17,"-":43}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"ret\u003d0","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    fi","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"done","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"exit $ret","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aceszhenwei":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"awk \u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"    BEGIN {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"    {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"        ret \u003d 1","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"    END {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"        exit ret","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"\u0027","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aceszhenwei":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"awk \u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"    BEGIN {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"        ret \u003d 0","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"            ret \u003d 1","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    END {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"        exit ret","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"\u0027","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aceszhenwei":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"#!/bin/sh","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"        ret\u003d1","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"    fi","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"done","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"exit $ret","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aceszhenwei":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"    protected String dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"     * Initializes a new Deadline class with the name and its due date.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"     * @param name The name of the Deadline needed by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"     * @param dueDate The date when the Deadline is due.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"     * Converts a date that starts in the format of YYYY-MM-DD, and formats","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"     * it to DD Mon YYYY.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"     * @param dueDate Date in format of YYYY-MM-DD","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"     * @return Formatted date","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    public String convertDate(String dueDate) {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"            assert !dueDate.equals(\"\") : \"No date!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"            LocalDate date \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"            String year \u003d String.valueOf(date.getYear());","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"            String month \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"            String day \u003d String.valueOf(date.getDayOfMonth());","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"            return month + \" \" + day + \" \" + year;","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"            return dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + convertDate(this.dueDate) + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"aceszhenwei":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //@@author jbkim1999-reused","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Circle clip \u003d new Circle(49.5, 49.5, 50);","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"    private void flip() {","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"        tmp.get(0).setStyle(\"-fx-background-color: #98c7d3; -fx-background-radius: 10; -fx-padding: 10;\");","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        //@@author yusufaine-reused","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        db.setMinHeight(db.USE_PREF_SIZE);","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"        db.flip();","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"        return db;","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"aceszhenwei":62,"-":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"public class Duke {","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"     * Initializes a new Duke class. It locates and loads the previous save file by invoking load()","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"     * from storage and saves it to an ArrayList.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"    public Duke() {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"        String filePath \u003d \"data/duke.ser\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"        storage \u003d new Storage(filePath); // Searching for File","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"            tasks \u003d new TaskList(storage.load()); // Loading if Found","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"            ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"            tasks \u003d new TaskList(arr); // Creating new file if not","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"     * Receives the user input from the GUI and sends it to the parser in order to","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"     * figure out Duke\u0027s response.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"     * @param input User input with commands","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"     * @return Duke\u0027s response after parsing the commands.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"        Parser reader \u003d new Parser();","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"        return reader.parse(input, tasks, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"    public String getHelp() {","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        Parser reader \u003d new Parser();","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        return reader.parse(\"help\", tasks, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"aceszhenwei":40}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"    protected String time;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"     * Initializes a new Event class with the name and its due date.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"     * @param name The name of the Event needed by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"     * @param time The date when the Event is due.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"     * Converts a date that starts in the format of YYYY-MM-DD, and formats","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"     * it to DD Mon YYYY.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"     * @param dueDate Date in format of YYYY-MM-DD","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"     * @return Formatted date","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    public String convertDate(String dueDate) {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"            assert !dueDate.equals(\"\") : \"No date!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"            LocalDate date \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"            String year \u003d String.valueOf(date.getYear());","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"            String month \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"            String day \u003d String.valueOf(date.getDayOfMonth());","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"            return month + \" \" + day + \" \" + year;","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"            return dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + convertDate(this.time) + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"aceszhenwei":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"public class Launcher {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"aceszhenwei":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"            stage.show();","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"aceszhenwei":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    private Button helpButton;","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"            .getResourceAsStream(\"/images/CS2103T.png\")));","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"            .getResourceAsStream(\"/images/Damith.jpeg\")));","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        String greet \u003d \"Hello, Prof here.\\n\"","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greet, dukeImage));","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"        );","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"        if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            //@@author ddx-510-reused","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            PauseTransition wait \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            wait.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            wait.play();","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"aceszhenwei"},"content":"     * Creates one dialogue box for Prof. He will return a text box that details oll the commands in Prof.","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"    private void handleHelpInput() {","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"        String response \u003d duke.getHelp();","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"        );","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"aceszhenwei":77,"-":5}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"    public Parser() {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"     * Accepts the commands of the user input and resolves them. It searches the command string","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"     * and for the keyword and links them to all the tasks provided in TaskList. This will","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"     * allow the parser to direct the commandString\u0027s details to the respective command.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"     * @param commandString The String user input, inclusive of the command and details for Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"     *                      to carry out.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"     * @param tasks All the commands Duke can carry out. Initialized when Duke is declared.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"     * @param storage All previously saved tasks. Initialized when Duke is declared","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"     * @return The output of the commands that the user has invoked.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    public String parse(String commandString, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"        if (commandString.contains(\"S/U\") || commandString.contains(\"s/u\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"            return \"Sorry guys, but you know we don\u0027t do S/Us.\";","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.equals(\"bye\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"            return storage.exit(tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.equals(\"list\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.list(tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.contains(\"mark\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.mark(commandString, tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.contains(\"delete\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.delete(commandString, tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.contains(\"deadline\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.deadline(commandString, tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.contains(\"event\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.event(commandString, tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.contains(\"todo\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.toDo(commandString, tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.contains(\"find\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.find(commandString, tasks.arr);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        } else if (commandString.equals(\"help\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"            return tasks.help();","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"            return commandString + \" is not a valid command. Please try again.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"aceszhenwei":43}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"    protected String filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"     * Returns an ArrayList after reading from \u0027data/duke.ser\u0027.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"     * Then, creates an array with all previous tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"     * @return Old task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"     * @throws IOException If file not found.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"     * @throws ClassNotFoundException If unable to find Task class to cast ArrayList to.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    //@@author waleedkhan-reused","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Reused from https://tinyurl.com/yckrncus","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FileInputStream readData \u003d new FileInputStream(\"data/duke.ser\");","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The object read will always be an ArrayList as it always loads from the previously saved ArrayList.","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e arr \u003d (ArrayList\u003cTask\u003e) readStream.readObject();","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        readStream.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return arr;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"     * Save the current task list to new file \u0027data/duke.ser\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"     * If this is first boot (no file initialized yet), will create directory \"data\" and","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"     * then create the new file to save to.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"     * If file already exists, creates new file and overwrites previous one.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr Current task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //@@author waleedkhan-reused","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Reused from https://tinyurl.com/yckrncus","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void save(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            directory.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(\"data/duke.ser\");","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            writeStream.writeObject(arr);","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            writeStream.flush();","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            writeStream.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            System.out.println(\"Something went wrong. I think I may be corrupted.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"     * Invokes save command to save the current list into data/duke.ser to be loaded in future","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"     * sessions. Then, it will bid farewell to the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The list of tasks that Duke has for the current session.","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"     * @return An acknowledgement that the session has ended.","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"    public String exit(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"        save(arr);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"        return \"Goodbye! I\u0027ll be here if you need anything else.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"aceszhenwei":48,"-":33}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"    protected String name;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"    protected final String mark \u003d \"[X]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"    protected final String unmarked \u003d \"[ ]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"     * Initializes a new Task class with the name.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"     * @param name The name of the Task needed by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    public String getName() {","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"        assert this.name !\u003d null : \"No name!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"        return this.name;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    public void setMarked() {","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    public void setUnmarked() {","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"     * Checks whether the task has been marked done or not and returns it so.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"     * @return The respective string of a marked / un-marked task.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"    public String isDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"            return mark;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"            return unmarked;","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"        return isDone() + \" \" + getName();","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"aceszhenwei":50}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"    protected ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"     * Returns a string of all the tasks in the ArrayList line by line.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"     * It will number each line respectively up to the array size.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The given ArrayList of tasks that the user currently has.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    public String list(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"        if (arr.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"            return \"Sorry, there is nothing in your list!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"        String listToPrint \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"            listToPrint +\u003d i + 1 + \". \" + arr.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"        return listToPrint;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"     * Returns a string of an acknowledgement if successful, else returns an edge case warning.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"     * Marks or un-marks the respective index of the task in the ArrayList given by the input.","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"     * @param input The respective index of the ArrayList needed to be mark or unmarked.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The ArrayList with the current list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"     * @return Acknowledgement string.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"     * @throws NumberFormatException If input is less than or equals to zero.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"    public String mark(String input, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"            String s \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"            int clean \u003d Integer.parseInt(s) - 1; // Parse to find what number in list to toggle","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"            // Edge Case","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"            if (clean \u003e arr.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"                return \"Error! No tasked added\";","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"            } else if (input.toCharArray()[0] !\u003d \u0027u\u0027) {","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"                arr.get(clean).setMarked();","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"                return \"Nice! I\u0027ve marked this task as done:\\n \"","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"                        + \"   \" + arr.get(clean).toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"            } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"                arr.get(clean).setUnmarked();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"                return \"OK, I\u0027ve marked this task as not done yet:\\n \"","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"                        + \"   \" + arr.get(clean).toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"            return \"Don\u0027t be cheeky. Please write something that makes sense.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"     * Removes the respective index of the task in the ArrayList given by the input.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"     * Returns an acknowledgement if successful, else returns an edge case warning.","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"     * @param input The respective index of the ArrayList needed to be removed.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The ArrayList with the current list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"     * @return Acknowledgement string.","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"    public String delete(String input, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"            String s \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"            int delete \u003d Integer.parseInt(s) - 1; // Parse to find what number in list to delete","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"            // Edge Case","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"aceszhenwei"},"content":"            if (delete \u003e arr.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"                return \"Error! Nothing to delete!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"                String deleteStringToReturn \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"                deleteStringToReturn +\u003d \"Noted. I\u0027ve removed this task: \\n   \"","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"                       + arr.get(delete).toString() + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"                arr.remove(delete);","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"                deleteStringToReturn +\u003d \"Now you have \" + arr.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"                return deleteStringToReturn;","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"            return \"Error! Nothing to delete!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"aceszhenwei"},"content":"     * Creates a new Deadline class with the input detailing the class variables.","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"     * Adds the new Deadline class to the ArrayList.","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"     * Returns an acknowledgement if successful.","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"     * @param input The information required for the initialization of the Deadline class.","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The ArrayList with the current list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"     * @return Acknowledgement string.","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"    public String deadline(String input, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"aceszhenwei"},"content":"            String unprocessed \u003d input.split(\"deadline \", 2)[1]; // Remove instruction","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"aceszhenwei"},"content":"            String task \u003d unprocessed.split(\" /by \", 2)[0]; // Split to task","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"aceszhenwei"},"content":"            String date \u003d unprocessed.split(\" /by \", 2)[1]; // Split to date","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"aceszhenwei"},"content":"            Deadline newDeadline \u003d new Deadline(task, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"aceszhenwei"},"content":"            arr.add(newDeadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"            return \"Got it! I\u0027ve added this task: \\n    \"","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"aceszhenwei"},"content":"                   + newDeadline + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"aceszhenwei"},"content":"                   + \"Now you have \" + arr.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"aceszhenwei"},"content":"            return \"Don\u0027t be cheeky. Give me a deadline to stress you over.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"aceszhenwei"},"content":"     * Creates a new Event class with the input detailing the class variables.","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"aceszhenwei"},"content":"     * Adds the new Event class to the ArrayList.","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"aceszhenwei"},"content":"     * Returns an acknowledgement if successful.","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"aceszhenwei"},"content":"     * @param input The information required for the initialization of the Event class.","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The ArrayList with the current list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"aceszhenwei"},"content":"     * @return Acknowledgement string.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"aceszhenwei"},"content":"    public String event(String input, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"aceszhenwei"},"content":"            String nonevent \u003d input.split(\"event \", 2)[1]; // Remove instruction","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"aceszhenwei"},"content":"            String task \u003d nonevent.split(\" /at \", 2)[0]; // Split to task","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"aceszhenwei"},"content":"            String date \u003d nonevent.split(\" /at \", 2)[1]; // Split to date","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"aceszhenwei"},"content":"            Event newEvent \u003d new Event(task, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"aceszhenwei"},"content":"            arr.add(newEvent);","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"aceszhenwei"},"content":"            return \"Got it! I\u0027ve added this task: \\n    \"","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"aceszhenwei"},"content":"                   + newEvent + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"aceszhenwei"},"content":"                   + \"Now you have \" + arr.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"aceszhenwei"},"content":"            return \"Don\u0027t be cheeky. Give me an event to record.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"aceszhenwei"},"content":"     * Searches the array for the given word within input.","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"aceszhenwei"},"content":"     * First, it strips the input to isolate the word that needs to be found.","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"aceszhenwei"},"content":"     * Then, it searches the array for the specific word.","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"aceszhenwei"},"content":"     * It will return an acknowledgment (either positive or negative) if the word is found.","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"aceszhenwei"},"content":"     * @param input The information required for the search.","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The ArrayList with the current list of tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"aceszhenwei"},"content":"     * @return Acknowledgement string (found / not found).","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"aceszhenwei"},"content":"    public String find(String input, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":147,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":148,"author":{"gitId":"aceszhenwei"},"content":"            String word \u003d input.split(\" \", 2)[1]; // Remove instruction","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"aceszhenwei"},"content":"            int counter \u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"aceszhenwei"},"content":"            boolean hasFound \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"aceszhenwei"},"content":"            String stringToFind \u003d \"\"; // contains all words that have been found / not found.","lastModifiedDate":"2022-02-04"},{"lineNumber":152,"author":{"gitId":"aceszhenwei"},"content":"            for (Task task : arr) {","lastModifiedDate":"2022-02-03"},{"lineNumber":153,"author":{"gitId":"aceszhenwei"},"content":"                if (task.getName().contains(word) \u0026\u0026 !word.equals(\"\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"aceszhenwei"},"content":"                    if (!hasFound) {","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"aceszhenwei"},"content":"                        stringToFind +\u003d \"I found the matching items you requested: \\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":156,"author":{"gitId":"aceszhenwei"},"content":"                    }","lastModifiedDate":"2022-01-29"},{"lineNumber":157,"author":{"gitId":"aceszhenwei"},"content":"                    stringToFind +\u003d counter + \".\" + task + \"\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":158,"author":{"gitId":"aceszhenwei"},"content":"                    counter++;","lastModifiedDate":"2022-01-29"},{"lineNumber":159,"author":{"gitId":"aceszhenwei"},"content":"                    hasFound \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":160,"author":{"gitId":"aceszhenwei"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":161,"author":{"gitId":"aceszhenwei"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":162,"author":{"gitId":"aceszhenwei"},"content":"            if (!hasFound) {","lastModifiedDate":"2022-01-29"},{"lineNumber":163,"author":{"gitId":"aceszhenwei"},"content":"                return \"Unfortunately, I couldn\u0027t find anything related to \" + word;","lastModifiedDate":"2022-02-04"},{"lineNumber":164,"author":{"gitId":"aceszhenwei"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":165,"author":{"gitId":"aceszhenwei"},"content":"                return stringToFind;","lastModifiedDate":"2022-02-04"},{"lineNumber":166,"author":{"gitId":"aceszhenwei"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"aceszhenwei"},"content":"            return \"Don\u0027t be cheeky. Give me something to look for\";","lastModifiedDate":"2022-02-04"},{"lineNumber":169,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":171,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":173,"author":{"gitId":"aceszhenwei"},"content":"     * Creates a new Task class with the input detailing the class variables.","lastModifiedDate":"2022-01-28"},{"lineNumber":174,"author":{"gitId":"aceszhenwei"},"content":"     * Adds the new Task class to the ArrayList.","lastModifiedDate":"2022-01-28"},{"lineNumber":175,"author":{"gitId":"aceszhenwei"},"content":"     * Returns an acknowledgement if successful.","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":177,"author":{"gitId":"aceszhenwei"},"content":"     * @param input The information required for the initialization of the Task class.","lastModifiedDate":"2022-01-28"},{"lineNumber":178,"author":{"gitId":"aceszhenwei"},"content":"     * @param arr The ArrayList with the current list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":179,"author":{"gitId":"aceszhenwei"},"content":"     * @return Acknowledgement string.","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":181,"author":{"gitId":"aceszhenwei"},"content":"    public String toDo(String input, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-02-04"},{"lineNumber":182,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"aceszhenwei"},"content":"            String word \u003d input.split(\" \", 2)[1]; // Remove instruction","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"aceszhenwei"},"content":"            ToDo newToDo \u003d new ToDo(word);","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"aceszhenwei"},"content":"            arr.add(newToDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"aceszhenwei"},"content":"            return \"Got it! I\u0027ve added this task: \\n \"","lastModifiedDate":"2022-02-04"},{"lineNumber":187,"author":{"gitId":"aceszhenwei"},"content":"                    + newToDo + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":188,"author":{"gitId":"aceszhenwei"},"content":"                    + \"Now you have \" + arr.size() + \" tasks in the list\";","lastModifiedDate":"2022-02-04"},{"lineNumber":189,"author":{"gitId":"aceszhenwei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"aceszhenwei"},"content":"            return \"Don\u0027t be cheeky. Give me something to do.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":191,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":194,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":195,"author":{"gitId":"aceszhenwei"},"content":"     * Returns a large string of text which details all commands in task list.","lastModifiedDate":"2022-02-11"},{"lineNumber":196,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":197,"author":{"gitId":"aceszhenwei"},"content":"     * @return Help Text","lastModifiedDate":"2022-02-11"},{"lineNumber":198,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":199,"author":{"gitId":"aceszhenwei"},"content":"    public String help() {","lastModifiedDate":"2022-02-11"},{"lineNumber":200,"author":{"gitId":"aceszhenwei"},"content":"        return \"Oh I see you need help! Fret not! I\u0027m here to help. \\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"aceszhenwei"},"content":"                + \"Ok, so we have several options that you can type. Let\u0027s go over them. \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":202,"author":{"gitId":"aceszhenwei"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":203,"author":{"gitId":"aceszhenwei"},"content":"                + \"1. ToDo \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":204,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027todo xxx\u0027, and \u0027xxx\u0027 will be added into the list \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":205,"author":{"gitId":"aceszhenwei"},"content":"                + \"2. Event \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":206,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027event xxx /at YYY-MM-DD, and the event will be added into the list \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":207,"author":{"gitId":"aceszhenwei"},"content":"                + \"3. Deadline \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":208,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027deadline xxx /by YYY-MM-DD, and the deadline will be added into the list \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":209,"author":{"gitId":"aceszhenwei"},"content":"                + \"4. Find \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":210,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027find xxx\u0027, and I\u0027ll search the list for everything containing \u0027xxx\u0027 \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":211,"author":{"gitId":"aceszhenwei"},"content":"                + \"5. List \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":212,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027list\u0027 to see all items \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":213,"author":{"gitId":"aceszhenwei"},"content":"                + \"6. Mark / Unmark \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":214,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027mark [index]\u0027 or \u0027unmark [index] to mark / unmark them respectively. \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":215,"author":{"gitId":"aceszhenwei"},"content":"                + \"For example, type in mark 1 to mark the first item in the list as done \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":216,"author":{"gitId":"aceszhenwei"},"content":"                + \"7. Delete \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":217,"author":{"gitId":"aceszhenwei"},"content":"                + \"Type in \u0027delete [index]\u0027 to delete the item at specified index. \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":218,"author":{"gitId":"aceszhenwei"},"content":"                + \"For example, type in delete 1 to delete the first item in the list \\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":219,"author":{"gitId":"aceszhenwei"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":220,"author":{"gitId":"aceszhenwei"},"content":"                + \"I hope that answers your questions!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":221,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":222,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"aceszhenwei":222}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"aceszhenwei":12}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #8ebbbc; -fx-background-radius: 10; -fx-padding: 10;\"","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"               text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"aceszhenwei":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"46.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"278.0\" promptText\u003d\"Tell Prof What You Need...\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Consult\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"      \u003cButton fx:id\u003d\"helpButton\" layoutX\u003d\"1.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelpInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"44.0\" text\u003d\"?\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"aceszhenwei":20}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import duke.duke.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import duke.duke.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import duke.duke.Ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    public void lineTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"        // Set Up","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"        String expected \u003d \"------------------------------------\";","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"        // Create Output Stream","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"        PrintStream printStream \u003d new PrintStream(baos);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"        System.setOut(printStream);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"        // Call Method","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"        String[] lines \u003d baos.toString().split(System.lineSeparator());","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"        String actual \u003d lines[lines.length - 1];","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"        // Compare","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"    public void taskNameTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"        // Set Up","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"        Task task \u003d new Task(\"Hello\");","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        String expected \u003d \"Hello\";","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        // Compare","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expected, task.getName());","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"    public void eventStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"        // Set Up","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        Event event \u003d new Event(\"Hello\", \"1111-11-11\");","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        String expected \u003d \"[E][ ] Hello (at: Nov 11 1111)\";","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"        // Compare","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"aceszhenwei":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"todo eat ice cream","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"todo cry","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"todo sleep","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"deadline homework /by tomorrow","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"event birthday /at next year","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"list","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aceszhenwei":9}}]
